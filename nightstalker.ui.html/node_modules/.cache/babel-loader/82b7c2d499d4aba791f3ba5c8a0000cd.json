{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Device, graphics, HtmlComponent, objects, scout } from '../index';\nimport $ from 'jquery';\n/**\n * Static function to install a scrollbar on a container.\n * When the client supports pretty native scrollbars, we use them by default.\n * Otherwise we install JS-based scrollbars. In that case the install function\n * creates a new scrollbar.js. For native scrollbars we\n * must set some additional CSS styles.\n */\n\nvar _$scrollables = {};\nexport function getScrollables(session) {\n  // return scrollables for given session\n  if (session) {\n    return _$scrollables[session] || [];\n  } // return all scrollables, no matter to which session they belong\n\n\n  var $scrollables = [];\n  objects.values(_$scrollables).forEach(function ($scrollablesPerSession) {\n    arrays.pushAll($scrollables, $scrollablesPerSession);\n  });\n  return $scrollables;\n}\nexport function pushScrollable(session, $container) {\n  if (_$scrollables[session]) {\n    if (_$scrollables[session].indexOf($container) > -1) {\n      // already pushed\n      return;\n    }\n\n    _$scrollables[session].push($container);\n  } else {\n    _$scrollables[session] = [$container];\n  }\n\n  $.log.isTraceEnabled() && $.log.trace('Scrollable added: ' + $container.attr('class') + '. New length: ' + _$scrollables[session].length);\n}\nexport function removeScrollable(session, $container) {\n  var initLength = 0;\n\n  if (_$scrollables[session]) {\n    initLength = _$scrollables[session].length;\n    arrays.$remove(_$scrollables[session], $container);\n    $.log.isTraceEnabled() && $.log.trace('Scrollable removed: ' + $container.attr('class') + '. New length: ' + _$scrollables[session].length);\n\n    if (initLength === _$scrollables[session].length) {\n      throw new Error('scrollable could not be removed. Potential memory leak. ' + $container.attr('class'));\n    }\n  } else {\n    throw new Error('scrollable could not be removed. Potential memory leak. ' + $container.attr('class'));\n  }\n}\n/**\n * @param [options]\n * @param [options.axis] x, y or both. Default is both.\n * @param {boolean} [options.nativeScrollbars]\n * @param {boolean} [options.hybridScrollbars]\n * @param {Session} [options.session]\n * @param {Widget} [options.parent]\n */\n\nexport function install($container, options) {\n  options = _createDefaultScrollToOptions(options);\n  options.axis = options.axis || 'both'; // Don't use native as variable name because it will break minifying (reserved keyword)\n\n  var nativeScrollbars = scout.nvl(options.nativeScrollbars, Device.get().hasPrettyScrollbars());\n  var hybridScrollbars = scout.nvl(options.hybridScrollbars, Device.get().canHideScrollbars() && // Don't use native scrolling for ie since it makes the content flicker, unless used on a device supporting touch.\n  !(Device.get().isInternetExplorer() && !Device.get().supportsTouch()));\n\n  if (nativeScrollbars) {\n    _installNative($container, options);\n  } else if (hybridScrollbars) {\n    $container.addClass('hybrid-scrollable');\n\n    _installNative($container, options);\n\n    _installJs($container, options);\n  } else {\n    $container.css('overflow', 'hidden');\n\n    _installJs($container, options);\n  }\n\n  var htmlContainer = HtmlComponent.optGet($container);\n\n  if (htmlContainer) {\n    htmlContainer.scrollable = true;\n  }\n\n  $container.data('scrollable', true);\n  var session = options.session || options.parent.session;\n  pushScrollable(session, $container);\n  return $container;\n}\nexport function _installNative($container, options) {\n  if (Device.get().isIos()) {\n    // On ios, container sometimes is not scrollable when installing too early\n    // Happens often with nested scrollable containers (e.g. scrollable table inside a form inside a scrollable tree data)\n    setTimeout(_installNativeInternal.bind(this, $container, options));\n  } else {\n    _installNativeInternal($container, options);\n  }\n}\nexport function _installNativeInternal($container, options) {\n  $.log.isTraceEnabled() && $.log.trace('use native scrollbars for container ' + graphics.debugOutput($container));\n\n  if (options.axis === 'x') {\n    $container.css('overflow-x', 'auto').css('overflow-y', 'hidden');\n  } else if (options.axis === 'y') {\n    $container.css('overflow-x', 'hidden').css('overflow-y', 'auto');\n  } else {\n    $container.css('overflow', 'auto');\n  }\n\n  $container.css('-webkit-overflow-scrolling', 'touch');\n}\nexport function isHybridScrolling($scrollable) {\n  return $scrollable.hasClass('hybrid-scrollable');\n}\nexport function isNativeScrolling($scrollable) {\n  return scout.isOneOf('auto', $scrollable.css('overflow'), $scrollable.css('overflow-x'), $scrollable.css('overflow-y'));\n}\nexport function isJsScrolling($scrollable) {\n  return !!$scrollable.data('scrollbars');\n}\nexport function _installJs($container, options) {\n  $.log.isTraceEnabled() && $.log.trace('installing JS-scrollbars for container ' + graphics.debugOutput($container));\n  var scrollbars = arrays.ensure($container.data('scrollbars'));\n  scrollbars.forEach(function (scrollbar) {\n    scrollbar.destroy();\n  });\n  scrollbars = [];\n  var scrollbar;\n\n  if (options.axis === 'both') {\n    var scrollOptions = $.extend({}, options);\n    scrollOptions.axis = 'y';\n    scrollbar = scout.create('Scrollbar', $.extend({}, scrollOptions));\n    scrollbars.push(scrollbar);\n    scrollOptions.axis = 'x';\n    scrollOptions.mouseWheelNeedsShift = true;\n    scrollbar = scout.create('Scrollbar', $.extend({}, scrollOptions));\n    scrollbars.push(scrollbar);\n  } else {\n    scrollbar = scout.create('Scrollbar', $.extend({}, options));\n    scrollbars.push(scrollbar);\n  }\n\n  $container.data('scrollbars', scrollbars);\n  scrollbars.forEach(function (scrollbar) {\n    scrollbar.render($container);\n    scrollbar.update();\n  });\n}\n/**\n * Removes the js scrollbars for the $container, if there are any.<p>\n */\n\nexport function uninstall($container, session) {\n  if (!$container.data('scrollable')) {\n    // was not installed previously -> uninstalling not necessary\n    return;\n  }\n\n  var scrollbars = $container.data('scrollbars');\n\n  if (scrollbars) {\n    scrollbars.forEach(function (scrollbar) {\n      scrollbar.destroy();\n    });\n  }\n\n  removeScrollable(session, $container);\n  $container.removeData('scrollable');\n  $container.css('overflow', '');\n  $container.removeClass('hybrid-scrollable');\n  $container.removeData('scrollbars');\n  var htmlContainer = HtmlComponent.optGet($container);\n\n  if (htmlContainer) {\n    htmlContainer.scrollable = false;\n  }\n}\n/**\n * Recalculates the scrollbar size and position.\n * @param $scrollable JQuery element that has .data('scrollbars'), when $scrollable is falsy the function returns immediately\n * @param immediate set to true to immediately update the scrollbar, If set to false,\n *        it will be queued in order to prevent unnecessary updates.\n */\n\nexport function update($scrollable, immediate) {\n  if (!$scrollable || !$scrollable.data('scrollable')) {\n    return;\n  }\n\n  var scrollbars = $scrollable.data('scrollbars');\n\n  if (!scrollbars) {\n    if (Device.get().isIos()) {\n      _handleIosPaintBug($scrollable);\n    }\n\n    return;\n  }\n\n  if (immediate) {\n    _update(scrollbars);\n\n    return;\n  }\n\n  if ($scrollable.data('scrollbarUpdatePending')) {\n    return;\n  } // Executes the update later to prevent unnecessary updates\n\n\n  setTimeout(function () {\n    _update(scrollbars);\n\n    $scrollable.removeData('scrollbarUpdatePending');\n  }, 0);\n  $scrollable.data('scrollbarUpdatePending', true);\n}\nexport function _update(scrollbars) {\n  // Reset the scrollbars first to make sure they don't extend the scrollSize\n  scrollbars.forEach(function (scrollbar) {\n    if (scrollbar.rendered) {\n      scrollbar.reset();\n    }\n  });\n  scrollbars.forEach(function (scrollbar) {\n    if (scrollbar.rendered) {\n      scrollbar.update();\n    }\n  });\n}\n/**\n * IOS has problems with nested scrollable containers. Sometimes the outer container goes completely white hiding the elements behind.\n * This happens with the following case: Main box is scrollable but there are no scrollbars because content is smaller than container.\n * In the main box there is a tab box with a scrollable table. This table has scrollbars.\n * If the width of the tab box is adjusted (which may happen if the tab item is selected and eventually prefSize called), the main box will go white.\n * <p>\n * This happens only if -webkit-overflow-scrolling is set to touch.\n * To workaround this bug the flag -webkit-overflow-scrolling will be removed if the scrollable component won't display any scrollbars\n */\n\nexport function _handleIosPaintBug($scrollable) {\n  if ($scrollable.data('scrollbarUpdatePending')) {\n    return;\n  }\n\n  setTimeout(function () {\n    workaround();\n    $scrollable.removeData('scrollbarUpdatePending');\n  });\n  $scrollable.data('scrollbarUpdatePending', true);\n\n  function workaround() {\n    var size = graphics.size($scrollable).subtract(graphics.insets($scrollable, {\n      includePadding: false,\n      includeBorder: true\n    }));\n\n    if ($scrollable[0].scrollHeight === size.height && $scrollable[0].scrollWidth === size.width) {\n      $scrollable.css('-webkit-overflow-scrolling', '');\n    } else {\n      $scrollable.css('-webkit-overflow-scrolling', 'touch');\n    }\n  }\n}\nexport function reset($scrollable) {\n  var scrollbars = $scrollable.data('scrollbars');\n\n  if (!scrollbars) {\n    return;\n  }\n\n  scrollbars.forEach(function (scrollbar) {\n    scrollbar.reset();\n  });\n}\n/**\n * Scrolls the $scrollable to the given $element (must be a child of $scrollable)\n *\n * @param {$} $scrollable\n *          the scrollable object\n * @param {$} $element\n *          the element to scroll to\n * @param {object|string} [options]\n *          an optional options object. Short-hand version: If a string is passed instead\n *          of an object, the value is automatically converted to the option \"align\".\n * @param {string} [options.align]\n *          Specifies where the element should be positioned in the view port. Can either be 'top', 'center' or 'bottom'.\n *          If unspecified, the following rules apply:\n *          - If the element is above the visible area it will be aligned to top.\n *          - If the element is below the visible area it will be aligned to bottom.\n *          - If the element is already in the visible area no scrolling is done.\n *          Default is undefined.\n * @param {boolean} [options.animate]\n *          If true, the scroll position will be animated so that the element moves smoothly to its new position. Default is false.\n * @param {boolean} [options.stop]\n *          If true, all running animations are stopped before executing the current scroll request. Default is true.\n */\n\nexport function scrollTo($scrollable, $element, options) {\n  var scrollTo,\n      scrollOffsetUp = 4,\n      scrollOffsetDown = 8,\n      scrollableH = $scrollable.height(),\n      elementBounds = graphics.offsetBounds($element),\n      scrollableBounds = graphics.offsetBounds($scrollable),\n      elementTop = elementBounds.y - scrollableBounds.y - scrollOffsetUp,\n      // relative to scrollable y\n  elementTopNew = 0,\n      elementH = elementBounds.height + scrollOffsetDown,\n      elementBottom = elementTop + elementH;\n\n  if (typeof options === 'string') {\n    options = {\n      align: options\n    };\n  } else {\n    options = _createDefaultScrollToOptions(options);\n  }\n\n  var align = options.align;\n\n  if (!align) {\n    // If the element is above the visible area it will be aligned to top.\n    // If the element is below the visible area it will be aligned to bottom.\n    // If the element is already in the visible area no scrolling is done.\n    align = elementTop < 0 ? 'top' : elementBottom > scrollableH ? 'bottom' : undefined;\n  } else {\n    align = align.toLowerCase();\n  }\n\n  if (align === 'center') {\n    // align center\n    scrollTo = $scrollable.scrollTop() + elementTop - Math.max(0, (scrollableH - elementH) / 2);\n  } else if (align === 'top') {\n    // align top\n    // Element is on the top of the view port -> scroll up\n    scrollTo = $scrollable.scrollTop() + elementTop;\n  } else if (align === 'bottom') {\n    // align bottom\n    // Element is on the Bottom of the view port -> scroll down\n    // On IE, a fractional position gets truncated when using scrollTop -> ceil to make sure the full element is visible\n    scrollTo = Math.ceil($scrollable.scrollTop() + elementBottom - scrollableH); // If the viewport is very small, make sure the element is not moved outside on top\n    // Otherwise when calling this function again, since the element is on the top of the view port, the scroll pane would scroll down which results in flickering\n\n    elementTopNew = elementTop - (scrollTo - $scrollable.scrollTop());\n\n    if (elementTopNew < 0) {\n      scrollTo = scrollTo + elementTopNew;\n    }\n  }\n\n  if (scrollTo) {\n    scrollTop($scrollable, scrollTo, options);\n  }\n}\nexport function _createDefaultScrollToOptions(options) {\n  var defaults = {\n    animate: false,\n    stop: true\n  };\n  return $.extend({}, defaults, options);\n}\n/**\n * Horizontally scrolls the $scrollable to the given $element (must be a child of $scrollable)\n */\n\nexport function scrollHorizontalTo($scrollable, $element, options) {\n  var scrollTo,\n      scrollableW = $scrollable.width(),\n      elementBounds = graphics.bounds($element, true),\n      elementLeft = elementBounds.x,\n      elementW = elementBounds.width;\n\n  if (elementLeft < 0) {\n    scrollLeft($scrollable, $scrollable.scrollLeft() + elementLeft, options);\n  } else if (elementLeft + elementW > scrollableW) {\n    // On IE, a fractional position gets truncated when using scrollTop -> ceil to make sure the full element is visible\n    scrollTo = Math.ceil($scrollable.scrollLeft() + elementLeft + elementW - scrollableW);\n    scrollLeft($scrollable, scrollTo, options);\n  }\n}\nexport function scrollTop($scrollable, scrollTop, options) {\n  options = _createDefaultScrollToOptions(options);\n  var scrollbarElement = scrollbar($scrollable, 'y');\n\n  if (scrollbarElement) {\n    scrollbarElement.notifyBeforeScroll();\n  } // Not animated\n\n\n  if (!options.animate) {\n    if (options.stop) {\n      $scrollable.stop('scroll');\n    }\n\n    $scrollable.scrollTop(scrollTop);\n\n    if (scrollbarElement) {\n      scrollbarElement.notifyAfterScroll();\n    }\n\n    return;\n  } // Animated\n\n\n  animateScrollTop($scrollable, scrollTop, options);\n  $scrollable.promise('scroll').always(function () {\n    if (scrollbarElement) {\n      scrollbarElement.notifyAfterScroll();\n    }\n  });\n}\nexport function scrollLeft($scrollable, scrollLeft, options) {\n  options = _createDefaultScrollToOptions(options);\n  var scrollbarElement = scrollbar($scrollable, 'x');\n\n  if (scrollbarElement) {\n    scrollbarElement.notifyBeforeScroll();\n  } // Not animated\n\n\n  if (!options.animate) {\n    if (options.stop) {\n      $scrollable.stop('scroll');\n    }\n\n    $scrollable.scrollLeft(scrollLeft);\n\n    if (scrollbarElement) {\n      scrollbarElement.notifyAfterScroll();\n    }\n\n    return;\n  } // Animated\n\n\n  animateScrollLeft($scrollable, scrollLeft, options);\n  $scrollable.promise('scroll').always(function () {\n    if (scrollbarElement) {\n      scrollbarElement.notifyAfterScroll();\n    }\n  });\n}\nexport function animateScrollTop($scrollable, scrollTop, options) {\n  if (options.stop) {\n    $scrollable.stop('scroll');\n  }\n\n  $scrollable.animate({\n    scrollTop: scrollTop\n  }, {\n    queue: 'scroll'\n  }).dequeue('scroll');\n}\nexport function animateScrollLeft($scrollable, scrollLeft, options) {\n  if (options.stop) {\n    $scrollable.stop('scroll');\n  }\n\n  $scrollable.animate({\n    scrollLeft: scrollLeft\n  }, {\n    queue: 'scroll'\n  }).dequeue('scroll');\n}\nexport function scrollbar($scrollable, axis) {\n  var scrollbars = $scrollable.data('scrollbars') || [];\n  return arrays.find(scrollbars, function (scrollbar) {\n    return scrollbar.axis === axis;\n  });\n}\nexport function scrollToBottom($scrollable) {\n  scrollTop($scrollable, $scrollable[0].scrollHeight - $scrollable[0].offsetHeight);\n}\n/**\n * @param location object with x and y properties\n * @eturns {boolean} true if the location is visible in the current viewport of the $scrollable, or if $scrollable is null\n */\n\nexport function isLocationInView(location, $scrollable) {\n  if (!$scrollable || $scrollable.length === 0) {\n    return true;\n  }\n\n  var scrollableOffsetBounds = graphics.offsetBounds($scrollable);\n  return scrollableOffsetBounds.contains(location.x, location.y);\n}\n/**\n * Attaches the given handler to each scrollable parent, including $anchor if it is scrollable as well.<p>\n * Make sure you remove the handlers when not needed anymore using offScroll.\n */\n\nexport function onScroll($anchor, handler) {\n  handler.$scrollParents = [];\n  $anchor.scrollParents().each(function () {\n    var $scrollParent = $(this);\n    $scrollParent.on('scroll', handler);\n    handler.$scrollParents.push($scrollParent);\n  });\n}\nexport function offScroll(handler) {\n  var $scrollParents = handler.$scrollParents;\n\n  if (!$scrollParents) {\n    throw new Error('$scrollParents are not defined');\n  }\n\n  for (var i = 0; i < $scrollParents.length; i++) {\n    var $elem = $scrollParents[i];\n    $elem.off('scroll', handler);\n  }\n}\n/**\n * Sets the position to fixed and updates left and top position.\n * This is necessary to prevent flickering in IE.\n */\n\nexport function fix($elem) {\n  if (!$elem.isVisible() || $elem.css('position') === 'fixed') {\n    return;\n  } // getBoundingClientRect used by purpose instead of graphics.offsetBounds to get exact values\n  // Also important: offset() of jquery returns getBoundingClientRect().top + window.pageYOffset.\n  // In case of IE and zoom = 125%, the pageYOffset is 1 because the height of the navigation is bigger than the height of the desktop which may be fractional.\n\n\n  var bounds = $elem[0].getBoundingClientRect();\n  $elem.css('position', 'fixed').cssLeft(bounds.left - $elem.cssMarginLeft()).cssTop(bounds.top - $elem.cssMarginTop()).cssWidth(bounds.width).cssHeight(bounds.height);\n}\n/**\n * Reverts the changes made by fix().\n */\n\nexport function unfix($elem, timeoutId, immediate) {\n  clearTimeout(timeoutId);\n\n  if (immediate) {\n    _unfix($elem);\n\n    return;\n  }\n\n  return setTimeout(function () {\n    _unfix($elem);\n  }, 50);\n}\nexport function _unfix($elem) {\n  $elem.css({\n    position: 'absolute',\n    left: '',\n    top: '',\n    width: '',\n    height: ''\n  });\n}\n/**\n * Stores the position of all scrollables that belong to an optional session.\n * @param session (optional) when no session is given, scrollables from all sessions are stored\n */\n\nexport function storeScrollPositions($container, session) {\n  var $scrollables = getScrollables(session);\n\n  if (!$scrollables) {\n    return;\n  }\n\n  var scrollTop, scrollLeft;\n  $scrollables.forEach(function ($scrollable) {\n    if ($container.isOrHas($scrollable[0])) {\n      scrollTop = $scrollable.scrollTop();\n      $scrollable.data('scrollTop', scrollTop);\n      scrollLeft = $scrollable.scrollLeft();\n      $scrollable.data('scrollLeft', $scrollable.scrollLeft());\n      $.log.isTraceEnabled() && $.log.trace('Stored scroll position for ' + $scrollable.attr('class') + '. Top: ' + scrollTop + '. Left: ' + scrollLeft);\n    }\n  });\n}\n/**\n * Restores the position of all scrollables that belong to an optional session.\n * @param session (optional) when no session is given, scrollables from all sessions are restored\n */\n\nexport function restoreScrollPositions($container, session) {\n  var $scrollables = getScrollables(session);\n\n  if (!$scrollables) {\n    return;\n  }\n\n  var scrollTop, scrollLeft;\n  $scrollables.forEach(function ($scrollable) {\n    if ($container.isOrHas($scrollable[0])) {\n      scrollTop = $scrollable.data('scrollTop');\n\n      if (scrollTop) {\n        $scrollable.scrollTop(scrollTop);\n        $scrollable.removeData('scrollTop');\n      }\n\n      scrollLeft = $scrollable.data('scrollLeft');\n\n      if (scrollLeft) {\n        $scrollable.scrollLeft(scrollLeft);\n        $scrollable.removeData('scrollLeft');\n      } // Also make sure that scroll bar is up to date\n      // Introduced for use case: Open large table page, edit entry, press f5\n      // -> outline tab gets rendered, scrollbar gets updated with set timeout, outline tab gets detached\n      // -> update event never had any effect because it executed after detaching (due to set timeout)\n\n\n      update($scrollable);\n      $.log.isTraceEnabled() && $.log.trace('Restored scroll position for ' + $scrollable.attr('class') + '. Top: ' + scrollTop + '. Left: ' + scrollLeft);\n    }\n  });\n}\nexport function setVisible($scrollable, visible) {\n  if (!$scrollable || !$scrollable.data('scrollable')) {\n    return;\n  }\n\n  var scrollbars = $scrollable.data('scrollbars');\n\n  if (!scrollbars) {\n    return;\n  }\n\n  scrollbars.forEach(function (scrollbar) {\n    if (scrollbar.rendered) {\n      scrollbar.$container.setVisible(visible);\n    }\n  });\n}\nexport function opacity($scrollable, opacity) {\n  if (!$scrollable || !$scrollable.data('scrollable')) {\n    return;\n  }\n\n  var scrollbars = $scrollable.data('scrollbars');\n\n  if (!scrollbars) {\n    return;\n  }\n\n  scrollbars.forEach(function (scrollbar) {\n    if (scrollbar.rendered) {\n      scrollbar.$container.css('opacity', opacity);\n    }\n  });\n}\nexport function _getCompleteChildRowsHeightRecursive(children, getChildren, isExpanded, defaultChildHeight) {\n  var height = 0;\n  children.forEach(function (child) {\n    if (child.height) {\n      height += child.height;\n    } else {\n      // fallback for children with unset height\n      height += defaultChildHeight;\n    }\n\n    if (isExpanded(child) && getChildren(child).length > 0) {\n      height += _getCompleteChildRowsHeightRecursive(getChildren(child), getChildren, isExpanded, defaultChildHeight);\n    }\n  });\n  return height;\n}\nexport function ensureExpansionVisible(parent) {\n  var isParentExpanded = parent.isExpanded(parent.element);\n  var children = parent.getChildren(parent.element);\n  var parentPositionTop = parent.$element.position().top;\n  var parentHeight = parent.element.height;\n  var scrollTopPos = parent.$scrollable.scrollTop(); // vertical scrolling\n\n  if (!isParentExpanded) {\n    // parent is not expanded, make sure that at least one node above the parent is visible\n    if (parentPositionTop < parentHeight) {\n      var minScrollTop = Math.max(scrollTopPos - (parentHeight - parentPositionTop), 0);\n      scrollTop(parent.$scrollable, minScrollTop, {\n        animate: true\n      });\n    }\n  } else if (isParentExpanded && children.length > 0) {\n    // parent is expanded and has children, best effort approach to show the expansion\n    var fullDataHeight = parent.$scrollable.height(); // get childRowCount considering already expanded rows\n\n    var childRowsHeight = _getCompleteChildRowsHeightRecursive(children, parent.getChildren, parent.isExpanded, parent.defaultChildHeight); // + 1.5 since its the parent's top position and we want to scroll half a row further to show that there's something after the expansion\n\n\n    var additionalHeight = childRowsHeight + 1.5 * parentHeight;\n    var scrollTo = parentPositionTop + additionalHeight; // scroll as much as needed to show the expansion but make sure that the parent row (plus one more) is still visible\n\n    var newScrollTop = scrollTopPos + Math.min(scrollTo - fullDataHeight, parentPositionTop - parentHeight); // only scroll down\n\n    if (newScrollTop > scrollTopPos) {\n      scrollTop(parent.$scrollable, newScrollTop, {\n        animate: true,\n        stop: false\n      });\n    }\n  }\n\n  if (children.length > 0) {\n    // horizontal scrolling: at least 3 levels of hierarchy should be visible (only relevant for small fields)\n    var minLevelLeft = Math.max(parent.element.level - 3, 0) * parent.nodePaddingLevel;\n    scrollLeft(parent.$scrollable, minLevelLeft, {\n      animate: true,\n      stop: false\n    });\n  }\n}\nexport default {\n  animateScrollLeft: animateScrollLeft,\n  animateScrollTop: animateScrollTop,\n  ensureExpansionVisible: ensureExpansionVisible,\n  fix: fix,\n  getScrollables: getScrollables,\n  install: install,\n  isHybridScrolling: isHybridScrolling,\n  isJsScrolling: isJsScrolling,\n  isLocationInView: isLocationInView,\n  isNativeScrolling: isNativeScrolling,\n  offScroll: offScroll,\n  onScroll: onScroll,\n  opacity: opacity,\n  pushScrollable: pushScrollable,\n  removeScrollable: removeScrollable,\n  reset: reset,\n  restoreScrollPositions: restoreScrollPositions,\n  scrollHorizontalTo: scrollHorizontalTo,\n  scrollLeft: scrollLeft,\n  scrollTo: scrollTo,\n  scrollToBottom: scrollToBottom,\n  scrollTop: scrollTop,\n  scrollbar: scrollbar,\n  setVisible: setVisible,\n  storeScrollPositions: storeScrollPositions,\n  unfix: unfix,\n  uninstall: uninstall,\n  update: update\n};","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/scrollbar/scrollbars.js"],"names":["arrays","Device","graphics","HtmlComponent","objects","scout","$","_$scrollables","getScrollables","session","$scrollables","values","forEach","$scrollablesPerSession","pushAll","pushScrollable","$container","indexOf","push","log","isTraceEnabled","trace","attr","length","removeScrollable","initLength","$remove","Error","install","options","_createDefaultScrollToOptions","axis","nativeScrollbars","nvl","get","hasPrettyScrollbars","hybridScrollbars","canHideScrollbars","isInternetExplorer","supportsTouch","_installNative","addClass","_installJs","css","htmlContainer","optGet","scrollable","data","parent","isIos","setTimeout","_installNativeInternal","bind","debugOutput","isHybridScrolling","$scrollable","hasClass","isNativeScrolling","isOneOf","isJsScrolling","scrollbars","ensure","scrollbar","destroy","scrollOptions","extend","create","mouseWheelNeedsShift","render","update","uninstall","removeData","removeClass","immediate","_handleIosPaintBug","_update","rendered","reset","workaround","size","subtract","insets","includePadding","includeBorder","scrollHeight","height","scrollWidth","width","scrollTo","$element","scrollOffsetUp","scrollOffsetDown","scrollableH","elementBounds","offsetBounds","scrollableBounds","elementTop","y","elementTopNew","elementH","elementBottom","align","undefined","toLowerCase","scrollTop","Math","max","ceil","defaults","animate","stop","scrollHorizontalTo","scrollableW","bounds","elementLeft","x","elementW","scrollLeft","scrollbarElement","notifyBeforeScroll","notifyAfterScroll","animateScrollTop","promise","always","animateScrollLeft","queue","dequeue","find","scrollToBottom","offsetHeight","isLocationInView","location","scrollableOffsetBounds","contains","onScroll","$anchor","handler","$scrollParents","scrollParents","each","$scrollParent","on","offScroll","i","$elem","off","fix","isVisible","getBoundingClientRect","cssLeft","left","cssMarginLeft","cssTop","top","cssMarginTop","cssWidth","cssHeight","unfix","timeoutId","clearTimeout","_unfix","position","storeScrollPositions","isOrHas","restoreScrollPositions","setVisible","visible","opacity","_getCompleteChildRowsHeightRecursive","children","getChildren","isExpanded","defaultChildHeight","child","ensureExpansionVisible","isParentExpanded","element","parentPositionTop","parentHeight","scrollTopPos","minScrollTop","fullDataHeight","childRowsHeight","additionalHeight","newScrollTop","min","minLevelLeft","level","nodePaddingLevel"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Device, graphics, HtmlComponent, objects, scout} from '../index';\nimport $ from 'jquery';\n\n/**\n * Static function to install a scrollbar on a container.\n * When the client supports pretty native scrollbars, we use them by default.\n * Otherwise we install JS-based scrollbars. In that case the install function\n * creates a new scrollbar.js. For native scrollbars we\n * must set some additional CSS styles.\n */\n\nlet _$scrollables = {};\n\nexport function getScrollables(session) {\n  // return scrollables for given session\n  if (session) {\n    return _$scrollables[session] || [];\n  }\n\n  // return all scrollables, no matter to which session they belong\n  var $scrollables = [];\n  objects.values(_$scrollables).forEach(function($scrollablesPerSession) {\n    arrays.pushAll($scrollables, $scrollablesPerSession);\n  });\n  return $scrollables;\n}\n\nexport function pushScrollable(session, $container) {\n  if (_$scrollables[session]) {\n    if (_$scrollables[session].indexOf($container) > -1) {\n      // already pushed\n      return;\n    }\n    _$scrollables[session].push($container);\n  } else {\n    _$scrollables[session] = [$container];\n  }\n  $.log.isTraceEnabled() && $.log.trace('Scrollable added: ' + $container.attr('class') + '. New length: ' + _$scrollables[session].length);\n}\n\nexport function removeScrollable(session, $container) {\n  var initLength = 0;\n  if (_$scrollables[session]) {\n    initLength = _$scrollables[session].length;\n    arrays.$remove(_$scrollables[session], $container);\n    $.log.isTraceEnabled() && $.log.trace('Scrollable removed: ' + $container.attr('class') + '. New length: ' + _$scrollables[session].length);\n    if (initLength === _$scrollables[session].length) {\n      throw new Error('scrollable could not be removed. Potential memory leak. ' + $container.attr('class'));\n    }\n  } else {\n    throw new Error('scrollable could not be removed. Potential memory leak. ' + $container.attr('class'));\n  }\n}\n\n/**\n * @param [options]\n * @param [options.axis] x, y or both. Default is both.\n * @param {boolean} [options.nativeScrollbars]\n * @param {boolean} [options.hybridScrollbars]\n * @param {Session} [options.session]\n * @param {Widget} [options.parent]\n */\nexport function install($container, options) {\n  options = _createDefaultScrollToOptions(options);\n  options.axis = options.axis || 'both';\n\n  // Don't use native as variable name because it will break minifying (reserved keyword)\n  var nativeScrollbars = scout.nvl(options.nativeScrollbars, Device.get().hasPrettyScrollbars());\n  var hybridScrollbars = scout.nvl(options.hybridScrollbars,\n    Device.get().canHideScrollbars() &&\n    // Don't use native scrolling for ie since it makes the content flicker, unless used on a device supporting touch.\n    !(Device.get().isInternetExplorer() && !Device.get().supportsTouch())\n  );\n  if (nativeScrollbars) {\n    _installNative($container, options);\n  } else if (hybridScrollbars) {\n    $container.addClass('hybrid-scrollable');\n    _installNative($container, options);\n    _installJs($container, options);\n  } else {\n    $container.css('overflow', 'hidden');\n    _installJs($container, options);\n  }\n  var htmlContainer = HtmlComponent.optGet($container);\n  if (htmlContainer) {\n    htmlContainer.scrollable = true;\n  }\n  $container.data('scrollable', true);\n  var session = options.session || options.parent.session;\n  pushScrollable(session, $container);\n  return $container;\n}\n\nexport function _installNative($container, options) {\n  if (Device.get().isIos()) {\n    // On ios, container sometimes is not scrollable when installing too early\n    // Happens often with nested scrollable containers (e.g. scrollable table inside a form inside a scrollable tree data)\n    setTimeout(_installNativeInternal.bind(this, $container, options));\n  } else {\n    _installNativeInternal($container, options);\n  }\n}\n\nexport function _installNativeInternal($container, options) {\n  $.log.isTraceEnabled() && $.log.trace('use native scrollbars for container ' + graphics.debugOutput($container));\n  if (options.axis === 'x') {\n    $container\n      .css('overflow-x', 'auto')\n      .css('overflow-y', 'hidden');\n  } else if (options.axis === 'y') {\n    $container\n      .css('overflow-x', 'hidden')\n      .css('overflow-y', 'auto');\n  } else {\n    $container.css('overflow', 'auto');\n  }\n  $container.css('-webkit-overflow-scrolling', 'touch');\n}\n\nexport function isHybridScrolling($scrollable) {\n  return $scrollable.hasClass('hybrid-scrollable');\n}\n\nexport function isNativeScrolling($scrollable) {\n  return scout.isOneOf('auto', $scrollable.css('overflow'), $scrollable.css('overflow-x'), $scrollable.css('overflow-y'));\n}\n\nexport function isJsScrolling($scrollable) {\n  return !!$scrollable.data('scrollbars');\n}\n\nexport function _installJs($container, options) {\n  $.log.isTraceEnabled() && $.log.trace('installing JS-scrollbars for container ' + graphics.debugOutput($container));\n  var scrollbars = arrays.ensure($container.data('scrollbars'));\n  scrollbars.forEach(function(scrollbar) {\n    scrollbar.destroy();\n  });\n  scrollbars = [];\n  var scrollbar;\n  if (options.axis === 'both') {\n    var scrollOptions = $.extend({}, options);\n    scrollOptions.axis = 'y';\n    scrollbar = scout.create('Scrollbar', $.extend({}, scrollOptions));\n    scrollbars.push(scrollbar);\n\n    scrollOptions.axis = 'x';\n    scrollOptions.mouseWheelNeedsShift = true;\n    scrollbar = scout.create('Scrollbar', $.extend({}, scrollOptions));\n    scrollbars.push(scrollbar);\n  } else {\n    scrollbar = scout.create('Scrollbar', $.extend({}, options));\n    scrollbars.push(scrollbar);\n  }\n  $container.data('scrollbars', scrollbars);\n\n  scrollbars.forEach(function(scrollbar) {\n    scrollbar.render($container);\n    scrollbar.update();\n  });\n}\n\n/**\n * Removes the js scrollbars for the $container, if there are any.<p>\n */\nexport function uninstall($container, session) {\n  if (!$container.data('scrollable')) {\n    // was not installed previously -> uninstalling not necessary\n    return;\n  }\n\n  var scrollbars = $container.data('scrollbars');\n  if (scrollbars) {\n    scrollbars.forEach(function(scrollbar) {\n      scrollbar.destroy();\n    });\n  }\n  removeScrollable(session, $container);\n  $container.removeData('scrollable');\n  $container.css('overflow', '');\n  $container.removeClass('hybrid-scrollable');\n  $container.removeData('scrollbars');\n\n  var htmlContainer = HtmlComponent.optGet($container);\n  if (htmlContainer) {\n    htmlContainer.scrollable = false;\n  }\n}\n\n/**\n * Recalculates the scrollbar size and position.\n * @param $scrollable JQuery element that has .data('scrollbars'), when $scrollable is falsy the function returns immediately\n * @param immediate set to true to immediately update the scrollbar, If set to false,\n *        it will be queued in order to prevent unnecessary updates.\n */\nexport function update($scrollable, immediate) {\n  if (!$scrollable || !$scrollable.data('scrollable')) {\n    return;\n  }\n  var scrollbars = $scrollable.data('scrollbars');\n  if (!scrollbars) {\n    if (Device.get().isIos()) {\n      _handleIosPaintBug($scrollable);\n    }\n    return;\n  }\n  if (immediate) {\n    _update(scrollbars);\n    return;\n  }\n  if ($scrollable.data('scrollbarUpdatePending')) {\n    return;\n  }\n  // Executes the update later to prevent unnecessary updates\n  setTimeout(function() {\n    _update(scrollbars);\n    $scrollable.removeData('scrollbarUpdatePending');\n  }, 0);\n  $scrollable.data('scrollbarUpdatePending', true);\n}\n\nexport function _update(scrollbars) {\n  // Reset the scrollbars first to make sure they don't extend the scrollSize\n  scrollbars.forEach(function(scrollbar) {\n    if (scrollbar.rendered) {\n      scrollbar.reset();\n    }\n  });\n  scrollbars.forEach(function(scrollbar) {\n    if (scrollbar.rendered) {\n      scrollbar.update();\n    }\n  });\n}\n\n/**\n * IOS has problems with nested scrollable containers. Sometimes the outer container goes completely white hiding the elements behind.\n * This happens with the following case: Main box is scrollable but there are no scrollbars because content is smaller than container.\n * In the main box there is a tab box with a scrollable table. This table has scrollbars.\n * If the width of the tab box is adjusted (which may happen if the tab item is selected and eventually prefSize called), the main box will go white.\n * <p>\n * This happens only if -webkit-overflow-scrolling is set to touch.\n * To workaround this bug the flag -webkit-overflow-scrolling will be removed if the scrollable component won't display any scrollbars\n */\n\nexport function _handleIosPaintBug($scrollable) {\n  if ($scrollable.data('scrollbarUpdatePending')) {\n    return;\n  }\n  setTimeout(function() {\n    workaround();\n    $scrollable.removeData('scrollbarUpdatePending');\n  });\n  $scrollable.data('scrollbarUpdatePending', true);\n\n  function workaround() {\n    var size = graphics.size($scrollable).subtract(graphics.insets($scrollable, {\n      includePadding: false,\n      includeBorder: true\n    }));\n    if ($scrollable[0].scrollHeight === size.height && $scrollable[0].scrollWidth === size.width) {\n      $scrollable.css('-webkit-overflow-scrolling', '');\n    } else {\n      $scrollable.css('-webkit-overflow-scrolling', 'touch');\n    }\n  }\n}\n\nexport function reset($scrollable) {\n  var scrollbars = $scrollable.data('scrollbars');\n  if (!scrollbars) {\n    return;\n  }\n  scrollbars.forEach(function(scrollbar) {\n    scrollbar.reset();\n  });\n}\n\n/**\n * Scrolls the $scrollable to the given $element (must be a child of $scrollable)\n *\n * @param {$} $scrollable\n *          the scrollable object\n * @param {$} $element\n *          the element to scroll to\n * @param {object|string} [options]\n *          an optional options object. Short-hand version: If a string is passed instead\n *          of an object, the value is automatically converted to the option \"align\".\n * @param {string} [options.align]\n *          Specifies where the element should be positioned in the view port. Can either be 'top', 'center' or 'bottom'.\n *          If unspecified, the following rules apply:\n *          - If the element is above the visible area it will be aligned to top.\n *          - If the element is below the visible area it will be aligned to bottom.\n *          - If the element is already in the visible area no scrolling is done.\n *          Default is undefined.\n * @param {boolean} [options.animate]\n *          If true, the scroll position will be animated so that the element moves smoothly to its new position. Default is false.\n * @param {boolean} [options.stop]\n *          If true, all running animations are stopped before executing the current scroll request. Default is true.\n */\nexport function scrollTo($scrollable, $element, options) {\n  var scrollTo,\n    scrollOffsetUp = 4,\n    scrollOffsetDown = 8,\n    scrollableH = $scrollable.height(),\n    elementBounds = graphics.offsetBounds($element),\n    scrollableBounds = graphics.offsetBounds($scrollable),\n    elementTop = elementBounds.y - scrollableBounds.y - scrollOffsetUp, // relative to scrollable y\n    elementTopNew = 0,\n    elementH = elementBounds.height + scrollOffsetDown,\n    elementBottom = elementTop + elementH;\n\n  if (typeof options === 'string') {\n    options = {\n      align: options\n    };\n  } else {\n    options = _createDefaultScrollToOptions(options);\n  }\n\n  var align = options.align;\n  if (!align) {\n    // If the element is above the visible area it will be aligned to top.\n    // If the element is below the visible area it will be aligned to bottom.\n    // If the element is already in the visible area no scrolling is done.\n    align = (elementTop < 0) ? 'top' : (elementBottom > scrollableH ? 'bottom' : undefined);\n  } else {\n    align = align.toLowerCase();\n  }\n\n  if (align === 'center') {\n    // align center\n    scrollTo = $scrollable.scrollTop() + elementTop - Math.max(0, (scrollableH - elementH) / 2);\n\n  } else if (align === 'top') {\n    // align top\n    // Element is on the top of the view port -> scroll up\n    scrollTo = $scrollable.scrollTop() + elementTop;\n\n  } else if (align === 'bottom') {\n    // align bottom\n    // Element is on the Bottom of the view port -> scroll down\n    // On IE, a fractional position gets truncated when using scrollTop -> ceil to make sure the full element is visible\n    scrollTo = Math.ceil($scrollable.scrollTop() + elementBottom - scrollableH);\n\n    // If the viewport is very small, make sure the element is not moved outside on top\n    // Otherwise when calling this function again, since the element is on the top of the view port, the scroll pane would scroll down which results in flickering\n    elementTopNew = elementTop - (scrollTo - $scrollable.scrollTop());\n    if (elementTopNew < 0) {\n      scrollTo = scrollTo + elementTopNew;\n    }\n  }\n  if (scrollTo) {\n    scrollTop($scrollable, scrollTo, options);\n  }\n}\n\nexport function _createDefaultScrollToOptions(options) {\n  var defaults = {\n    animate: false,\n    stop: true\n  };\n  return $.extend({}, defaults, options);\n}\n\n/**\n * Horizontally scrolls the $scrollable to the given $element (must be a child of $scrollable)\n */\nexport function scrollHorizontalTo($scrollable, $element, options) {\n  var scrollTo,\n    scrollableW = $scrollable.width(),\n    elementBounds = graphics.bounds($element, true),\n    elementLeft = elementBounds.x,\n    elementW = elementBounds.width;\n\n  if (elementLeft < 0) {\n    scrollLeft($scrollable, $scrollable.scrollLeft() + elementLeft, options);\n  } else if (elementLeft + elementW > scrollableW) {\n    // On IE, a fractional position gets truncated when using scrollTop -> ceil to make sure the full element is visible\n    scrollTo = Math.ceil($scrollable.scrollLeft() + elementLeft + elementW - scrollableW);\n    scrollLeft($scrollable, scrollTo, options);\n  }\n}\n\nexport function scrollTop($scrollable, scrollTop, options) {\n  options = _createDefaultScrollToOptions(options);\n  var scrollbarElement = scrollbar($scrollable, 'y');\n  if (scrollbarElement) {\n    scrollbarElement.notifyBeforeScroll();\n  }\n\n  // Not animated\n  if (!options.animate) {\n    if (options.stop) {\n      $scrollable.stop('scroll');\n    }\n    $scrollable.scrollTop(scrollTop);\n    if (scrollbarElement) {\n      scrollbarElement.notifyAfterScroll();\n    }\n    return;\n  }\n\n  // Animated\n  animateScrollTop($scrollable, scrollTop, options);\n  $scrollable.promise('scroll').always(function() {\n    if (scrollbarElement) {\n      scrollbarElement.notifyAfterScroll();\n    }\n  });\n}\n\nexport function scrollLeft($scrollable, scrollLeft, options) {\n  options = _createDefaultScrollToOptions(options);\n  var scrollbarElement = scrollbar($scrollable, 'x');\n  if (scrollbarElement) {\n    scrollbarElement.notifyBeforeScroll();\n  }\n\n  // Not animated\n  if (!options.animate) {\n    if (options.stop) {\n      $scrollable.stop('scroll');\n    }\n    $scrollable.scrollLeft(scrollLeft);\n    if (scrollbarElement) {\n      scrollbarElement.notifyAfterScroll();\n    }\n    return;\n  }\n\n  // Animated\n  animateScrollLeft($scrollable, scrollLeft, options);\n  $scrollable.promise('scroll').always(function() {\n    if (scrollbarElement) {\n      scrollbarElement.notifyAfterScroll();\n    }\n  });\n}\n\nexport function animateScrollTop($scrollable, scrollTop, options) {\n  if (options.stop) {\n    $scrollable.stop('scroll');\n  }\n  $scrollable.animate({\n    scrollTop: scrollTop\n  }, {\n    queue: 'scroll'\n  })\n    .dequeue('scroll');\n}\n\nexport function animateScrollLeft($scrollable, scrollLeft, options) {\n  if (options.stop) {\n    $scrollable.stop('scroll');\n  }\n  $scrollable.animate({\n    scrollLeft: scrollLeft\n  }, {\n    queue: 'scroll'\n  })\n    .dequeue('scroll');\n}\n\nexport function scrollbar($scrollable, axis) {\n  var scrollbars = $scrollable.data('scrollbars') || [];\n  return arrays.find(scrollbars, function(scrollbar) {\n    return scrollbar.axis === axis;\n  });\n}\n\nexport function scrollToBottom($scrollable) {\n  scrollTop($scrollable, $scrollable[0].scrollHeight - $scrollable[0].offsetHeight);\n}\n\n/**\n * @param location object with x and y properties\n * @eturns {boolean} true if the location is visible in the current viewport of the $scrollable, or if $scrollable is null\n */\nexport function isLocationInView(location, $scrollable) {\n  if (!$scrollable || $scrollable.length === 0) {\n    return true;\n  }\n  var scrollableOffsetBounds = graphics.offsetBounds($scrollable);\n  return scrollableOffsetBounds.contains(location.x, location.y);\n}\n\n/**\n * Attaches the given handler to each scrollable parent, including $anchor if it is scrollable as well.<p>\n * Make sure you remove the handlers when not needed anymore using offScroll.\n */\nexport function onScroll($anchor, handler) {\n  handler.$scrollParents = [];\n  $anchor.scrollParents().each(function() {\n    var $scrollParent = $(this);\n    $scrollParent.on('scroll', handler);\n    handler.$scrollParents.push($scrollParent);\n  });\n}\n\nexport function offScroll(handler) {\n  var $scrollParents = handler.$scrollParents;\n  if (!$scrollParents) {\n    throw new Error('$scrollParents are not defined');\n  }\n  for (var i = 0; i < $scrollParents.length; i++) {\n    var $elem = $scrollParents[i];\n    $elem.off('scroll', handler);\n  }\n}\n\n/**\n * Sets the position to fixed and updates left and top position.\n * This is necessary to prevent flickering in IE.\n */\nexport function fix($elem) {\n  if (!$elem.isVisible() || $elem.css('position') === 'fixed') {\n    return;\n  }\n\n  // getBoundingClientRect used by purpose instead of graphics.offsetBounds to get exact values\n  // Also important: offset() of jquery returns getBoundingClientRect().top + window.pageYOffset.\n  // In case of IE and zoom = 125%, the pageYOffset is 1 because the height of the navigation is bigger than the height of the desktop which may be fractional.\n  var bounds = $elem[0].getBoundingClientRect();\n  $elem\n    .css('position', 'fixed')\n    .cssLeft(bounds.left - $elem.cssMarginLeft())\n    .cssTop(bounds.top - $elem.cssMarginTop())\n    .cssWidth(bounds.width)\n    .cssHeight(bounds.height);\n}\n\n/**\n * Reverts the changes made by fix().\n */\nexport function unfix($elem, timeoutId, immediate) {\n  clearTimeout(timeoutId);\n  if (immediate) {\n    _unfix($elem);\n    return;\n  }\n  return setTimeout(function() {\n    _unfix($elem);\n  }, 50);\n}\n\nexport function _unfix($elem) {\n  $elem.css({\n    position: 'absolute',\n    left: '',\n    top: '',\n    width: '',\n    height: ''\n  });\n}\n\n/**\n * Stores the position of all scrollables that belong to an optional session.\n * @param session (optional) when no session is given, scrollables from all sessions are stored\n */\nexport function storeScrollPositions($container, session) {\n  var $scrollables = getScrollables(session);\n  if (!$scrollables) {\n    return;\n  }\n\n  var scrollTop, scrollLeft;\n  $scrollables.forEach(function($scrollable) {\n    if ($container.isOrHas($scrollable[0])) {\n      scrollTop = $scrollable.scrollTop();\n      $scrollable.data('scrollTop', scrollTop);\n      scrollLeft = $scrollable.scrollLeft();\n      $scrollable.data('scrollLeft', $scrollable.scrollLeft());\n      $.log.isTraceEnabled() && $.log.trace('Stored scroll position for ' + $scrollable.attr('class') + '. Top: ' + scrollTop + '. Left: ' + scrollLeft);\n    }\n  });\n}\n\n/**\n * Restores the position of all scrollables that belong to an optional session.\n * @param session (optional) when no session is given, scrollables from all sessions are restored\n */\nexport function restoreScrollPositions($container, session) {\n  var $scrollables = getScrollables(session);\n  if (!$scrollables) {\n    return;\n  }\n\n  var scrollTop, scrollLeft;\n  $scrollables.forEach(function($scrollable) {\n    if ($container.isOrHas($scrollable[0])) {\n      scrollTop = $scrollable.data('scrollTop');\n      if (scrollTop) {\n        $scrollable.scrollTop(scrollTop);\n        $scrollable.removeData('scrollTop');\n      }\n      scrollLeft = $scrollable.data('scrollLeft');\n      if (scrollLeft) {\n        $scrollable.scrollLeft(scrollLeft);\n        $scrollable.removeData('scrollLeft');\n      }\n      // Also make sure that scroll bar is up to date\n      // Introduced for use case: Open large table page, edit entry, press f5\n      // -> outline tab gets rendered, scrollbar gets updated with set timeout, outline tab gets detached\n      // -> update event never had any effect because it executed after detaching (due to set timeout)\n      update($scrollable);\n      $.log.isTraceEnabled() && $.log.trace('Restored scroll position for ' + $scrollable.attr('class') + '. Top: ' + scrollTop + '. Left: ' + scrollLeft);\n    }\n  });\n}\n\nexport function setVisible($scrollable, visible) {\n  if (!$scrollable || !$scrollable.data('scrollable')) {\n    return;\n  }\n  var scrollbars = $scrollable.data('scrollbars');\n  if (!scrollbars) {\n    return;\n  }\n  scrollbars.forEach(function(scrollbar) {\n    if (scrollbar.rendered) {\n      scrollbar.$container.setVisible(visible);\n    }\n  });\n}\n\nexport function opacity($scrollable, opacity) {\n  if (!$scrollable || !$scrollable.data('scrollable')) {\n    return;\n  }\n  var scrollbars = $scrollable.data('scrollbars');\n  if (!scrollbars) {\n    return;\n  }\n  scrollbars.forEach(function(scrollbar) {\n    if (scrollbar.rendered) {\n      scrollbar.$container.css('opacity', opacity);\n    }\n  });\n}\n\nexport function _getCompleteChildRowsHeightRecursive(children, getChildren, isExpanded, defaultChildHeight) {\n  var height = 0;\n  children.forEach(function(child) {\n    if (child.height) {\n      height += child.height;\n    } else {\n      // fallback for children with unset height\n      height += defaultChildHeight;\n    }\n    if (isExpanded(child) && getChildren(child).length > 0) {\n      height += _getCompleteChildRowsHeightRecursive(getChildren(child), getChildren, isExpanded, defaultChildHeight);\n    }\n  });\n  return height;\n}\n\nexport function ensureExpansionVisible(parent) {\n  var isParentExpanded = parent.isExpanded(parent.element);\n  var children = parent.getChildren(parent.element);\n  var parentPositionTop = parent.$element.position().top;\n  var parentHeight = parent.element.height;\n  var scrollTopPos = parent.$scrollable.scrollTop();\n\n  // vertical scrolling\n  if (!isParentExpanded) {\n    // parent is not expanded, make sure that at least one node above the parent is visible\n    if (parentPositionTop < parentHeight) {\n      var minScrollTop = Math.max(scrollTopPos - (parentHeight - parentPositionTop), 0);\n      scrollTop(parent.$scrollable, minScrollTop, {\n        animate: true\n      });\n    }\n  } else if (isParentExpanded && children.length > 0) {\n    // parent is expanded and has children, best effort approach to show the expansion\n    var fullDataHeight = parent.$scrollable.height();\n\n    // get childRowCount considering already expanded rows\n    var childRowsHeight = _getCompleteChildRowsHeightRecursive(children, parent.getChildren, parent.isExpanded, parent.defaultChildHeight);\n\n    // + 1.5 since its the parent's top position and we want to scroll half a row further to show that there's something after the expansion\n    var additionalHeight = childRowsHeight + (1.5 * parentHeight);\n    var scrollTo = parentPositionTop + additionalHeight;\n    // scroll as much as needed to show the expansion but make sure that the parent row (plus one more) is still visible\n    var newScrollTop = scrollTopPos + Math.min(scrollTo - fullDataHeight, parentPositionTop - parentHeight);\n    // only scroll down\n    if (newScrollTop > scrollTopPos) {\n      scrollTop(parent.$scrollable, newScrollTop, {\n        animate: true,\n        stop: false\n      });\n    }\n  }\n\n  if (children.length > 0) {\n    // horizontal scrolling: at least 3 levels of hierarchy should be visible (only relevant for small fields)\n    var minLevelLeft = Math.max(parent.element.level - 3, 0) * parent.nodePaddingLevel;\n    scrollLeft(parent.$scrollable, minLevelLeft, {\n      animate: true,\n      stop: false\n    });\n  }\n}\n\nexport default {\n  animateScrollLeft,\n  animateScrollTop,\n  ensureExpansionVisible,\n  fix,\n  getScrollables,\n  install,\n  isHybridScrolling,\n  isJsScrolling,\n  isLocationInView,\n  isNativeScrolling,\n  offScroll,\n  onScroll,\n  opacity,\n  pushScrollable,\n  removeScrollable,\n  reset,\n  restoreScrollPositions,\n  scrollHorizontalTo,\n  scrollLeft,\n  scrollTo,\n  scrollToBottom,\n  scrollTop,\n  scrollbar,\n  setVisible,\n  storeScrollPositions,\n  unfix,\n  uninstall,\n  update\n};\n"]},"metadata":{},"sourceType":"module"}