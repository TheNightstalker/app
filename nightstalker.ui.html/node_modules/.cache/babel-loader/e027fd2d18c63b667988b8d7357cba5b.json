{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Event, FormField, HtmlComponent, scout, Status, strings, Widget } from '../../index';\n\nvar FieldStatus = /*#__PURE__*/function (_Widget) {\n  _inherits(FieldStatus, _Widget);\n\n  var _super = _createSuper(FieldStatus);\n\n  function FieldStatus() {\n    var _this;\n\n    _classCallCheck(this, FieldStatus);\n\n    _this = _super.call(this);\n    _this.tooltip = null;\n    _this.contextMenu = null;\n    _this.status = null;\n    _this.updating = false;\n    _this.autoRemove = true;\n    _this.position = FormField.StatusPosition.DEFAULT;\n    _this._parents = [];\n    _this._parentPropertyChangeListener = _this._onParentPropertyChange.bind(_assertThisInitialized(_this));\n    _this._parentHierarchyChangeListener = _this._onParentHierarchyChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FieldStatus, [{\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent.appendSpan('status').on('mousedown', this._onStatusMouseDown.bind(this));\n      this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      _get(_getPrototypeOf(FieldStatus.prototype), \"_remove\", this).call(this);\n\n      if (this.tooltip) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n      }\n\n      if (this.contextMenu) {\n        this.contextMenu.destroy();\n        this.contextMenu = null;\n      }\n\n      this._removeParentListeners();\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(FieldStatus.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderPosition();\n    }\n  }, {\n    key: \"update\",\n    value: function update(status, menus, autoRemove, showStatus) {\n      this.updating = true;\n      this.setStatus(status);\n      this.setMenus(menus);\n      this.setAutoRemove(autoRemove);\n      this.updating = false;\n\n      this._updatePopup(showStatus);\n    }\n  }, {\n    key: \"clearStatus\",\n    value: function clearStatus() {\n      this.setStatus(null);\n    }\n  }, {\n    key: \"setStatus\",\n    value: function setStatus(status) {\n      this.setProperty('status', status);\n    }\n  }, {\n    key: \"_setStatus\",\n    value: function _setStatus(status) {\n      status = Status.ensure(status);\n\n      this._setProperty('status', status);\n    }\n  }, {\n    key: \"_renderStatus\",\n    value: function _renderStatus() {\n      if (!this.updating) {\n        this._updatePopup();\n      }\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(position) {\n      this.setProperty('position', position);\n    }\n  }, {\n    key: \"_renderPosition\",\n    value: function _renderPosition() {\n      this.$container.toggleClass('top', this.position === FormField.StatusPosition.TOP);\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"_renderVisible\",\n    value: function _renderVisible() {\n      _get(_getPrototypeOf(FieldStatus.prototype), \"_renderVisible\", this).call(this);\n\n      if (!this.visible) {\n        this.hidePopup();\n      }\n    }\n  }, {\n    key: \"setMenus\",\n    value: function setMenus(menus) {\n      this.setProperty('menus', arrays.ensure(menus));\n    }\n  }, {\n    key: \"_renderMenus\",\n    value: function _renderMenus() {\n      if (!this.updating) {\n        this._updatePopup();\n      }\n    }\n  }, {\n    key: \"setAutoRemove\",\n    value: function setAutoRemove(autoRemove) {\n      this.setProperty('autoRemove', autoRemove);\n    }\n  }, {\n    key: \"_renderAutoRemove\",\n    value: function _renderAutoRemove() {\n      if (!this.updating) {\n        this._updatePopup();\n      }\n    }\n  }, {\n    key: \"hideTooltip\",\n    value: function hideTooltip() {\n      var event = new Event();\n\n      if (this.tooltip) {\n        this.trigger('hideTooltip', event);\n\n        if (!event.defaultPrevented) {\n          this.tooltip.destroy();\n          this.tooltip = null;\n\n          this._removeParentListeners();\n        }\n      }\n    }\n  }, {\n    key: \"_updatePopup\",\n    value: function _updatePopup(showStatus) {\n      if (!this._requiresTooltip()) {\n        this.hideTooltip();\n      }\n\n      if (arrays.empty(this.menus)) {\n        this.hideContextMenu();\n      }\n\n      if (showStatus === true) {\n        this.showTooltip();\n      } else if (showStatus === false) {\n        this.hideTooltip();\n      }\n    }\n  }, {\n    key: \"_requiresTooltip\",\n    value: function _requiresTooltip() {\n      if (!this.status || !this.rendered) {\n        return false;\n      }\n\n      if (arrays.empty(this.menus) && !strings.hasText(this.status.message)) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"showTooltip\",\n    value: function showTooltip() {\n      if (!this._requiresTooltip()) {\n        return;\n      }\n\n      var event = new Event();\n      this.trigger('showTooltip', event);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      this._updateParentListeners();\n\n      this.hideContextMenu();\n\n      if (this.tooltip && this.tooltip.autoRemove !== this.autoRemove) {\n        // close\n        this.hideTooltip();\n      }\n\n      if (this.tooltip) {\n        // update existing tooltip\n        this.tooltip.setText(this.status.message);\n        this.tooltip.setSeverity(this.status.severity);\n        this.tooltip.setMenus(this.menus);\n      } else {\n        this.tooltip = scout.create('Tooltip', {\n          parent: this,\n          $anchor: this.$container,\n          text: this.status.message,\n          severity: this.status.severity,\n          autoRemove: this.autoRemove,\n          menus: this.menus\n        });\n        this.tooltip.one('destroy', function () {\n          this.hideTooltip();\n        }.bind(this));\n        this.tooltip.render();\n      }\n    }\n  }, {\n    key: \"hideContextMenu\",\n    value: function hideContextMenu() {\n      if (this.contextMenu) {\n        this.contextMenu.destroy();\n        this.contextMenu = null;\n      }\n    }\n  }, {\n    key: \"showContextMenu\",\n    value: function showContextMenu() {\n      if (arrays.empty(this.menus)) {\n        // at least one menu item must be visible\n        return;\n      } // close both contextMenu and status tooltip\n\n\n      this.hidePopup();\n      this.contextMenu = scout.create('ContextMenuPopup', {\n        parent: this,\n        $anchor: this.$container,\n        menuItems: this.menus,\n        cloneMenuItems: false,\n        closeOnAnchorMouseDown: false\n      });\n      this.contextMenu.one('destroy', function () {\n        this.hideContextMenu();\n      }.bind(this));\n      this.contextMenu.open();\n    }\n  }, {\n    key: \"hidePopup\",\n    value: function hidePopup() {\n      this.hideTooltip();\n      this.hideContextMenu();\n    }\n  }, {\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      if (this.status) {\n        // ensure context menu closed\n        this.hideContextMenu();\n\n        if (this.tooltip) {\n          this.hideTooltip();\n        } else {\n          this.showTooltip();\n        }\n\n        return;\n      }\n\n      if (!arrays.empty(this.menus)) {\n        this.hideTooltip();\n\n        var func = function func() {\n          if (!this.rendered) {\n            // check needed because function is called asynchronously\n            return;\n          } // Toggle menu\n\n\n          if (this.contextMenu) {\n            this.hideContextMenu();\n          } else {\n            this.showContextMenu();\n          }\n        }.bind(this);\n\n        this.session.onRequestsDone(func);\n      } else {\n        // close all\n        this.hidePopup();\n      }\n    }\n  }, {\n    key: \"_onStatusMouseDown\",\n    value: function _onStatusMouseDown(event) {\n      this.trigger('statusMouseDown', event);\n\n      if (!event.defaultPrevented) {\n        this.togglePopup();\n      }\n    }\n  }, {\n    key: \"_updateTooltipVisibility\",\n    value: function _updateTooltipVisibility(parent) {\n      if (this.isEveryParentVisible()) {\n        /* We must use a timeout here, because the propertyChange event for the visible property\n         * is triggered before the _renderVisible() function is called. Which means the DOM is still\n         * invisible, thus the tooltip cannot be rendered. Because of the timeout we must double-check\n         * the state of the FieldStatus, because it could have been removed in the meantime.\n         */\n        setTimeout(function () {\n          if (!this.rendered || !this.isEveryParentVisible()) {\n            return;\n          }\n\n          if (this.tooltip && !this.tooltip.rendered) {\n            this.tooltip.render();\n          }\n        }.bind(this));\n      } else {\n        if (this.tooltip && this.tooltip.rendered) {\n          this.tooltip.remove();\n        }\n      }\n    }\n  }, {\n    key: \"_onParentHierarchyChange\",\n    value: function _onParentHierarchyChange(event) {\n      // If the parent of a widget we're listening to changes, we must re-check the parent hierarchy\n      // and re-install the property change listener\n      this._updateParentListeners();\n    }\n  }, {\n    key: \"_onParentPropertyChange\",\n    value: function _onParentPropertyChange(event) {\n      if ('visible' === event.propertyName) {\n        this._updateTooltipVisibility(event.source);\n      }\n    }\n  }, {\n    key: \"_removeParentListeners\",\n    value: function _removeParentListeners() {\n      this._parents.forEach(function (parent) {\n        parent.off('hierarchyChange', this._parentHierarchyChangeListener);\n        parent.off('propertyChange', this._parentPropertyChangeListener);\n      }.bind(this));\n\n      this._parents = [];\n    }\n    /**\n     * Adds a property change listener to every parent of the field status. We keep a list of all parents because\n     * we need to remove the listeners later, also when the parent hierarchy has changed.\n     */\n\n  }, {\n    key: \"_updateParentListeners\",\n    value: function _updateParentListeners() {\n      this._removeParentListeners();\n\n      var parent = this.parent;\n\n      while (parent) {\n        parent.on('hierarchyChange', this._parentHierarchyChangeListener);\n        parent.on('propertyChange', this._parentPropertyChangeListener);\n\n        this._parents.push(parent);\n\n        parent = parent.parent;\n      }\n    }\n  }]);\n\n  return FieldStatus;\n}(Widget);\n\nexport { FieldStatus as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/FieldStatus.js"],"names":["arrays","Event","FormField","HtmlComponent","scout","Status","strings","Widget","FieldStatus","tooltip","contextMenu","status","updating","autoRemove","position","StatusPosition","DEFAULT","_parents","_parentPropertyChangeListener","_onParentPropertyChange","bind","_parentHierarchyChangeListener","_onParentHierarchyChange","$container","$parent","appendSpan","on","_onStatusMouseDown","htmlComp","install","session","destroy","_removeParentListeners","_renderPosition","menus","showStatus","setStatus","setMenus","setAutoRemove","_updatePopup","setProperty","ensure","_setProperty","toggleClass","TOP","invalidateLayoutTree","visible","hidePopup","event","trigger","defaultPrevented","_requiresTooltip","hideTooltip","empty","hideContextMenu","showTooltip","rendered","hasText","message","_updateParentListeners","setText","setSeverity","severity","create","parent","$anchor","text","one","render","menuItems","cloneMenuItems","closeOnAnchorMouseDown","open","func","showContextMenu","onRequestsDone","togglePopup","isEveryParentVisible","setTimeout","remove","propertyName","_updateTooltipVisibility","source","forEach","off","push"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Event, FormField, HtmlComponent, scout, Status, strings, Widget} from '../../index';\n\nexport default class FieldStatus extends Widget {\n\n  constructor() {\n    super();\n    this.tooltip = null;\n    this.contextMenu = null;\n    this.status = null;\n    this.updating = false;\n    this.autoRemove = true;\n    this.position = FormField.StatusPosition.DEFAULT;\n\n    this._parents = [];\n    this._parentPropertyChangeListener = this._onParentPropertyChange.bind(this);\n    this._parentHierarchyChangeListener = this._onParentHierarchyChange.bind(this);\n  }\n\n  _render() {\n    this.$container = this.$parent.appendSpan('status')\n      .on('mousedown', this._onStatusMouseDown.bind(this));\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n  }\n\n  _remove() {\n    super._remove();\n    if (this.tooltip) {\n      this.tooltip.destroy();\n      this.tooltip = null;\n    }\n    if (this.contextMenu) {\n      this.contextMenu.destroy();\n      this.contextMenu = null;\n    }\n    this._removeParentListeners();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderPosition();\n  }\n\n  update(status, menus, autoRemove, showStatus) {\n    this.updating = true;\n    this.setStatus(status);\n    this.setMenus(menus);\n    this.setAutoRemove(autoRemove);\n    this.updating = false;\n    this._updatePopup(showStatus);\n  }\n\n  clearStatus() {\n    this.setStatus(null);\n  }\n\n  setStatus(status) {\n    this.setProperty('status', status);\n  }\n\n  _setStatus(status) {\n    status = Status.ensure(status);\n    this._setProperty('status', status);\n  }\n\n  _renderStatus() {\n    if (!this.updating) {\n      this._updatePopup();\n    }\n  }\n\n  setPosition(position) {\n    this.setProperty('position', position);\n  }\n\n  _renderPosition() {\n    this.$container.toggleClass('top', this.position === FormField.StatusPosition.TOP);\n    this.invalidateLayoutTree();\n  }\n\n  _renderVisible() {\n    super._renderVisible();\n    if (!this.visible) {\n      this.hidePopup();\n    }\n  }\n\n  setMenus(menus) {\n    this.setProperty('menus', arrays.ensure(menus));\n  }\n\n  _renderMenus() {\n    if (!this.updating) {\n      this._updatePopup();\n    }\n  }\n\n  setAutoRemove(autoRemove) {\n    this.setProperty('autoRemove', autoRemove);\n  }\n\n  _renderAutoRemove() {\n    if (!this.updating) {\n      this._updatePopup();\n    }\n  }\n\n  hideTooltip() {\n    var event = new Event();\n    if (this.tooltip) {\n      this.trigger('hideTooltip', event);\n      if (!event.defaultPrevented) {\n        this.tooltip.destroy();\n        this.tooltip = null;\n        this._removeParentListeners();\n      }\n    }\n  }\n\n  _updatePopup(showStatus) {\n    if (!this._requiresTooltip()) {\n      this.hideTooltip();\n    }\n    if (arrays.empty(this.menus)) {\n      this.hideContextMenu();\n    }\n    if (showStatus === true) {\n      this.showTooltip();\n    } else if (showStatus === false) {\n      this.hideTooltip();\n    }\n  }\n\n  _requiresTooltip() {\n    if (!this.status || !this.rendered) {\n      return false;\n    }\n    if (arrays.empty(this.menus) && !strings.hasText(this.status.message)) {\n      return false;\n    }\n    return true;\n  }\n\n  showTooltip() {\n    if (!this._requiresTooltip()) {\n      return;\n    }\n    var event = new Event();\n    this.trigger('showTooltip', event);\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    this._updateParentListeners();\n    this.hideContextMenu();\n    if (this.tooltip && this.tooltip.autoRemove !== this.autoRemove) {\n      // close\n      this.hideTooltip();\n    }\n    if (this.tooltip) {\n      // update existing tooltip\n      this.tooltip.setText(this.status.message);\n      this.tooltip.setSeverity(this.status.severity);\n      this.tooltip.setMenus(this.menus);\n    } else {\n      this.tooltip = scout.create('Tooltip', {\n        parent: this,\n        $anchor: this.$container,\n        text: this.status.message,\n        severity: this.status.severity,\n        autoRemove: this.autoRemove,\n        menus: this.menus\n      });\n      this.tooltip.one('destroy', function() {\n        this.hideTooltip();\n      }.bind(this));\n      this.tooltip.render();\n    }\n  }\n\n  hideContextMenu() {\n    if (this.contextMenu) {\n      this.contextMenu.destroy();\n      this.contextMenu = null;\n    }\n  }\n\n  showContextMenu() {\n    if (arrays.empty(this.menus)) {\n      // at least one menu item must be visible\n      return;\n    }\n    // close both contextMenu and status tooltip\n    this.hidePopup();\n\n    this.contextMenu = scout.create('ContextMenuPopup', {\n      parent: this,\n      $anchor: this.$container,\n      menuItems: this.menus,\n      cloneMenuItems: false,\n      closeOnAnchorMouseDown: false\n    });\n    this.contextMenu.one('destroy', function() {\n      this.hideContextMenu();\n    }.bind(this));\n    this.contextMenu.open();\n  }\n\n  hidePopup() {\n    this.hideTooltip();\n    this.hideContextMenu();\n  }\n\n  togglePopup() {\n    if (this.status) {\n      // ensure context menu closed\n      this.hideContextMenu();\n      if (this.tooltip) {\n        this.hideTooltip();\n      } else {\n        this.showTooltip();\n      }\n      return;\n    }\n    if (!arrays.empty(this.menus)) {\n      this.hideTooltip();\n      var func = function func() {\n        if (!this.rendered) { // check needed because function is called asynchronously\n          return;\n        }\n        // Toggle menu\n        if (this.contextMenu) {\n          this.hideContextMenu();\n        } else {\n          this.showContextMenu();\n        }\n      }.bind(this);\n\n      this.session.onRequestsDone(func);\n\n    } else {\n      // close all\n      this.hidePopup();\n    }\n  }\n\n  _onStatusMouseDown(event) {\n    this.trigger('statusMouseDown', event);\n    if (!event.defaultPrevented) {\n      this.togglePopup();\n    }\n  }\n\n  _updateTooltipVisibility(parent) {\n    if (this.isEveryParentVisible()) {\n      /* We must use a timeout here, because the propertyChange event for the visible property\n       * is triggered before the _renderVisible() function is called. Which means the DOM is still\n       * invisible, thus the tooltip cannot be rendered. Because of the timeout we must double-check\n       * the state of the FieldStatus, because it could have been removed in the meantime.\n       */\n      setTimeout(function() {\n        if (!this.rendered || !this.isEveryParentVisible()) {\n          return;\n        }\n        if (this.tooltip && !this.tooltip.rendered) {\n          this.tooltip.render();\n        }\n      }.bind(this));\n    } else {\n      if (this.tooltip && this.tooltip.rendered) {\n        this.tooltip.remove();\n      }\n    }\n  }\n\n  _onParentHierarchyChange(event) {\n    // If the parent of a widget we're listening to changes, we must re-check the parent hierarchy\n    // and re-install the property change listener\n    this._updateParentListeners();\n  }\n\n  _onParentPropertyChange(event) {\n    if ('visible' === event.propertyName) {\n      this._updateTooltipVisibility(event.source);\n    }\n  }\n\n  _removeParentListeners() {\n    this._parents.forEach(function(parent) {\n      parent.off('hierarchyChange', this._parentHierarchyChangeListener);\n      parent.off('propertyChange', this._parentPropertyChangeListener);\n    }.bind(this));\n    this._parents = [];\n  }\n\n  /**\n   * Adds a property change listener to every parent of the field status. We keep a list of all parents because\n   * we need to remove the listeners later, also when the parent hierarchy has changed.\n   */\n  _updateParentListeners() {\n    this._removeParentListeners();\n    var parent = this.parent;\n    while (parent) {\n      parent.on('hierarchyChange', this._parentHierarchyChangeListener);\n      parent.on('propertyChange', this._parentPropertyChangeListener);\n      this._parents.push(parent);\n      parent = parent.parent;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}