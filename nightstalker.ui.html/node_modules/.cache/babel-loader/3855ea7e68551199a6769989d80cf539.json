{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Locale, objects, scout, texts } from '../index';\nimport $ from 'jquery';\nvar localesMap = {};\nexport function bootstrap(url) {\n  var promise = url ? $.ajaxJson(url) : $.resolvedPromise([]);\n  return promise.then(_preInit.bind(this, url));\n}\nexport function _preInit(url, data) {\n  if (data && data.error) {\n    // The result may contain a json error (e.g. session timeout) -> abort processing\n    throw {\n      error: data.error,\n      url: url\n    };\n  }\n\n  init(data);\n}\nexport function init(data) {\n  data.forEach(function (locale) {\n    localesMap[locale.languageTag] = new Locale(locale);\n  }, this);\n}\nexport function _get(languageTag) {\n  return localesMap[languageTag];\n}\n/**\n * Checks whether there is a locale definition for the given language tag.\n * @param explicit if true, the country code is considered, meaning if languageTag is 'de-CH'\n *   and there is a locale for 'de' but not for 'de-CH', true will be returned nonetheless. Default false (consistent to #get).\n */\n\nexport function has(languageTag, explicit) {\n  explicit = scout.nvl(explicit, false);\n\n  if (explicit) {\n    return !!_get(languageTag);\n  }\n\n  return !!get(languageTag);\n}\n/**\n * @returns {Locale} the locale for the given languageTag.\n * If there is no locale found for the given tag, it tries to load the locale without the country code.\n * If there is still no locale found, null is returned.\n */\n\nexport function get(languageTag) {\n  var locale,\n      tags = texts.createOrderedLanguageTags(languageTag);\n  tags.some(function (tag) {\n    locale = _get(tag);\n    return !!locale;\n  }, this);\n\n  if (!locale) {\n    return null;\n  }\n\n  return locale;\n}\nexport function getNavigatorLanguage() {\n  return navigator.language || navigator.userLanguage;\n}\n/**\n * @returns {Locale} for the language returned by the navigator.\n * If no locale is found, the first locale with the language of the navigator is returned.\n * (e.g. if browser returns 'de' and there is no locale for 'de', check if there is one for 'de-CH', 'de-DE' etc. and take the first.)\n * If still no locale is found, the default locale {@link Locale.DEFAULT} is returned.\n */\n\nexport function getNavigatorLocale() {\n  var languageTag = getNavigatorLanguage();\n\n  if (!languageTag) {\n    //  No language returned by the browser, using default locale (should not happen with modern browsers, but we never know...)\n    $.log.warn('Browser returned no language. Using default locale.');\n    return new Locale();\n  }\n\n  var locale = get(languageTag);\n\n  if (locale) {\n    // If a locale was found for the language returned by the navigator, use that one\n    return locale;\n  } // Otherwise search a locale with the same language\n\n\n  $.log.isInfoEnabled() && $.log.info('Locale for languageTag ' + languageTag + ' not found. Trying to load best match.');\n  var language = splitLanguageTag(languageTag)[0];\n  locale = findFirstForLanguage(language);\n\n  if (locale) {\n    return locale;\n  } // If still not found, use the default locale\n\n\n  $.log.isInfoEnabled() && $.log.info('Still no matching locale for languageTag ' + languageTag + ' found. Using default locale.');\n  return new Locale();\n}\nexport function getAll() {\n  return objects.values(localesMap);\n}\nexport function getAllLanguageTags() {\n  return Object.keys(localesMap);\n}\n/**\n * Returns the first locale for the given language.\n * @param language a language without country code (e.g. en or de)\n */\n\nexport function findFirstForLanguage(language) {\n  scout.assertParameter('language', language);\n  return arrays.find(getAll(), function (locale) {\n    if (locale.language === language) {\n      return locale;\n    }\n  }, this);\n}\n/**\n * Splits the language tag and returns an array containing the language and the country.\n */\n\nexport function splitLanguageTag(languageTag) {\n  if (!languageTag) {\n    return [];\n  }\n\n  return languageTag.split('-');\n}\nexport default {\n  bootstrap: bootstrap,\n  findFirstForLanguage: findFirstForLanguage,\n  get: get,\n  getAll: getAll,\n  getAllLanguageTags: getAllLanguageTags,\n  getNavigatorLanguage: getNavigatorLanguage,\n  getNavigatorLocale: getNavigatorLocale,\n  has: has,\n  init: init,\n  localesMap: localesMap,\n  splitLanguageTag: splitLanguageTag\n};","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/util/locales.js"],"names":["arrays","Locale","objects","scout","texts","$","localesMap","bootstrap","url","promise","ajaxJson","resolvedPromise","then","_preInit","bind","data","error","init","forEach","locale","languageTag","_get","has","explicit","nvl","get","tags","createOrderedLanguageTags","some","tag","getNavigatorLanguage","navigator","language","userLanguage","getNavigatorLocale","log","warn","isInfoEnabled","info","splitLanguageTag","findFirstForLanguage","getAll","values","getAllLanguageTags","Object","keys","assertParameter","find","split"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Locale, objects, scout, texts} from '../index';\nimport $ from 'jquery';\n\nlet localesMap = {};\n\nexport function bootstrap(url) {\n  var promise = url ? $.ajaxJson(url) : $.resolvedPromise([]);\n  return promise.then(_preInit.bind(this, url));\n}\n\nexport function _preInit(url, data) {\n  if (data && data.error) {\n    // The result may contain a json error (e.g. session timeout) -> abort processing\n    throw {\n      error: data.error,\n      url: url\n    };\n  }\n  init(data);\n}\n\nexport function init(data) {\n  data.forEach(function(locale) {\n    localesMap[locale.languageTag] = new Locale(locale);\n  }, this);\n}\n\nexport function _get(languageTag) {\n  return localesMap[languageTag];\n}\n\n/**\n * Checks whether there is a locale definition for the given language tag.\n * @param explicit if true, the country code is considered, meaning if languageTag is 'de-CH'\n *   and there is a locale for 'de' but not for 'de-CH', true will be returned nonetheless. Default false (consistent to #get).\n */\nexport function has(languageTag, explicit) {\n  explicit = scout.nvl(explicit, false);\n  if (explicit) {\n    return !!_get(languageTag);\n  }\n  return !!get(languageTag);\n}\n\n/**\n * @returns {Locale} the locale for the given languageTag.\n * If there is no locale found for the given tag, it tries to load the locale without the country code.\n * If there is still no locale found, null is returned.\n */\nexport function get(languageTag) {\n  var locale,\n    tags = texts.createOrderedLanguageTags(languageTag);\n\n  tags.some(function(tag) {\n    locale = _get(tag);\n    return !!locale;\n  }, this);\n\n  if (!locale) {\n    return null;\n  }\n\n  return locale;\n}\n\nexport function getNavigatorLanguage() {\n  return navigator.language || navigator.userLanguage;\n}\n\n/**\n * @returns {Locale} for the language returned by the navigator.\n * If no locale is found, the first locale with the language of the navigator is returned.\n * (e.g. if browser returns 'de' and there is no locale for 'de', check if there is one for 'de-CH', 'de-DE' etc. and take the first.)\n * If still no locale is found, the default locale {@link Locale.DEFAULT} is returned.\n */\nexport function getNavigatorLocale() {\n  var languageTag = getNavigatorLanguage();\n  if (!languageTag) {\n    //  No language returned by the browser, using default locale (should not happen with modern browsers, but we never know...)\n    $.log.warn('Browser returned no language. Using default locale.');\n    return new Locale();\n  }\n\n  var locale = get(languageTag);\n  if (locale) {\n    // If a locale was found for the language returned by the navigator, use that one\n    return locale;\n  }\n\n  // Otherwise search a locale with the same language\n  $.log.isInfoEnabled() && $.log.info('Locale for languageTag ' + languageTag + ' not found. Trying to load best match.');\n  var language = splitLanguageTag(languageTag)[0];\n  locale = findFirstForLanguage(language);\n  if (locale) {\n    return locale;\n  }\n\n  // If still not found, use the default locale\n  $.log.isInfoEnabled() && $.log.info('Still no matching locale for languageTag ' + languageTag + ' found. Using default locale.');\n  return new Locale();\n}\n\nexport function getAll() {\n  return objects.values(localesMap);\n}\n\nexport function getAllLanguageTags() {\n  return Object.keys(localesMap);\n}\n\n/**\n * Returns the first locale for the given language.\n * @param language a language without country code (e.g. en or de)\n */\nexport function findFirstForLanguage(language) {\n  scout.assertParameter('language', language);\n  return arrays.find(getAll(), function(locale) {\n    if (locale.language === language) {\n      return locale;\n    }\n  }, this);\n}\n\n/**\n * Splits the language tag and returns an array containing the language and the country.\n */\nexport function splitLanguageTag(languageTag) {\n  if (!languageTag) {\n    return [];\n  }\n  return languageTag.split('-');\n}\n\nexport default {\n  bootstrap,\n  findFirstForLanguage,\n  get,\n  getAll,\n  getAllLanguageTags,\n  getNavigatorLanguage,\n  getNavigatorLocale,\n  has,\n  init,\n  localesMap,\n  splitLanguageTag\n};\n"]},"metadata":{},"sourceType":"module"}