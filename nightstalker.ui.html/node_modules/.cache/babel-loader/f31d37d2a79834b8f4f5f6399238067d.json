{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { menus, scout } from '../index';\n\nvar MenuItemsOrder = /*#__PURE__*/function () {\n  function MenuItemsOrder(session, objectType) {\n    _classCallCheck(this, MenuItemsOrder);\n\n    this.session = session;\n    this.objectType = objectType;\n    this.emptySpaceTypes = ['EmptySpace'];\n    this.selectionTypes = ['SingleSelection', 'MultiSelection'];\n  }\n\n  _createClass(MenuItemsOrder, [{\n    key: \"order\",\n    value: function order(items) {\n      var buttons = [],\n          emptySpaceItems = [],\n          selectionItems = [],\n          rightItems = [];\n      var isEmptyspaceMenuVisible = false,\n          isSelectionMenuVisible = false;\n      items.forEach(function (item) {\n        // skip separators added dynamically by this class\n        if (item.createdBy === this) {\n          return;\n        }\n\n        if (item.isButton()) {\n          buttons.push(item);\n        } else if (item.horizontalAlignment === 1) {\n          rightItems.push(item);\n        } else if (menus.checkType(item, this._menuTypes(this.emptySpaceTypes))) {\n          if (item.visible) {\n            isEmptyspaceMenuVisible = true;\n          }\n\n          emptySpaceItems.push(item);\n        } else if (menus.checkType(item, this._menuTypes(this.selectionTypes))) {\n          if (item.visible) {\n            isSelectionMenuVisible = true;\n          }\n\n          selectionItems.push(item);\n        }\n      }, this); // add fixed separator between emptySpace and selection\n\n      if (isEmptyspaceMenuVisible && isSelectionMenuVisible) {\n        emptySpaceItems.push(this._createSeparator());\n      }\n\n      return {\n        left: buttons.concat(emptySpaceItems, selectionItems),\n        right: rightItems,\n        all: buttons.concat(emptySpaceItems, selectionItems).concat(rightItems)\n      };\n    }\n  }, {\n    key: \"_menuTypes\",\n    value: function _menuTypes(types) {\n      var i,\n          menuTypes = [];\n      types = types || [];\n\n      for (i = 0; i < types.length; i++) {\n        menuTypes.push(this.objectType + '.' + types[i]);\n      }\n\n      return menuTypes;\n    }\n    /**\n     * The separator here does not exist in the model delivered by the server-side client.\n     * The createdBy property is added to the model to find and destroy items added by the UI later.\n     */\n\n  }, {\n    key: \"_createSeparator\",\n    value: function _createSeparator() {\n      return scout.create('Menu', {\n        parent: this.menuBar,\n        createdBy: this,\n        separator: true\n      });\n    }\n  }]);\n\n  return MenuItemsOrder;\n}();\n\nexport { MenuItemsOrder as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/menu/MenuItemsOrder.js"],"names":["menus","scout","MenuItemsOrder","session","objectType","emptySpaceTypes","selectionTypes","items","buttons","emptySpaceItems","selectionItems","rightItems","isEmptyspaceMenuVisible","isSelectionMenuVisible","forEach","item","createdBy","isButton","push","horizontalAlignment","checkType","_menuTypes","visible","_createSeparator","left","concat","right","all","types","i","menuTypes","length","create","parent","menuBar","separator"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,KAAR,EAAeC,KAAf,QAA2B,UAA3B;;IAEqBC,c;AAEnB,0BAAYC,OAAZ,EAAqBC,UAArB,EAAiC;AAAA;;AAC/B,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,eAAL,GAAuB,CAAC,YAAD,CAAvB;AACA,SAAKC,cAAL,GAAsB,CAAC,iBAAD,EAAoB,gBAApB,CAAtB;AACD;;;;0BAEKC,K,EAAO;AACX,UAAIC,OAAO,GAAG,EAAd;AAAA,UACEC,eAAe,GAAG,EADpB;AAAA,UAEEC,cAAc,GAAG,EAFnB;AAAA,UAGEC,UAAU,GAAG,EAHf;AAKA,UAAIC,uBAAuB,GAAG,KAA9B;AAAA,UACEC,sBAAsB,GAAG,KAD3B;AAEAN,MAAAA,KAAK,CAACO,OAAN,CAAc,UAASC,IAAT,EAAe;AAC3B;AACA,YAAIA,IAAI,CAACC,SAAL,KAAmB,IAAvB,EAA6B;AAC3B;AACD;;AACD,YAAID,IAAI,CAACE,QAAL,EAAJ,EAAqB;AACnBT,UAAAA,OAAO,CAACU,IAAR,CAAaH,IAAb;AACD,SAFD,MAEO,IAAIA,IAAI,CAACI,mBAAL,KAA6B,CAAjC,EAAoC;AACzCR,UAAAA,UAAU,CAACO,IAAX,CAAgBH,IAAhB;AACD,SAFM,MAEA,IAAIf,KAAK,CAACoB,SAAN,CAAgBL,IAAhB,EAAsB,KAAKM,UAAL,CAAgB,KAAKhB,eAArB,CAAtB,CAAJ,EAAkE;AACvE,cAAIU,IAAI,CAACO,OAAT,EAAkB;AAChBV,YAAAA,uBAAuB,GAAG,IAA1B;AACD;;AACDH,UAAAA,eAAe,CAACS,IAAhB,CAAqBH,IAArB;AACD,SALM,MAKA,IAAIf,KAAK,CAACoB,SAAN,CAAgBL,IAAhB,EAAsB,KAAKM,UAAL,CAAgB,KAAKf,cAArB,CAAtB,CAAJ,EAAiE;AACtE,cAAIS,IAAI,CAACO,OAAT,EAAkB;AAChBT,YAAAA,sBAAsB,GAAG,IAAzB;AACD;;AACDH,UAAAA,cAAc,CAACQ,IAAf,CAAoBH,IAApB;AACD;AACF,OApBD,EAoBG,IApBH,EARW,CA8BX;;AACA,UAAIH,uBAAuB,IAAIC,sBAA/B,EAAuD;AACrDJ,QAAAA,eAAe,CAACS,IAAhB,CAAqB,KAAKK,gBAAL,EAArB;AACD;;AAED,aAAO;AACLC,QAAAA,IAAI,EAAEhB,OAAO,CAACiB,MAAR,CAAehB,eAAf,EAAgCC,cAAhC,CADD;AAELgB,QAAAA,KAAK,EAAEf,UAFF;AAGLgB,QAAAA,GAAG,EAAEnB,OAAO,CAACiB,MAAR,CAAehB,eAAf,EAAgCC,cAAhC,EAAgDe,MAAhD,CAAuDd,UAAvD;AAHA,OAAP;AAKD;;;+BAEUiB,K,EAAO;AAChB,UAAIC,CAAJ;AAAA,UAAOC,SAAS,GAAG,EAAnB;AACAF,MAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;;AACA,WAAKC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,KAAK,CAACG,MAAtB,EAA8BF,CAAC,EAA/B,EAAmC;AACjCC,QAAAA,SAAS,CAACZ,IAAV,CAAe,KAAKd,UAAL,GAAkB,GAAlB,GAAwBwB,KAAK,CAACC,CAAD,CAA5C;AACD;;AACD,aAAOC,SAAP;AACD;AAED;AACF;AACA;AACA;;;;uCACqB;AACjB,aAAO7B,KAAK,CAAC+B,MAAN,CAAa,MAAb,EAAqB;AAC1BC,QAAAA,MAAM,EAAE,KAAKC,OADa;AAE1BlB,QAAAA,SAAS,EAAE,IAFe;AAG1BmB,QAAAA,SAAS,EAAE;AAHe,OAArB,CAAP;AAKD;;;;;;SAtEkBjC,c","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {menus, scout} from '../index';\n\nexport default class MenuItemsOrder {\n\n  constructor(session, objectType) {\n    this.session = session;\n    this.objectType = objectType;\n    this.emptySpaceTypes = ['EmptySpace'];\n    this.selectionTypes = ['SingleSelection', 'MultiSelection'];\n  }\n\n  order(items) {\n    var buttons = [],\n      emptySpaceItems = [],\n      selectionItems = [],\n      rightItems = [];\n\n    var isEmptyspaceMenuVisible = false,\n      isSelectionMenuVisible = false;\n    items.forEach(function(item) {\n      // skip separators added dynamically by this class\n      if (item.createdBy === this) {\n        return;\n      }\n      if (item.isButton()) {\n        buttons.push(item);\n      } else if (item.horizontalAlignment === 1) {\n        rightItems.push(item);\n      } else if (menus.checkType(item, this._menuTypes(this.emptySpaceTypes))) {\n        if (item.visible) {\n          isEmptyspaceMenuVisible = true;\n        }\n        emptySpaceItems.push(item);\n      } else if (menus.checkType(item, this._menuTypes(this.selectionTypes))) {\n        if (item.visible) {\n          isSelectionMenuVisible = true;\n        }\n        selectionItems.push(item);\n      }\n    }, this);\n\n    // add fixed separator between emptySpace and selection\n    if (isEmptyspaceMenuVisible && isSelectionMenuVisible) {\n      emptySpaceItems.push(this._createSeparator());\n    }\n\n    return {\n      left: buttons.concat(emptySpaceItems, selectionItems),\n      right: rightItems,\n      all: buttons.concat(emptySpaceItems, selectionItems).concat(rightItems)\n    };\n  }\n\n  _menuTypes(types) {\n    var i, menuTypes = [];\n    types = types || [];\n    for (i = 0; i < types.length; i++) {\n      menuTypes.push(this.objectType + '.' + types[i]);\n    }\n    return menuTypes;\n  }\n\n  /**\n   * The separator here does not exist in the model delivered by the server-side client.\n   * The createdBy property is added to the model to find and destroy items added by the UI later.\n   */\n  _createSeparator() {\n    return scout.create('Menu', {\n      parent: this.menuBar,\n      createdBy: this,\n      separator: true\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}