{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*******************************************************************************\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n ******************************************************************************/\nimport { App, ModelAdapter, objects, TableTileGridMediator } from '../index';\n\nvar TableTileGridMediatorAdapter = /*#__PURE__*/function (_ModelAdapter) {\n  _inherits(TableTileGridMediatorAdapter, _ModelAdapter);\n\n  var _super = _createSuper(TableTileGridMediatorAdapter);\n\n  function TableTileGridMediatorAdapter() {\n    _classCallCheck(this, TableTileGridMediatorAdapter);\n\n    return _super.call(this);\n  }\n  /**\n   * Static method to modify the prototype of TableTileGridMediatorAdapter.\n   */\n\n\n  _createClass(TableTileGridMediatorAdapter, null, [{\n    key: \"modifyTableTileGridMediator\",\n    value: function modifyTableTileGridMediator() {\n      if (!App.get().remote) {\n        return;\n      } // tiles are already provided by the backend in classic mode\n\n\n      objects.replacePrototypeFunction(TableTileGridMediator, 'loadTiles', function () {\n        if (this.modelAdapter) {\n          // nop in classic mode\n          return;\n        }\n\n        return this.loadTilesOrig();\n      }, true); // handled by the java mediator\n\n      objects.replacePrototypeFunction(TableTileGridMediator, '_onTableRowsInserted', function (event) {\n        if (this.modelAdapter) {\n          // nop in classic mode\n          return;\n        }\n\n        return this._onTableRowsInsertedOrig(event);\n      }, true); // handled by the java mediator\n\n      objects.replacePrototypeFunction(TableTileGridMediator, '_onTableRowsDeleted', function (event) {\n        if (this.modelAdapter) {\n          // nop in classic mode\n          return;\n        }\n\n        return this._onTableRowsDeletedOrig(event);\n      }, true); // handled by the java mediator\n\n      objects.replacePrototypeFunction(TableTileGridMediator, '_onTableAllRowsDeleted', function (event) {\n        if (this.modelAdapter) {\n          // nop in classic mode\n          return;\n        }\n\n        return this._onTableAllRowsDeletedOrig(event);\n      }, true);\n    }\n  }]);\n\n  return TableTileGridMediatorAdapter;\n}(ModelAdapter);\n\nexport { TableTileGridMediatorAdapter as default };\nApp.addListener('bootstrap', TableTileGridMediatorAdapter.modifyTableTileGridMediator);","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/table/TableTileGridMediatorAdapter.js"],"names":["App","ModelAdapter","objects","TableTileGridMediator","TableTileGridMediatorAdapter","get","remote","replacePrototypeFunction","modelAdapter","loadTilesOrig","event","_onTableRowsInsertedOrig","_onTableRowsDeletedOrig","_onTableAllRowsDeletedOrig","addListener","modifyTableTileGridMediator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,GAAR,EAAaC,YAAb,EAA2BC,OAA3B,EAAoCC,qBAApC,QAAgE,UAAhE;;IAEqBC,4B;;;;;AACnB,0CAAc;AAAA;;AAAA;AAEb;AAED;AACF;AACA;;;;;kDACuC;AACnC,UAAI,CAACJ,GAAG,CAACK,GAAJ,GAAUC,MAAf,EAAuB;AACrB;AACD,OAHkC,CAKnC;;;AACAJ,MAAAA,OAAO,CAACK,wBAAR,CAAiCJ,qBAAjC,EAAwD,WAAxD,EAAqE,YAAW;AAC9E,YAAI,KAAKK,YAAT,EAAuB;AACrB;AACA;AACD;;AACD,eAAO,KAAKC,aAAL,EAAP;AACD,OAND,EAMG,IANH,EANmC,CAcnC;;AACAP,MAAAA,OAAO,CAACK,wBAAR,CAAiCJ,qBAAjC,EAAwD,sBAAxD,EAAgF,UAASO,KAAT,EAAgB;AAC9F,YAAI,KAAKF,YAAT,EAAuB;AACrB;AACA;AACD;;AACD,eAAO,KAAKG,wBAAL,CAA8BD,KAA9B,CAAP;AACD,OAND,EAMG,IANH,EAfmC,CAuBnC;;AACAR,MAAAA,OAAO,CAACK,wBAAR,CAAiCJ,qBAAjC,EAAwD,qBAAxD,EAA+E,UAASO,KAAT,EAAgB;AAC7F,YAAI,KAAKF,YAAT,EAAuB;AACrB;AACA;AACD;;AACD,eAAO,KAAKI,uBAAL,CAA6BF,KAA7B,CAAP;AACD,OAND,EAMG,IANH,EAxBmC,CAgCnC;;AACAR,MAAAA,OAAO,CAACK,wBAAR,CAAiCJ,qBAAjC,EAAwD,wBAAxD,EAAkF,UAASO,KAAT,EAAgB;AAChG,YAAI,KAAKF,YAAT,EAAuB;AACrB;AACA;AACD;;AACD,eAAO,KAAKK,0BAAL,CAAgCH,KAAhC,CAAP;AACD,OAND,EAMG,IANH;AAOD;;;;EAhDuDT,Y;;SAArCG,4B;AAmDrBJ,GAAG,CAACc,WAAJ,CAAgB,WAAhB,EAA6BV,4BAA4B,CAACW,2BAA1D","sourcesContent":["/*******************************************************************************\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n ******************************************************************************/\n\nimport {App, ModelAdapter, objects, TableTileGridMediator} from '../index';\n\nexport default class TableTileGridMediatorAdapter extends ModelAdapter {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Static method to modify the prototype of TableTileGridMediatorAdapter.\n   */\n  static modifyTableTileGridMediator() {\n    if (!App.get().remote) {\n      return;\n    }\n\n    // tiles are already provided by the backend in classic mode\n    objects.replacePrototypeFunction(TableTileGridMediator, 'loadTiles', function() {\n      if (this.modelAdapter) {\n        // nop in classic mode\n        return;\n      }\n      return this.loadTilesOrig();\n    }, true);\n\n    // handled by the java mediator\n    objects.replacePrototypeFunction(TableTileGridMediator, '_onTableRowsInserted', function(event) {\n      if (this.modelAdapter) {\n        // nop in classic mode\n        return;\n      }\n      return this._onTableRowsInsertedOrig(event);\n    }, true);\n\n    // handled by the java mediator\n    objects.replacePrototypeFunction(TableTileGridMediator, '_onTableRowsDeleted', function(event) {\n      if (this.modelAdapter) {\n        // nop in classic mode\n        return;\n      }\n      return this._onTableRowsDeletedOrig(event);\n    }, true);\n\n    // handled by the java mediator\n    objects.replacePrototypeFunction(TableTileGridMediator, '_onTableAllRowsDeleted', function(event) {\n      if (this.modelAdapter) {\n        // nop in classic mode\n        return;\n      }\n      return this._onTableAllRowsDeletedOrig(event);\n    }, true);\n  }\n}\n\nApp.addListener('bootstrap', TableTileGridMediatorAdapter.modifyTableTileGridMediator);\n"]},"metadata":{},"sourceType":"module"}