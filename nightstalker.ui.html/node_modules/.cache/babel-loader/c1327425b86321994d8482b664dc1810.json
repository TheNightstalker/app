{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { scout, tooltips } from '../index';\nimport $ from 'jquery';\n/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n\nvar TooltipSupport = /*#__PURE__*/function () {\n  function TooltipSupport(options) {\n    _classCallCheck(this, TooltipSupport);\n\n    var defaultOptions = {\n      selector: null,\n      delay: tooltips.DEFAULT_TOOLTIP_DELAY,\n      text: undefined,\n      nativeTooltip: false\n    };\n    options = $.extend({}, defaultOptions, options);\n    this._options = options;\n    this._mouseEnterHandler = this._onMouseEnter.bind(this);\n    this._mouseLeaveHandler = this._onMouseLeave.bind(this);\n    this._tooltip = null;\n    this._tooltipTimeoutId = null;\n  }\n\n  _createClass(TooltipSupport, [{\n    key: \"install\",\n    value: function install($comp) {\n      // prevent multiple installation of tooltip support\n      if (!$comp.data('tooltipSupport')) {\n        $comp.on('mouseenter', this._options.selector, this._mouseEnterHandler).on('mouseleave', this._options.selector, this._mouseLeaveHandler).data('tooltipSupport', this);\n      }\n    }\n  }, {\n    key: \"uninstall\",\n    value: function uninstall($comp) {\n      $comp.removeData('tooltipSupport').off('mouseleave', this._options.selector, this._mouseLeaveHandler).off('mouseenter', this._options.selector, this._mouseEnterHandler);\n\n      this._destroyTooltip();\n    }\n  }, {\n    key: \"update\",\n    value: function update($comp, options) {\n      $.extend(this._options, options);\n\n      if (this._tooltip) {\n        this._showTooltip($comp);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel($comp) {\n      clearTimeout(this._tooltipTimeoutId);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this._destroyTooltip();\n    }\n  }, {\n    key: \"_onMouseEnter\",\n    value: function _onMouseEnter(event) {\n      var $comp = $(event.currentTarget);\n\n      if (this._options.nativeTooltip) {\n        var text = this._text($comp);\n\n        $comp.attr('title', text);\n      } else {\n        clearTimeout(this._tooltipTimeoutId);\n        this._tooltipTimeoutId = setTimeout(this._showTooltip.bind(this, $comp), this._options.delay);\n      }\n    }\n  }, {\n    key: \"_onMouseLeave\",\n    value: function _onMouseLeave(event) {\n      this._destroyTooltip();\n    }\n  }, {\n    key: \"_destroyTooltip\",\n    value: function _destroyTooltip() {\n      clearTimeout(this._tooltipTimeoutId);\n\n      if (this._tooltip) {\n        this._tooltip.destroy();\n\n        this._tooltip = null;\n      }\n    }\n  }, {\n    key: \"_text\",\n    value: function _text($comp) {\n      var text = this._options.text || $comp.data('tooltipText');\n\n      if ($.isFunction(text)) {\n        text = text($comp);\n      }\n\n      return text;\n    }\n  }, {\n    key: \"_htmlEnabled\",\n    value: function _htmlEnabled($comp) {\n      var htmlEnabled = this._options.htmlEnabled || $comp.data('htmlEnabled');\n\n      if ($.isFunction(htmlEnabled)) {\n        htmlEnabled = htmlEnabled($comp);\n      }\n\n      return scout.nvl(htmlEnabled, false);\n    }\n  }, {\n    key: \"_showTooltip\",\n    value: function _showTooltip($comp) {\n      if (!$comp || !$comp.isAttached()) {\n        return; // removed in the meantime (this method is called using setTimeout)\n      }\n\n      var text = this._text($comp);\n\n      if (!text) {\n        return; // treat undefined and no text as no tooltip\n      }\n\n      var htmlEnabled = this._htmlEnabled($comp);\n\n      if (this._tooltip && this._tooltip.rendered) {\n        // update existing tooltip\n        this._tooltip.setText(text);\n\n        this._tooltip.setSeverity(this._options.severity);\n\n        this._tooltip.setMenus(this._options.menus);\n      } else {\n        // create new tooltip\n        var options = $.extend({}, this._options, {\n          $anchor: this._options.$anchor || $comp,\n          text: text,\n          htmlEnabled: htmlEnabled\n        });\n        this._tooltip = scout.create('Tooltip', options);\n\n        this._tooltip.render(options.$parent);\n      }\n    }\n  }]);\n\n  return TooltipSupport;\n}();\n\nexport { TooltipSupport as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/tooltip/TooltipSupport.js"],"names":["scout","tooltips","$","TooltipSupport","options","defaultOptions","selector","delay","DEFAULT_TOOLTIP_DELAY","text","undefined","nativeTooltip","extend","_options","_mouseEnterHandler","_onMouseEnter","bind","_mouseLeaveHandler","_onMouseLeave","_tooltip","_tooltipTimeoutId","$comp","data","on","removeData","off","_destroyTooltip","_showTooltip","clearTimeout","event","currentTarget","_text","attr","setTimeout","destroy","isFunction","htmlEnabled","nvl","isAttached","_htmlEnabled","rendered","setText","setSeverity","severity","setMenus","menus","$anchor","create","render","$parent"],"mappings":"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","sourcesContent":["import {scout, tooltips} from '../index';\nimport $ from 'jquery';\n\n/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class TooltipSupport {\n\n  constructor(options) {\n    var defaultOptions = {\n      selector: null,\n      delay: tooltips.DEFAULT_TOOLTIP_DELAY,\n      text: undefined,\n      nativeTooltip: false\n    };\n    options = $.extend({}, defaultOptions, options);\n    this._options = options;\n    this._mouseEnterHandler = this._onMouseEnter.bind(this);\n    this._mouseLeaveHandler = this._onMouseLeave.bind(this);\n    this._tooltip = null;\n    this._tooltipTimeoutId = null;\n  }\n\n  install($comp) {\n    // prevent multiple installation of tooltip support\n    if (!$comp.data('tooltipSupport')) {\n      $comp\n        .on('mouseenter', this._options.selector, this._mouseEnterHandler)\n        .on('mouseleave', this._options.selector, this._mouseLeaveHandler)\n        .data('tooltipSupport', this);\n    }\n  }\n\n  uninstall($comp) {\n    $comp\n      .removeData('tooltipSupport')\n      .off('mouseleave', this._options.selector, this._mouseLeaveHandler)\n      .off('mouseenter', this._options.selector, this._mouseEnterHandler);\n    this._destroyTooltip();\n  }\n\n  update($comp, options) {\n    $.extend(this._options, options);\n    if (this._tooltip) {\n      this._showTooltip($comp);\n    }\n  }\n\n  cancel($comp) {\n    clearTimeout(this._tooltipTimeoutId);\n  }\n\n  close() {\n    this._destroyTooltip();\n  }\n\n  _onMouseEnter(event) {\n    var $comp = $(event.currentTarget);\n\n    if (this._options.nativeTooltip) {\n      var text = this._text($comp);\n      $comp.attr('title', text);\n    } else {\n      clearTimeout(this._tooltipTimeoutId);\n      this._tooltipTimeoutId = setTimeout(this._showTooltip.bind(this, $comp), this._options.delay);\n    }\n  }\n\n  _onMouseLeave(event) {\n    this._destroyTooltip();\n  }\n\n  _destroyTooltip() {\n    clearTimeout(this._tooltipTimeoutId);\n    if (this._tooltip) {\n      this._tooltip.destroy();\n      this._tooltip = null;\n    }\n  }\n\n  _text($comp) {\n    var text = this._options.text || $comp.data('tooltipText');\n    if ($.isFunction(text)) {\n      text = text($comp);\n    }\n    return text;\n  }\n\n  _htmlEnabled($comp) {\n    var htmlEnabled = this._options.htmlEnabled || $comp.data('htmlEnabled');\n    if ($.isFunction(htmlEnabled)) {\n      htmlEnabled = htmlEnabled($comp);\n    }\n    return scout.nvl(htmlEnabled, false);\n  }\n\n  _showTooltip($comp) {\n    if (!$comp || !$comp.isAttached()) {\n      return; // removed in the meantime (this method is called using setTimeout)\n    }\n    var text = this._text($comp);\n    if (!text) {\n      return; // treat undefined and no text as no tooltip\n    }\n\n    var htmlEnabled = this._htmlEnabled($comp);\n\n    if (this._tooltip && this._tooltip.rendered) {\n      // update existing tooltip\n      this._tooltip.setText(text);\n      this._tooltip.setSeverity(this._options.severity);\n      this._tooltip.setMenus(this._options.menus);\n    } else {\n      // create new tooltip\n      var options = $.extend({}, this._options, {\n        $anchor: this._options.$anchor || $comp,\n        text: text,\n        htmlEnabled: htmlEnabled\n      });\n      this._tooltip = scout.create('Tooltip', options);\n      this._tooltip.render(options.$parent);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}