{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Form, Lifecycle, scout, ValueField } from '../../index';\n\nvar FormLifecycle = /*#__PURE__*/function (_Lifecycle) {\n  _inherits(FormLifecycle, _Lifecycle);\n\n  var _super = _createSuper(FormLifecycle);\n\n  function FormLifecycle() {\n    var _this;\n\n    _classCallCheck(this, FormLifecycle);\n\n    _this = _super.call(this);\n    _this.emptyMandatoryElementsTextKey = 'FormEmptyMandatoryFieldsMessage';\n    _this.invalidElementsTextKey = 'FormInvalidFieldsMessage';\n    _this.saveChangesQuestionTextKey = 'FormSaveChangesQuestion';\n    return _this;\n  }\n\n  _createClass(FormLifecycle, [{\n    key: \"init\",\n    value: function init(model) {\n      scout.assertParameter('widget', model.widget, Form);\n\n      _get(_getPrototypeOf(FormLifecycle.prototype), \"init\", this).call(this, model);\n    }\n  }, {\n    key: \"_reset\",\n    value: function _reset() {\n      this.widget.visitFields(function (field) {\n        if (field instanceof ValueField) {\n          field.resetValue();\n        }\n      });\n    }\n  }, {\n    key: \"_invalidElements\",\n    value: function _invalidElements() {\n      var missingFields = [];\n      var invalidFields = [];\n      this.widget.visitFields(function (field) {\n        var result = field.getValidationResult();\n\n        if (result.valid) {\n          return;\n        } // error status has priority over mandatory\n\n\n        if (!result.validByErrorStatus) {\n          invalidFields.push(field);\n          return;\n        }\n\n        if (!result.validByMandatory) {\n          missingFields.push(field);\n        }\n      });\n      return {\n        missingElements: missingFields,\n        invalidElements: invalidFields\n      };\n    }\n  }, {\n    key: \"_invalidElementText\",\n    value: function _invalidElementText(element) {\n      return element.label;\n    }\n  }, {\n    key: \"_missingElementText\",\n    value: function _missingElementText(element) {\n      return element.label;\n    }\n  }, {\n    key: \"_validateWidget\",\n    value: function _validateWidget() {\n      return this.widget._validate();\n    }\n  }, {\n    key: \"markAsSaved\",\n    value: function markAsSaved() {\n      this.widget.visitFields(function (field) {\n        field.markAsSaved();\n      });\n    }\n    /**\n     * Visits all form fields and calls the updateRequiresSave() function. If any\n     * field has the requiresSave flag set to true, this function returns true,\n     * false otherwise.\n     *\n     * @see (Java) AbstractFormField #checkSaveNeeded, #isSaveNeeded\n     */\n\n  }, {\n    key: \"requiresSave\",\n    value: function requiresSave() {\n      var requiresSave = false;\n      this.widget.visitFields(function (field) {\n        field.updateRequiresSave();\n\n        if (field.requiresSave) {\n          requiresSave = true;\n        }\n      });\n      return requiresSave;\n    }\n  }]);\n\n  return FormLifecycle;\n}(Lifecycle);\n\nexport { FormLifecycle as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/lifecycle/FormLifecycle.js"],"names":["Form","Lifecycle","scout","ValueField","FormLifecycle","emptyMandatoryElementsTextKey","invalidElementsTextKey","saveChangesQuestionTextKey","model","assertParameter","widget","visitFields","field","resetValue","missingFields","invalidFields","result","getValidationResult","valid","validByErrorStatus","push","validByMandatory","missingElements","invalidElements","element","label","_validate","markAsSaved","requiresSave","updateRequiresSave"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,IAAR,EAAcC,SAAd,EAAyBC,KAAzB,EAAgCC,UAAhC,QAAiD,aAAjD;;IAEqBC,a;;;;;AAEnB,2BAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,6BAAL,GAAqC,iCAArC;AACA,UAAKC,sBAAL,GAA8B,0BAA9B;AACA,UAAKC,0BAAL,GAAkC,yBAAlC;AALY;AAMb;;;;yBAEIC,K,EAAO;AACVN,MAAAA,KAAK,CAACO,eAAN,CAAsB,QAAtB,EAAgCD,KAAK,CAACE,MAAtC,EAA8CV,IAA9C;;AACA,8EAAWQ,KAAX;AACD;;;6BAEQ;AACP,WAAKE,MAAL,CAAYC,WAAZ,CAAwB,UAASC,KAAT,EAAgB;AACtC,YAAIA,KAAK,YAAYT,UAArB,EAAiC;AAC/BS,UAAAA,KAAK,CAACC,UAAN;AACD;AACF,OAJD;AAKD;;;uCAEkB;AACjB,UAAIC,aAAa,GAAG,EAApB;AACA,UAAIC,aAAa,GAAG,EAApB;AAEA,WAAKL,MAAL,CAAYC,WAAZ,CAAwB,UAASC,KAAT,EAAgB;AACtC,YAAII,MAAM,GAAGJ,KAAK,CAACK,mBAAN,EAAb;;AACA,YAAID,MAAM,CAACE,KAAX,EAAkB;AAChB;AACD,SAJqC,CAKtC;;;AACA,YAAI,CAACF,MAAM,CAACG,kBAAZ,EAAgC;AAC9BJ,UAAAA,aAAa,CAACK,IAAd,CAAmBR,KAAnB;AACA;AACD;;AACD,YAAI,CAACI,MAAM,CAACK,gBAAZ,EAA8B;AAC5BP,UAAAA,aAAa,CAACM,IAAd,CAAmBR,KAAnB;AACD;AACF,OAbD;AAeA,aAAO;AACLU,QAAAA,eAAe,EAAER,aADZ;AAELS,QAAAA,eAAe,EAAER;AAFZ,OAAP;AAID;;;wCAEmBS,O,EAAS;AAC3B,aAAOA,OAAO,CAACC,KAAf;AACD;;;wCAEmBD,O,EAAS;AAC3B,aAAOA,OAAO,CAACC,KAAf;AACD;;;sCAEiB;AAChB,aAAO,KAAKf,MAAL,CAAYgB,SAAZ,EAAP;AACD;;;kCAEa;AACZ,WAAKhB,MAAL,CAAYC,WAAZ,CAAwB,UAASC,KAAT,EAAgB;AACtCA,QAAAA,KAAK,CAACe,WAAN;AACD,OAFD;AAGD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;mCACiB;AACb,UAAIC,YAAY,GAAG,KAAnB;AACA,WAAKlB,MAAL,CAAYC,WAAZ,CAAwB,UAASC,KAAT,EAAgB;AACtCA,QAAAA,KAAK,CAACiB,kBAAN;;AACA,YAAIjB,KAAK,CAACgB,YAAV,EAAwB;AACtBA,UAAAA,YAAY,GAAG,IAAf;AACD;AACF,OALD;AAMA,aAAOA,YAAP;AACD;;;;EAlFwC3B,S;;SAAtBG,a","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Form, Lifecycle, scout, ValueField} from '../../index';\n\nexport default class FormLifecycle extends Lifecycle {\n\n  constructor() {\n    super();\n\n    this.emptyMandatoryElementsTextKey = 'FormEmptyMandatoryFieldsMessage';\n    this.invalidElementsTextKey = 'FormInvalidFieldsMessage';\n    this.saveChangesQuestionTextKey = 'FormSaveChangesQuestion';\n  }\n\n  init(model) {\n    scout.assertParameter('widget', model.widget, Form);\n    super.init(model);\n  }\n\n  _reset() {\n    this.widget.visitFields(function(field) {\n      if (field instanceof ValueField) {\n        field.resetValue();\n      }\n    });\n  }\n\n  _invalidElements() {\n    var missingFields = [];\n    var invalidFields = [];\n\n    this.widget.visitFields(function(field) {\n      var result = field.getValidationResult();\n      if (result.valid) {\n        return;\n      }\n      // error status has priority over mandatory\n      if (!result.validByErrorStatus) {\n        invalidFields.push(field);\n        return;\n      }\n      if (!result.validByMandatory) {\n        missingFields.push(field);\n      }\n    });\n\n    return {\n      missingElements: missingFields,\n      invalidElements: invalidFields\n    };\n  }\n\n  _invalidElementText(element) {\n    return element.label;\n  }\n\n  _missingElementText(element) {\n    return element.label;\n  }\n\n  _validateWidget() {\n    return this.widget._validate();\n  }\n\n  markAsSaved() {\n    this.widget.visitFields(function(field) {\n      field.markAsSaved();\n    });\n  }\n\n  /**\n   * Visits all form fields and calls the updateRequiresSave() function. If any\n   * field has the requiresSave flag set to true, this function returns true,\n   * false otherwise.\n   *\n   * @see (Java) AbstractFormField #checkSaveNeeded, #isSaveNeeded\n   */\n  requiresSave() {\n    var requiresSave = false;\n    this.widget.visitFields(function(field) {\n      field.updateRequiresSave();\n      if (field.requiresSave) {\n        requiresSave = true;\n      }\n    });\n    return requiresSave;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}