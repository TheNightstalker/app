{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { objects, strings } from '../index';\n/**\n * Ensures the given parameter is an array\n */\n\nexport function ensure(array) {\n  if (array === undefined || array === null) {\n    return [];\n  }\n\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n\n  return array;\n}\n/**\n * Creates an array with the given length and initializes each value with the given initValue.\n */\n\nexport function init(length, initValue) {\n  var array = [];\n\n  for (var i = 0; i < length; i++) {\n    array[i] = initValue;\n  }\n\n  return array;\n}\n/**\n * Removes the first occurrence of the specified element from the array,\n * if it is present (optional operation).  If the array does not contain\n * the element, it is unchanged.\n *\n * @return {boolean} true if the array contained the specified element\n */\n\nexport function remove(arr, element) {\n  if (arr) {\n    var index = arr.indexOf(element);\n\n    if (index !== -1) {\n      arr.splice(index, 1);\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Removes every given element from the array\n *\n * @return {boolean} true if the array contained at least one of the specified elements\n */\n\nexport function removeAll(arr, elements) {\n  var modified = false;\n\n  if (!elements || elements.length === 0) {\n    return false;\n  }\n\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (elements.indexOf(arr[i]) > -1) {\n      arr.splice(i, 1);\n      modified = true;\n    }\n  }\n\n  return modified;\n}\n/**\n * @return the index of the replaced element\n */\n\nexport function replace(arr, element, replacement) {\n  var index = arr.indexOf(element);\n\n  if (index !== -1) {\n    arr[index] = replacement;\n  }\n\n  return index;\n}\n/**\n * Inserts the given element at the specified index.\n * <p>\n * This function uses insertAll() which relies on Array.prototype.splice(). Check its js-doc for details.\n */\n\nexport function insert(arr, element, index) {\n  insertAll(arr, [element], index);\n}\n/**\n * Inserts all elements of the given array at the specified index.\n * <p>\n * This function is based on Array.prototype.splice().\n * Thus, if the 'index' is greater than the length of the array, 'elements' will be added to the end of the array 'arr'.\n * This may cause unexpected behavior on accessing arr[index] after insertion.\n *\n * The caller must ensure the size of the array.\n */\n\nexport function insertAll(arr, elements, index) {\n  elements = ensure(elements);\n  arr.splice.apply(arr, _toConsumableArray([index, 0].concat(elements)));\n}\n/**\n * @deprecated use insertAll(arr, elements, index) instead\n */\n\nexport function insertArray(arr, elements, index) {\n  return insertAll(arr, elements, index);\n}\n/**\n * Inserts the given element into the array according to the sort order indicated by the given comparison function.\n *\n * All arguments are mandatory.\n */\n\nexport function insertSorted(arr, element, compareFunc) {\n  // https://en.wikipedia.org/wiki/Binary_search_algorithm\n  var left = 0;\n  var right = arr.length - 1;\n\n  while (left <= right) {\n    var middle = left + Math.floor((right - left) / 2);\n    var c = compareFunc(arr[middle], element);\n\n    if (c < 0) {\n      // Search in right half\n      left = middle + 1;\n    } else if (c > 0) {\n      // Search in left half\n      right = middle - 1;\n    } else {\n      // Found an exact match.\n      // The insertion point index is equal to the last index starting from \"middle\" that matches\n      // the element. This ensures a stable insertion order (because of the device-and-conquer\n      // method, \"middle\" might be any of the elements with the same value).\n      left = middle + 1;\n\n      while (left < arr.length && compareFunc(arr[left], element) === 0) {\n        left++;\n      }\n\n      break;\n    }\n  } // \"left\" now contains the index to insert the element\n\n\n  arr.splice(left, 0, element);\n}\n/**\n * This function uses insert() which relies on Array.prototype.splice(). Check its js-doc for details.\n */\n\nexport function move(arr, fromIndex, toIndex) {\n  var element = arr.splice(fromIndex, 1)[0];\n  insert(arr, element, toIndex);\n}\nexport function containsAny(haystack, needles) {\n  haystack = ensure(haystack);\n  needles = ensure(needles);\n  return needles.some(function contains(element) {\n    return haystack.indexOf(element) >= 0;\n  });\n}\nexport function containsAll(haystack, needles) {\n  haystack = ensure(haystack);\n  needles = ensure(needles);\n  return needles.every(function contains(element) {\n    return haystack.indexOf(element) >= 0;\n  });\n}\nexport function first(arr) {\n  if (Array.isArray(arr)) {\n    return arr[0];\n  }\n\n  return arr;\n}\nexport function last(arr) {\n  if (Array.isArray(arr)) {\n    return arr[arr.length - 1];\n  }\n\n  return arr;\n}\n/**\n * @returns {boolean} true if the given argument is an array and has a length > 0, false in any other case.\n */\n\nexport function hasElements(arr) {\n  return !empty(arr);\n}\n/**\n * @returns {boolean} true if the given argument is not an array or the length of the array is 0, false in any other case.\n */\n\nexport function empty(arr) {\n  if (Array.isArray(arr)) {\n    return arr.length === 0;\n  }\n\n  return true;\n}\nexport function pushAll(arr, arr2) {\n  arr.push.apply(arr, arr2);\n}\n/**\n * Merges the two given arrays and removes duplicate entries in O(n).\n * If the arrays contain objects instead of primitives, it uses their id to check for equality.\n */\n\nexport function union(array1, array2) {\n  var result = [],\n      map = {};\n  array1 = ensure(array1);\n  array2 = ensure(array2);\n  array1.forEach(function (entry) {\n    var key = entry;\n\n    if (_typeof(entry) === 'object') {\n      key = entry.id;\n    }\n\n    map[key] = entry;\n    result.push(entry);\n  });\n  array2.forEach(function (entry) {\n    var key = entry;\n\n    if (_typeof(entry) === 'object') {\n      key = entry.id;\n    }\n\n    if (!(key in map)) {\n      result.push(entry);\n    }\n  });\n  return result;\n}\nexport function equalsIgnoreOrder(arr, arr2) {\n  if (arr === arr2) {\n    return true;\n  }\n\n  if ((!arr || arr.length === 0) && (!arr2 || arr2.length === 0)) {\n    return true;\n  }\n\n  if (!arr || !arr2) {\n    return false;\n  }\n\n  if (arr.length !== arr2.length) {\n    return false;\n  }\n\n  return containsAll(arr, arr2);\n}\nexport function equals(arr, arr2) {\n  if (arr === arr2) {\n    return true;\n  }\n\n  if ((!arr || arr.length === 0) && (!arr2 || arr2.length === 0)) {\n    return true;\n  }\n\n  if (!arr || !arr2) {\n    return false;\n  }\n\n  if (arr.length !== arr2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function greater(arr, arr2) {\n  var arrLength = 0,\n      arr2Length = 0;\n\n  if (arr) {\n    arrLength = arr.length;\n  }\n\n  if (arr2) {\n    arr2Length = arr2.length;\n  }\n\n  return arrLength > arr2Length;\n}\nexport function eachSibling(arr, element, func) {\n  if (!arr || !func) {\n    return;\n  }\n\n  for (var i = 0; i < arr.length; i++) {\n    var elementAtI = arr[i];\n\n    if (elementAtI !== element) {\n      func(elementAtI, i);\n    }\n  }\n}\n/**\n * Alternative implementation of Array.findIndex(callback [, thisArg]), which is supported by most browsers.\n * See Array.findIndex for a detailed description.\n */\n\nexport function findIndex(arr, predicate, thisArg) {\n  if (!arr || !predicate) {\n    return -1;\n  }\n\n  for (var i = 0; i < arr.length; i++) {\n    if (predicate.call(thisArg, arr[i], i, arr)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\nexport function find(arr, predicate, thisArg) {\n  var index = findIndex(arr, predicate, thisArg);\n\n  if (index === -1) {\n    return null;\n  }\n\n  return arr[index];\n}\nexport function findFrom(arr, startIndex, predicate, reverse) {\n  if (reverse) {\n    return findFromReverse(arr, startIndex, predicate);\n  }\n\n  return findFromForward(arr, startIndex, predicate);\n}\nexport function findIndexFrom(arr, startIndex, predicate, reverse) {\n  if (reverse) {\n    return findIndexFromReverse(arr, startIndex, predicate);\n  }\n\n  return findIndexFromForward(arr, startIndex, predicate);\n}\nexport function findFromForward(arr, startIndex, predicate) {\n  var index = findIndexFromForward(arr, startIndex, predicate);\n\n  if (index === -1) {\n    return null;\n  }\n\n  return arr[index];\n}\nexport function findIndexFromForward(arr, startIndex, predicate) {\n  if (!arr || !predicate) {\n    return -1;\n  }\n\n  for (var i = startIndex; i < arr.length; i++) {\n    var element = arr[i];\n\n    if (predicate(element, i)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\nexport function findFromReverse(arr, startIndex, predicate) {\n  var index = findIndexFromReverse(arr, startIndex, predicate);\n\n  if (index === -1) {\n    return null;\n  }\n\n  return arr[index];\n}\nexport function findIndexFromReverse(arr, startIndex, predicate) {\n  if (!arr || !predicate) {\n    return -1;\n  }\n\n  for (var i = startIndex; i >= 0; i--) {\n    var element = arr[i];\n\n    if (predicate(element, i)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n/**\n * Pushes all elements to the given array that are not null or undefined.\n */\n\nexport function pushIfDefined(arr, elements) {\n  elements = objects.argumentsToArray(arguments).slice(1).filter(function (element) {\n    return element !== null && element !== undefined;\n  });\n\n  if (arr && elements.length) {\n    arr.push.apply(arr, _toConsumableArray(elements));\n  }\n}\n/**\n * Pushes the given element if it does not already exist in the array and the element is truthy. Thus the array is like a Set where every element\n * can only be added once to the collection. Note: the comparison is done with the === operator.\n */\n\nexport function pushSet(arr, element) {\n  if (element && arr.indexOf(element) === -1) {\n    arr.push(element);\n  }\n}\n/**\n * Creates a string containing all elements in the array separated by the given delimiter.\n * @param {[]} arr\n * @param {string} [delimiter=null]\n * @param {boolean} [encodeHtml=false] true to encode the elements, false if not\n */\n\nexport function format(arr, delimiter, encodeHtml) {\n  if (!arr || arr.length === 0) {\n    return '';\n  }\n\n  var output = '';\n\n  for (var i = 0; i < arr.length; i++) {\n    var element = arr[i];\n\n    if (delimiter && i > 0 && i < arr.length) {\n      output += delimiter;\n    }\n\n    if (encodeHtml) {\n      element = strings.encode(element);\n    }\n\n    output += element;\n  }\n\n  return output;\n}\nexport function formatEncoded(arr, delimiter) {\n  return format(arr, delimiter, true);\n}\nexport function max(arr) {\n  if (arr === null || arr === undefined) {\n    return Math.max.apply(Math, arr);\n  } // Math.max() returns 0 (not null!) if arr contains only null and negative elements.\n\n\n  var filtered = arr.filter(objects.isNumber);\n  return Math.max.apply(Math, filtered);\n}\nexport function min(arr) {\n  if (arr === null || arr === undefined) {\n    return Math.min.apply(Math, arr);\n  } // Math.min() returns 0 (not null!) if arr contains only null and non-negative elements.\n\n\n  var filtered = arr.filter(objects.isNumber);\n  return Math.min.apply(Math, filtered);\n}\n/**\n * @returns {[]} all elements of the first array which are not in the second array\n */\n\nexport function diff(arr1, arr2) {\n  var diff = arr1.slice();\n  removeAll(diff, arr2);\n  return diff;\n}\nexport function flatMap(arr, func) {\n  var result = [];\n  arr.forEach(function (element) {\n    pushAll(result, func(element));\n  });\n  return result;\n} //\n// Use these methods if you have an array of jquery objects.\n// Reason $elem1 === $elem2 does often not work because new jquery objects are created for the same html node.\n// -> Html nodes need to be compared.\n//\n\nexport function $indexOf(arr, $element) {\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i][0] === $element[0]) {\n      return i;\n    }\n  }\n}\nexport function $remove(arr, $element) {\n  var index = $indexOf(arr, $element);\n\n  if (index >= 0) {\n    arr.splice(index, 1);\n  }\n}\nexport default {\n  $indexOf: $indexOf,\n  $remove: $remove,\n  containsAll: containsAll,\n  containsAny: containsAny,\n  diff: diff,\n  eachSibling: eachSibling,\n  empty: empty,\n  ensure: ensure,\n  equals: equals,\n  equalsIgnoreOrder: equalsIgnoreOrder,\n  find: find,\n  findFrom: findFrom,\n  findFromForward: findFromForward,\n  findFromReverse: findFromReverse,\n  findIndex: findIndex,\n  findIndexFrom: findIndexFrom,\n  findIndexFromForward: findIndexFromForward,\n  findIndexFromReverse: findIndexFromReverse,\n  first: first,\n  flatMap: flatMap,\n  format: format,\n  formatEncoded: formatEncoded,\n  greater: greater,\n  hasElements: hasElements,\n  init: init,\n  insert: insert,\n  insertAll: insertAll,\n  insertArray: insertArray,\n  insertSorted: insertSorted,\n  last: last,\n  max: max,\n  min: min,\n  move: move,\n  pushAll: pushAll,\n  pushIfDefined: pushIfDefined,\n  pushSet: pushSet,\n  remove: remove,\n  removeAll: removeAll,\n  replace: replace,\n  union: union\n};","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/util/arrays.js"],"names":["objects","strings","ensure","array","undefined","Array","isArray","init","length","initValue","i","remove","arr","element","index","indexOf","splice","removeAll","elements","modified","replace","replacement","insert","insertAll","concat","insertArray","insertSorted","compareFunc","left","right","middle","Math","floor","c","move","fromIndex","toIndex","containsAny","haystack","needles","some","contains","containsAll","every","first","last","hasElements","empty","pushAll","arr2","push","apply","union","array1","array2","result","map","forEach","entry","key","id","equalsIgnoreOrder","equals","greater","arrLength","arr2Length","eachSibling","func","elementAtI","findIndex","predicate","thisArg","call","find","findFrom","startIndex","reverse","findFromReverse","findFromForward","findIndexFrom","findIndexFromReverse","findIndexFromForward","pushIfDefined","argumentsToArray","arguments","slice","filter","pushSet","format","delimiter","encodeHtml","output","encode","formatEncoded","max","filtered","isNumber","min","diff","arr1","flatMap","$indexOf","$element","$remove"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,OAAR,EAAiBC,OAAjB,QAA+B,UAA/B;AAEA;AACA;AACA;;AACA,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAC5B,MAAIA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAArC,EAA2C;AACzC,WAAO,EAAP;AACD;;AACD,MAAI,CAACE,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAL,EAA2B;AACzB,WAAO,CAACA,KAAD,CAAP;AACD;;AACD,SAAOA,KAAP;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASI,IAAT,CAAcC,MAAd,EAAsBC,SAAtB,EAAiC;AACtC,MAAIN,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;AAC/BP,IAAAA,KAAK,CAACO,CAAD,CAAL,GAAWD,SAAX;AACD;;AACD,SAAON,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASQ,MAAT,CAAgBC,GAAhB,EAAqBC,OAArB,EAA8B;AACnC,MAAID,GAAJ,EAAS;AACP,QAAIE,KAAK,GAAGF,GAAG,CAACG,OAAJ,CAAYF,OAAZ,CAAZ;;AACA,QAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBF,MAAAA,GAAG,CAACI,MAAJ,CAAWF,KAAX,EAAkB,CAAlB;AACA,aAAO,IAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASG,SAAT,CAAmBL,GAAnB,EAAwBM,QAAxB,EAAkC;AACvC,MAAIC,QAAQ,GAAG,KAAf;;AACA,MAAI,CAACD,QAAD,IAAaA,QAAQ,CAACV,MAAT,KAAoB,CAArC,EAAwC;AACtC,WAAO,KAAP;AACD;;AACD,OAAK,IAAIE,CAAC,GAAGE,GAAG,CAACJ,MAAJ,GAAa,CAA1B,EAA6BE,CAAC,IAAI,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;AACxC,QAAIQ,QAAQ,CAACH,OAAT,CAAiBH,GAAG,CAACF,CAAD,CAApB,IAA2B,CAAC,CAAhC,EAAmC;AACjCE,MAAAA,GAAG,CAACI,MAAJ,CAAWN,CAAX,EAAc,CAAd;AACAS,MAAAA,QAAQ,GAAG,IAAX;AACD;AACF;;AACD,SAAOA,QAAP;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASC,OAAT,CAAiBR,GAAjB,EAAsBC,OAAtB,EAA+BQ,WAA/B,EAA4C;AACjD,MAAIP,KAAK,GAAGF,GAAG,CAACG,OAAJ,CAAYF,OAAZ,CAAZ;;AACA,MAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBF,IAAAA,GAAG,CAACE,KAAD,CAAH,GAAaO,WAAb;AACD;;AACD,SAAOP,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASQ,MAAT,CAAgBV,GAAhB,EAAqBC,OAArB,EAA8BC,KAA9B,EAAqC;AAC1CS,EAAAA,SAAS,CAACX,GAAD,EAAM,CAACC,OAAD,CAAN,EAAiBC,KAAjB,CAAT;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASS,SAAT,CAAmBX,GAAnB,EAAwBM,QAAxB,EAAkCJ,KAAlC,EAAyC;AAC9CI,EAAAA,QAAQ,GAAGhB,MAAM,CAACgB,QAAD,CAAjB;AACAN,EAAAA,GAAG,CAACI,MAAJ,OAAAJ,GAAG,qBAAW,CAACE,KAAD,EAAQ,CAAR,EAAWU,MAAX,CAAkBN,QAAlB,CAAX,EAAH;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASO,WAAT,CAAqBb,GAArB,EAA0BM,QAA1B,EAAoCJ,KAApC,EAA2C;AAChD,SAAOS,SAAS,CAACX,GAAD,EAAMM,QAAN,EAAgBJ,KAAhB,CAAhB;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASY,YAAT,CAAsBd,GAAtB,EAA2BC,OAA3B,EAAoCc,WAApC,EAAiD;AACtD;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,KAAK,GAAGjB,GAAG,CAACJ,MAAJ,GAAa,CAAzB;;AACA,SAAOoB,IAAI,IAAIC,KAAf,EAAsB;AACpB,QAAIC,MAAM,GAAGF,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAW,CAACH,KAAK,GAAGD,IAAT,IAAiB,CAA5B,CAApB;AACA,QAAIK,CAAC,GAAGN,WAAW,CAACf,GAAG,CAACkB,MAAD,CAAJ,EAAcjB,OAAd,CAAnB;;AACA,QAAIoB,CAAC,GAAG,CAAR,EAAW;AACT;AACAL,MAAAA,IAAI,GAAGE,MAAM,GAAG,CAAhB;AACD,KAHD,MAGO,IAAIG,CAAC,GAAG,CAAR,EAAW;AAChB;AACAJ,MAAAA,KAAK,GAAGC,MAAM,GAAG,CAAjB;AACD,KAHM,MAGA;AACL;AACA;AACA;AACA;AACAF,MAAAA,IAAI,GAAGE,MAAM,GAAG,CAAhB;;AACA,aAAOF,IAAI,GAAGhB,GAAG,CAACJ,MAAX,IAAqBmB,WAAW,CAACf,GAAG,CAACgB,IAAD,CAAJ,EAAYf,OAAZ,CAAX,KAAoC,CAAhE,EAAmE;AACjEe,QAAAA,IAAI;AACL;;AACD;AACD;AACF,GAxBqD,CAyBtD;;;AACAhB,EAAAA,GAAG,CAACI,MAAJ,CAAWY,IAAX,EAAiB,CAAjB,EAAoBf,OAApB;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASqB,IAAT,CAActB,GAAd,EAAmBuB,SAAnB,EAA8BC,OAA9B,EAAuC;AAC5C,MAAIvB,OAAO,GAAGD,GAAG,CAACI,MAAJ,CAAWmB,SAAX,EAAsB,CAAtB,EAAyB,CAAzB,CAAd;AACAb,EAAAA,MAAM,CAACV,GAAD,EAAMC,OAAN,EAAeuB,OAAf,CAAN;AACD;AAED,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,OAA/B,EAAwC;AAC7CD,EAAAA,QAAQ,GAAGpC,MAAM,CAACoC,QAAD,CAAjB;AACAC,EAAAA,OAAO,GAAGrC,MAAM,CAACqC,OAAD,CAAhB;AACA,SAAOA,OAAO,CAACC,IAAR,CAAa,SAASC,QAAT,CAAkB5B,OAAlB,EAA2B;AAC7C,WAAOyB,QAAQ,CAACvB,OAAT,CAAiBF,OAAjB,KAA6B,CAApC;AACD,GAFM,CAAP;AAGD;AAED,OAAO,SAAS6B,WAAT,CAAqBJ,QAArB,EAA+BC,OAA/B,EAAwC;AAC7CD,EAAAA,QAAQ,GAAGpC,MAAM,CAACoC,QAAD,CAAjB;AACAC,EAAAA,OAAO,GAAGrC,MAAM,CAACqC,OAAD,CAAhB;AACA,SAAOA,OAAO,CAACI,KAAR,CAAc,SAASF,QAAT,CAAkB5B,OAAlB,EAA2B;AAC9C,WAAOyB,QAAQ,CAACvB,OAAT,CAAiBF,OAAjB,KAA6B,CAApC;AACD,GAFM,CAAP;AAGD;AAED,OAAO,SAAS+B,KAAT,CAAehC,GAAf,EAAoB;AACzB,MAAIP,KAAK,CAACC,OAAN,CAAcM,GAAd,CAAJ,EAAwB;AACtB,WAAOA,GAAG,CAAC,CAAD,CAAV;AACD;;AACD,SAAOA,GAAP;AACD;AAED,OAAO,SAASiC,IAAT,CAAcjC,GAAd,EAAmB;AACxB,MAAIP,KAAK,CAACC,OAAN,CAAcM,GAAd,CAAJ,EAAwB;AACtB,WAAOA,GAAG,CAACA,GAAG,CAACJ,MAAJ,GAAa,CAAd,CAAV;AACD;;AACD,SAAOI,GAAP;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASkC,WAAT,CAAqBlC,GAArB,EAA0B;AAC/B,SAAO,CAACmC,KAAK,CAACnC,GAAD,CAAb;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASmC,KAAT,CAAenC,GAAf,EAAoB;AACzB,MAAIP,KAAK,CAACC,OAAN,CAAcM,GAAd,CAAJ,EAAwB;AACtB,WAAOA,GAAG,CAACJ,MAAJ,KAAe,CAAtB;AACD;;AACD,SAAO,IAAP;AACD;AAED,OAAO,SAASwC,OAAT,CAAiBpC,GAAjB,EAAsBqC,IAAtB,EAA4B;AACjCrC,EAAAA,GAAG,CAACsC,IAAJ,CAASC,KAAT,CAAevC,GAAf,EAAoBqC,IAApB;AACD;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASG,KAAT,CAAeC,MAAf,EAAuBC,MAAvB,EAA+B;AACpC,MAAIC,MAAM,GAAG,EAAb;AAAA,MACEC,GAAG,GAAG,EADR;AAGAH,EAAAA,MAAM,GAAGnD,MAAM,CAACmD,MAAD,CAAf;AACAC,EAAAA,MAAM,GAAGpD,MAAM,CAACoD,MAAD,CAAf;AAEAD,EAAAA,MAAM,CAACI,OAAP,CAAe,UAASC,KAAT,EAAgB;AAC7B,QAAIC,GAAG,GAAGD,KAAV;;AACA,QAAI,QAAOA,KAAP,MAAiB,QAArB,EAA+B;AAC7BC,MAAAA,GAAG,GAAGD,KAAK,CAACE,EAAZ;AACD;;AACDJ,IAAAA,GAAG,CAACG,GAAD,CAAH,GAAWD,KAAX;AACAH,IAAAA,MAAM,CAACL,IAAP,CAAYQ,KAAZ;AACD,GAPD;AASAJ,EAAAA,MAAM,CAACG,OAAP,CAAe,UAASC,KAAT,EAAgB;AAC7B,QAAIC,GAAG,GAAGD,KAAV;;AACA,QAAI,QAAOA,KAAP,MAAiB,QAArB,EAA+B;AAC7BC,MAAAA,GAAG,GAAGD,KAAK,CAACE,EAAZ;AACD;;AACD,QAAI,EAAED,GAAG,IAAIH,GAAT,CAAJ,EAAmB;AACjBD,MAAAA,MAAM,CAACL,IAAP,CAAYQ,KAAZ;AACD;AACF,GARD;AAUA,SAAOH,MAAP;AACD;AAED,OAAO,SAASM,iBAAT,CAA2BjD,GAA3B,EAAgCqC,IAAhC,EAAsC;AAC3C,MAAIrC,GAAG,KAAKqC,IAAZ,EAAkB;AAChB,WAAO,IAAP;AACD;;AACD,MAAI,CAAC,CAACrC,GAAD,IAAQA,GAAG,CAACJ,MAAJ,KAAe,CAAxB,MAA+B,CAACyC,IAAD,IAASA,IAAI,CAACzC,MAAL,KAAgB,CAAxD,CAAJ,EAAgE;AAC9D,WAAO,IAAP;AACD;;AACD,MAAI,CAACI,GAAD,IAAQ,CAACqC,IAAb,EAAmB;AACjB,WAAO,KAAP;AACD;;AACD,MAAIrC,GAAG,CAACJ,MAAJ,KAAeyC,IAAI,CAACzC,MAAxB,EAAgC;AAC9B,WAAO,KAAP;AACD;;AACD,SAAOkC,WAAW,CAAC9B,GAAD,EAAMqC,IAAN,CAAlB;AACD;AAED,OAAO,SAASa,MAAT,CAAgBlD,GAAhB,EAAqBqC,IAArB,EAA2B;AAChC,MAAIrC,GAAG,KAAKqC,IAAZ,EAAkB;AAChB,WAAO,IAAP;AACD;;AACD,MAAI,CAAC,CAACrC,GAAD,IAAQA,GAAG,CAACJ,MAAJ,KAAe,CAAxB,MAA+B,CAACyC,IAAD,IAASA,IAAI,CAACzC,MAAL,KAAgB,CAAxD,CAAJ,EAAgE;AAC9D,WAAO,IAAP;AACD;;AACD,MAAI,CAACI,GAAD,IAAQ,CAACqC,IAAb,EAAmB;AACjB,WAAO,KAAP;AACD;;AACD,MAAIrC,GAAG,CAACJ,MAAJ,KAAeyC,IAAI,CAACzC,MAAxB,EAAgC;AAC9B,WAAO,KAAP;AACD;;AAED,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,GAAG,CAACJ,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,QAAIE,GAAG,CAACF,CAAD,CAAH,KAAWuC,IAAI,CAACvC,CAAD,CAAnB,EAAwB;AACtB,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;AAED,OAAO,SAASqD,OAAT,CAAiBnD,GAAjB,EAAsBqC,IAAtB,EAA4B;AACjC,MAAIe,SAAS,GAAG,CAAhB;AAAA,MACEC,UAAU,GAAG,CADf;;AAEA,MAAIrD,GAAJ,EAAS;AACPoD,IAAAA,SAAS,GAAGpD,GAAG,CAACJ,MAAhB;AACD;;AACD,MAAIyC,IAAJ,EAAU;AACRgB,IAAAA,UAAU,GAAGhB,IAAI,CAACzC,MAAlB;AACD;;AACD,SAAOwD,SAAS,GAAGC,UAAnB;AACD;AAED,OAAO,SAASC,WAAT,CAAqBtD,GAArB,EAA0BC,OAA1B,EAAmCsD,IAAnC,EAAyC;AAC9C,MAAI,CAACvD,GAAD,IAAQ,CAACuD,IAAb,EAAmB;AACjB;AACD;;AACD,OAAK,IAAIzD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,GAAG,CAACJ,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,QAAI0D,UAAU,GAAGxD,GAAG,CAACF,CAAD,CAApB;;AACA,QAAI0D,UAAU,KAAKvD,OAAnB,EAA4B;AAC1BsD,MAAAA,IAAI,CAACC,UAAD,EAAa1D,CAAb,CAAJ;AACD;AACF;AACF;AAED;AACA;AACA;AACA;;AACA,OAAO,SAAS2D,SAAT,CAAmBzD,GAAnB,EAAwB0D,SAAxB,EAAmCC,OAAnC,EAA4C;AACjD,MAAI,CAAC3D,GAAD,IAAQ,CAAC0D,SAAb,EAAwB;AACtB,WAAO,CAAC,CAAR;AACD;;AACD,OAAK,IAAI5D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,GAAG,CAACJ,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,QAAI4D,SAAS,CAACE,IAAV,CAAeD,OAAf,EAAwB3D,GAAG,CAACF,CAAD,CAA3B,EAAgCA,CAAhC,EAAmCE,GAAnC,CAAJ,EAA6C;AAC3C,aAAOF,CAAP;AACD;AACF;;AACD,SAAO,CAAC,CAAR;AACD;AAED,OAAO,SAAS+D,IAAT,CAAc7D,GAAd,EAAmB0D,SAAnB,EAA8BC,OAA9B,EAAuC;AAC5C,MAAIzD,KAAK,GAAGuD,SAAS,CAACzD,GAAD,EAAM0D,SAAN,EAAiBC,OAAjB,CAArB;;AACA,MAAIzD,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,WAAO,IAAP;AACD;;AACD,SAAOF,GAAG,CAACE,KAAD,CAAV;AACD;AAED,OAAO,SAAS4D,QAAT,CAAkB9D,GAAlB,EAAuB+D,UAAvB,EAAmCL,SAAnC,EAA8CM,OAA9C,EAAuD;AAC5D,MAAIA,OAAJ,EAAa;AACX,WAAOC,eAAe,CAACjE,GAAD,EAAM+D,UAAN,EAAkBL,SAAlB,CAAtB;AACD;;AACD,SAAOQ,eAAe,CAAClE,GAAD,EAAM+D,UAAN,EAAkBL,SAAlB,CAAtB;AACD;AAED,OAAO,SAASS,aAAT,CAAuBnE,GAAvB,EAA4B+D,UAA5B,EAAwCL,SAAxC,EAAmDM,OAAnD,EAA4D;AACjE,MAAIA,OAAJ,EAAa;AACX,WAAOI,oBAAoB,CAACpE,GAAD,EAAM+D,UAAN,EAAkBL,SAAlB,CAA3B;AACD;;AACD,SAAOW,oBAAoB,CAACrE,GAAD,EAAM+D,UAAN,EAAkBL,SAAlB,CAA3B;AACD;AAED,OAAO,SAASQ,eAAT,CAAyBlE,GAAzB,EAA8B+D,UAA9B,EAA0CL,SAA1C,EAAqD;AAC1D,MAAIxD,KAAK,GAAGmE,oBAAoB,CAACrE,GAAD,EAAM+D,UAAN,EAAkBL,SAAlB,CAAhC;;AACA,MAAIxD,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,WAAO,IAAP;AACD;;AACD,SAAOF,GAAG,CAACE,KAAD,CAAV;AACD;AAED,OAAO,SAASmE,oBAAT,CAA8BrE,GAA9B,EAAmC+D,UAAnC,EAA+CL,SAA/C,EAA0D;AAC/D,MAAI,CAAC1D,GAAD,IAAQ,CAAC0D,SAAb,EAAwB;AACtB,WAAO,CAAC,CAAR;AACD;;AACD,OAAK,IAAI5D,CAAC,GAAGiE,UAAb,EAAyBjE,CAAC,GAAGE,GAAG,CAACJ,MAAjC,EAAyCE,CAAC,EAA1C,EAA8C;AAC5C,QAAIG,OAAO,GAAGD,GAAG,CAACF,CAAD,CAAjB;;AACA,QAAI4D,SAAS,CAACzD,OAAD,EAAUH,CAAV,CAAb,EAA2B;AACzB,aAAOA,CAAP;AACD;AACF;;AACD,SAAO,CAAC,CAAR;AACD;AAED,OAAO,SAASmE,eAAT,CAAyBjE,GAAzB,EAA8B+D,UAA9B,EAA0CL,SAA1C,EAAqD;AAC1D,MAAIxD,KAAK,GAAGkE,oBAAoB,CAACpE,GAAD,EAAM+D,UAAN,EAAkBL,SAAlB,CAAhC;;AACA,MAAIxD,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,WAAO,IAAP;AACD;;AACD,SAAOF,GAAG,CAACE,KAAD,CAAV;AACD;AAED,OAAO,SAASkE,oBAAT,CAA8BpE,GAA9B,EAAmC+D,UAAnC,EAA+CL,SAA/C,EAA0D;AAC/D,MAAI,CAAC1D,GAAD,IAAQ,CAAC0D,SAAb,EAAwB;AACtB,WAAO,CAAC,CAAR;AACD;;AACD,OAAK,IAAI5D,CAAC,GAAGiE,UAAb,EAAyBjE,CAAC,IAAI,CAA9B,EAAiCA,CAAC,EAAlC,EAAsC;AACpC,QAAIG,OAAO,GAAGD,GAAG,CAACF,CAAD,CAAjB;;AACA,QAAI4D,SAAS,CAACzD,OAAD,EAAUH,CAAV,CAAb,EAA2B;AACzB,aAAOA,CAAP;AACD;AACF;;AACD,SAAO,CAAC,CAAR;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASwE,aAAT,CAAuBtE,GAAvB,EAA4BM,QAA5B,EAAsC;AAC3CA,EAAAA,QAAQ,GAAGlB,OAAO,CAACmF,gBAAR,CAAyBC,SAAzB,EAAoCC,KAApC,CAA0C,CAA1C,EAA6CC,MAA7C,CAAoD,UAASzE,OAAT,EAAkB;AAC/E,WAAOA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAKT,SAAvC;AACD,GAFU,CAAX;;AAGA,MAAIQ,GAAG,IAAIM,QAAQ,CAACV,MAApB,EAA4B;AAC1BI,IAAAA,GAAG,CAACsC,IAAJ,OAAAtC,GAAG,qBAASM,QAAT,EAAH;AACD;AACF;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASqE,OAAT,CAAiB3E,GAAjB,EAAsBC,OAAtB,EAA+B;AACpC,MAAIA,OAAO,IAAID,GAAG,CAACG,OAAJ,CAAYF,OAAZ,MAAyB,CAAC,CAAzC,EAA4C;AAC1CD,IAAAA,GAAG,CAACsC,IAAJ,CAASrC,OAAT;AACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAAS2E,MAAT,CAAgB5E,GAAhB,EAAqB6E,SAArB,EAAgCC,UAAhC,EAA4C;AACjD,MAAI,CAAC9E,GAAD,IAAQA,GAAG,CAACJ,MAAJ,KAAe,CAA3B,EAA8B;AAC5B,WAAO,EAAP;AACD;;AAED,MAAImF,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIjF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,GAAG,CAACJ,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,QAAIG,OAAO,GAAGD,GAAG,CAACF,CAAD,CAAjB;;AACA,QAAI+E,SAAS,IAAI/E,CAAC,GAAG,CAAjB,IAAsBA,CAAC,GAAGE,GAAG,CAACJ,MAAlC,EAA0C;AACxCmF,MAAAA,MAAM,IAAIF,SAAV;AACD;;AACD,QAAIC,UAAJ,EAAgB;AACd7E,MAAAA,OAAO,GAAGZ,OAAO,CAAC2F,MAAR,CAAe/E,OAAf,CAAV;AACD;;AACD8E,IAAAA,MAAM,IAAI9E,OAAV;AACD;;AACD,SAAO8E,MAAP;AACD;AAED,OAAO,SAASE,aAAT,CAAuBjF,GAAvB,EAA4B6E,SAA5B,EAAuC;AAC5C,SAAOD,MAAM,CAAC5E,GAAD,EAAM6E,SAAN,EAAiB,IAAjB,CAAb;AACD;AAED,OAAO,SAASK,GAAT,CAAalF,GAAb,EAAkB;AACvB,MAAIA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKR,SAA5B,EAAuC;AACrC,WAAO2B,IAAI,CAAC+D,GAAL,CAAS3C,KAAT,CAAepB,IAAf,EAAqBnB,GAArB,CAAP;AACD,GAHsB,CAKvB;;;AACA,MAAImF,QAAQ,GAAGnF,GAAG,CAAC0E,MAAJ,CAAWtF,OAAO,CAACgG,QAAnB,CAAf;AACA,SAAOjE,IAAI,CAAC+D,GAAL,CAAS3C,KAAT,CAAepB,IAAf,EAAqBgE,QAArB,CAAP;AACD;AAED,OAAO,SAASE,GAAT,CAAarF,GAAb,EAAkB;AACvB,MAAIA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKR,SAA5B,EAAuC;AACrC,WAAO2B,IAAI,CAACkE,GAAL,CAAS9C,KAAT,CAAepB,IAAf,EAAqBnB,GAArB,CAAP;AACD,GAHsB,CAKvB;;;AACA,MAAImF,QAAQ,GAAGnF,GAAG,CAAC0E,MAAJ,CAAWtF,OAAO,CAACgG,QAAnB,CAAf;AACA,SAAOjE,IAAI,CAACkE,GAAL,CAAS9C,KAAT,CAAepB,IAAf,EAAqBgE,QAArB,CAAP;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASG,IAAT,CAAcC,IAAd,EAAoBlD,IAApB,EAA0B;AAC/B,MAAIiD,IAAI,GAAGC,IAAI,CAACd,KAAL,EAAX;AACApE,EAAAA,SAAS,CAACiF,IAAD,EAAOjD,IAAP,CAAT;AACA,SAAOiD,IAAP;AACD;AAED,OAAO,SAASE,OAAT,CAAiBxF,GAAjB,EAAsBuD,IAAtB,EAA4B;AACjC,MAAIZ,MAAM,GAAG,EAAb;AACA3C,EAAAA,GAAG,CAAC6C,OAAJ,CAAY,UAAS5C,OAAT,EAAkB;AAC5BmC,IAAAA,OAAO,CAACO,MAAD,EAASY,IAAI,CAACtD,OAAD,CAAb,CAAP;AACD,GAFD;AAGA,SAAO0C,MAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAAS8C,QAAT,CAAkBzF,GAAlB,EAAuB0F,QAAvB,EAAiC;AACtC,OAAK,IAAI5F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,GAAG,CAACJ,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,QAAIE,GAAG,CAACF,CAAD,CAAH,CAAO,CAAP,MAAc4F,QAAQ,CAAC,CAAD,CAA1B,EAA+B;AAC7B,aAAO5F,CAAP;AACD;AACF;AACF;AAED,OAAO,SAAS6F,OAAT,CAAiB3F,GAAjB,EAAsB0F,QAAtB,EAAgC;AACrC,MAAIxF,KAAK,GAAGuF,QAAQ,CAACzF,GAAD,EAAM0F,QAAN,CAApB;;AACA,MAAIxF,KAAK,IAAI,CAAb,EAAgB;AACdF,IAAAA,GAAG,CAACI,MAAJ,CAAWF,KAAX,EAAkB,CAAlB;AACD;AACF;AAED,eAAe;AACbuF,EAAAA,QAAQ,EAARA,QADa;AAEbE,EAAAA,OAAO,EAAPA,OAFa;AAGb7D,EAAAA,WAAW,EAAXA,WAHa;AAIbL,EAAAA,WAAW,EAAXA,WAJa;AAKb6D,EAAAA,IAAI,EAAJA,IALa;AAMbhC,EAAAA,WAAW,EAAXA,WANa;AAObnB,EAAAA,KAAK,EAALA,KAPa;AAQb7C,EAAAA,MAAM,EAANA,MARa;AASb4D,EAAAA,MAAM,EAANA,MATa;AAUbD,EAAAA,iBAAiB,EAAjBA,iBAVa;AAWbY,EAAAA,IAAI,EAAJA,IAXa;AAYbC,EAAAA,QAAQ,EAARA,QAZa;AAabI,EAAAA,eAAe,EAAfA,eAba;AAcbD,EAAAA,eAAe,EAAfA,eAda;AAebR,EAAAA,SAAS,EAATA,SAfa;AAgBbU,EAAAA,aAAa,EAAbA,aAhBa;AAiBbE,EAAAA,oBAAoB,EAApBA,oBAjBa;AAkBbD,EAAAA,oBAAoB,EAApBA,oBAlBa;AAmBbpC,EAAAA,KAAK,EAALA,KAnBa;AAoBbwD,EAAAA,OAAO,EAAPA,OApBa;AAqBbZ,EAAAA,MAAM,EAANA,MArBa;AAsBbK,EAAAA,aAAa,EAAbA,aAtBa;AAuBb9B,EAAAA,OAAO,EAAPA,OAvBa;AAwBbjB,EAAAA,WAAW,EAAXA,WAxBa;AAyBbvC,EAAAA,IAAI,EAAJA,IAzBa;AA0Bbe,EAAAA,MAAM,EAANA,MA1Ba;AA2BbC,EAAAA,SAAS,EAATA,SA3Ba;AA4BbE,EAAAA,WAAW,EAAXA,WA5Ba;AA6BbC,EAAAA,YAAY,EAAZA,YA7Ba;AA8BbmB,EAAAA,IAAI,EAAJA,IA9Ba;AA+BbiD,EAAAA,GAAG,EAAHA,GA/Ba;AAgCbG,EAAAA,GAAG,EAAHA,GAhCa;AAiCb/D,EAAAA,IAAI,EAAJA,IAjCa;AAkCbc,EAAAA,OAAO,EAAPA,OAlCa;AAmCbkC,EAAAA,aAAa,EAAbA,aAnCa;AAoCbK,EAAAA,OAAO,EAAPA,OApCa;AAqCb5E,EAAAA,MAAM,EAANA,MArCa;AAsCbM,EAAAA,SAAS,EAATA,SAtCa;AAuCbG,EAAAA,OAAO,EAAPA,OAvCa;AAwCbgC,EAAAA,KAAK,EAALA;AAxCa,CAAf","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {objects, strings} from '../index';\n\n/**\n * Ensures the given parameter is an array\n */\nexport function ensure(array) {\n  if (array === undefined || array === null) {\n    return [];\n  }\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  return array;\n}\n\n/**\n * Creates an array with the given length and initializes each value with the given initValue.\n */\nexport function init(length, initValue) {\n  var array = [];\n  for (var i = 0; i < length; i++) {\n    array[i] = initValue;\n  }\n  return array;\n}\n\n/**\n * Removes the first occurrence of the specified element from the array,\n * if it is present (optional operation).  If the array does not contain\n * the element, it is unchanged.\n *\n * @return {boolean} true if the array contained the specified element\n */\nexport function remove(arr, element) {\n  if (arr) {\n    var index = arr.indexOf(element);\n    if (index !== -1) {\n      arr.splice(index, 1);\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Removes every given element from the array\n *\n * @return {boolean} true if the array contained at least one of the specified elements\n */\nexport function removeAll(arr, elements) {\n  var modified = false;\n  if (!elements || elements.length === 0) {\n    return false;\n  }\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (elements.indexOf(arr[i]) > -1) {\n      arr.splice(i, 1);\n      modified = true;\n    }\n  }\n  return modified;\n}\n\n/**\n * @return the index of the replaced element\n */\nexport function replace(arr, element, replacement) {\n  var index = arr.indexOf(element);\n  if (index !== -1) {\n    arr[index] = replacement;\n  }\n  return index;\n}\n\n/**\n * Inserts the given element at the specified index.\n * <p>\n * This function uses insertAll() which relies on Array.prototype.splice(). Check its js-doc for details.\n */\nexport function insert(arr, element, index) {\n  insertAll(arr, [element], index);\n}\n\n/**\n * Inserts all elements of the given array at the specified index.\n * <p>\n * This function is based on Array.prototype.splice().\n * Thus, if the 'index' is greater than the length of the array, 'elements' will be added to the end of the array 'arr'.\n * This may cause unexpected behavior on accessing arr[index] after insertion.\n *\n * The caller must ensure the size of the array.\n */\nexport function insertAll(arr, elements, index) {\n  elements = ensure(elements);\n  arr.splice(...[index, 0].concat(elements));\n}\n\n/**\n * @deprecated use insertAll(arr, elements, index) instead\n */\nexport function insertArray(arr, elements, index) {\n  return insertAll(arr, elements, index);\n}\n\n/**\n * Inserts the given element into the array according to the sort order indicated by the given comparison function.\n *\n * All arguments are mandatory.\n */\nexport function insertSorted(arr, element, compareFunc) {\n  // https://en.wikipedia.org/wiki/Binary_search_algorithm\n  var left = 0;\n  var right = arr.length - 1;\n  while (left <= right) {\n    var middle = left + Math.floor((right - left) / 2);\n    var c = compareFunc(arr[middle], element);\n    if (c < 0) {\n      // Search in right half\n      left = middle + 1;\n    } else if (c > 0) {\n      // Search in left half\n      right = middle - 1;\n    } else {\n      // Found an exact match.\n      // The insertion point index is equal to the last index starting from \"middle\" that matches\n      // the element. This ensures a stable insertion order (because of the device-and-conquer\n      // method, \"middle\" might be any of the elements with the same value).\n      left = middle + 1;\n      while (left < arr.length && compareFunc(arr[left], element) === 0) {\n        left++;\n      }\n      break;\n    }\n  }\n  // \"left\" now contains the index to insert the element\n  arr.splice(left, 0, element);\n}\n\n/**\n * This function uses insert() which relies on Array.prototype.splice(). Check its js-doc for details.\n */\nexport function move(arr, fromIndex, toIndex) {\n  var element = arr.splice(fromIndex, 1)[0];\n  insert(arr, element, toIndex);\n}\n\nexport function containsAny(haystack, needles) {\n  haystack = ensure(haystack);\n  needles = ensure(needles);\n  return needles.some(function contains(element) {\n    return haystack.indexOf(element) >= 0;\n  });\n}\n\nexport function containsAll(haystack, needles) {\n  haystack = ensure(haystack);\n  needles = ensure(needles);\n  return needles.every(function contains(element) {\n    return haystack.indexOf(element) >= 0;\n  });\n}\n\nexport function first(arr) {\n  if (Array.isArray(arr)) {\n    return arr[0];\n  }\n  return arr;\n}\n\nexport function last(arr) {\n  if (Array.isArray(arr)) {\n    return arr[arr.length - 1];\n  }\n  return arr;\n}\n\n/**\n * @returns {boolean} true if the given argument is an array and has a length > 0, false in any other case.\n */\nexport function hasElements(arr) {\n  return !empty(arr);\n}\n\n/**\n * @returns {boolean} true if the given argument is not an array or the length of the array is 0, false in any other case.\n */\nexport function empty(arr) {\n  if (Array.isArray(arr)) {\n    return arr.length === 0;\n  }\n  return true;\n}\n\nexport function pushAll(arr, arr2) {\n  arr.push.apply(arr, arr2);\n}\n\n/**\n * Merges the two given arrays and removes duplicate entries in O(n).\n * If the arrays contain objects instead of primitives, it uses their id to check for equality.\n */\nexport function union(array1, array2) {\n  var result = [],\n    map = {};\n\n  array1 = ensure(array1);\n  array2 = ensure(array2);\n\n  array1.forEach(function(entry) {\n    var key = entry;\n    if (typeof entry === 'object') {\n      key = entry.id;\n    }\n    map[key] = entry;\n    result.push(entry);\n  });\n\n  array2.forEach(function(entry) {\n    var key = entry;\n    if (typeof entry === 'object') {\n      key = entry.id;\n    }\n    if (!(key in map)) {\n      result.push(entry);\n    }\n  });\n\n  return result;\n}\n\nexport function equalsIgnoreOrder(arr, arr2) {\n  if (arr === arr2) {\n    return true;\n  }\n  if ((!arr || arr.length === 0) && (!arr2 || arr2.length === 0)) {\n    return true;\n  }\n  if (!arr || !arr2) {\n    return false;\n  }\n  if (arr.length !== arr2.length) {\n    return false;\n  }\n  return containsAll(arr, arr2);\n}\n\nexport function equals(arr, arr2) {\n  if (arr === arr2) {\n    return true;\n  }\n  if ((!arr || arr.length === 0) && (!arr2 || arr2.length === 0)) {\n    return true;\n  }\n  if (!arr || !arr2) {\n    return false;\n  }\n  if (arr.length !== arr2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function greater(arr, arr2) {\n  var arrLength = 0,\n    arr2Length = 0;\n  if (arr) {\n    arrLength = arr.length;\n  }\n  if (arr2) {\n    arr2Length = arr2.length;\n  }\n  return arrLength > arr2Length;\n}\n\nexport function eachSibling(arr, element, func) {\n  if (!arr || !func) {\n    return;\n  }\n  for (var i = 0; i < arr.length; i++) {\n    var elementAtI = arr[i];\n    if (elementAtI !== element) {\n      func(elementAtI, i);\n    }\n  }\n}\n\n/**\n * Alternative implementation of Array.findIndex(callback [, thisArg]), which is supported by most browsers.\n * See Array.findIndex for a detailed description.\n */\nexport function findIndex(arr, predicate, thisArg) {\n  if (!arr || !predicate) {\n    return -1;\n  }\n  for (var i = 0; i < arr.length; i++) {\n    if (predicate.call(thisArg, arr[i], i, arr)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function find(arr, predicate, thisArg) {\n  var index = findIndex(arr, predicate, thisArg);\n  if (index === -1) {\n    return null;\n  }\n  return arr[index];\n}\n\nexport function findFrom(arr, startIndex, predicate, reverse) {\n  if (reverse) {\n    return findFromReverse(arr, startIndex, predicate);\n  }\n  return findFromForward(arr, startIndex, predicate);\n}\n\nexport function findIndexFrom(arr, startIndex, predicate, reverse) {\n  if (reverse) {\n    return findIndexFromReverse(arr, startIndex, predicate);\n  }\n  return findIndexFromForward(arr, startIndex, predicate);\n}\n\nexport function findFromForward(arr, startIndex, predicate) {\n  var index = findIndexFromForward(arr, startIndex, predicate);\n  if (index === -1) {\n    return null;\n  }\n  return arr[index];\n}\n\nexport function findIndexFromForward(arr, startIndex, predicate) {\n  if (!arr || !predicate) {\n    return -1;\n  }\n  for (var i = startIndex; i < arr.length; i++) {\n    var element = arr[i];\n    if (predicate(element, i)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function findFromReverse(arr, startIndex, predicate) {\n  var index = findIndexFromReverse(arr, startIndex, predicate);\n  if (index === -1) {\n    return null;\n  }\n  return arr[index];\n}\n\nexport function findIndexFromReverse(arr, startIndex, predicate) {\n  if (!arr || !predicate) {\n    return -1;\n  }\n  for (var i = startIndex; i >= 0; i--) {\n    var element = arr[i];\n    if (predicate(element, i)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\n/**\n * Pushes all elements to the given array that are not null or undefined.\n */\nexport function pushIfDefined(arr, elements) {\n  elements = objects.argumentsToArray(arguments).slice(1).filter(function(element) {\n    return element !== null && element !== undefined;\n  });\n  if (arr && elements.length) {\n    arr.push(...elements);\n  }\n}\n\n/**\n * Pushes the given element if it does not already exist in the array and the element is truthy. Thus the array is like a Set where every element\n * can only be added once to the collection. Note: the comparison is done with the === operator.\n */\nexport function pushSet(arr, element) {\n  if (element && arr.indexOf(element) === -1) {\n    arr.push(element);\n  }\n}\n\n/**\n * Creates a string containing all elements in the array separated by the given delimiter.\n * @param {[]} arr\n * @param {string} [delimiter=null]\n * @param {boolean} [encodeHtml=false] true to encode the elements, false if not\n */\nexport function format(arr, delimiter, encodeHtml) {\n  if (!arr || arr.length === 0) {\n    return '';\n  }\n\n  var output = '';\n  for (var i = 0; i < arr.length; i++) {\n    var element = arr[i];\n    if (delimiter && i > 0 && i < arr.length) {\n      output += delimiter;\n    }\n    if (encodeHtml) {\n      element = strings.encode(element);\n    }\n    output += element;\n  }\n  return output;\n}\n\nexport function formatEncoded(arr, delimiter) {\n  return format(arr, delimiter, true);\n}\n\nexport function max(arr) {\n  if (arr === null || arr === undefined) {\n    return Math.max.apply(Math, arr);\n  }\n\n  // Math.max() returns 0 (not null!) if arr contains only null and negative elements.\n  var filtered = arr.filter(objects.isNumber);\n  return Math.max.apply(Math, filtered);\n}\n\nexport function min(arr) {\n  if (arr === null || arr === undefined) {\n    return Math.min.apply(Math, arr);\n  }\n\n  // Math.min() returns 0 (not null!) if arr contains only null and non-negative elements.\n  var filtered = arr.filter(objects.isNumber);\n  return Math.min.apply(Math, filtered);\n}\n\n/**\n * @returns {[]} all elements of the first array which are not in the second array\n */\nexport function diff(arr1, arr2) {\n  var diff = arr1.slice();\n  removeAll(diff, arr2);\n  return diff;\n}\n\nexport function flatMap(arr, func) {\n  var result = [];\n  arr.forEach(function(element) {\n    pushAll(result, func(element));\n  });\n  return result;\n}\n\n//\n// Use these methods if you have an array of jquery objects.\n// Reason $elem1 === $elem2 does often not work because new jquery objects are created for the same html node.\n// -> Html nodes need to be compared.\n//\n\nexport function $indexOf(arr, $element) {\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i][0] === $element[0]) {\n      return i;\n    }\n  }\n}\n\nexport function $remove(arr, $element) {\n  var index = $indexOf(arr, $element);\n  if (index >= 0) {\n    arr.splice(index, 1);\n  }\n}\n\nexport default {\n  $indexOf,\n  $remove,\n  containsAll,\n  containsAny,\n  diff,\n  eachSibling,\n  empty,\n  ensure,\n  equals,\n  equalsIgnoreOrder,\n  find,\n  findFrom,\n  findFromForward,\n  findFromReverse,\n  findIndex,\n  findIndexFrom,\n  findIndexFromForward,\n  findIndexFromReverse,\n  first,\n  flatMap,\n  format,\n  formatEncoded,\n  greater,\n  hasElements,\n  init,\n  insert,\n  insertAll,\n  insertArray,\n  insertSorted,\n  last,\n  max,\n  min,\n  move,\n  pushAll,\n  pushIfDefined,\n  pushSet,\n  remove,\n  removeAll,\n  replace,\n  union\n};\n"]},"metadata":{},"sourceType":"module"}