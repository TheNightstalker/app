{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n\n/**\n * JavaScript port from java.awt.Insets.\n */\nvar Insets = /*#__PURE__*/function () {\n  function Insets(vararg, right, bottom, left) {\n    _classCallCheck(this, Insets);\n\n    if (vararg instanceof Insets) {\n      this.top = vararg.top;\n      this.right = vararg.right;\n      this.bottom = vararg.bottom;\n      this.left = vararg.left;\n    } else {\n      this.top = vararg || 0;\n      this.right = right || 0;\n      this.bottom = bottom || 0;\n      this.left = left || 0;\n    }\n  }\n\n  _createClass(Insets, [{\n    key: \"toString\",\n    value: function toString() {\n      return 'Insets[top=' + this.top + ' right=' + this.right + ' bottom=' + this.bottom + ' left=' + this.left + ']';\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(o) {\n      return this.top === o.top && this.right === o.right && this.bottom === o.bottom && this.left === o.left;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Insets(this.top, this.right, this.bottom, this.left);\n    }\n  }, {\n    key: \"horizontal\",\n    value: function horizontal() {\n      return this.right + this.left;\n    }\n  }, {\n    key: \"vertical\",\n    value: function vertical() {\n      return this.top + this.bottom;\n    }\n  }, {\n    key: \"floor\",\n    value: function floor() {\n      return new Insets(Math.floor(this.top), Math.floor(this.right), Math.floor(this.bottom), Math.floor(this.left));\n    }\n  }, {\n    key: \"ceil\",\n    value: function ceil() {\n      return new Insets(Math.ceil(this.top), Math.ceil(this.right), Math.ceil(this.bottom), Math.ceil(this.left));\n    }\n  }]);\n\n  return Insets;\n}();\n\nexport { Insets as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/layout/Insets.js"],"names":["Insets","vararg","right","bottom","left","top","o","Math","floor","ceil"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;IACqBA,M;AAEnB,kBAAYC,MAAZ,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmCC,IAAnC,EAAyC;AAAA;;AACvC,QAAIH,MAAM,YAAYD,MAAtB,EAA8B;AAC5B,WAAKK,GAAL,GAAWJ,MAAM,CAACI,GAAlB;AACA,WAAKH,KAAL,GAAaD,MAAM,CAACC,KAApB;AACA,WAAKC,MAAL,GAAcF,MAAM,CAACE,MAArB;AACA,WAAKC,IAAL,GAAYH,MAAM,CAACG,IAAnB;AACD,KALD,MAKO;AACL,WAAKC,GAAL,GAAWJ,MAAM,IAAI,CAArB;AACA,WAAKC,KAAL,GAAaA,KAAK,IAAI,CAAtB;AACA,WAAKC,MAAL,GAAcA,MAAM,IAAI,CAAxB;AACA,WAAKC,IAAL,GAAYA,IAAI,IAAI,CAApB;AACD;AACF;;;;+BAEU;AACT,aAAO,gBAAgB,KAAKC,GAArB,GAA2B,SAA3B,GAAuC,KAAKH,KAA5C,GAAoD,UAApD,GAAiE,KAAKC,MAAtE,GAA+E,QAA/E,GAA0F,KAAKC,IAA/F,GAAsG,GAA7G;AACD;;;2BAEME,C,EAAG;AACR,aAAO,KAAKD,GAAL,KAAaC,CAAC,CAACD,GAAf,IACL,KAAKH,KAAL,KAAeI,CAAC,CAACJ,KADZ,IAEL,KAAKC,MAAL,KAAgBG,CAAC,CAACH,MAFb,IAGL,KAAKC,IAAL,KAAcE,CAAC,CAACF,IAHlB;AAID;;;4BAEO;AACN,aAAO,IAAIJ,MAAJ,CAAW,KAAKK,GAAhB,EAAqB,KAAKH,KAA1B,EAAiC,KAAKC,MAAtC,EAA8C,KAAKC,IAAnD,CAAP;AACD;;;iCAEY;AACX,aAAO,KAAKF,KAAL,GAAa,KAAKE,IAAzB;AACD;;;+BAEU;AACT,aAAO,KAAKC,GAAL,GAAW,KAAKF,MAAvB;AACD;;;4BAEO;AACN,aAAO,IAAIH,MAAJ,CAAWO,IAAI,CAACC,KAAL,CAAW,KAAKH,GAAhB,CAAX,EAAiCE,IAAI,CAACC,KAAL,CAAW,KAAKN,KAAhB,CAAjC,EAAyDK,IAAI,CAACC,KAAL,CAAW,KAAKL,MAAhB,CAAzD,EAAkFI,IAAI,CAACC,KAAL,CAAW,KAAKJ,IAAhB,CAAlF,CAAP;AACD;;;2BAEM;AACL,aAAO,IAAIJ,MAAJ,CAAWO,IAAI,CAACE,IAAL,CAAU,KAAKJ,GAAf,CAAX,EAAgCE,IAAI,CAACE,IAAL,CAAU,KAAKP,KAAf,CAAhC,EAAuDK,IAAI,CAACE,IAAL,CAAU,KAAKN,MAAf,CAAvD,EAA+EI,IAAI,CAACE,IAAL,CAAU,KAAKL,IAAf,CAA/E,CAAP;AACD;;;;;;SA7CkBJ,M","sourcesContent":["/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n\n/**\n * JavaScript port from java.awt.Insets.\n */\nexport default class Insets {\n\n  constructor(vararg, right, bottom, left) {\n    if (vararg instanceof Insets) {\n      this.top = vararg.top;\n      this.right = vararg.right;\n      this.bottom = vararg.bottom;\n      this.left = vararg.left;\n    } else {\n      this.top = vararg || 0;\n      this.right = right || 0;\n      this.bottom = bottom || 0;\n      this.left = left || 0;\n    }\n  }\n\n  toString() {\n    return 'Insets[top=' + this.top + ' right=' + this.right + ' bottom=' + this.bottom + ' left=' + this.left + ']';\n  }\n\n  equals(o) {\n    return this.top === o.top &&\n      this.right === o.right &&\n      this.bottom === o.bottom &&\n      this.left === o.left;\n  }\n\n  clone() {\n    return new Insets(this.top, this.right, this.bottom, this.left);\n  }\n\n  horizontal() {\n    return this.right + this.left;\n  }\n\n  vertical() {\n    return this.top + this.bottom;\n  }\n\n  floor() {\n    return new Insets(Math.floor(this.top), Math.floor(this.right), Math.floor(this.bottom), Math.floor(this.left));\n  }\n\n  ceil() {\n    return new Insets(Math.ceil(this.top), Math.ceil(this.right), Math.ceil(this.bottom), Math.ceil(this.left));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}