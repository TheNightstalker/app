{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractTreeNavigationKeyStroke, keys } from '../../index';\n\nvar TreeNavigationDownKeyStroke = /*#__PURE__*/function (_AbstractTreeNavigati) {\n  _inherits(TreeNavigationDownKeyStroke, _AbstractTreeNavigati);\n\n  var _super = _createSuper(TreeNavigationDownKeyStroke);\n\n  function TreeNavigationDownKeyStroke(tree, modifierBitMask) {\n    var _this;\n\n    _classCallCheck(this, TreeNavigationDownKeyStroke);\n\n    _this = _super.call(this, tree, modifierBitMask);\n    _this.which = [keys.DOWN];\n    _this.renderingHints.text = '↓';\n\n    _this.renderingHints.$drawingArea = function ($drawingArea, event) {\n      var newSelectedNode = this._computeNewSelection(event._treeCurrentNode);\n\n      if (newSelectedNode) {\n        return newSelectedNode.$node;\n      }\n    }.bind(_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(TreeNavigationDownKeyStroke, [{\n    key: \"_computeNewSelection\",\n    value: function _computeNewSelection(currentNode) {\n      var nodes = this.field.visibleNodesFlat;\n\n      if (nodes.length === 0) {\n        return;\n      }\n\n      if (!currentNode) {\n        return nodes[0];\n      }\n\n      return nodes[nodes.indexOf(currentNode) + 1];\n    }\n  }]);\n\n  return TreeNavigationDownKeyStroke;\n}(AbstractTreeNavigationKeyStroke);\n\nexport { TreeNavigationDownKeyStroke as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/tree/keystrokes/TreeNavigationDownKeyStroke.js"],"names":["AbstractTreeNavigationKeyStroke","keys","TreeNavigationDownKeyStroke","tree","modifierBitMask","which","DOWN","renderingHints","text","$drawingArea","event","newSelectedNode","_computeNewSelection","_treeCurrentNode","$node","bind","currentNode","nodes","field","visibleNodesFlat","length","indexOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,+BAAR,EAAyCC,IAAzC,QAAoD,aAApD;;IAEqBC,2B;;;;;AAEnB,uCAAYC,IAAZ,EAAkBC,eAAlB,EAAmC;AAAA;;AAAA;;AACjC,8BAAMD,IAAN,EAAYC,eAAZ;AACA,UAAKC,KAAL,GAAa,CAACJ,IAAI,CAACK,IAAN,CAAb;AACA,UAAKC,cAAL,CAAoBC,IAApB,GAA2B,GAA3B;;AACA,UAAKD,cAAL,CAAoBE,YAApB,GAAmC,UAASA,YAAT,EAAuBC,KAAvB,EAA8B;AAC/D,UAAIC,eAAe,GAAG,KAAKC,oBAAL,CAA0BF,KAAK,CAACG,gBAAhC,CAAtB;;AACA,UAAIF,eAAJ,EAAqB;AACnB,eAAOA,eAAe,CAACG,KAAvB;AACD;AACF,KALkC,CAKjCC,IALiC,+BAAnC;;AAJiC;AAUlC;;;;yCAEoBC,W,EAAa;AAChC,UAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWC,gBAAvB;;AACA,UAAIF,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;AACtB;AACD;;AACD,UAAI,CAACJ,WAAL,EAAkB;AAChB,eAAOC,KAAK,CAAC,CAAD,CAAZ;AACD;;AACD,aAAOA,KAAK,CAACA,KAAK,CAACI,OAAN,CAAcL,WAAd,IAA6B,CAA9B,CAAZ;AACD;;;;EAvBsDhB,+B;;SAApCE,2B","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractTreeNavigationKeyStroke, keys} from '../../index';\n\nexport default class TreeNavigationDownKeyStroke extends AbstractTreeNavigationKeyStroke {\n\n  constructor(tree, modifierBitMask) {\n    super(tree, modifierBitMask);\n    this.which = [keys.DOWN];\n    this.renderingHints.text = '↓';\n    this.renderingHints.$drawingArea = function($drawingArea, event) {\n      var newSelectedNode = this._computeNewSelection(event._treeCurrentNode);\n      if (newSelectedNode) {\n        return newSelectedNode.$node;\n      }\n    }.bind(this);\n  }\n\n  _computeNewSelection(currentNode) {\n    var nodes = this.field.visibleNodesFlat;\n    if (nodes.length === 0) {\n      return;\n    }\n    if (!currentNode) {\n      return nodes[0];\n    }\n    return nodes[nodes.indexOf(currentNode) + 1];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}