{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Dimension, graphics, GroupLayout, GroupToggleCollapseKeyStroke, HtmlComponent, Icon, Insets, KeyStrokeContext, LoadingSupport, scout, tooltips, Widget } from '../index';\nimport $ from 'jquery';\n\nvar Group = /*#__PURE__*/function (_Widget) {\n  _inherits(Group, _Widget);\n\n  var _super = _createSuper(Group);\n\n  function Group() {\n    var _this;\n\n    _classCallCheck(this, Group);\n\n    _this = _super.call(this);\n    _this.bodyAnimating = false;\n    _this.collapsed = false;\n    _this.collapsible = true;\n    _this.title = null;\n    _this.titleHtmlEnabled = false;\n    _this.titleSuffix = null;\n    _this.header = null;\n    _this.headerFocusable = false;\n    _this.headerVisible = true;\n    _this.body = null;\n    _this.$container = null;\n    _this.$header = null;\n    _this.$footer = null;\n    _this.$collapseIcon = null;\n    _this.$collapseBorderLeft = null;\n    _this.$collapseBorderRight = null;\n    _this.collapseStyle = Group.CollapseStyle.LEFT;\n    _this.htmlComp = null;\n    _this.htmlHeader = null;\n    _this.htmlFooter = null;\n    _this.iconId = null;\n    _this.icon = null;\n\n    _this._addWidgetProperties(['header']);\n\n    _this._addWidgetProperties(['body']);\n\n    return _this;\n  }\n\n  _createClass(Group, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(Group.prototype), \"_init\", this).call(this, model);\n\n      this.resolveTextKeys(['title', 'titleSuffix']);\n      this.resolveIconIds(['iconId']);\n\n      this._setBody(this.body);\n\n      this._setHeader(this.header);\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_createKeyStrokeContext\",\n    value: function _createKeyStrokeContext() {\n      return new KeyStrokeContext();\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_initKeyStrokeContext\",\n    value: function _initKeyStrokeContext() {\n      _get(_getPrototypeOf(Group.prototype), \"_initKeyStrokeContext\", this).call(this); // Key stroke should only work when header is focused\n\n\n      this.keyStrokeContext.$bindTarget = function () {\n        return this.$header;\n      }.bind(this);\n\n      this.keyStrokeContext.registerKeyStroke([new GroupToggleCollapseKeyStroke(this)]);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent.appendDiv('group');\n      this.htmlComp = HtmlComponent.install(this.$container, this.session);\n      this.htmlComp.setLayout(new GroupLayout(this));\n\n      this._renderHeader();\n\n      this.$collapseIcon = this.$header.appendDiv('group-collapse-icon');\n      this.$footer = this.$container.appendDiv('group-footer');\n      this.$collapseBorderLeft = this.$footer.appendDiv('group-collapse-border');\n      this.$collapseBorderRight = this.$footer.appendDiv('group-collapse-border');\n      this.htmlFooter = HtmlComponent.install(this.$footer, this.session);\n      this.$footer.on('mousedown', this._onFooterMouseDown.bind(this));\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(Group.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderIconId();\n\n      this._renderTitle();\n\n      this._renderTitleSuffix();\n\n      this._renderHeaderVisible();\n\n      this._renderHeaderFocusable();\n\n      this._renderCollapsed();\n\n      this._renderCollapseStyle();\n\n      this._renderCollapsible();\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.$header = null;\n      this.$title = null;\n      this.$titleSuffix = null;\n      this.$footer = null;\n      this.$collapseIcon = null;\n      this.$collapseBorderLeft = null;\n      this.$collapseBorderRight = null;\n\n      this._removeIconId();\n\n      _get(_getPrototypeOf(Group.prototype), \"_remove\", this).call(this);\n    }\n  }, {\n    key: \"_renderEnabled\",\n    value: function _renderEnabled() {\n      _get(_getPrototypeOf(Group.prototype), \"_renderEnabled\", this).call(this);\n\n      this.$header.setTabbable(this.enabledComputed);\n    }\n  }, {\n    key: \"setIconId\",\n    value: function setIconId(iconId) {\n      this.setProperty('iconId', iconId);\n    }\n    /**\n     * Adds an image or font-based icon to the group header by adding either an IMG or SPAN element.\n     */\n\n  }, {\n    key: \"_renderIconId\",\n    value: function _renderIconId() {\n      var iconId = this.iconId || ''; // If the icon is an image (and not a font icon), the Icon class will invalidate the layout when the image has loaded\n\n      if (!iconId) {\n        this._removeIconId();\n\n        this._updateIconStyle();\n\n        return;\n      }\n\n      if (this.icon) {\n        this.icon.setIconDesc(iconId);\n\n        this._updateIconStyle();\n\n        return;\n      }\n\n      this.icon = scout.create('Icon', {\n        parent: this,\n        iconDesc: iconId,\n        prepend: true\n      });\n      this.icon.one('destroy', function () {\n        this.icon = null;\n      }.bind(this));\n      this.icon.render(this.$header);\n\n      this._updateIconStyle();\n    }\n  }, {\n    key: \"_updateIconStyle\",\n    value: function _updateIconStyle() {\n      var hasTitle = !!this.title;\n      this.get$Icon().toggleClass('with-title', hasTitle);\n      this.get$Icon().addClass('group-icon');\n\n      this._renderCollapseStyle();\n    }\n  }, {\n    key: \"get$Icon\",\n    value: function get$Icon() {\n      if (this.icon) {\n        return this.icon.$container;\n      }\n\n      return $();\n    }\n  }, {\n    key: \"_removeIconId\",\n    value: function _removeIconId() {\n      if (this.icon) {\n        this.icon.destroy();\n      }\n    }\n  }, {\n    key: \"setHeader\",\n    value: function setHeader(header) {\n      this.setProperty('header', header);\n    }\n  }, {\n    key: \"_setHeader\",\n    value: function _setHeader(header) {\n      this._setProperty('header', header);\n    }\n  }, {\n    key: \"setHeaderFocusable\",\n    value: function setHeaderFocusable(headerFocusable) {\n      this.setProperty('headerFocusable', headerFocusable);\n    }\n  }, {\n    key: \"_renderHeaderFocusable\",\n    value: function _renderHeaderFocusable() {\n      this.$header.toggleClass('unfocusable', !this.headerFocusable);\n    }\n  }, {\n    key: \"setTitle\",\n    value: function setTitle(title) {\n      this.setProperty('title', title);\n    }\n  }, {\n    key: \"_renderTitle\",\n    value: function _renderTitle() {\n      if (this.$title) {\n        if (this.titleHtmlEnabled) {\n          this.$title.htmlOrNbsp(this.title);\n        } else {\n          this.$title.textOrNbsp(this.title);\n        }\n\n        this._updateIconStyle();\n      }\n    }\n  }, {\n    key: \"setTitleSuffix\",\n    value: function setTitleSuffix(titleSuffix) {\n      this.setProperty('titleSuffix', titleSuffix);\n    }\n  }, {\n    key: \"_renderTitleSuffix\",\n    value: function _renderTitleSuffix() {\n      if (this.$titleSuffix) {\n        this.$titleSuffix.text(this.titleSuffix || '');\n      }\n    }\n  }, {\n    key: \"setHeaderVisible\",\n    value: function setHeaderVisible(headerVisible) {\n      this.setProperty('headerVisible', headerVisible);\n    }\n  }, {\n    key: \"_renderHeaderVisible\",\n    value: function _renderHeaderVisible() {\n      this.$header.setVisible(this.headerVisible);\n\n      this._renderCollapsible();\n\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"setBody\",\n    value: function setBody(body) {\n      this.setProperty('body', body);\n    }\n  }, {\n    key: \"_setBody\",\n    value: function _setBody(body) {\n      if (!body) {\n        // Create empty body if no body was provided\n        body = scout.create('Widget', {\n          parent: this,\n          _render: function _render() {\n            this.$container = this.$parent.appendDiv('group');\n            this.htmlComp = HtmlComponent.install(this.$container, this.session);\n          }\n        });\n      }\n\n      this._setProperty('body', body);\n    }\n  }, {\n    key: \"_createLoadingSupport\",\n    value: function _createLoadingSupport() {\n      return new LoadingSupport({\n        widget: this,\n        $container: function () {\n          return this.$header;\n        }.bind(this)\n      });\n    }\n  }, {\n    key: \"_renderHeader\",\n    value: function _renderHeader() {\n      if (this.$header) {\n        this.$header.remove();\n\n        this._removeIconId();\n      }\n\n      if (this.header) {\n        this.header.render();\n        this.$header = this.header.$container.addClass('group-header').addClass('custom-header-widget').prependTo(this.$container);\n        this.htmlHeader = this.header.htmlComp;\n      } else {\n        this.$header = this.$container.prependDiv('group-header').unfocusable().addClass('prevent-initial-focus');\n        this.$title = this.$header.appendDiv('group-title');\n        this.$titleSuffix = this.$header.appendDiv('group-title-suffix');\n        tooltips.installForEllipsis(this.$title, {\n          parent: this\n        });\n        this.htmlHeader = HtmlComponent.install(this.$header, this.session);\n\n        if (!this.rendering) {\n          this._renderIconId();\n\n          this._renderTitle();\n\n          this._renderTitleSuffix();\n        }\n      }\n\n      this.$header.on('mousedown', this._onHeaderMouseDown.bind(this));\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"_renderBody\",\n    value: function _renderBody() {\n      this.body.render();\n      this.body.$container.insertAfter(this.$header);\n      this.body.$container.addClass('group-body');\n      this.body.invalidateLayoutTree();\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"getFocusableElement\",\n    value: function getFocusableElement() {\n      if (!this.rendered) {\n        return false;\n      }\n\n      return this.$header;\n    }\n  }, {\n    key: \"toggleCollapse\",\n    value: function toggleCollapse() {\n      this.setCollapsed(!this.collapsed && this.collapsible);\n    }\n  }, {\n    key: \"setCollapsed\",\n    value: function setCollapsed(collapsed) {\n      this.setProperty('collapsed', collapsed);\n    }\n  }, {\n    key: \"_renderCollapsed\",\n    value: function _renderCollapsed() {\n      this.$container.toggleClass('collapsed', this.collapsed);\n      this.$collapseIcon.toggleClass('collapsed', this.collapsed);\n\n      if (!this.collapsed && !this.bodyAnimating) {\n        this._renderBody();\n      }\n\n      if (this.rendered) {\n        this.resizeBody();\n      } else if (this.collapsed) {\n        // Body will be removed after the animation, if there is no animation, remove it now\n        this.body.remove();\n      }\n\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"setCollapsible\",\n    value: function setCollapsible(collapsible) {\n      this.setProperty('collapsible', collapsible);\n    }\n  }, {\n    key: \"_renderCollapsible\",\n    value: function _renderCollapsible() {\n      this.$container.toggleClass('collapsible', this.collapsible);\n      this.$header.toggleClass('disabled', !this.collapsible); // footer is visible if collapseStyle is 'bottom' and either header is visible or has a (collapsible) body\n\n      this.$footer.setVisible(this.collapseStyle === Group.CollapseStyle.BOTTOM && (this.headerVisible || this.collapsible));\n      this.$collapseIcon.setVisible(this.collapsible);\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"setCollapseStyle\",\n    value: function setCollapseStyle(collapseStyle) {\n      this.setProperty('collapseStyle', collapseStyle);\n    }\n  }, {\n    key: \"_renderCollapseStyle\",\n    value: function _renderCollapseStyle() {\n      this.$header.toggleClass('collapse-right', this.collapseStyle === Group.CollapseStyle.RIGHT);\n      this.$container.toggleClass('collapse-bottom', this.collapseStyle === Group.CollapseStyle.BOTTOM);\n\n      if (this.collapseStyle === Group.CollapseStyle.RIGHT && !this.header) {\n        this.$collapseIcon.appendTo(this.$header);\n      } else if (this.collapseStyle === Group.CollapseStyle.LEFT && !this.header) {\n        this.$collapseIcon.prependTo(this.$header);\n      } else if (this.collapseStyle === Group.CollapseStyle.BOTTOM) {\n        var sibling = this.body.$container ? this.body.$container : this.$header;\n        this.$footer.insertAfter(sibling);\n        this.$collapseIcon.insertAfter(this.$collapseBorderLeft);\n      }\n\n      this._renderCollapsible();\n\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"_onHeaderMouseDown\",\n    value: function _onHeaderMouseDown(event) {\n      if (this.collapsible && (!this.header || this.collapseStyle !== Group.CollapseStyle.BOTTOM)) {\n        this.setCollapsed(!this.collapsed && this.collapsible);\n      }\n    }\n  }, {\n    key: \"_onFooterMouseDown\",\n    value: function _onFooterMouseDown(event) {\n      if (this.collapsible) {\n        this.setCollapsed(!this.collapsed && this.collapsible);\n      }\n    }\n    /**\n     * Resizes the body to its preferred size by animating the height.\n     */\n\n  }, {\n    key: \"resizeBody\",\n    value: function resizeBody() {\n      this.animateToggleCollapse().done(function () {\n        if (this.bodyAnimating) {\n          // Another animation has been started in the mean time -> ignore done event\n          return;\n        }\n\n        if (this.collapsed) {\n          this.body.remove();\n        }\n\n        this.invalidateLayoutTree();\n      }.bind(this));\n    }\n    /**\n     * @param {object} [options]\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"animateToggleCollapse\",\n    value: function animateToggleCollapse(options) {\n      var currentSize = graphics.cssSize(this.body.$container);\n      var currentMargins = graphics.margins(this.body.$container);\n      var currentPaddings = graphics.paddings(this.body.$container);\n      var targetHeight, targetMargins, targetPaddings;\n\n      if (this.collapsed) {\n        // Collapsing\n        // Set target values to 0 when collapsing\n        targetHeight = 0;\n        targetMargins = new Insets();\n        targetPaddings = new Insets();\n      } else {\n        // Expanding\n        // Expand to preferred size of the body\n        targetHeight = this.body.htmlComp.prefSize({\n          widthHint: currentSize.width\n        }).height; // Make sure body is layouted correctly before starting the animation (with the target size)\n        // Use setSize to explicitly call its layout (this might even be necessary during the animation, see GroupLayout.invalidate)\n\n        this.body.htmlComp.setSize(new Dimension(this.body.$container.outerWidth(), targetHeight));\n\n        if (this.bodyAnimating) {\n          // The group may be expanded while being collapsed or vice verca.\n          // In that case, use the current values of the inline style as starting values\n          // Clear current insets to read target insets from CSS anew\n          this.body.$container.cssMarginY('').cssPaddingY('');\n          targetMargins = graphics.margins(this.body.$container);\n          targetPaddings = graphics.paddings(this.body.$container);\n        } else {\n          // If toggling is not already in progress, start expanding from 0\n          currentSize.height = 0;\n          currentMargins = new Insets();\n          currentPaddings = new Insets();\n          targetMargins = graphics.margins(this.body.$container);\n          targetPaddings = graphics.paddings(this.body.$container);\n        }\n      }\n\n      this.bodyAnimating = true;\n\n      if (this.collapsed) {\n        this.$container.addClass('collapsing');\n      }\n\n      return this.body.$container.stop(true).cssHeight(currentSize.height).cssMarginTop(currentMargins.top).cssMarginBottom(currentMargins.bottom).cssPaddingTop(currentPaddings.top).cssPaddingBottom(currentPaddings.bottom).animate({\n        height: targetHeight,\n        marginTop: targetMargins.top,\n        marginBottom: targetMargins.bottom,\n        paddingTop: targetPaddings.top,\n        paddingBottom: targetPaddings.bottom\n      }, {\n        duration: 350,\n        progress: function () {\n          this.trigger('bodyHeightChange');\n          this.revalidateLayoutTree();\n        }.bind(this),\n        complete: function () {\n          this.bodyAnimating = false;\n\n          if (this.body.rendered) {\n            // Remove inline styles when finished\n            this.body.$container.cssMarginY('');\n            this.body.$container.cssPaddingY('');\n          }\n\n          if (this.rendered) {\n            this.$container.removeClass('collapsing');\n          }\n\n          this.trigger('bodyHeightChangeDone');\n        }.bind(this)\n      }).promise();\n    }\n  }]);\n\n  return Group;\n}(Widget);\n\n_defineProperty(Group, \"CollapseStyle\", {\n  LEFT: 'left',\n  RIGHT: 'right',\n  BOTTOM: 'bottom'\n});\n\nexport { Group as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/group/Group.js"],"names":["Dimension","graphics","GroupLayout","GroupToggleCollapseKeyStroke","HtmlComponent","Icon","Insets","KeyStrokeContext","LoadingSupport","scout","tooltips","Widget","$","Group","bodyAnimating","collapsed","collapsible","title","titleHtmlEnabled","titleSuffix","header","headerFocusable","headerVisible","body","$container","$header","$footer","$collapseIcon","$collapseBorderLeft","$collapseBorderRight","collapseStyle","CollapseStyle","LEFT","htmlComp","htmlHeader","htmlFooter","iconId","icon","_addWidgetProperties","model","resolveTextKeys","resolveIconIds","_setBody","_setHeader","keyStrokeContext","$bindTarget","bind","registerKeyStroke","$parent","appendDiv","install","session","setLayout","_renderHeader","on","_onFooterMouseDown","_renderIconId","_renderTitle","_renderTitleSuffix","_renderHeaderVisible","_renderHeaderFocusable","_renderCollapsed","_renderCollapseStyle","_renderCollapsible","$title","$titleSuffix","_removeIconId","setTabbable","enabledComputed","setProperty","_updateIconStyle","setIconDesc","create","parent","iconDesc","prepend","one","render","hasTitle","get$Icon","toggleClass","addClass","destroy","_setProperty","htmlOrNbsp","textOrNbsp","text","setVisible","invalidateLayoutTree","_render","widget","remove","prependTo","prependDiv","unfocusable","installForEllipsis","rendering","_onHeaderMouseDown","insertAfter","rendered","setCollapsed","_renderBody","resizeBody","BOTTOM","RIGHT","appendTo","sibling","event","animateToggleCollapse","done","options","currentSize","cssSize","currentMargins","margins","currentPaddings","paddings","targetHeight","targetMargins","targetPaddings","prefSize","widthHint","width","height","setSize","outerWidth","cssMarginY","cssPaddingY","stop","cssHeight","cssMarginTop","top","cssMarginBottom","bottom","cssPaddingTop","cssPaddingBottom","animate","marginTop","marginBottom","paddingTop","paddingBottom","duration","progress","trigger","revalidateLayoutTree","complete","removeClass","promise"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Dimension, graphics, GroupLayout, GroupToggleCollapseKeyStroke, HtmlComponent, Icon, Insets, KeyStrokeContext, LoadingSupport, scout, tooltips, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class Group extends Widget {\n\n  constructor() {\n    super();\n    this.bodyAnimating = false;\n    this.collapsed = false;\n    this.collapsible = true;\n    this.title = null;\n    this.titleHtmlEnabled = false;\n    this.titleSuffix = null;\n    this.header = null;\n    this.headerFocusable = false;\n    this.headerVisible = true;\n    this.body = null;\n\n    this.$container = null;\n    this.$header = null;\n    this.$footer = null;\n    this.$collapseIcon = null;\n    this.$collapseBorderLeft = null;\n    this.$collapseBorderRight = null;\n    this.collapseStyle = Group.CollapseStyle.LEFT;\n    this.htmlComp = null;\n    this.htmlHeader = null;\n    this.htmlFooter = null;\n    this.iconId = null;\n    this.icon = null;\n    this._addWidgetProperties(['header']);\n    this._addWidgetProperties(['body']);\n  }\n\n  static CollapseStyle = {\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n  };\n\n  _init(model) {\n    super._init(model);\n    this.resolveTextKeys(['title', 'titleSuffix']);\n    this.resolveIconIds(['iconId']);\n    this._setBody(this.body);\n    this._setHeader(this.header);\n  }\n\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    // Key stroke should only work when header is focused\n    this.keyStrokeContext.$bindTarget = function() {\n      return this.$header;\n    }.bind(this);\n    this.keyStrokeContext.registerKeyStroke([\n      new GroupToggleCollapseKeyStroke(this)\n    ]);\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('group');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new GroupLayout(this));\n\n    this._renderHeader();\n\n    this.$collapseIcon = this.$header.appendDiv('group-collapse-icon');\n    this.$footer = this.$container.appendDiv('group-footer');\n    this.$collapseBorderLeft = this.$footer.appendDiv('group-collapse-border');\n    this.$collapseBorderRight = this.$footer.appendDiv('group-collapse-border');\n    this.htmlFooter = HtmlComponent.install(this.$footer, this.session);\n    this.$footer.on('mousedown', this._onFooterMouseDown.bind(this));\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderIconId();\n    this._renderTitle();\n    this._renderTitleSuffix();\n    this._renderHeaderVisible();\n    this._renderHeaderFocusable();\n    this._renderCollapsed();\n    this._renderCollapseStyle();\n    this._renderCollapsible();\n  }\n\n  _remove() {\n    this.$header = null;\n    this.$title = null;\n    this.$titleSuffix = null;\n    this.$footer = null;\n    this.$collapseIcon = null;\n    this.$collapseBorderLeft = null;\n    this.$collapseBorderRight = null;\n    this._removeIconId();\n    super._remove();\n  }\n\n  _renderEnabled() {\n    super._renderEnabled();\n    this.$header.setTabbable(this.enabledComputed);\n  }\n\n  setIconId(iconId) {\n    this.setProperty('iconId', iconId);\n  }\n\n  /**\n   * Adds an image or font-based icon to the group header by adding either an IMG or SPAN element.\n   */\n  _renderIconId() {\n    var iconId = this.iconId || '';\n    // If the icon is an image (and not a font icon), the Icon class will invalidate the layout when the image has loaded\n    if (!iconId) {\n      this._removeIconId();\n      this._updateIconStyle();\n      return;\n    }\n    if (this.icon) {\n      this.icon.setIconDesc(iconId);\n      this._updateIconStyle();\n      return;\n    }\n    this.icon = scout.create('Icon', {\n      parent: this,\n      iconDesc: iconId,\n      prepend: true\n    });\n    this.icon.one('destroy', function() {\n      this.icon = null;\n    }.bind(this));\n    this.icon.render(this.$header);\n    this._updateIconStyle();\n  }\n\n  _updateIconStyle() {\n    var hasTitle = !!this.title;\n    this.get$Icon().toggleClass('with-title', hasTitle);\n    this.get$Icon().addClass('group-icon');\n    this._renderCollapseStyle();\n  }\n\n  get$Icon() {\n    if (this.icon) {\n      return this.icon.$container;\n    }\n    return $();\n  }\n\n  _removeIconId() {\n    if (this.icon) {\n      this.icon.destroy();\n    }\n  }\n\n  setHeader(header) {\n    this.setProperty('header', header);\n  }\n\n  _setHeader(header) {\n    this._setProperty('header', header);\n  }\n\n  setHeaderFocusable(headerFocusable) {\n    this.setProperty('headerFocusable', headerFocusable);\n  }\n\n  _renderHeaderFocusable() {\n    this.$header.toggleClass('unfocusable', !this.headerFocusable);\n  }\n\n  setTitle(title) {\n    this.setProperty('title', title);\n  }\n\n  _renderTitle() {\n    if (this.$title) {\n      if (this.titleHtmlEnabled) {\n        this.$title.htmlOrNbsp(this.title);\n      } else {\n        this.$title.textOrNbsp(this.title);\n      }\n      this._updateIconStyle();\n    }\n  }\n\n  setTitleSuffix(titleSuffix) {\n    this.setProperty('titleSuffix', titleSuffix);\n  }\n\n  _renderTitleSuffix() {\n    if (this.$titleSuffix) {\n      this.$titleSuffix.text(this.titleSuffix || '');\n    }\n  }\n\n  setHeaderVisible(headerVisible) {\n    this.setProperty('headerVisible', headerVisible);\n  }\n\n  _renderHeaderVisible() {\n    this.$header.setVisible(this.headerVisible);\n    this._renderCollapsible();\n    this.invalidateLayoutTree();\n  }\n\n  setBody(body) {\n    this.setProperty('body', body);\n  }\n\n  _setBody(body) {\n    if (!body) {\n      // Create empty body if no body was provided\n      body = scout.create('Widget', {\n        parent: this,\n        _render: function() {\n          this.$container = this.$parent.appendDiv('group');\n          this.htmlComp = HtmlComponent.install(this.$container, this.session);\n        }\n      });\n    }\n    this._setProperty('body', body);\n  }\n\n  _createLoadingSupport() {\n    return new LoadingSupport({\n      widget: this,\n      $container: function() {\n        return this.$header;\n      }.bind(this)\n    });\n  }\n\n  _renderHeader() {\n    if (this.$header) {\n      this.$header.remove();\n      this._removeIconId();\n    }\n    if (this.header) {\n      this.header.render();\n      this.$header = this.header.$container\n        .addClass('group-header')\n        .addClass('custom-header-widget')\n        .prependTo(this.$container);\n      this.htmlHeader = this.header.htmlComp;\n    } else {\n      this.$header = this.$container\n        .prependDiv('group-header')\n        .unfocusable()\n        .addClass('prevent-initial-focus');\n      this.$title = this.$header.appendDiv('group-title');\n      this.$titleSuffix = this.$header.appendDiv('group-title-suffix');\n      tooltips.installForEllipsis(this.$title, {\n        parent: this\n      });\n      this.htmlHeader = HtmlComponent.install(this.$header, this.session);\n      if (!this.rendering) {\n        this._renderIconId();\n        this._renderTitle();\n        this._renderTitleSuffix();\n      }\n    }\n    this.$header.on('mousedown', this._onHeaderMouseDown.bind(this));\n    this.invalidateLayoutTree();\n  }\n\n  _renderBody() {\n    this.body.render();\n    this.body.$container.insertAfter(this.$header);\n    this.body.$container.addClass('group-body');\n    this.body.invalidateLayoutTree();\n  }\n\n  /**\n   * @override\n   */\n  getFocusableElement() {\n    if (!this.rendered) {\n      return false;\n    }\n    return this.$header;\n  }\n\n  toggleCollapse() {\n    this.setCollapsed(!this.collapsed && this.collapsible);\n  }\n\n  setCollapsed(collapsed) {\n    this.setProperty('collapsed', collapsed);\n  }\n\n  _renderCollapsed() {\n    this.$container.toggleClass('collapsed', this.collapsed);\n    this.$collapseIcon.toggleClass('collapsed', this.collapsed);\n    if (!this.collapsed && !this.bodyAnimating) {\n      this._renderBody();\n    }\n    if (this.rendered) {\n      this.resizeBody();\n    } else if (this.collapsed) {\n      // Body will be removed after the animation, if there is no animation, remove it now\n      this.body.remove();\n    }\n    this.invalidateLayoutTree();\n  }\n\n  setCollapsible(collapsible) {\n    this.setProperty('collapsible', collapsible);\n  }\n\n  _renderCollapsible() {\n    this.$container.toggleClass('collapsible', this.collapsible);\n    this.$header.toggleClass('disabled', !this.collapsible);\n    // footer is visible if collapseStyle is 'bottom' and either header is visible or has a (collapsible) body\n    this.$footer.setVisible(this.collapseStyle === Group.CollapseStyle.BOTTOM && (this.headerVisible || this.collapsible));\n    this.$collapseIcon.setVisible(this.collapsible);\n    this.invalidateLayoutTree();\n  }\n\n  setCollapseStyle(collapseStyle) {\n    this.setProperty('collapseStyle', collapseStyle);\n  }\n\n  _renderCollapseStyle() {\n    this.$header.toggleClass('collapse-right', this.collapseStyle === Group.CollapseStyle.RIGHT);\n    this.$container.toggleClass('collapse-bottom', this.collapseStyle === Group.CollapseStyle.BOTTOM);\n\n    if (this.collapseStyle === Group.CollapseStyle.RIGHT && !this.header) {\n      this.$collapseIcon.appendTo(this.$header);\n    } else if (this.collapseStyle === Group.CollapseStyle.LEFT && !this.header) {\n      this.$collapseIcon.prependTo(this.$header);\n    } else if (this.collapseStyle === Group.CollapseStyle.BOTTOM) {\n      var sibling = this.body.$container ? this.body.$container : this.$header;\n      this.$footer.insertAfter(sibling);\n      this.$collapseIcon.insertAfter(this.$collapseBorderLeft);\n    }\n\n    this._renderCollapsible();\n    this.invalidateLayoutTree();\n  }\n\n  _onHeaderMouseDown(event) {\n    if (this.collapsible && (!this.header || this.collapseStyle !== Group.CollapseStyle.BOTTOM)) {\n      this.setCollapsed(!this.collapsed && this.collapsible);\n    }\n  }\n\n  _onFooterMouseDown(event) {\n    if (this.collapsible) {\n      this.setCollapsed(!this.collapsed && this.collapsible);\n    }\n  }\n\n  /**\n   * Resizes the body to its preferred size by animating the height.\n   */\n  resizeBody() {\n    this.animateToggleCollapse().done(function() {\n      if (this.bodyAnimating) {\n        // Another animation has been started in the mean time -> ignore done event\n        return;\n      }\n      if (this.collapsed) {\n        this.body.remove();\n      }\n      this.invalidateLayoutTree();\n    }.bind(this));\n  }\n\n  /**\n   * @param {object} [options]\n   * @returns {Promise}\n   */\n  animateToggleCollapse(options) {\n    var currentSize = graphics.cssSize(this.body.$container);\n    var currentMargins = graphics.margins(this.body.$container);\n    var currentPaddings = graphics.paddings(this.body.$container);\n    var targetHeight, targetMargins, targetPaddings;\n\n    if (this.collapsed) {\n      // Collapsing\n      // Set target values to 0 when collapsing\n      targetHeight = 0;\n      targetMargins = new Insets();\n      targetPaddings = new Insets();\n    } else {\n      // Expanding\n      // Expand to preferred size of the body\n      targetHeight = this.body.htmlComp.prefSize({\n        widthHint: currentSize.width\n      }).height;\n\n      // Make sure body is layouted correctly before starting the animation (with the target size)\n      // Use setSize to explicitly call its layout (this might even be necessary during the animation, see GroupLayout.invalidate)\n      this.body.htmlComp.setSize(new Dimension(this.body.$container.outerWidth(), targetHeight));\n\n      if (this.bodyAnimating) {\n        // The group may be expanded while being collapsed or vice verca.\n        // In that case, use the current values of the inline style as starting values\n\n        // Clear current insets to read target insets from CSS anew\n        this.body.$container\n          .cssMarginY('')\n          .cssPaddingY('');\n        targetMargins = graphics.margins(this.body.$container);\n        targetPaddings = graphics.paddings(this.body.$container);\n      } else {\n        // If toggling is not already in progress, start expanding from 0\n        currentSize.height = 0;\n        currentMargins = new Insets();\n        currentPaddings = new Insets();\n        targetMargins = graphics.margins(this.body.$container);\n        targetPaddings = graphics.paddings(this.body.$container);\n      }\n    }\n\n    this.bodyAnimating = true;\n    if (this.collapsed) {\n      this.$container.addClass('collapsing');\n    }\n    return this.body.$container\n      .stop(true)\n      .cssHeight(currentSize.height)\n      .cssMarginTop(currentMargins.top)\n      .cssMarginBottom(currentMargins.bottom)\n      .cssPaddingTop(currentPaddings.top)\n      .cssPaddingBottom(currentPaddings.bottom)\n      .animate({\n        height: targetHeight,\n        marginTop: targetMargins.top,\n        marginBottom: targetMargins.bottom,\n        paddingTop: targetPaddings.top,\n        paddingBottom: targetPaddings.bottom\n      }, {\n        duration: 350,\n        progress: function() {\n          this.trigger('bodyHeightChange');\n          this.revalidateLayoutTree();\n        }.bind(this),\n        complete: function() {\n          this.bodyAnimating = false;\n          if (this.body.rendered) {\n            // Remove inline styles when finished\n            this.body.$container.cssMarginY('');\n            this.body.$container.cssPaddingY('');\n          }\n          if (this.rendered) {\n            this.$container.removeClass('collapsing');\n          }\n          this.trigger('bodyHeightChangeDone');\n        }.bind(this)\n      })\n      .promise();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}