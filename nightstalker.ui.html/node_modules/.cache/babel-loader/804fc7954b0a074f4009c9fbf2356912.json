{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, HtmlComponent, ModeSelectorLayout, Widget } from '../index';\n\nvar ModeSelector = /*#__PURE__*/function (_Widget) {\n  _inherits(ModeSelector, _Widget);\n\n  var _super = _createSuper(ModeSelector);\n\n  function ModeSelector() {\n    var _this;\n\n    _classCallCheck(this, ModeSelector);\n\n    _this = _super.call(this);\n\n    _this._addWidgetProperties(['modes', 'selectedMode']);\n\n    _this._addPreserveOnPropertyChangeProperties(['selectedMode']);\n\n    _this.modes = [];\n    _this.selectedMode = null;\n    _this._modePropertyChangeHandler = _this._onModePropertyChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ModeSelector, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(ModeSelector.prototype), \"_init\", this).call(this, model);\n\n      this._setModes(this.modes);\n\n      this._setSelectedMode(this.selectedMode);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent.appendDiv('mode-selector');\n      this.htmlComp = HtmlComponent.install(this.$container, this.session);\n      this.htmlComp.setLayout(new ModeSelectorLayout(this));\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(ModeSelector.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderModes();\n    }\n  }, {\n    key: \"setModes\",\n    value: function setModes(modes) {\n      this.setProperty('modes', modes);\n    }\n  }, {\n    key: \"_setModes\",\n    value: function _setModes(modes) {\n      this.modes.forEach(function (mode) {\n        mode.off('propertyChange', this._modePropertyChangeHandler);\n      }, this);\n\n      this._setProperty('modes', arrays.ensure(modes));\n\n      this.modes.forEach(function (mode) {\n        mode.on('propertyChange', this._modePropertyChangeHandler);\n\n        if (mode.selected) {\n          this.setSelectedMode(mode);\n        }\n      }, this);\n    }\n  }, {\n    key: \"_renderModes\",\n    value: function _renderModes() {\n      this.modes.forEach(function (mode) {\n        mode.render();\n      });\n\n      this._updateMarkers();\n    }\n  }, {\n    key: \"setSelectedMode\",\n    value: function setSelectedMode(selectedMode) {\n      this.setProperty('selectedMode', selectedMode);\n    }\n  }, {\n    key: \"_setSelectedMode\",\n    value: function _setSelectedMode(selectedMode) {\n      if (this.selectedMode && this.selectedMode !== selectedMode) {\n        this.selectedMode.setSelected(false);\n      }\n\n      if (selectedMode && !selectedMode.selected) {\n        selectedMode.setSelected(true);\n      }\n\n      this._updateMarkers();\n\n      this._setProperty('selectedMode', selectedMode);\n    }\n  }, {\n    key: \"_onModePropertyChange\",\n    value: function _onModePropertyChange(event) {\n      if (event.propertyName === 'selected' && event.newValue) {\n        this.setSelectedMode(event.source);\n      } else if (event.propertyName === 'visible') {\n        this._updateMarkers();\n      }\n    }\n  }, {\n    key: \"_updateMarkers\",\n    value: function _updateMarkers() {\n      var visibleModes = [];\n      var selectedModeIndex = -1;\n      this.modes.forEach(function (mode) {\n        if (mode.rendered) {\n          mode.$container.removeClass('first last after-selected');\n\n          if (mode.isVisible()) {\n            visibleModes.push(mode);\n\n            if (mode.selected) {\n              selectedModeIndex = visibleModes.length - 1;\n            }\n          }\n        }\n      });\n\n      if (visibleModes.length) {\n        visibleModes[0].$container.addClass('first');\n        visibleModes[visibleModes.length - 1].$container.addClass('last');\n\n        if (selectedModeIndex >= 0 && selectedModeIndex < visibleModes.length - 1) {\n          visibleModes[selectedModeIndex + 1].$container.addClass('after-selected');\n        }\n      }\n    }\n  }, {\n    key: \"findModeById\",\n    value: function findModeById(id) {\n      return arrays.find(this.modes, function (mode) {\n        return mode.id === id;\n      });\n    }\n  }, {\n    key: \"findModeByRef\",\n    value: function findModeByRef(ref) {\n      return arrays.find(this.modes, function (mode) {\n        return mode.ref === ref;\n      });\n    }\n  }, {\n    key: \"selectModeById\",\n    value: function selectModeById(id) {\n      this.setSelectedMode(this.findModeById(id));\n    }\n  }, {\n    key: \"selectModeByRef\",\n    value: function selectModeByRef(ref) {\n      this.setSelectedMode(this.findModeByRef(ref));\n    }\n  }]);\n\n  return ModeSelector;\n}(Widget);\n\nexport { ModeSelector as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/modeselector/ModeSelector.js"],"names":["arrays","HtmlComponent","ModeSelectorLayout","Widget","ModeSelector","_addWidgetProperties","_addPreserveOnPropertyChangeProperties","modes","selectedMode","_modePropertyChangeHandler","_onModePropertyChange","bind","model","_setModes","_setSelectedMode","$container","$parent","appendDiv","htmlComp","install","session","setLayout","_renderModes","setProperty","forEach","mode","off","_setProperty","ensure","on","selected","setSelectedMode","render","_updateMarkers","setSelected","event","propertyName","newValue","source","visibleModes","selectedModeIndex","rendered","removeClass","isVisible","push","length","addClass","id","find","ref","findModeById","findModeByRef"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, HtmlComponent, ModeSelectorLayout, Widget} from '../index';\n\nexport default class ModeSelector extends Widget {\n\n  constructor() {\n    super();\n    this._addWidgetProperties(['modes', 'selectedMode']);\n    this._addPreserveOnPropertyChangeProperties(['selectedMode']);\n\n    this.modes = [];\n    this.selectedMode = null;\n\n    this._modePropertyChangeHandler = this._onModePropertyChange.bind(this);\n  }\n\n  _init(model) {\n    super._init(model);\n    this._setModes(this.modes);\n    this._setSelectedMode(this.selectedMode);\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('mode-selector');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new ModeSelectorLayout(this));\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderModes();\n  }\n\n  setModes(modes) {\n    this.setProperty('modes', modes);\n  }\n\n  _setModes(modes) {\n    this.modes.forEach(function(mode) {\n      mode.off('propertyChange', this._modePropertyChangeHandler);\n    }, this);\n    this._setProperty('modes', arrays.ensure(modes));\n    this.modes.forEach(function(mode) {\n      mode.on('propertyChange', this._modePropertyChangeHandler);\n      if (mode.selected) {\n        this.setSelectedMode(mode);\n      }\n    }, this);\n  }\n\n  _renderModes() {\n    this.modes.forEach(function(mode) {\n      mode.render();\n    });\n    this._updateMarkers();\n  }\n\n  setSelectedMode(selectedMode) {\n    this.setProperty('selectedMode', selectedMode);\n  }\n\n  _setSelectedMode(selectedMode) {\n    if (this.selectedMode && this.selectedMode !== selectedMode) {\n      this.selectedMode.setSelected(false);\n    }\n    if (selectedMode && !selectedMode.selected) {\n      selectedMode.setSelected(true);\n    }\n    this._updateMarkers();\n    this._setProperty('selectedMode', selectedMode);\n  }\n\n  _onModePropertyChange(event) {\n    if (event.propertyName === 'selected' && event.newValue) {\n      this.setSelectedMode(event.source);\n    } else if (event.propertyName === 'visible') {\n      this._updateMarkers();\n    }\n  }\n\n  _updateMarkers() {\n    var visibleModes = [];\n    var selectedModeIndex = -1;\n    this.modes.forEach(function(mode) {\n      if (mode.rendered) {\n        mode.$container.removeClass('first last after-selected');\n        if (mode.isVisible()) {\n          visibleModes.push(mode);\n          if (mode.selected) {\n            selectedModeIndex = visibleModes.length - 1;\n          }\n        }\n      }\n    });\n    if (visibleModes.length) {\n      visibleModes[0].$container.addClass('first');\n      visibleModes[visibleModes.length - 1].$container.addClass('last');\n      if (selectedModeIndex >= 0 && selectedModeIndex < (visibleModes.length - 1)) {\n        visibleModes[selectedModeIndex + 1].$container.addClass('after-selected');\n      }\n    }\n  }\n\n  findModeById(id) {\n    return arrays.find(this.modes, function(mode) {\n      return mode.id === id;\n    });\n  }\n\n  findModeByRef(ref) {\n    return arrays.find(this.modes, function(mode) {\n      return mode.ref === ref;\n    });\n  }\n\n  selectModeById(id) {\n    this.setSelectedMode(this.findModeById(id));\n  }\n\n  selectModeByRef(ref) {\n    this.setSelectedMode(this.findModeByRef(ref));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}