{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nvar RemoteTileFilter = /*#__PURE__*/function () {\n  function RemoteTileFilter(model) {\n    _classCallCheck(this, RemoteTileFilter);\n\n    model = model || {};\n    this.tileMap = {};\n\n    if (model.tileIds) {\n      this.setTileIds(model.tileIds);\n    }\n  }\n\n  _createClass(RemoteTileFilter, [{\n    key: \"setTileIds\",\n    value: function setTileIds(tileIds) {\n      this.tileMap = {};\n      tileIds.forEach(function (tileId) {\n        this.tileMap[tileId] = tileId;\n      }, this);\n    }\n  }, {\n    key: \"accept\",\n    value: function accept(tile) {\n      return !!this.tileMap[tile.id];\n    }\n  }]);\n\n  return RemoteTileFilter;\n}();\n\nexport { RemoteTileFilter as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/tile/RemoteTileFilter.js"],"names":["RemoteTileFilter","model","tileMap","tileIds","setTileIds","forEach","tileId","tile","id"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACqBA,gB;AAEnB,4BAAYC,KAAZ,EAAmB;AAAA;;AACjBA,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AACA,SAAKC,OAAL,GAAe,EAAf;;AACA,QAAID,KAAK,CAACE,OAAV,EAAmB;AACjB,WAAKC,UAAL,CAAgBH,KAAK,CAACE,OAAtB;AACD;AACF;;;;+BAEUA,O,EAAS;AAClB,WAAKD,OAAL,GAAe,EAAf;AACAC,MAAAA,OAAO,CAACE,OAAR,CAAgB,UAASC,MAAT,EAAiB;AAC/B,aAAKJ,OAAL,CAAaI,MAAb,IAAuBA,MAAvB;AACD,OAFD,EAEG,IAFH;AAGD;;;2BAEMC,I,EAAM;AACX,aAAO,CAAC,CAAC,KAAKL,OAAL,CAAaK,IAAI,CAACC,EAAlB,CAAT;AACD;;;;;;SAnBkBR,gB","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class RemoteTileFilter {\n\n  constructor(model) {\n    model = model || {};\n    this.tileMap = {};\n    if (model.tileIds) {\n      this.setTileIds(model.tileIds);\n    }\n  }\n\n  setTileIds(tileIds) {\n    this.tileMap = {};\n    tileIds.forEach(function(tileId) {\n      this.tileMap[tileId] = tileId;\n    }, this);\n  }\n\n  accept(tile) {\n    return !!this.tileMap[tile.id];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}