{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, FormField, GroupBox, scout, SmartField, ValueField } from '../index';\n\nvar TileTableHeaderBox = /*#__PURE__*/function (_GroupBox) {\n  _inherits(TileTableHeaderBox, _GroupBox);\n\n  var _super = _createSuper(TileTableHeaderBox);\n\n  function TileTableHeaderBox() {\n    var _this;\n\n    _classCallCheck(this, TileTableHeaderBox);\n\n    _this = _super.call(this);\n    _this.table = null;\n    _this.labelVisible = false;\n    _this.statusVisible = false;\n    _this.gridColumnCount = 7;\n    _this.bodyLayoutConfig = {\n      hgap: 8\n    };\n    _this.groupByField = null;\n    _this.sortByField = null;\n    _this._tableGroupHandler = _this._onTableGroup.bind(_assertThisInitialized(_this));\n    _this._tableSortHandler = _this._onTableSort.bind(_assertThisInitialized(_this));\n    _this._destroyHandler = _this._uninstallListeners.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TileTableHeaderBox, [{\n    key: \"_installListeners\",\n    value: function _installListeners() {\n      this.table.on('group', this._tableGroupHandler);\n      this.table.on('sort', this._tableSortHandler);\n      this.table.one('destroy', this._destroyHandler);\n    }\n  }, {\n    key: \"_uninstallListeners\",\n    value: function _uninstallListeners() {\n      this.table.off('group', this._tableGroupHandler);\n      this.table.off('sort', this._tableSortHandler);\n    }\n  }, {\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(TileTableHeaderBox.prototype), \"_init\", this).call(this, model);\n\n      this.table = this.parent;\n\n      this._installListeners();\n\n      this.insertField(scout.create('PlaceholderField', {\n        id: 'PlaceholderField',\n        parent: this,\n        gridDataHints: {\n          w: 5\n        }\n      })); // Group By Field\n\n      this.groupByField = scout.create('SmartField', {\n        id: 'GroupByField',\n        parent: this,\n        label: this.session.text('GroupBy'),\n        labelPosition: FormField.LabelPosition.ON_FIELD,\n        clearable: ValueField.Clearable.ALWAYS,\n        statusVisible: false,\n        displayStyle: SmartField.DisplayStyle.DROPDOWN\n      });\n      this.groupByField.setLookupCall(this._createGroupByLookupCall());\n      this.groupByField.setVisible(!arrays.empty(this.groupByField.lookupCall.data));\n      this.groupByField.on('propertyChange', this._onGroupingChange.bind(this));\n      this.insertField(this.groupByField); // Sort By Field\n\n      this.sortByField = scout.create('SmartField', {\n        id: 'SortByField',\n        parent: this,\n        label: this.session.text('SortBy'),\n        labelPosition: FormField.LabelPosition.ON_FIELD,\n        clearable: ValueField.Clearable.ALWAYS,\n        statusVisible: false,\n        displayStyle: SmartField.DisplayStyle.DROPDOWN\n      });\n      this.sortByField.setLookupCall(this._createSortByLookupCall());\n      this.sortByField.setVisible(!arrays.empty(this.sortByField.lookupCall.data));\n      this.sortByField.on('propertyChange', this._onSortingChange.bind(this));\n      this.insertField(this.sortByField); // it's okay to sync the fields here, _onGroupingChange/_onSortingChange will return early since the tileMode property is not set yet at this point\n\n      this._syncSortingGroupingFields();\n    }\n  }, {\n    key: \"_findSortByLookupRowForKey\",\n    value: function _findSortByLookupRowForKey(key) {\n      return this.sortByField.lookupCall.data.map(function (lookupRow) {\n        return lookupRow[0];\n      }).find(function (rowKey) {\n        return rowKey.column === key.column && rowKey.asc === key.asc;\n      }, this);\n    }\n  }, {\n    key: \"_createGroupByLookupCall\",\n    value: function _createGroupByLookupCall() {\n      return scout.create('TileTableHeaderGroupByLookupCall', {\n        session: this.session,\n        table: this.table\n      });\n    }\n  }, {\n    key: \"_createSortByLookupCall\",\n    value: function _createSortByLookupCall() {\n      return scout.create('TileTableHeaderSortByLookupCall', {\n        session: this.session,\n        table: this.table\n      });\n    }\n  }, {\n    key: \"_onGroupingChange\",\n    value: function _onGroupingChange(event) {\n      if (!this.table.tileMode) {\n        return;\n      }\n\n      if (event.propertyName === 'value') {\n        this.isGrouping = true;\n        var column;\n\n        if (event.newValue !== null) {\n          column = event.newValue;\n          var direction = column.sortIndex >= 0 && !column.sortAscending ? 'desc' : 'asc';\n          this.table.groupColumn(column, false, direction, false);\n        } else {\n          column = event.oldValue;\n          this.table.groupColumn(column, false, null, true);\n        }\n\n        this.isGrouping = false;\n      }\n    }\n  }, {\n    key: \"_onSortingChange\",\n    value: function _onSortingChange(event) {\n      if (!this.table.tileMode) {\n        return;\n      }\n\n      if (event.propertyName === 'value') {\n        this.isSorting = true;\n        var column, sortInfo;\n\n        if (event.newValue !== null) {\n          sortInfo = event.newValue.column;\n          column = event.newValue.column;\n          this.table.sort(event.newValue.column, event.newValue.asc ? 'asc' : 'desc', false, false);\n        } else {\n          this.table.sort(event.oldValue, null, false, true);\n        }\n\n        this.isSorting = false;\n      }\n    }\n  }, {\n    key: \"_syncSortingGroupingFields\",\n    value: function _syncSortingGroupingFields() {\n      var primaryGroupingColumn = arrays.find(this.table.visibleColumns(), function (column) {\n        return column.grouped && column.sortIndex === 0;\n      });\n\n      if (primaryGroupingColumn) {\n        this.groupByField.setValue(primaryGroupingColumn);\n      } else {\n        this.groupByField.setValue(null);\n      }\n\n      var primarySortingColumn = arrays.find(this.table.visibleColumns(), function (column) {\n        return column.sortActive && column.sortIndex === 0;\n      });\n\n      if (primarySortingColumn) {\n        this.sortByField.setValue(this._findSortByLookupRowForKey({\n          column: primarySortingColumn,\n          asc: primarySortingColumn.sortAscending\n        }));\n      } else {\n        this.sortByField.setValue(null);\n      }\n    }\n  }, {\n    key: \"_onTableGroup\",\n    value: function _onTableGroup(event) {\n      if (!this.isGrouping) {\n        this._syncSortingGroupingFields();\n      }\n    }\n  }, {\n    key: \"_onTableSort\",\n    value: function _onTableSort(event) {\n      if (!this.isSorting) {\n        this._syncSortingGroupingFields();\n      }\n    }\n  }]);\n\n  return TileTableHeaderBox;\n}(GroupBox);\n\nexport { TileTableHeaderBox as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/table/TileTableHeaderBox.js"],"names":["arrays","FormField","GroupBox","scout","SmartField","ValueField","TileTableHeaderBox","table","labelVisible","statusVisible","gridColumnCount","bodyLayoutConfig","hgap","groupByField","sortByField","_tableGroupHandler","_onTableGroup","bind","_tableSortHandler","_onTableSort","_destroyHandler","_uninstallListeners","on","one","off","model","parent","_installListeners","insertField","create","id","gridDataHints","w","label","session","text","labelPosition","LabelPosition","ON_FIELD","clearable","Clearable","ALWAYS","displayStyle","DisplayStyle","DROPDOWN","setLookupCall","_createGroupByLookupCall","setVisible","empty","lookupCall","data","_onGroupingChange","_createSortByLookupCall","_onSortingChange","_syncSortingGroupingFields","key","map","lookupRow","find","rowKey","column","asc","event","tileMode","propertyName","isGrouping","newValue","direction","sortIndex","sortAscending","groupColumn","oldValue","isSorting","sortInfo","sort","primaryGroupingColumn","visibleColumns","grouped","setValue","primarySortingColumn","sortActive","_findSortByLookupRowForKey"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, FormField, GroupBox, scout, SmartField, ValueField} from '../index';\n\nexport default class TileTableHeaderBox extends GroupBox {\n\n  constructor() {\n    super();\n\n    this.table = null;\n    this.labelVisible = false;\n    this.statusVisible = false;\n    this.gridColumnCount = 7;\n    this.bodyLayoutConfig = {\n      hgap: 8\n    };\n\n    this.groupByField = null;\n    this.sortByField = null;\n\n    this._tableGroupHandler = this._onTableGroup.bind(this);\n    this._tableSortHandler = this._onTableSort.bind(this);\n    this._destroyHandler = this._uninstallListeners.bind(this);\n  }\n\n  _installListeners() {\n    this.table.on('group', this._tableGroupHandler);\n    this.table.on('sort', this._tableSortHandler);\n    this.table.one('destroy', this._destroyHandler);\n  }\n\n  _uninstallListeners() {\n    this.table.off('group', this._tableGroupHandler);\n    this.table.off('sort', this._tableSortHandler);\n  }\n\n  _init(model) {\n    super._init(model);\n\n    this.table = this.parent;\n    this._installListeners();\n\n    this.insertField(scout.create('PlaceholderField', {\n      id: 'PlaceholderField',\n      parent: this,\n      gridDataHints: {\n        w: 5\n      }\n    }));\n\n    // Group By Field\n    this.groupByField = scout.create('SmartField', {\n      id: 'GroupByField',\n      parent: this,\n      label: this.session.text('GroupBy'),\n      labelPosition: FormField.LabelPosition.ON_FIELD,\n      clearable: ValueField.Clearable.ALWAYS,\n      statusVisible: false,\n      displayStyle: SmartField.DisplayStyle.DROPDOWN\n    });\n    this.groupByField.setLookupCall(this._createGroupByLookupCall());\n    this.groupByField.setVisible(!arrays.empty(this.groupByField.lookupCall.data));\n    this.groupByField.on('propertyChange', this._onGroupingChange.bind(this));\n\n    this.insertField(this.groupByField);\n\n    // Sort By Field\n    this.sortByField = scout.create('SmartField', {\n      id: 'SortByField',\n      parent: this,\n      label: this.session.text('SortBy'),\n      labelPosition: FormField.LabelPosition.ON_FIELD,\n      clearable: ValueField.Clearable.ALWAYS,\n      statusVisible: false,\n      displayStyle: SmartField.DisplayStyle.DROPDOWN\n    });\n    this.sortByField.setLookupCall(this._createSortByLookupCall());\n    this.sortByField.setVisible(!arrays.empty(this.sortByField.lookupCall.data));\n    this.sortByField.on('propertyChange', this._onSortingChange.bind(this));\n\n    this.insertField(this.sortByField);\n\n    // it's okay to sync the fields here, _onGroupingChange/_onSortingChange will return early since the tileMode property is not set yet at this point\n    this._syncSortingGroupingFields();\n  }\n\n  _findSortByLookupRowForKey(key) {\n    return this.sortByField.lookupCall.data.map(function(lookupRow) {\n      return lookupRow[0];\n    }).find(function(rowKey) {\n      return rowKey.column === key.column && rowKey.asc === key.asc;\n    }, this);\n  }\n\n  _createGroupByLookupCall() {\n    return scout.create('TileTableHeaderGroupByLookupCall', {\n      session: this.session,\n      table: this.table\n    });\n  }\n\n  _createSortByLookupCall() {\n    return scout.create('TileTableHeaderSortByLookupCall', {\n      session: this.session,\n      table: this.table\n    });\n  }\n\n  _onGroupingChange(event) {\n    if (!this.table.tileMode) {\n      return;\n    }\n    if (event.propertyName === 'value') {\n      this.isGrouping = true;\n      var column;\n      if (event.newValue !== null) {\n        column = event.newValue;\n        var direction = (column.sortIndex >= 0 && !column.sortAscending) ? 'desc' : 'asc';\n        this.table.groupColumn(column, false, direction, false);\n      } else {\n        column = event.oldValue;\n        this.table.groupColumn(column, false, null, true);\n      }\n      this.isGrouping = false;\n    }\n  }\n\n  _onSortingChange(event) {\n    if (!this.table.tileMode) {\n      return;\n    }\n    if (event.propertyName === 'value') {\n      this.isSorting = true;\n      var column, sortInfo;\n      if (event.newValue !== null) {\n        sortInfo = event.newValue.column;\n        column = event.newValue.column;\n        this.table.sort(event.newValue.column, event.newValue.asc ? 'asc' : 'desc', false, false);\n      } else {\n        this.table.sort(event.oldValue, null, false, true);\n      }\n      this.isSorting = false;\n    }\n  }\n\n  _syncSortingGroupingFields() {\n    var primaryGroupingColumn = arrays.find(this.table.visibleColumns(), function(column) {\n      return column.grouped && column.sortIndex === 0;\n    });\n    if (primaryGroupingColumn) {\n      this.groupByField.setValue(primaryGroupingColumn);\n    } else {\n      this.groupByField.setValue(null);\n    }\n\n    var primarySortingColumn = arrays.find(this.table.visibleColumns(), function(column) {\n      return column.sortActive && column.sortIndex === 0;\n    });\n\n    if (primarySortingColumn) {\n      this.sortByField.setValue(this._findSortByLookupRowForKey({\n        column: primarySortingColumn,\n        asc: primarySortingColumn.sortAscending\n      }));\n    } else {\n      this.sortByField.setValue(null);\n    }\n  }\n\n  _onTableGroup(event) {\n    if (!this.isGrouping) {\n      this._syncSortingGroupingFields();\n    }\n  }\n\n  _onTableSort(event) {\n    if (!this.isSorting) {\n      this._syncSortingGroupingFields();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}