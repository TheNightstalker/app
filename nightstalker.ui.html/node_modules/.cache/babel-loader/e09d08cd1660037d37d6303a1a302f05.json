{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { HtmlComponent, objects, ProposalChooserLayout, ProposalField, scout, SmartField, Status, Table, Widget } from '../../../index';\nimport $ from 'jquery';\n\nvar ProposalChooser = /*#__PURE__*/function (_Widget) {\n  _inherits(ProposalChooser, _Widget);\n\n  var _super = _createSuper(ProposalChooser);\n\n  function ProposalChooser() {\n    var _this;\n\n    _classCallCheck(this, ProposalChooser);\n\n    _this = _super.call(this);\n    _this.$container = null;\n    _this.$status = null;\n    _this.activeFilterGroup = null;\n    _this.htmlComp = null;\n    _this._updateStatusTimeout = null;\n    _this.status = null;\n    _this.statusVisible = true;\n    _this.touch = false;\n    return _this;\n  }\n\n  _createClass(ProposalChooser, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(ProposalChooser.prototype), \"_init\", this).call(this, model); // If smartField is not explicitly provided by model, use smartField instance\n      // from parent (which is usually the SmartFieldPopup)\n\n\n      if (!model.smartField) {\n        this.smartField = this.parent.smartField;\n      }\n\n      this.model = this._createModel();\n    }\n  }, {\n    key: \"_createModel\",\n    value: function _createModel($parent) {\n      throw new Error('_createModel() not implemented');\n    }\n  }, {\n    key: \"setLookupResult\",\n    value: function setLookupResult(result) {\n      throw new Error('setLookupResult() not implemented');\n    }\n  }, {\n    key: \"selectFirstLookupRow\",\n    value: function selectFirstLookupRow() {\n      throw new Error('selectFirstLookupRow() not implemented');\n    }\n  }, {\n    key: \"clearSelection\",\n    value: function clearSelection() {\n      throw new Error('clearSelection() not implemented');\n    }\n  }, {\n    key: \"clearLookupRows\",\n    value: function clearLookupRows() {\n      throw new Error('clearLookupRows() not implemented');\n    }\n    /**\n     * @param row TableRow or TreeNode (both have the same properties)\n     */\n\n  }, {\n    key: \"triggerLookupRowSelected\",\n    value: function triggerLookupRowSelected(row) {\n      row = row || this.selectedRow();\n\n      if (!row || !row.enabled) {\n        return;\n      }\n\n      this.trigger('lookupRowSelected', {\n        lookupRow: row.lookupRow\n      });\n    }\n    /**\n     * Implement this function to get the selected row or node from the proposal chooser.\n     * The implementation depends on the widget used by the chooser (Table or Tree).\n     */\n\n  }, {\n    key: \"selectedRow\",\n    value: function selectedRow() {\n      throw new Error('selectedRow() not implemented');\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent.appendDiv('proposal-chooser').toggleClass('touch', this.touch);\n      this.htmlComp = HtmlComponent.install(this.$container, this.session);\n      this.htmlComp.setLayout(new ProposalChooserLayout(this));\n\n      this._renderModel(); // status\n\n\n      this.$status = this.$container.appendDiv('status').setVisible(false); // active filter\n\n      if (this.smartField.activeFilterEnabled) {\n        this.activeFilterGroup = scout.create('RadioButtonGroup', {\n          parent: this,\n          labelVisible: false,\n          statusVisible: false,\n          gridColumnCount: SmartField.ACTIVE_FILTER_VALUES.length\n        }); // add radio buttons\n\n        SmartField.ACTIVE_FILTER_VALUES.forEach(function (value, index) {\n          this._insertActiveFilterButton(value, index);\n        }, this);\n        this.activeFilterGroup.render();\n        this.activeFilterGroup.$container.addClass('active-filter');\n        this.activeFilterGroup.removeMandatoryIndicator();\n      }\n    }\n  }, {\n    key: \"_renderModel\",\n    value: function _renderModel() {\n      this.model.render();\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(ProposalChooser.prototype), \"_renderProperties\", this).call(this);\n\n      this._updateStatus();\n    }\n    /**\n     * Delegates an event (e.g. keyup, keydown) to the model.$container of this instance,\n     * calling the JQuery trigger method.\n     */\n\n  }, {\n    key: \"delegateEvent\",\n    value: function delegateEvent(event) {\n      event.originalEvent.smartFieldEvent = true;\n      this.model.$container.trigger(event);\n    }\n  }, {\n    key: \"delegateKeyEvent\",\n    value: function delegateKeyEvent(event) {\n      this.model.$container.trigger(event);\n    }\n  }, {\n    key: \"_renderStatus\",\n    value: function _renderStatus() {\n      this._updateStatus();\n    }\n  }, {\n    key: \"_renderStatusVisible\",\n    value: function _renderStatusVisible() {\n      this._updateStatus();\n    }\n  }, {\n    key: \"_computeStatusVisible\",\n    value: function _computeStatusVisible() {\n      return !!(this.statusVisible && this.status);\n    }\n  }, {\n    key: \"_updateStatus\",\n    value: function _updateStatus() {\n      // Note: the UI has a special way to deal with the status. When the UI is rendered\n      // we do NOT render an OK status, even when it is set on the model. The status\n      // \"Search proposals...\" is set to severity OK. That status is only displayed, when\n      // it is still there after 250 ms. Usually a smart-field lookup is fast, so the user\n      // never sees the status message. However: it would be better if the status on the\n      // (Java-)model would implement the behavior described above, but\n      // this would require a timer thread, so it is easier to implement that in the UI.\n      // Status with other severities than OK are displayed immediately.\n      clearTimeout(this._updateStatusTimeout);\n\n      if (objects.optProperty(this.status, 'severity') === Status.Severity.OK) {\n        // compute statusVisible 250 ms later (status can change in the meantime)\n        this._updateStatusTimeout = setTimeout(this._updateStatusImpl.bind(this), 250);\n      } else {\n        this._updateStatusImpl();\n      }\n    }\n  }, {\n    key: \"_updateStatusImpl\",\n    value: function _updateStatusImpl() {\n      if (!this.rendered && !this.rendering) {\n        return;\n      }\n\n      var oldVisible = this.$status.isVisible(),\n          oldMessage = this.$status.text(),\n          visible = this._computeStatusVisible();\n\n      if (oldVisible === visible && oldMessage === objects.optProperty(this.status, 'message')) {\n        return;\n      }\n\n      $.log.isDebugEnabled() && $.log.debug('(ProposalChooser#_updateStatusImpl) $status.visible=' + visible);\n      this.$status.setVisible(visible);\n\n      if (this.status) {\n        this._setStatusMessage(this.status.message);\n      } else {\n        this.$status.text('');\n      }\n\n      this.htmlComp.invalidateLayoutTree();\n    }\n    /**\n     * Replaces an ellipsis (...) at the end of the message-text with a CSS animation.\n     */\n\n  }, {\n    key: \"_setStatusMessage\",\n    value: function _setStatusMessage(message) {\n      Status.animateStatusMessage(this.$status, message);\n    }\n  }, {\n    key: \"_insertActiveFilterButton\",\n    value: function _insertActiveFilterButton(value, index) {\n      var radio = scout.create('RadioButton', {\n        parent: this.activeFilterGroup,\n        label: this._activeFilterLabel(index),\n        radioValue: SmartField.ACTIVE_FILTER_VALUES[index],\n        selected: this.smartField.activeFilter === value,\n        focusWhenSelected: false,\n        gridDataHints: {\n          useUiWidth: true\n        }\n      });\n      radio.on('propertyChange', function (event) {\n        if (event.propertyName === 'selected' && event.newValue === true) {\n          this.trigger('activeFilterSelected', {\n            activeFilter: event.source.radioValue\n          });\n        }\n      }.bind(this));\n      this.activeFilterGroup.insertButton(radio);\n    }\n  }, {\n    key: \"setVirtual\",\n    value: function setVirtual(virtual) {\n      if (this.model instanceof Table) {\n        this.model.setVirtual(virtual);\n      }\n    }\n  }, {\n    key: \"setStatus\",\n    value: function setStatus(status) {\n      this.setProperty('status', status);\n    }\n  }, {\n    key: \"setBusy\",\n    value: function setBusy(busy) {\n      this.model.setProperty('loading', busy);\n      this.model.setProperty('enabled', !busy);\n    }\n  }, {\n    key: \"_activeFilterLabel\",\n    value: function _activeFilterLabel(index) {\n      return this.smartField.activeFilterLabels[index];\n    }\n    /**\n     * Override this function to implement update scrollbar behavior.\n     */\n\n  }, {\n    key: \"updateScrollbars\",\n    value: function updateScrollbars() {\n      this.model.updateScrollbars();\n    }\n  }, {\n    key: \"_isProposal\",\n    value: function _isProposal() {\n      return this.smartField instanceof ProposalField;\n    }\n  }, {\n    key: \"_selectProposal\",\n    value: function _selectProposal(result, proposals) {\n      if (this._isProposal()) {\n        return; // no pre-selection when field is a proposal field\n      }\n\n      if (result.byAll) {\n        this.trySelectCurrentValue();\n      } else if (proposals.length === 1) {\n        this.selectFirstLookupRow();\n      }\n    }\n  }]);\n\n  return ProposalChooser;\n}(Widget);\n\nexport { ProposalChooser as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/smartfield/ProposalChooser.js"],"names":["HtmlComponent","objects","ProposalChooserLayout","ProposalField","scout","SmartField","Status","Table","Widget","$","ProposalChooser","$container","$status","activeFilterGroup","htmlComp","_updateStatusTimeout","status","statusVisible","touch","model","smartField","parent","_createModel","$parent","Error","result","row","selectedRow","enabled","trigger","lookupRow","appendDiv","toggleClass","install","session","setLayout","_renderModel","setVisible","activeFilterEnabled","create","labelVisible","gridColumnCount","ACTIVE_FILTER_VALUES","length","forEach","value","index","_insertActiveFilterButton","render","addClass","removeMandatoryIndicator","_updateStatus","event","originalEvent","smartFieldEvent","clearTimeout","optProperty","Severity","OK","setTimeout","_updateStatusImpl","bind","rendered","rendering","oldVisible","isVisible","oldMessage","text","visible","_computeStatusVisible","log","isDebugEnabled","debug","_setStatusMessage","message","invalidateLayoutTree","animateStatusMessage","radio","label","_activeFilterLabel","radioValue","selected","activeFilter","focusWhenSelected","gridDataHints","useUiWidth","on","propertyName","newValue","source","insertButton","virtual","setVirtual","setProperty","busy","activeFilterLabels","updateScrollbars","proposals","_isProposal","byAll","trySelectCurrentValue","selectFirstLookupRow"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {HtmlComponent, objects, ProposalChooserLayout, ProposalField, scout, SmartField, Status, Table, Widget} from '../../../index';\nimport $ from 'jquery';\n\nexport default class ProposalChooser extends Widget {\n\n  constructor() {\n    super();\n\n    this.$container = null;\n    this.$status = null;\n    this.activeFilterGroup = null;\n    this.htmlComp = null;\n    this._updateStatusTimeout = null;\n    this.status = null;\n    this.statusVisible = true;\n    this.touch = false;\n  }\n\n  _init(model) {\n    super._init(model);\n\n    // If smartField is not explicitly provided by model, use smartField instance\n    // from parent (which is usually the SmartFieldPopup)\n    if (!model.smartField) {\n      this.smartField = this.parent.smartField;\n    }\n\n    this.model = this._createModel();\n  }\n\n  _createModel($parent) {\n    throw new Error('_createModel() not implemented');\n  }\n\n  setLookupResult(result) {\n    throw new Error('setLookupResult() not implemented');\n  }\n\n  selectFirstLookupRow() {\n    throw new Error('selectFirstLookupRow() not implemented');\n  }\n\n  clearSelection() {\n    throw new Error('clearSelection() not implemented');\n  }\n\n  clearLookupRows() {\n    throw new Error('clearLookupRows() not implemented');\n  }\n\n  /**\n   * @param row TableRow or TreeNode (both have the same properties)\n   */\n  triggerLookupRowSelected(row) {\n    row = row || this.selectedRow();\n    if (!row || !row.enabled) {\n      return;\n    }\n    this.trigger('lookupRowSelected', {\n      lookupRow: row.lookupRow\n    });\n  }\n\n  /**\n   * Implement this function to get the selected row or node from the proposal chooser.\n   * The implementation depends on the widget used by the chooser (Table or Tree).\n   */\n  selectedRow() {\n    throw new Error('selectedRow() not implemented');\n  }\n\n  _render() {\n    this.$container = this.$parent\n      .appendDiv('proposal-chooser')\n      .toggleClass('touch', this.touch);\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new ProposalChooserLayout(this));\n\n    this._renderModel();\n\n    // status\n    this.$status = this.$container\n      .appendDiv('status')\n      .setVisible(false);\n\n    // active filter\n    if (this.smartField.activeFilterEnabled) {\n      this.activeFilterGroup = scout.create('RadioButtonGroup', {\n        parent: this,\n        labelVisible: false,\n        statusVisible: false,\n        gridColumnCount: SmartField.ACTIVE_FILTER_VALUES.length\n      });\n\n      // add radio buttons\n      SmartField.ACTIVE_FILTER_VALUES.forEach(function(value, index) {\n        this._insertActiveFilterButton(value, index);\n      }, this);\n\n      this.activeFilterGroup.render();\n      this.activeFilterGroup.$container.addClass('active-filter');\n      this.activeFilterGroup.removeMandatoryIndicator();\n    }\n  }\n\n  _renderModel() {\n    this.model.render();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._updateStatus();\n  }\n\n  /**\n   * Delegates an event (e.g. keyup, keydown) to the model.$container of this instance,\n   * calling the JQuery trigger method.\n   */\n  delegateEvent(event) {\n    event.originalEvent.smartFieldEvent = true;\n    this.model.$container.trigger(event);\n  }\n\n  delegateKeyEvent(event) {\n    this.model.$container.trigger(event);\n  }\n\n  _renderStatus() {\n    this._updateStatus();\n  }\n\n  _renderStatusVisible() {\n    this._updateStatus();\n  }\n\n  _computeStatusVisible() {\n    return !!(this.statusVisible && this.status);\n  }\n\n  _updateStatus() {\n    // Note: the UI has a special way to deal with the status. When the UI is rendered\n    // we do NOT render an OK status, even when it is set on the model. The status\n    // \"Search proposals...\" is set to severity OK. That status is only displayed, when\n    // it is still there after 250 ms. Usually a smart-field lookup is fast, so the user\n    // never sees the status message. However: it would be better if the status on the\n    // (Java-)model would implement the behavior described above, but\n    // this would require a timer thread, so it is easier to implement that in the UI.\n    // Status with other severities than OK are displayed immediately.\n    clearTimeout(this._updateStatusTimeout);\n    if (objects.optProperty(this.status, 'severity') === Status.Severity.OK) {\n      // compute statusVisible 250 ms later (status can change in the meantime)\n      this._updateStatusTimeout = setTimeout(\n        this._updateStatusImpl.bind(this), 250);\n    } else {\n      this._updateStatusImpl();\n    }\n  }\n\n  _updateStatusImpl() {\n    if (!this.rendered && !this.rendering) {\n      return;\n    }\n\n    var\n      oldVisible = this.$status.isVisible(),\n      oldMessage = this.$status.text(),\n      visible = this._computeStatusVisible();\n\n    if (oldVisible === visible &&\n      oldMessage === objects.optProperty(this.status, 'message')) {\n      return;\n    }\n\n    $.log.isDebugEnabled() && $.log.debug('(ProposalChooser#_updateStatusImpl) $status.visible=' + visible);\n    this.$status.setVisible(visible);\n    if (this.status) {\n      this._setStatusMessage(this.status.message);\n    } else {\n      this.$status.text('');\n    }\n    this.htmlComp.invalidateLayoutTree();\n  }\n\n  /**\n   * Replaces an ellipsis (...) at the end of the message-text with a CSS animation.\n   */\n  _setStatusMessage(message) {\n    Status.animateStatusMessage(this.$status, message);\n  }\n\n  _insertActiveFilterButton(value, index) {\n    var radio = scout.create('RadioButton', {\n      parent: this.activeFilterGroup,\n      label: this._activeFilterLabel(index),\n      radioValue: SmartField.ACTIVE_FILTER_VALUES[index],\n      selected: this.smartField.activeFilter === value,\n      focusWhenSelected: false,\n      gridDataHints: {\n        useUiWidth: true\n      }\n    });\n\n    radio.on('propertyChange', function(event) {\n      if (event.propertyName === 'selected' && event.newValue === true) {\n        this.trigger('activeFilterSelected', {\n          activeFilter: event.source.radioValue\n        });\n      }\n    }.bind(this));\n\n    this.activeFilterGroup.insertButton(radio);\n  }\n\n  setVirtual(virtual) {\n    if (this.model instanceof Table) {\n      this.model.setVirtual(virtual);\n    }\n  }\n\n  setStatus(status) {\n    this.setProperty('status', status);\n  }\n\n  setBusy(busy) {\n    this.model.setProperty('loading', busy);\n    this.model.setProperty('enabled', !busy);\n  }\n\n  _activeFilterLabel(index) {\n    return this.smartField.activeFilterLabels[index];\n  }\n\n  /**\n   * Override this function to implement update scrollbar behavior.\n   */\n  updateScrollbars() {\n    this.model.updateScrollbars();\n  }\n\n  _isProposal() {\n    return this.smartField instanceof ProposalField;\n  }\n\n  _selectProposal(result, proposals) {\n    if (this._isProposal()) {\n      return; // no pre-selection when field is a proposal field\n    }\n    if (result.byAll) {\n      this.trySelectCurrentValue();\n    } else if (proposals.length === 1) {\n      this.selectFirstLookupRow();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}