{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { App, objects, scout } from '../index';\nimport $ from 'jquery';\nvar instance;\n/* global FastClick */\n\n/**\n * Provides information about the device and its supported features.<p>\n * The informations are detected lazily.\n *\n * @singleton\n */\n\nvar Device = /*#__PURE__*/function () {\n  function Device(model) {\n    _classCallCheck(this, Device);\n\n    // user agent string from browser\n    this.userAgent = model.userAgent;\n    this.features = {};\n    this.system = Device.System.UNKNOWN;\n    this.type = Device.Type.DESKTOP;\n    this.browser = Device.Browser.UNKNOWN;\n    this.browserVersion = 0;\n    this.scrollbarWidth = 0;\n\n    if (this.userAgent) {\n      this._parseSystem();\n\n      this._parseSystemVersion();\n\n      this._parseBrowser();\n\n      this._parseBrowserVersion();\n    }\n  }\n\n  _createClass(Device, [{\n    key: \"bootstrap\",\n\n    /**\n     * Called during bootstrap by index.html before the session startup.<p>\n     * Precalculates the value of some attributes to store them\n     * in a static way (and prevent many repeating function calls within loops).<p>\n     * Also loads device specific scripts (e.g. fast click for ios devices)\n     */\n    value: function bootstrap() {\n      var promises = []; // Pre-calculate value and store in a simple property, to prevent many function calls inside loops\n\n      this.scrollbarWidth = this._detectScrollbarWidth();\n      this.type = this._detectType(this.userAgent);\n\n      if (this._needsFastClick()) {\n        // We use Fastclick to prevent the 300ms delay when touching an element.\n        promises.push(this._loadFastClickDeferred());\n      } else if (this.isIos()) {\n        this._installActiveHandler();\n      }\n\n      return promises;\n    }\n    /**\n     * The 300ms delay exists because the browser does not know whether the user wants to just tab or wants to zoom using double tab.\n     * Therefore most browsers add the delay only if zoom is enabled. This works for firefox, chrome (>=32) and safari/ios (>=9.3).\n     * It does not work if safari is opened in standalone/homescreen mode or in cordova. For IE (and safari since ios 9.3) it can be disabled using a css property called touch-action.\n     * By default, zooming is disabled and home screen mode is enabled, see meta tags viewport and apple-mobile-web-app-capable in head.html\n     * <p>\n     * @return {boolean} true if it is an older iOS (< 9.3), running in homescreen mode or running in a cordova container. Otherwise false.\n     */\n\n  }, {\n    key: \"_needsFastClick\",\n    value: function _needsFastClick() {\n      if (!this.isIos()) {\n        // Currently only IOS still has the issue -> don't load the script for other systems and browsers\n        return false;\n      }\n\n      if (this.systemVersion >= 9.3 && !this.isStandalone() && this.browser !== Device.Browser.UNKNOWN) {\n        // With iOS >= 9.3 the delay is gone if zooming is disabled, but not for the home screen / web app mode.\n        // It is also necessary if running in a Cordova container (browser is set to unknown in that case)\n        return false;\n      } // -> load only for older IOS devices or if running in home screen mode or Cordova\n\n\n      return true;\n    }\n  }, {\n    key: \"_loadFastClickDeferred\",\n    value: function _loadFastClickDeferred() {\n      return this._loadScriptDeferred('fastclick-1.0.6.js', function () {\n        FastClick.attach(document.body);\n        $.log.isInfoEnabled() && $.log.info('FastClick script loaded and attached');\n      });\n    }\n  }, {\n    key: \"_loadScriptDeferred\",\n    value: function _loadScriptDeferred(scriptUrl, doneFunc) {\n      return $.injectScript(scriptUrl).done(doneFunc);\n    }\n    /**\n     * IOs does only trigger :active when touching an element if a touchstart listener is attached\n     * Unfortunately, the :active is also triggered when scrolling, there is no delay.\n     * To fix this we would have to work with a custom active class which will be toggled on touchstart/end\n     */\n\n  }, {\n    key: \"_installActiveHandler\",\n    value: function _installActiveHandler() {\n      document.addEventListener('touchstart', function () {}, false);\n    }\n  }, {\n    key: \"hasOnScreenKeyboard\",\n    value: function hasOnScreenKeyboard() {\n      return this.supportsFeature('_onScreenKeyboard', function () {\n        return this.isIos() || this.isAndroid() || this.isWindowsTabletMode();\n      }.bind(this));\n    }\n    /**\n     * Returns if the current browser includes the padding-right-space in the scrollWidth calculations.<br>\n     * Such a browser increases the scrollWidth only if the text-content exceeds the space <i>including</i> the right-padding.\n     * This means the scrollWidth is equal to the clientWidth until the right-padding-space is consumed as well.\n     */\n\n  }, {\n    key: \"isScrollWidthIncludingPadding\",\n    value: function isScrollWidthIncludingPadding() {\n      return this.isInternetExplorer() || this.isFirefox() || this.isEdge();\n    }\n    /**\n     * Safari shows a tooltip if ellipsis are displayed due to text truncation. This is fine but, unfortunately, it cannot be prevented.\n     * Because showing two tooltips at the same time (native and custom) is bad, the custom tooltip cannot be displayed.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isCustomEllipsisTooltipPossible\",\n    value: function isCustomEllipsisTooltipPossible() {\n      return this.browser !== Device.Browser.SAFARI;\n    }\n    /**\n     * @returns {boolean} true if the current device is an iPhone. This is more specific than the <code>isIos</code> function\n     * which also includes iPads and iPods.\n     */\n\n  }, {\n    key: \"isIos\",\n    value: function isIos() {\n      return Device.System.IOS === this.system;\n    }\n  }, {\n    key: \"isEdge\",\n    value: function isEdge() {\n      return Device.Browser.EDGE === this.browser;\n    }\n    /**\n     * @returns {string} 'ms-edge' if the current browser is Microsoft Edge\n     */\n\n  }, {\n    key: \"cssClassForEdge\",\n    value: function cssClassForEdge() {\n      return this.isEdge() ? 'ms-edge' : '';\n    }\n    /**\n     * @returns {string} 'iphone' if the current device is an iPhone\n     */\n\n  }, {\n    key: \"cssClassForIphone\",\n    value: function cssClassForIphone() {\n      return this.isIphone() ? 'iphone' : '';\n    }\n  }, {\n    key: \"isIphone\",\n    value: function isIphone() {\n      return this.userAgent.indexOf('iPhone') > -1;\n    }\n  }, {\n    key: \"isInternetExplorer\",\n    value: function isInternetExplorer() {\n      return Device.Browser.INTERNET_EXPLORER === this.browser;\n    }\n  }, {\n    key: \"isFirefox\",\n    value: function isFirefox() {\n      return Device.Browser.FIREFOX === this.browser;\n    }\n  }, {\n    key: \"isChrome\",\n    value: function isChrome() {\n      return Device.Browser.CHROME === this.browser;\n    }\n    /**\n     * Compared to isIos() this function uses navigator.platform instead of navigator.userAgent to check whether the app runs on iOS.\n     * Most of the time isIos() is the way to go.\n     * This function was mainly introduced to detect whether it is a real iOS or an emulated one (e.g. using chrome emulator).\n     * @returns {boolean} true if the platform is iOS, false if not (e.g. if chrome emulator is running)\n     */\n\n  }, {\n    key: \"isIosPlatform\",\n    value: function isIosPlatform() {\n      return /iPad|iPhone|iPod/.test(navigator.platform);\n    }\n  }, {\n    key: \"isAndroid\",\n    value: function isAndroid() {\n      return Device.System.ANDROID === this.system;\n    }\n    /**\n     * The best way we have to detect a Microsoft Surface Tablet in table mode is to check if\n     * the scrollbar width is 0 pixel. In desktop mode the scrollbar width is > 0 pixel.\n     */\n\n  }, {\n    key: \"isWindowsTabletMode\",\n    value: function isWindowsTabletMode() {\n      return Device.System.WINDOWS === this.system && this.systemVersion >= 10 && this.scrollbarWidth === 0;\n    }\n    /**\n     * @returns {boolean} true if navigator.standalone is true which is the case for iOS home screen mode\n     */\n\n  }, {\n    key: \"isStandalone\",\n    value: function isStandalone() {\n      return !!window.navigator.standalone;\n    }\n    /**\n     * This method returns false for very old browsers. Basically we check for the first version\n     * that supports ECMAScript 5. This methods excludes all browsers that are known to be\n     * unsupported, all others (e.g. unknown engines) are allowed by default.\n     */\n\n  }, {\n    key: \"isSupportedBrowser\",\n    value: function isSupportedBrowser(browser, version) {\n      browser = scout.nvl(browser, this.browser);\n      version = scout.nvl(version, this.browserVersion);\n      var browsers = Device.Browser;\n      return !(browser === browsers.INTERNET_EXPLORER && version < 11 || browser === browsers.CHROME && version < 40 || browser === browsers.FIREFOX && version < 35 || browser === browsers.SAFARI && version < 8);\n    }\n    /**\n     * Can not detect type until DOM is ready because we must create a DIV to measure the scrollbars.\n     */\n\n  }, {\n    key: \"_detectType\",\n    value: function _detectType(userAgent) {\n      if (Device.System.ANDROID === this.system) {\n        if (userAgent.indexOf('Mobile') > -1) {\n          return Device.Type.MOBILE;\n        }\n\n        return Device.Type.TABLET;\n      } else if (Device.System.IOS === this.system) {\n        if (userAgent.indexOf('iPad') > -1) {\n          return Device.Type.TABLET;\n        }\n\n        return Device.Type.MOBILE;\n      } else if (this.isWindowsTabletMode()) {\n        return Device.Type.TABLET;\n      }\n\n      return Device.Type.DESKTOP;\n    }\n  }, {\n    key: \"_parseSystem\",\n    value: function _parseSystem() {\n      var userAgent = this.userAgent;\n\n      if (userAgent.indexOf('iPhone') > -1 || userAgent.indexOf('iPad') > -1) {\n        this.system = Device.System.IOS;\n      } else if (userAgent.indexOf('Android') > -1) {\n        this.system = Device.System.ANDROID;\n      } else if (userAgent.indexOf('Windows') > -1) {\n        this.system = Device.System.WINDOWS;\n      }\n    }\n    /**\n     * Currently only supports IOS\n     */\n\n  }, {\n    key: \"_parseSystemVersion\",\n    value: function _parseSystemVersion() {\n      var versionRegex,\n          System = Device.System,\n          userAgent = this.userAgent;\n\n      if (this.system === System.IOS) {\n        versionRegex = / OS ([0-9]+\\.?[0-9]*)/; // replace all _ with .\n\n        userAgent = userAgent.replace(/_/g, '.');\n      } else if (this.system === System.WINDOWS) {\n        versionRegex = /Windows NT ([0-9]+\\.?[0-9]*)/;\n      }\n\n      if (versionRegex) {\n        this.systemVersion = this._parseVersion(userAgent, versionRegex);\n      }\n    }\n  }, {\n    key: \"_parseBrowser\",\n    value: function _parseBrowser() {\n      var userAgent = this.userAgent;\n\n      if (userAgent.indexOf('Firefox') > -1) {\n        this.browser = Device.Browser.FIREFOX;\n      } else if (userAgent.indexOf('MSIE') > -1 || userAgent.indexOf('Trident') > -1) {\n        this.browser = Device.Browser.INTERNET_EXPLORER;\n      } else if (userAgent.indexOf('Edge') > -1) {\n        // must check for Edge before we do other checks, because the Edge user-agent string\n        // also contains matches for Chrome and Webkit.\n        this.browser = Device.Browser.EDGE;\n      } else if (userAgent.indexOf('Chrome') > -1) {\n        this.browser = Device.Browser.CHROME;\n      } else if (userAgent.indexOf('Safari') > -1) {\n        this.browser = Device.Browser.SAFARI;\n      }\n    }\n    /**\n     * Version regex only matches the first number pair\n     * but not the revision-version. Example:\n     * - 21     match: 21\n     * - 21.1   match: 21.1\n     * - 21.1.3 match: 21.1\n     */\n\n  }, {\n    key: \"_parseBrowserVersion\",\n    value: function _parseBrowserVersion() {\n      var versionRegex,\n          browsers = Device.Browser,\n          userAgent = this.userAgent;\n\n      if (this.browser === browsers.INTERNET_EXPLORER) {\n        // with internet explorer 11 user agent string does not contain the 'MSIE' string anymore\n        // additionally in new version the version-number after Trident/ is not the browser-version\n        // but the engine-version.\n        if (userAgent.indexOf('MSIE') > -1) {\n          versionRegex = /MSIE ([0-9]+\\.?[0-9]*)/;\n        } else {\n          versionRegex = /rv:([0-9]+\\.?[0-9]*)/;\n        }\n      } else if (this.browser === browsers.EDGE) {\n        versionRegex = /Edge\\/([0-9]+\\.?[0-9]*)/;\n      } else if (this.browser === browsers.SAFARI) {\n        versionRegex = /Version\\/([0-9]+\\.?[0-9]*)/;\n      } else if (this.browser === browsers.FIREFOX) {\n        versionRegex = /Firefox\\/([0-9]+\\.?[0-9]*)/;\n      } else if (this.browser === browsers.CHROME) {\n        versionRegex = /Chrome\\/([0-9]+\\.?[0-9]*)/;\n      }\n\n      if (versionRegex) {\n        this.browserVersion = this._parseVersion(userAgent, versionRegex);\n      }\n    }\n  }, {\n    key: \"_parseVersion\",\n    value: function _parseVersion(userAgent, versionRegex) {\n      var matches = versionRegex.exec(userAgent);\n\n      if (Array.isArray(matches) && matches.length === 2) {\n        return parseFloat(matches[1]);\n      }\n    }\n  }, {\n    key: \"supportsFeature\",\n    value: function supportsFeature(property, checkFunc) {\n      if (this.features[property] === undefined) {\n        this.features[property] = checkFunc(property);\n      }\n\n      return this.features[property];\n    }\n    /**\n     * Currently this method should be used when you want to check if the device is \"touch only\" -\n     * which means the user has no keyboard or mouse. Some hybrids like Surface tablets in desktop mode are\n     * still touch devices, but support keyboard and mouse at the same time. In such cases this method will\n     * return false, since the device is not touch only.\n     *\n     * Currently this method returns the same as hasOnScreenKeyboard(). Maybe the implementation here will be\n     * different in the future.\n     */\n\n  }, {\n    key: \"supportsOnlyTouch\",\n    value: function supportsOnlyTouch() {\n      return this.supportsFeature('_onlyTouch', this.hasOnScreenKeyboard.bind(this));\n    }\n    /**\n     * @see http://www.stucox.com/blog/you-cant-detect-a-touchscreen/\n     * @see https://codeburst.io/the-only-way-to-detect-touch-with-javascript-7791a3346685\n     */\n\n  }, {\n    key: \"supportsTouch\",\n    value: function supportsTouch() {\n      return this.supportsFeature('_touch', function check(property) {\n        return 'ontouchstart' in window || window.TouchEvent || window.DocumentTouch && document instanceof window.DocumentTouch;\n      });\n    }\n  }, {\n    key: \"supportsFile\",\n    value: function supportsFile() {\n      return !!window.File;\n    }\n    /**\n     * Some browsers support the file API but don't support the File constructor (new File()).\n     */\n\n  }, {\n    key: \"supportsFileConstructor\",\n    value: function supportsFileConstructor() {\n      return typeof File === 'function';\n    }\n  }, {\n    key: \"supportsCssAnimation\",\n    value: function supportsCssAnimation() {\n      return this.supportsCssProperty('animation');\n    }\n    /**\n     * Used to determine if browser supports full history API.\n     * Note that IE9 only partially supports the API, pushState and replaceState functions are missing.\n     * @see: https://developer.mozilla.org/de/docs/Web/API/Window/history\n     */\n\n  }, {\n    key: \"supportsHistoryApi\",\n    value: function supportsHistoryApi() {\n      return !!(window.history && window.history.pushState);\n    }\n  }, {\n    key: \"supportsCssGradient\",\n    value: function supportsCssGradient() {\n      var testValue = 'linear-gradient(to left, #000 0%, #000 50%, transparent 50%, transparent 100% )';\n      return this.supportsFeature('gradient', this.checkCssValue.bind(this, 'backgroundImage', testValue, function (actualValue) {\n        return (actualValue + '').indexOf('gradient') > 0;\n      }));\n    }\n  }, {\n    key: \"supportsInternationalization\",\n    value: function supportsInternationalization() {\n      return window.Intl && _typeof(window.Intl) === 'object';\n    }\n    /**\n     * Returns true if the device supports the download of resources in the same window as the single page app is running.\n     * With \"download\" we mean: change <code>window.location.href</code> to the URL of the resource to download. Some browsers don't\n     * support this behavior and require the resource to be opened in a new window with <code>window.open</code>.\n     */\n\n  }, {\n    key: \"supportsDownloadInSameWindow\",\n    value: function supportsDownloadInSameWindow() {\n      return Device.Browser.FIREFOX !== this.browser;\n    }\n  }, {\n    key: \"supportsWebcam\",\n    value: function supportsWebcam() {\n      return this.supportsFeature('_webcam', function check(property) {\n        var getUserMedia = objects.optProperty(navigator, 'mediaDevices', 'getUserMedia');\n        return objects.isFunction(getUserMedia);\n      });\n    }\n  }, {\n    key: \"hasPrettyScrollbars\",\n    value: function hasPrettyScrollbars() {\n      return this.supportsFeature('_prettyScrollbars', function check(property) {\n        return this.scrollbarWidth === 0;\n      }.bind(this));\n    }\n  }, {\n    key: \"canHideScrollbars\",\n    value: function canHideScrollbars() {\n      return this.supportsFeature('_canHideScrollbars', function check(property) {\n        // Check if scrollbar is vanished if class hybrid-scrollable is applied which hides the scrollbar, see also scrollbars.js and Scrollbar.less\n        return this._detectScrollbarWidth('hybrid-scrollable') === 0;\n      }.bind(this));\n    }\n  }, {\n    key: \"supportsCopyFromDisabledInputFields\",\n    value: function supportsCopyFromDisabledInputFields() {\n      return Device.Browser.FIREFOX !== this.browser;\n    }\n    /**\n     * If the mouse down on an element with a pseudo element removes the pseudo element (e.g. check box toggling),\n     * the firefox cannot focus the element anymore and instead focuses the body. In that case manual focus handling is necessary.\n     */\n\n  }, {\n    key: \"loosesFocusIfPseudoElementIsRemoved\",\n    value: function loosesFocusIfPseudoElementIsRemoved() {\n      return Device.Browser.FIREFOX === this.browser;\n    }\n  }, {\n    key: \"supportsCssProperty\",\n    value: function supportsCssProperty(property) {\n      return this.supportsFeature(property, function check(property) {\n        if (document.body.style[property] !== undefined) {\n          return true;\n        }\n\n        property = property.charAt(0).toUpperCase() + property.slice(1);\n\n        for (var i = 0; i < Device.VENDOR_PREFIXES.length; i++) {\n          if (document.body.style[Device.VENDOR_PREFIXES[i] + property] !== undefined) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n    }\n  }, {\n    key: \"supportsGeolocation\",\n    value: function supportsGeolocation() {\n      return !!navigator.geolocation;\n    }\n    /**\n     * When we call .preventDefault() on a mousedown event Firefox doesn't apply the :active state.\n     * Since W3C does not specify an expected behavior, we need this workaround for consistent behavior in\n     * our UI. The issue has been reported to Mozilla but it doesn't look like there will be a bugfix soon:\n     *\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=771241#c7\n     */\n\n  }, {\n    key: \"requiresSyntheticActiveState\",\n    value: function requiresSyntheticActiveState() {\n      return this.isFirefox();\n    }\n  }, {\n    key: \"supportsPassiveEventListener\",\n    value: function supportsPassiveEventListener() {\n      return this.supportsFeature('_passiveEventListener', function check(property) {\n        // Code from MDN https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n        var passiveSupported = false;\n\n        try {\n          var options = Object.defineProperty({}, 'passive', {\n            get: function get() {\n              passiveSupported = true;\n              return false;\n            }\n          });\n          window.addEventListener('test', options, options);\n          window.removeEventListener('test', options, options);\n        } catch (err) {\n          passiveSupported = false;\n        }\n\n        return passiveSupported;\n      });\n    }\n  }, {\n    key: \"checkCssValue\",\n    value: function checkCssValue(property, value, checkFunc) {\n      // Check if property is supported at all, otherwise div.style[property] would just add it and checkFunc would always return true\n      if (document.body.style[property] === undefined) {\n        return false;\n      }\n\n      var div = document.createElement('div');\n      div.style[property] = value;\n\n      if (checkFunc(div.style[property])) {\n        return true;\n      }\n\n      property = property.charAt(0).toUpperCase() + property.slice(1);\n\n      for (var i = 0; i < Device.VENDOR_PREFIXES.length; i++) {\n        var vendorProperty = Device.VENDOR_PREFIXES[i] + property;\n\n        if (document.body.style[vendorProperty] !== undefined) {\n          div.style[vendorProperty] = value;\n\n          if (checkFunc(div.style[vendorProperty])) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n    /**\n     *  https://bugs.chromium.org/p/chromium/issues/detail?id=740502\n     */\n\n  }, {\n    key: \"hasTableCellZoomBug\",\n    value: function hasTableCellZoomBug() {\n      return this.browser === Device.Browser.CHROME;\n    }\n  }, {\n    key: \"_detectScrollbarWidth\",\n    value: function _detectScrollbarWidth(cssClass) {\n      var $measure = $('body').appendDiv(cssClass).attr('id', 'MeasureScrollbar').css('width', 50).css('height', 50).css('overflow-y', 'scroll'),\n          measureElement = $measure[0];\n      var scrollbarWidth = measureElement.offsetWidth - measureElement.clientWidth;\n      $measure.remove();\n      return scrollbarWidth;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return 'scout.Device[' + 'system=' + this.system + ' browser=' + this.browser + ' browserVersion=' + this.browserVersion + ' type=' + this.type + ' scrollbarWidth=' + this.scrollbarWidth + ' features=' + JSON.stringify(this.features) + ']';\n    }\n  }], [{\n    key: \"get\",\n    value: function get() {\n      return instance;\n    }\n  }]);\n\n  return Device;\n}();\n\n_defineProperty(Device, \"VENDOR_PREFIXES\", ['Webkit', 'Moz', 'O', 'ms', 'Khtml']);\n\n_defineProperty(Device, \"Browser\", {\n  UNKNOWN: 'Unknown',\n  FIREFOX: 'Firefox',\n  CHROME: 'Chrome',\n  INTERNET_EXPLORER: 'InternetExplorer',\n  EDGE: 'Edge',\n  SAFARI: 'Safari'\n});\n\n_defineProperty(Device, \"System\", {\n  UNKNOWN: 'Unknown',\n  IOS: 'IOS',\n  ANDROID: 'ANDROID',\n  WINDOWS: 'WINDOWS'\n});\n\n_defineProperty(Device, \"Type\", {\n  DESKTOP: 'DESKTOP',\n  TABLET: 'TABLET',\n  MOBILE: 'MOBILE'\n});\n\nexport { Device as default };\nApp.addListener('prepare', function () {\n  if (instance) {\n    // if the device was created before the app itself, use it instead of creating a new one\n    return;\n  }\n\n  instance = scout.create('Device', {\n    userAgent: navigator.userAgent\n  });\n});","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/util/Device.js"],"names":["App","objects","scout","$","instance","Device","model","userAgent","features","system","System","UNKNOWN","type","Type","DESKTOP","browser","Browser","browserVersion","scrollbarWidth","_parseSystem","_parseSystemVersion","_parseBrowser","_parseBrowserVersion","promises","_detectScrollbarWidth","_detectType","_needsFastClick","push","_loadFastClickDeferred","isIos","_installActiveHandler","systemVersion","isStandalone","_loadScriptDeferred","FastClick","attach","document","body","log","isInfoEnabled","info","scriptUrl","doneFunc","injectScript","done","addEventListener","supportsFeature","isAndroid","isWindowsTabletMode","bind","isInternetExplorer","isFirefox","isEdge","SAFARI","IOS","EDGE","isIphone","indexOf","INTERNET_EXPLORER","FIREFOX","CHROME","test","navigator","platform","ANDROID","WINDOWS","window","standalone","version","nvl","browsers","MOBILE","TABLET","versionRegex","replace","_parseVersion","matches","exec","Array","isArray","length","parseFloat","property","checkFunc","undefined","hasOnScreenKeyboard","check","TouchEvent","DocumentTouch","File","supportsCssProperty","history","pushState","testValue","checkCssValue","actualValue","Intl","getUserMedia","optProperty","isFunction","style","charAt","toUpperCase","slice","i","VENDOR_PREFIXES","geolocation","passiveSupported","options","Object","defineProperty","get","removeEventListener","err","value","div","createElement","vendorProperty","cssClass","$measure","appendDiv","attr","css","measureElement","offsetWidth","clientWidth","remove","JSON","stringify","addListener","create"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {App, objects, scout} from '../index';\nimport $ from 'jquery';\n\nlet instance;\n/* global FastClick */\n\n/**\n * Provides information about the device and its supported features.<p>\n * The informations are detected lazily.\n *\n * @singleton\n */\nexport default class Device {\n\n  constructor(model) {\n    // user agent string from browser\n    this.userAgent = model.userAgent;\n    this.features = {};\n    this.system = Device.System.UNKNOWN;\n    this.type = Device.Type.DESKTOP;\n    this.browser = Device.Browser.UNKNOWN;\n    this.browserVersion = 0;\n    this.scrollbarWidth = 0;\n\n    if (this.userAgent) {\n      this._parseSystem();\n      this._parseSystemVersion();\n      this._parseBrowser();\n      this._parseBrowserVersion();\n    }\n  }\n\n  static VENDOR_PREFIXES = ['Webkit', 'Moz', 'O', 'ms', 'Khtml'];\n\n  static Browser = {\n    UNKNOWN: 'Unknown',\n    FIREFOX: 'Firefox',\n    CHROME: 'Chrome',\n    INTERNET_EXPLORER: 'InternetExplorer',\n    EDGE: 'Edge',\n    SAFARI: 'Safari'\n  };\n\n  static System = {\n    UNKNOWN: 'Unknown',\n    IOS: 'IOS',\n    ANDROID: 'ANDROID',\n    WINDOWS: 'WINDOWS'\n  };\n\n  static Type = {\n    DESKTOP: 'DESKTOP',\n    TABLET: 'TABLET',\n    MOBILE: 'MOBILE'\n  };\n\n  /**\n   * Called during bootstrap by index.html before the session startup.<p>\n   * Precalculates the value of some attributes to store them\n   * in a static way (and prevent many repeating function calls within loops).<p>\n   * Also loads device specific scripts (e.g. fast click for ios devices)\n   */\n  bootstrap() {\n    var promises = [];\n\n    // Pre-calculate value and store in a simple property, to prevent many function calls inside loops\n    this.scrollbarWidth = this._detectScrollbarWidth();\n    this.type = this._detectType(this.userAgent);\n\n    if (this._needsFastClick()) {\n      // We use Fastclick to prevent the 300ms delay when touching an element.\n      promises.push(this._loadFastClickDeferred());\n    } else if (this.isIos()) {\n      this._installActiveHandler();\n    }\n\n    return promises;\n  }\n\n  /**\n   * The 300ms delay exists because the browser does not know whether the user wants to just tab or wants to zoom using double tab.\n   * Therefore most browsers add the delay only if zoom is enabled. This works for firefox, chrome (>=32) and safari/ios (>=9.3).\n   * It does not work if safari is opened in standalone/homescreen mode or in cordova. For IE (and safari since ios 9.3) it can be disabled using a css property called touch-action.\n   * By default, zooming is disabled and home screen mode is enabled, see meta tags viewport and apple-mobile-web-app-capable in head.html\n   * <p>\n   * @return {boolean} true if it is an older iOS (< 9.3), running in homescreen mode or running in a cordova container. Otherwise false.\n   */\n  _needsFastClick() {\n    if (!this.isIos()) {\n      // Currently only IOS still has the issue -> don't load the script for other systems and browsers\n      return false;\n    }\n\n    if (this.systemVersion >= 9.3 && !this.isStandalone() && this.browser !== Device.Browser.UNKNOWN) {\n      // With iOS >= 9.3 the delay is gone if zooming is disabled, but not for the home screen / web app mode.\n      // It is also necessary if running in a Cordova container (browser is set to unknown in that case)\n      return false;\n    }\n\n    // -> load only for older IOS devices or if running in home screen mode or Cordova\n    return true;\n  }\n\n  _loadFastClickDeferred() {\n    return this._loadScriptDeferred('fastclick-1.0.6.js', function() {\n      FastClick.attach(document.body);\n      $.log.isInfoEnabled() && $.log.info('FastClick script loaded and attached');\n    });\n  }\n\n  _loadScriptDeferred(scriptUrl, doneFunc) {\n    return $\n      .injectScript(scriptUrl)\n      .done(doneFunc);\n  }\n\n  /**\n   * IOs does only trigger :active when touching an element if a touchstart listener is attached\n   * Unfortunately, the :active is also triggered when scrolling, there is no delay.\n   * To fix this we would have to work with a custom active class which will be toggled on touchstart/end\n   */\n  _installActiveHandler() {\n    document.addEventListener('touchstart', function() {\n    }, false);\n  }\n\n  hasOnScreenKeyboard() {\n    return this.supportsFeature('_onScreenKeyboard', function() {\n      return this.isIos() || this.isAndroid() || this.isWindowsTabletMode();\n    }.bind(this));\n  }\n\n  /**\n   * Returns if the current browser includes the padding-right-space in the scrollWidth calculations.<br>\n   * Such a browser increases the scrollWidth only if the text-content exceeds the space <i>including</i> the right-padding.\n   * This means the scrollWidth is equal to the clientWidth until the right-padding-space is consumed as well.\n   */\n  isScrollWidthIncludingPadding() {\n    return this.isInternetExplorer() || this.isFirefox() || this.isEdge();\n  }\n\n  /**\n   * Safari shows a tooltip if ellipsis are displayed due to text truncation. This is fine but, unfortunately, it cannot be prevented.\n   * Because showing two tooltips at the same time (native and custom) is bad, the custom tooltip cannot be displayed.\n   * @returns {Boolean}\n   */\n  isCustomEllipsisTooltipPossible() {\n    return this.browser !== Device.Browser.SAFARI;\n  }\n\n  /**\n   * @returns {boolean} true if the current device is an iPhone. This is more specific than the <code>isIos</code> function\n   * which also includes iPads and iPods.\n   */\n  isIos() {\n    return Device.System.IOS === this.system;\n  }\n\n  isEdge() {\n    return Device.Browser.EDGE === this.browser;\n  }\n\n  /**\n   * @returns {string} 'ms-edge' if the current browser is Microsoft Edge\n   */\n  cssClassForEdge() {\n    return this.isEdge() ? 'ms-edge' : '';\n  }\n\n  /**\n   * @returns {string} 'iphone' if the current device is an iPhone\n   */\n  cssClassForIphone() {\n    return this.isIphone() ? 'iphone' : '';\n  }\n\n  isIphone() {\n    return this.userAgent.indexOf('iPhone') > -1;\n  }\n\n  isInternetExplorer() {\n    return Device.Browser.INTERNET_EXPLORER === this.browser;\n  }\n\n  isFirefox() {\n    return Device.Browser.FIREFOX === this.browser;\n  }\n\n  isChrome() {\n    return Device.Browser.CHROME === this.browser;\n  }\n\n  /**\n   * Compared to isIos() this function uses navigator.platform instead of navigator.userAgent to check whether the app runs on iOS.\n   * Most of the time isIos() is the way to go.\n   * This function was mainly introduced to detect whether it is a real iOS or an emulated one (e.g. using chrome emulator).\n   * @returns {boolean} true if the platform is iOS, false if not (e.g. if chrome emulator is running)\n   */\n  isIosPlatform() {\n    return /iPad|iPhone|iPod/.test(navigator.platform);\n  }\n\n  isAndroid() {\n    return Device.System.ANDROID === this.system;\n  }\n\n  /**\n   * The best way we have to detect a Microsoft Surface Tablet in table mode is to check if\n   * the scrollbar width is 0 pixel. In desktop mode the scrollbar width is > 0 pixel.\n   */\n  isWindowsTabletMode() {\n    return Device.System.WINDOWS === this.system && this.systemVersion >= 10 && this.scrollbarWidth === 0;\n  }\n\n  /**\n   * @returns {boolean} true if navigator.standalone is true which is the case for iOS home screen mode\n   */\n  isStandalone() {\n    return !!window.navigator.standalone;\n  }\n\n  /**\n   * This method returns false for very old browsers. Basically we check for the first version\n   * that supports ECMAScript 5. This methods excludes all browsers that are known to be\n   * unsupported, all others (e.g. unknown engines) are allowed by default.\n   */\n  isSupportedBrowser(browser, version) {\n    browser = scout.nvl(browser, this.browser);\n    version = scout.nvl(version, this.browserVersion);\n    var browsers = Device.Browser;\n    return !((browser === browsers.INTERNET_EXPLORER && version < 11) ||\n      (browser === browsers.CHROME && version < 40) ||\n      (browser === browsers.FIREFOX && version < 35) ||\n      (browser === browsers.SAFARI && version < 8));\n  }\n\n  /**\n   * Can not detect type until DOM is ready because we must create a DIV to measure the scrollbars.\n   */\n  _detectType(userAgent) {\n    if (Device.System.ANDROID === this.system) {\n      if (userAgent.indexOf('Mobile') > -1) {\n        return Device.Type.MOBILE;\n      }\n      return Device.Type.TABLET;\n    } else if (Device.System.IOS === this.system) {\n      if (userAgent.indexOf('iPad') > -1) {\n        return Device.Type.TABLET;\n      }\n      return Device.Type.MOBILE;\n    } else if (this.isWindowsTabletMode()) {\n      return Device.Type.TABLET;\n    }\n    return Device.Type.DESKTOP;\n  }\n\n  _parseSystem() {\n    var userAgent = this.userAgent;\n    if (userAgent.indexOf('iPhone') > -1 || userAgent.indexOf('iPad') > -1) {\n      this.system = Device.System.IOS;\n    } else if (userAgent.indexOf('Android') > -1) {\n      this.system = Device.System.ANDROID;\n    } else if (userAgent.indexOf('Windows') > -1) {\n      this.system = Device.System.WINDOWS;\n    }\n  }\n\n  /**\n   * Currently only supports IOS\n   */\n  _parseSystemVersion() {\n    var versionRegex,\n      System = Device.System,\n      userAgent = this.userAgent;\n\n    if (this.system === System.IOS) {\n      versionRegex = / OS ([0-9]+\\.?[0-9]*)/;\n      // replace all _ with .\n      userAgent = userAgent.replace(/_/g, '.');\n    } else if (this.system === System.WINDOWS) {\n      versionRegex = /Windows NT ([0-9]+\\.?[0-9]*)/;\n    }\n\n    if (versionRegex) {\n      this.systemVersion = this._parseVersion(userAgent, versionRegex);\n    }\n  }\n\n  _parseBrowser() {\n    var userAgent = this.userAgent;\n\n    if (userAgent.indexOf('Firefox') > -1) {\n      this.browser = Device.Browser.FIREFOX;\n    } else if (userAgent.indexOf('MSIE') > -1 || userAgent.indexOf('Trident') > -1) {\n      this.browser = Device.Browser.INTERNET_EXPLORER;\n    } else if (userAgent.indexOf('Edge') > -1) {\n      // must check for Edge before we do other checks, because the Edge user-agent string\n      // also contains matches for Chrome and Webkit.\n      this.browser = Device.Browser.EDGE;\n    } else if (userAgent.indexOf('Chrome') > -1) {\n      this.browser = Device.Browser.CHROME;\n    } else if (userAgent.indexOf('Safari') > -1) {\n      this.browser = Device.Browser.SAFARI;\n    }\n  }\n\n  /**\n   * Version regex only matches the first number pair\n   * but not the revision-version. Example:\n   * - 21     match: 21\n   * - 21.1   match: 21.1\n   * - 21.1.3 match: 21.1\n   */\n  _parseBrowserVersion() {\n    var versionRegex,\n      browsers = Device.Browser,\n      userAgent = this.userAgent;\n\n    if (this.browser === browsers.INTERNET_EXPLORER) {\n      // with internet explorer 11 user agent string does not contain the 'MSIE' string anymore\n      // additionally in new version the version-number after Trident/ is not the browser-version\n      // but the engine-version.\n      if (userAgent.indexOf('MSIE') > -1) {\n        versionRegex = /MSIE ([0-9]+\\.?[0-9]*)/;\n      } else {\n        versionRegex = /rv:([0-9]+\\.?[0-9]*)/;\n      }\n    } else if (this.browser === browsers.EDGE) {\n      versionRegex = /Edge\\/([0-9]+\\.?[0-9]*)/;\n    } else if (this.browser === browsers.SAFARI) {\n      versionRegex = /Version\\/([0-9]+\\.?[0-9]*)/;\n    } else if (this.browser === browsers.FIREFOX) {\n      versionRegex = /Firefox\\/([0-9]+\\.?[0-9]*)/;\n    } else if (this.browser === browsers.CHROME) {\n      versionRegex = /Chrome\\/([0-9]+\\.?[0-9]*)/;\n    }\n    if (versionRegex) {\n      this.browserVersion = this._parseVersion(userAgent, versionRegex);\n    }\n  }\n\n  _parseVersion(userAgent, versionRegex) {\n    var matches = versionRegex.exec(userAgent);\n    if (Array.isArray(matches) && matches.length === 2) {\n      return parseFloat(matches[1]);\n    }\n  }\n\n  supportsFeature(property, checkFunc) {\n    if (this.features[property] === undefined) {\n      this.features[property] = checkFunc(property);\n    }\n    return this.features[property];\n  }\n\n  /**\n   * Currently this method should be used when you want to check if the device is \"touch only\" -\n   * which means the user has no keyboard or mouse. Some hybrids like Surface tablets in desktop mode are\n   * still touch devices, but support keyboard and mouse at the same time. In such cases this method will\n   * return false, since the device is not touch only.\n   *\n   * Currently this method returns the same as hasOnScreenKeyboard(). Maybe the implementation here will be\n   * different in the future.\n   */\n  supportsOnlyTouch() {\n    return this.supportsFeature('_onlyTouch', this.hasOnScreenKeyboard.bind(this));\n  }\n\n  /**\n   * @see http://www.stucox.com/blog/you-cant-detect-a-touchscreen/\n   * @see https://codeburst.io/the-only-way-to-detect-touch-with-javascript-7791a3346685\n   */\n  supportsTouch() {\n    return this.supportsFeature('_touch', function check(property) {\n      return (('ontouchstart' in window) || window.TouchEvent || window.DocumentTouch && document instanceof window.DocumentTouch);\n    });\n  }\n\n  supportsFile() {\n    return !!window.File;\n  }\n\n  /**\n   * Some browsers support the file API but don't support the File constructor (new File()).\n   */\n  supportsFileConstructor() {\n    return typeof File === 'function';\n  }\n\n  supportsCssAnimation() {\n    return this.supportsCssProperty('animation');\n  }\n\n  /**\n   * Used to determine if browser supports full history API.\n   * Note that IE9 only partially supports the API, pushState and replaceState functions are missing.\n   * @see: https://developer.mozilla.org/de/docs/Web/API/Window/history\n   */\n  supportsHistoryApi() {\n    return !!(window.history && window.history.pushState);\n  }\n\n  supportsCssGradient() {\n    var testValue = 'linear-gradient(to left, #000 0%, #000 50%, transparent 50%, transparent 100% )';\n    return this.supportsFeature('gradient', this.checkCssValue.bind(this, 'backgroundImage', testValue, function(actualValue) {\n      return (actualValue + '').indexOf('gradient') > 0;\n    }));\n  }\n\n  supportsInternationalization() {\n    return window.Intl && typeof window.Intl === 'object';\n  }\n\n  /**\n   * Returns true if the device supports the download of resources in the same window as the single page app is running.\n   * With \"download\" we mean: change <code>window.location.href</code> to the URL of the resource to download. Some browsers don't\n   * support this behavior and require the resource to be opened in a new window with <code>window.open</code>.\n   */\n  supportsDownloadInSameWindow() {\n    return Device.Browser.FIREFOX !== this.browser;\n  }\n\n  supportsWebcam() {\n    return this.supportsFeature('_webcam', function check(property) {\n      var getUserMedia = objects.optProperty(navigator, 'mediaDevices', 'getUserMedia');\n      return objects.isFunction(getUserMedia);\n    });\n  }\n\n  hasPrettyScrollbars() {\n    return this.supportsFeature('_prettyScrollbars', function check(property) {\n      return this.scrollbarWidth === 0;\n    }.bind(this));\n  }\n\n  canHideScrollbars() {\n    return this.supportsFeature('_canHideScrollbars', function check(property) {\n      // Check if scrollbar is vanished if class hybrid-scrollable is applied which hides the scrollbar, see also scrollbars.js and Scrollbar.less\n      return this._detectScrollbarWidth('hybrid-scrollable') === 0;\n    }.bind(this));\n  }\n\n  supportsCopyFromDisabledInputFields() {\n    return Device.Browser.FIREFOX !== this.browser;\n  }\n\n  /**\n   * If the mouse down on an element with a pseudo element removes the pseudo element (e.g. check box toggling),\n   * the firefox cannot focus the element anymore and instead focuses the body. In that case manual focus handling is necessary.\n   */\n  loosesFocusIfPseudoElementIsRemoved() {\n    return Device.Browser.FIREFOX === this.browser;\n  }\n\n  supportsCssProperty(property) {\n    return this.supportsFeature(property, function check(property) {\n      if (document.body.style[property] !== undefined) {\n        return true;\n      }\n\n      property = property.charAt(0).toUpperCase() + property.slice(1);\n      for (var i = 0; i < Device.VENDOR_PREFIXES.length; i++) {\n        if (document.body.style[Device.VENDOR_PREFIXES[i] + property] !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n\n  supportsGeolocation() {\n    return !!navigator.geolocation;\n  }\n\n  /**\n   * When we call .preventDefault() on a mousedown event Firefox doesn't apply the :active state.\n   * Since W3C does not specify an expected behavior, we need this workaround for consistent behavior in\n   * our UI. The issue has been reported to Mozilla but it doesn't look like there will be a bugfix soon:\n   *\n   * https://bugzilla.mozilla.org/show_bug.cgi?id=771241#c7\n   */\n  requiresSyntheticActiveState() {\n    return this.isFirefox();\n  }\n\n  supportsPassiveEventListener() {\n    return this.supportsFeature('_passiveEventListener', function check(property) {\n      // Code from MDN https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n      var passiveSupported = false;\n      try {\n        var options = Object.defineProperty({}, 'passive', {\n          get: function() {\n            passiveSupported = true;\n            return false;\n          }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n      } catch (err) {\n        passiveSupported = false;\n      }\n      return passiveSupported;\n    });\n  }\n\n  checkCssValue(property, value, checkFunc) {\n    // Check if property is supported at all, otherwise div.style[property] would just add it and checkFunc would always return true\n    if (document.body.style[property] === undefined) {\n      return false;\n    }\n    var div = document.createElement('div');\n    div.style[property] = value;\n    if (checkFunc(div.style[property])) {\n      return true;\n    }\n\n    property = property.charAt(0).toUpperCase() + property.slice(1);\n    for (var i = 0; i < Device.VENDOR_PREFIXES.length; i++) {\n      var vendorProperty = Device.VENDOR_PREFIXES[i] + property;\n      if (document.body.style[vendorProperty] !== undefined) {\n        div.style[vendorProperty] = value;\n        if (checkFunc(div.style[vendorProperty])) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   *  https://bugs.chromium.org/p/chromium/issues/detail?id=740502\n   */\n  hasTableCellZoomBug() {\n    return this.browser === Device.Browser.CHROME;\n  }\n\n  _detectScrollbarWidth(cssClass) {\n    var $measure = $('body')\n        .appendDiv(cssClass)\n        .attr('id', 'MeasureScrollbar')\n        .css('width', 50)\n        .css('height', 50)\n        .css('overflow-y', 'scroll'),\n      measureElement = $measure[0];\n    var scrollbarWidth = measureElement.offsetWidth - measureElement.clientWidth;\n    $measure.remove();\n    return scrollbarWidth;\n  }\n\n  toString() {\n    return 'scout.Device[' +\n      'system=' + this.system +\n      ' browser=' + this.browser +\n      ' browserVersion=' + this.browserVersion +\n      ' type=' + this.type +\n      ' scrollbarWidth=' + this.scrollbarWidth +\n      ' features=' + JSON.stringify(this.features) + ']';\n  }\n\n  static get() {\n    return instance;\n  }\n}\n\nApp.addListener('prepare', function() {\n  if (instance) {\n    // if the device was created before the app itself, use it instead of creating a new one\n    return;\n  }\n  instance = scout.create('Device', {\n    userAgent: navigator.userAgent\n  });\n});\n"]},"metadata":{},"sourceType":"module"}