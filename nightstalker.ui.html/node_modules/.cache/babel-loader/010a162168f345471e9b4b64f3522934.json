{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, BenchColumn, DesktopTabSelectKeyStroke, FlexboxLayout, FlexboxLayoutData, HtmlComponent, KeyStrokeContext, scout, Splitter, styles, Table, Widget, widgets } from '../../index';\nimport $ from 'jquery';\n\nvar DesktopBench = /*#__PURE__*/function (_Widget) {\n  _inherits(DesktopBench, _Widget);\n\n  var _super = _createSuper(DesktopBench);\n\n  function DesktopBench() {\n    var _this;\n\n    _classCallCheck(this, DesktopBench);\n\n    _this = _super.call(this);\n    _this.columns = [];\n    _this.components = null;\n    _this.tabBoxMap = {}; // [key=viewId, value=SimpleTabBox instance]\n\n    _this._removeViewInProgress = 0;\n    _this.changingCounter = 0;\n    _this.changed = false;\n    _this.layoutCacheKey = [];\n    _this._desktopOutlineChangeHandler = _this._onDesktopOutlineChange.bind(_assertThisInitialized(_this));\n    _this._desktopPropertyChangeHandler = _this._onDesktopPropertyChange.bind(_assertThisInitialized(_this));\n    _this._outlineNodesSelectedHandler = _this._onOutlineNodesSelected.bind(_assertThisInitialized(_this));\n    _this._outlinePageChangedHandler = _this._onOutlinePageChanged.bind(_assertThisInitialized(_this));\n    _this._outlinePropertyChangeHandler = _this._onOutlinePropertyChange.bind(_assertThisInitialized(_this));\n    _this._outlineContentDestroyHandler = _this._onoutlineContentDestroy.bind(_assertThisInitialized(_this)); // event listener functions\n\n    _this._viewAddHandler = _this._onViewAdd.bind(_assertThisInitialized(_this));\n    _this._viewRemoveHandler = _this._onViewRemove.bind(_assertThisInitialized(_this));\n    _this._viewActivateHandler = _this._onViewActivate.bind(_assertThisInitialized(_this));\n    _this._viewDeactivateHandler = _this._onViewDeactivate.bind(_assertThisInitialized(_this));\n    _this._desktopAnimationEndHandler = _this._onDesktopAnimationEnd.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DesktopBench, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(DesktopBench.prototype), \"_init\", this).call(this, model);\n\n      DesktopBench.VIEW_MIN_HEIGHT = $.pxToNumber(styles.get('view-tab-box', 'min-height').minHeight);\n      DesktopBench.VIEW_MIN_WIDTH = $.pxToNumber(styles.get('view-tab-box', 'min-width').minWidth);\n      this.desktop = this.session.desktop;\n      this.setLayoutData(this.desktop.benchLayoutData);\n\n      this._createColumns();\n\n      this.headerTabArea = model.headerTabArea; // controller for headerTabArea\n\n      if (this.headerTabArea) {\n        this.headerTabAreaController = scout.create('HeaderTabBoxController');\n        this.headerTabAreaController.install(this, this.headerTabArea);\n      }\n\n      this.outlineContentVisible = scout.nvl(model.outlineContentVisible, true);\n      this.setOutline(this.desktop.outline);\n      this.updateNavigationHandleVisibility();\n    }\n  }, {\n    key: \"_setTabArea\",\n    value: function _setTabArea(headerTabArea) {\n      this.headerTabArea = headerTabArea;\n\n      if (this.headerTabAreaController) {\n        this.headerTabAreaController.install(this, this.headerTabArea); // for all views\n\n        var tabBox = this.getTabBox('C');\n        tabBox.viewStack.slice().reverse().forEach(function (view) {\n          this.headerTabAreaController._onViewAdd({\n            view: view\n          });\n\n          if (tabBox.currentView === view) {\n            this.headerTabAreaController._onViewActivate({\n              view: view\n            });\n          }\n        }, this); // ensure the correct view tab area is visible (header or center part)\n\n        this.headerTabAreaController._onViewsChanged(); // prevent flickering\n\n\n        this.validateLayoutTree();\n      }\n    }\n  }, {\n    key: \"_createColumns\",\n    value: function _createColumns() {\n      var layoutData = this.getLayoutData(),\n          columnLayoutData = [];\n\n      if (layoutData) {\n        columnLayoutData = this.getLayoutData().getColumns();\n      }\n\n      for (var i = 0; i < 3; i++) {\n        var cacheKey = this.layoutCacheKey.slice();\n\n        if (cacheKey.length > 0) {\n          cacheKey.push('column' + i);\n        }\n\n        var column = scout.create('BenchColumn', {\n          parent: this,\n          layoutData: columnLayoutData[i],\n          cacheKey: cacheKey,\n          cssClass: DesktopBench.VIEW_AREA_COLUMN_CLASSES[i]\n        });\n        column.on('viewAdd', this._viewAddHandler);\n        column.on('viewRemove', this._viewRemoveHandler);\n        column.on('viewActivate', this._viewActivateHandler);\n        column.on('viewDeactivate', this._viewDeactivateHandler);\n        this.columns.push(column);\n      }\n    }\n  }, {\n    key: \"_initKeyStrokeContext\",\n    value: function _initKeyStrokeContext() {\n      _get(_getPrototypeOf(DesktopBench.prototype), \"_initKeyStrokeContext\", this).call(this); // Bound to desktop\n\n\n      this.desktopKeyStrokeContext = new KeyStrokeContext();\n      this.desktopKeyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n      this.desktopKeyStrokeContext.$bindTarget = this.desktop.$container;\n      this.desktopKeyStrokeContext.$scopeTarget = this.desktop.$container;\n      this.desktopKeyStrokeContext.registerKeyStroke(new DesktopTabSelectKeyStroke(this.desktop));\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent.appendDiv('desktop-bench');\n      this.htmlComp = HtmlComponent.install(this.$container, this.session);\n      this.htmlComp.setLayout(this._createLayout());\n      this.htmlComp.layoutData = this.getLayoutData();\n\n      this._renderColumns();\n\n      this._revalidateSplitters();\n\n      this._renderNavigationHandleVisible();\n\n      this.session.keyStrokeManager.installKeyStrokeContext(this.desktopKeyStrokeContext);\n      this.desktop.on('propertyChange', this._desktopPropertyChangeHandler);\n      this.desktop.on('outlineChange', this._desktopOutlineChangeHandler);\n      this.desktop.on('animationEnd', this._desktopAnimationEndHandler);\n    }\n  }, {\n    key: \"_createLayout\",\n    value: function _createLayout() {\n      return new FlexboxLayout(FlexboxLayout.Direction.ROW, this.layoutCacheKey);\n    }\n  }, {\n    key: \"visibleColumns\",\n    value: function visibleColumns() {\n      return this.columns.filter(function (column) {\n        return column.hasViews();\n      });\n    }\n  }, {\n    key: \"_renderColumns\",\n    value: function _renderColumns() {\n      this.visibleColumns().forEach(function (column) {\n        this._renderColumn(column);\n      }, this);\n      this.updateFirstLastMarker();\n    }\n  }, {\n    key: \"_renderColumn\",\n    value: function _renderColumn(column) {\n      if (!column || column.rendered) {\n        return;\n      }\n\n      column.render();\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.desktop.off('propertyChange', this._desktopPropertyChangeHandler);\n      this.desktop.off('outlineChange', this._desktopOutlineChangeHandler);\n      this.desktop.off('animationEnd', this._desktopAnimationEndHandler);\n      this.session.keyStrokeManager.uninstallKeyStrokeContext(this.desktopKeyStrokeContext);\n\n      _get(_getPrototypeOf(DesktopBench.prototype), \"_remove\", this).call(this);\n    }\n  }, {\n    key: \"updateFirstLastMarker\",\n    value: function updateFirstLastMarker() {\n      widgets.updateFirstLastMarker(this.visibleColumns());\n    }\n  }, {\n    key: \"_renderOutlineContent\",\n    value: function _renderOutlineContent() {\n      if (!this.outlineContent) {\n        return;\n      } // Reset view tab relevant properties to make sure no tab is visible for the outline content\n\n\n      delete this.outlineContent.title;\n      delete this.outlineContent.subTitle;\n      delete this.outlineContent.iconId; // bring the view to top if the desktop is not in background.\n\n      this.addView(this.outlineContent, !this.desktop.inBackground);\n\n      if (this.desktop.rendered) {\n        // Request focus on first element in outline content\n        this.session.focusManager.validateFocus();\n      }\n    }\n  }, {\n    key: \"_removeOutlineContent\",\n    value: function _removeOutlineContent() {\n      if (!this.outlineContent) {\n        return;\n      }\n\n      this.removeView(this.outlineContent, false);\n    }\n  }, {\n    key: \"_createNavigationHandle\",\n    value: function _createNavigationHandle() {\n      return scout.create('DesktopNavigationHandle', {\n        parent: this,\n        leftVisible: false\n      });\n    }\n  }, {\n    key: \"_renderNavigationHandle\",\n    value: function _renderNavigationHandle() {\n      if (this.navigationHandle) {\n        return;\n      }\n\n      this.navigationHandle = this._createNavigationHandle();\n      this.navigationHandle.render();\n      this.navigationHandle.addCssClass('navigation-closed');\n      this.navigationHandle.on('action', this._onNavigationHandleAction.bind(this));\n    }\n  }, {\n    key: \"_removeNavigationHandle\",\n    value: function _removeNavigationHandle() {\n      if (!this.navigationHandle) {\n        return;\n      }\n\n      this.navigationHandle.destroy();\n      this.navigationHandle = null;\n    }\n  }, {\n    key: \"_renderNavigationHandleVisible\",\n    value: function _renderNavigationHandleVisible() {\n      if (this.navigationHandleVisible) {\n        this._renderNavigationHandle();\n      } else {\n        this._removeNavigationHandle();\n      }\n\n      this.$container.toggleClass('has-navigation-handle', this.navigationHandleVisible);\n    }\n    /**\n     * is called in post render of desktop used to initialize the ui state. E.g. show default views\n     */\n\n  }, {\n    key: \"postRender\",\n    value: function postRender() {\n      this.columns.forEach(function (column) {\n        column.postRender();\n      });\n    }\n  }, {\n    key: \"setChanging\",\n    value: function setChanging(changing) {\n      if (changing) {\n        this.changingCounter++;\n      } else {\n        this.changingCounter--;\n      }\n\n      if (this.changingCounter === 0 && this.changed && this.rendered) {\n        this.htmlComp.layout.reset();\n        this.htmlComp.invalidateLayoutTree();\n        this.htmlComp.validateLayoutTree();\n        this.changed = false;\n      }\n    }\n  }, {\n    key: \"updateLayoutData\",\n    value: function updateLayoutData(layoutData) {\n      if (this.getLayoutData() === layoutData) {\n        return;\n      }\n\n      this.setLayoutData(layoutData); // update columns\n\n      var columnDatas = layoutData.getColumns();\n      this.columns.forEach(function (c, i) {\n        var cacheKey;\n\n        if (this.layoutCacheKey && this.layoutCacheKey.length > 0) {\n          cacheKey = this.layoutCacheKey.slice();\n          cacheKey.push('column' + i);\n        }\n\n        c.updateLayoutData(columnDatas[i], cacheKey);\n      }.bind(this));\n\n      if (this.rendered) {\n        this.htmlComp.layout.setCacheKey(this.layoutCacheKey);\n        this.htmlComp.layout.reset();\n        this.htmlComp.invalidateLayoutTree();\n        this.htmlComp.validateLayoutTree();\n      }\n\n      this._updateSplitterMovable();\n    }\n  }, {\n    key: \"setLayoutData\",\n    value: function setLayoutData(layoutData) {\n      if (this.layoutData === layoutData) {\n        return;\n      }\n\n      _get(_getPrototypeOf(DesktopBench.prototype), \"setLayoutData\", this).call(this, layoutData);\n\n      this.layoutData = layoutData;\n      this.layoutCacheKey = [];\n\n      if (layoutData.cacheKey) {\n        this.layoutCacheKey.push(layoutData.cacheKey);\n      }\n    }\n  }, {\n    key: \"getLayoutData\",\n    value: function getLayoutData() {\n      return this.layoutData;\n    }\n  }, {\n    key: \"setNavigationHandleVisible\",\n    value: function setNavigationHandleVisible(visible) {\n      this.setProperty('navigationHandleVisible', visible);\n    }\n  }, {\n    key: \"setOutline\",\n    value: function setOutline(outline) {\n      if (this.outline) {\n        this.outline.off('nodesSelected', this._outlineNodesSelectedHandler);\n        this.outline.off('pageChanged', this._outlinePageChangedHandler);\n        this.outline.off('propertyChange', this._outlinePropertyChangeHandler);\n      }\n\n      this._setProperty('outline', outline);\n\n      if (this.outline) {\n        this.outline.on('nodesSelected', this._outlineNodesSelectedHandler);\n        this.outline.on('pageChanged', this._outlinePageChangedHandler);\n        this.outline.on('propertyChange', this._outlinePropertyChangeHandler);\n      }\n\n      this.updateOutlineContent();\n    }\n  }, {\n    key: \"setOutlineContent\",\n    value: function setOutlineContent(content) {\n      var oldContent = this.outlineContent;\n\n      if (this.outlineContent === content) {\n        return;\n      }\n\n      if (oldContent) {\n        oldContent.off('destroy', this._outlineContentDestroyHandler);\n      }\n\n      if (this.rendered) {\n        this._removeOutlineContent();\n      } // add a destroy listener to the outline-content, so we can reset the property - otherwise we'd work\n      // with a potentially destroyed content which would cause an error later, when we try to render the\n      // bench with the outline-content.\n\n\n      if (content) {\n        content.one('destroy', this._outlineContentDestroyHandler);\n      }\n\n      this._setProperty('outlineContent', content); // Inform header that outline content has changed\n      // (having a listener in the header is quite complex due to initialization phase, a direct call here is much easier to implement)\n\n\n      if (this.desktop.header) {\n        this.desktop.header.onBenchOutlineContentChange(content, oldContent);\n      }\n\n      this._renderOutlineContent();\n    }\n  }, {\n    key: \"setOutlineContentVisible\",\n    value: function setOutlineContentVisible(visible) {\n      if (visible === this.outlineContentVisible) {\n        return;\n      }\n\n      this._setProperty('outlineContentVisible', visible);\n\n      this.updateOutlineContent();\n    }\n  }, {\n    key: \"bringToFront\",\n    value: function bringToFront() {\n      if (!this.outlineContent) {\n        return;\n      }\n\n      this._renderOutlineContent();\n    }\n  }, {\n    key: \"sendToBack\",\n    value: function sendToBack() {// nop\n    }\n  }, {\n    key: \"_computeDefaultDetailForm\",\n    value: function _computeDefaultDetailForm() {\n      return this.outline.defaultDetailForm;\n    }\n  }, {\n    key: \"_computeOutlineOverview\",\n    value: function _computeOutlineOverview() {\n      return this.outline.outlineOverview;\n    }\n  }, {\n    key: \"_computeDetailContentForPage\",\n    value: function _computeDetailContentForPage(node) {\n      if (!node) {\n        throw new Error('called _showDetailContentForPage without node');\n      }\n\n      var content;\n\n      if (node.detailForm && node.detailFormVisible && node.detailFormVisibleByUi) {\n        content = node.detailForm;\n        content.uiCssClass = 'detail-form';\n      } else if (node.detailTable && node.detailTableVisible) {\n        content = node.detailTable;\n        content.uiCssClass = 'detail-table';\n      }\n\n      return content;\n    }\n  }, {\n    key: \"updateOutlineContent\",\n    value: function updateOutlineContent() {\n      if (!this.outlineContentVisible || !this.outline) {\n        return;\n      }\n\n      var content,\n          selectedPage = this.outline.selectedNode();\n\n      if (selectedPage) {\n        // Outline does not support multi selection\n        content = this._computeDetailContentForPage(selectedPage);\n      } else {\n        if (this.outline.defaultDetailForm) {\n          content = this._computeDefaultDetailForm();\n        } else if (this.outline.outlineOverview) {\n          content = this._computeOutlineOverview();\n        }\n      }\n\n      if (content) {\n        if (content instanceof Table) {\n          content.menuBar.setCssClass('main-menubar');\n        }\n\n        content.displayViewId = 'C';\n      }\n\n      this.setOutlineContent(content);\n    }\n  }, {\n    key: \"updateOutlineContentDebounced\",\n    value: function updateOutlineContentDebounced() {\n      clearTimeout(this._updateOutlineContentTimeout);\n      this._updateOutlineContentTimeout = setTimeout(function () {\n        this.updateOutlineContent();\n      }.bind(this), 300);\n    }\n  }, {\n    key: \"updateNavigationHandleVisibility\",\n    value: function updateNavigationHandleVisibility() {\n      // Don't show handle if desktop says handle must not be visible\n      // Only show handle if navigation is invisible\n      this.setNavigationHandleVisible(this.desktop.navigationHandleVisible && !this.desktop.navigationVisible);\n    }\n  }, {\n    key: \"_onDesktopOutlineChange\",\n    value: function _onDesktopOutlineChange(event) {\n      this.setOutline(this.desktop.outline);\n      this.updateNavigationHandleVisibility();\n    }\n  }, {\n    key: \"_onoutlineContentDestroy\",\n    value: function _onoutlineContentDestroy(event) {\n      this.setOutlineContent(null);\n    }\n  }, {\n    key: \"_onOutlineNodesSelected\",\n    value: function _onOutlineNodesSelected(event) {\n      if (event.debounce) {\n        this.updateOutlineContentDebounced();\n      } else {\n        this.updateOutlineContent();\n      }\n    }\n  }, {\n    key: \"_onOutlinePageChanged\",\n    value: function _onOutlinePageChanged(event) {\n      var selectedPage = this.outline.selectedNode();\n\n      if (!event.page && !selectedPage || event.page === selectedPage) {\n        this.updateOutlineContent();\n      }\n    }\n  }, {\n    key: \"_onOutlinePropertyChange\",\n    value: function _onOutlinePropertyChange(event) {\n      if (scout.isOneOf(event.propertyName, ['defaultDetailForm', 'outlineOverview'])) {\n        this.updateOutlineContent();\n      }\n    }\n  }, {\n    key: \"_onDesktopNavigationVisibleChange\",\n    value: function _onDesktopNavigationVisibleChange(event) {\n      // If navigation gets visible: Hide handle immediately\n      // If navigation gets hidden using animation: Show handle when animation ends\n      if (this.desktop.navigationVisible) {\n        this.updateNavigationHandleVisibility();\n      }\n    }\n  }, {\n    key: \"_onDesktopNavigationHandleVisibleChange\",\n    value: function _onDesktopNavigationHandleVisibleChange(event) {\n      this.updateNavigationHandleVisibility();\n    }\n  }, {\n    key: \"_onDesktopAnimationEnd\",\n    value: function _onDesktopAnimationEnd(event) {\n      if (!this.desktop.navigationVisible) {\n        this.updateNavigationHandleVisibility();\n      }\n    }\n  }, {\n    key: \"_onBenchLayoutDataChange\",\n    value: function _onBenchLayoutDataChange(event) {\n      this.updateLayoutData(this.desktop.benchLayoutData);\n    }\n  }, {\n    key: \"_onDesktopPropertyChange\",\n    value: function _onDesktopPropertyChange(event) {\n      if (event.propertyName === 'navigationVisible') {\n        this._onDesktopNavigationVisibleChange();\n      } else if (event.propertyName === 'navigationHandleVisible') {\n        this._onDesktopNavigationHandleVisibleChange();\n      }\n\n      if (event.propertyName === 'benchLayoutData') {\n        this._onBenchLayoutDataChange();\n      }\n    }\n  }, {\n    key: \"_onNavigationHandleAction\",\n    value: function _onNavigationHandleAction(event) {\n      this.desktop.enlargeNavigation();\n    }\n  }, {\n    key: \"_revalidateSplitters\",\n    value: function _revalidateSplitters() {\n      // remove old splitters\n      if (this.components) {\n        this.components.forEach(function (comp) {\n          if (comp instanceof Splitter) {\n            comp.destroy();\n          }\n        });\n      }\n\n      this.components = this.visibleColumns().reduce(function (arr, col) {\n        if (arr.length > 0) {\n          // add sep\n          var splitter = scout.create('Splitter', {\n            parent: this,\n            $anchor: arr[arr.length - 1].$container,\n            $root: this.$container,\n            maxRatio: 1\n          });\n          splitter.render();\n          splitter.setLayoutData(FlexboxLayoutData.fixed().withOrder(col.getLayoutData().order - 1));\n          splitter.$container.addClass('line');\n          arr.push(splitter);\n        }\n\n        arr.push(col);\n        return arr;\n      }.bind(this), []); // well order the dom elements (reduce is used for simple code reasons, the result of reduce is not of interest).\n\n      this.components.filter(function (comp) {\n        return comp instanceof BenchColumn;\n      }).reduce(function (c1, c2, index) {\n        if (index > 0) {\n          c2.$container.insertAfter(c1.$container);\n        }\n\n        return c2;\n      }, undefined);\n\n      this._updateSplitterMovable();\n    }\n  }, {\n    key: \"_updateSplitterMovable\",\n    value: function _updateSplitterMovable() {\n      if (!this.components) {\n        return;\n      }\n\n      this.components.forEach(function (c, i) {\n        if (c instanceof Splitter) {\n          var componentsBefore = this.components.slice(0, i).reverse();\n          var componentsAfter = this.components.slice(i + 1); // shrink\n\n          if (componentsBefore.filter(function (c) {\n            return c.getLayoutData().shrink > 0;\n          }).length > 0 && componentsAfter.filter(function (c) {\n            return c.getLayoutData().grow > 0;\n          }).length > 0) {\n            c.setEnabled(true);\n            c.on('move', this._onSplitterMove.bind(this));\n            return;\n          } // grow\n\n\n          if (componentsBefore.filter(function (c) {\n            return c.getLayoutData().grow > 0;\n          }).length > 0 && componentsAfter.filter(function (c) {\n            return c.getLayoutData().shrink > 0;\n          }).length > 0) {\n            c.setEnabled(true);\n            c.on('move', this._onSplitterMove.bind(this));\n            return;\n          }\n\n          c.setEnabled(false);\n        }\n      }.bind(this));\n    }\n  }, {\n    key: \"_onSplitterMove\",\n    value: function _onSplitterMove(event) {\n      var splitter = event.source; // noinspection UnnecessaryLocalVariableJS\n\n      var diff = event.position - splitter.htmlComp.location().x - splitter.htmlComp.margins().left - splitter.htmlComp.insets().left;\n      splitter.getLayoutData().diff = diff;\n      this.revalidateLayout();\n      splitter.getLayoutData().diff = null;\n      event.preventDefault();\n    }\n  }, {\n    key: \"_onViewAdd\",\n    value: function _onViewAdd(event) {\n      this.trigger('viewAdd', {\n        view: event.view\n      });\n    }\n  }, {\n    key: \"_onViewRemove\",\n    value: function _onViewRemove(event) {\n      this.trigger('viewRemove', {\n        view: event.view\n      });\n    }\n  }, {\n    key: \"_onViewActivate\",\n    value: function _onViewActivate(event) {\n      var view = event.view;\n\n      if (this.outlineContent === view) {\n        this.desktop.bringOutlineToFront();\n      }\n\n      this.trigger('viewActivate', {\n        view: view\n      });\n    }\n  }, {\n    key: \"_onViewDeactivate\",\n    value: function _onViewDeactivate(event) {\n      if (this.outlineContent === event.view) {\n        this.desktop.sendOutlineToBack();\n      }\n\n      this.trigger('viewDeactivate', {\n        view: event.view\n      });\n    }\n  }, {\n    key: \"addView\",\n    value: function addView(view, activate) {\n      // normalize displayViewId\n      switch (view.displayViewId) {\n        case 'NW':\n        case 'W':\n        case 'SW':\n        case 'N':\n        case 'C':\n        case 'S':\n        case 'NE':\n        case 'E':\n        case 'SE':\n          break;\n\n        default:\n          // map all other displayViewIds to center\n          view.displayViewId = 'C';\n          break;\n      }\n\n      var column = this._getColumn(view.displayViewId);\n\n      this.tabBoxMap[view.id] = column;\n      column.addView(view, activate);\n\n      if (this.rendered) {\n        if (column.viewCount() === 1) {\n          this._renderColumn(column);\n\n          this._revalidateSplitters();\n\n          this.updateFirstLastMarker();\n\n          if (this.changingCounter > 0) {\n            this.changed = true;\n          } else {\n            this.htmlComp.layout.reset();\n            this.htmlComp.invalidateLayoutTree(); // Layout immediately to prevent 'laggy' form visualization,\n            // but not initially while desktop gets rendered because it will be done at the end anyway\n\n            this.htmlComp.validateLayoutTree();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"activateView\",\n    value: function activateView(view) {\n      // activate views is only for existing views allowed.\n      if (!this.hasView(view)) {\n        return;\n      }\n\n      var column = this._getColumn(view.displayViewId);\n\n      if (column) {\n        column.activateView(view);\n      }\n    }\n  }, {\n    key: \"_getColumn\",\n    value: function _getColumn(displayViewId) {\n      var column;\n\n      switch (displayViewId) {\n        case 'NW':\n        case 'W':\n        case 'SW':\n          column = this.columns[DesktopBench.VIEW_AREA_COLUMN_INDEX.LEFT];\n          break;\n\n        case 'NE':\n        case 'E':\n        case 'SE':\n          column = this.columns[DesktopBench.VIEW_AREA_COLUMN_INDEX.RIGHT];\n          break;\n\n        default:\n          column = this.columns[DesktopBench.VIEW_AREA_COLUMN_INDEX.CENTER];\n          break;\n      }\n\n      return column;\n    }\n  }, {\n    key: \"removeView\",\n    value: function removeView(view, showSiblingView) {\n      var column = this.tabBoxMap[view.id];\n\n      if (column) {\n        this._removeViewInProgress++;\n        column.removeView(view, showSiblingView);\n        this._removeViewInProgress--;\n        delete this.tabBoxMap[view.id]; // remove if empty\n\n        if (this.rendered && column.viewCount() === 0 && this._removeViewInProgress === 0) {\n          column.remove();\n\n          this._revalidateSplitters();\n\n          this.updateFirstLastMarker();\n\n          if (this.changingCounter > 0) {\n            this.changed = true;\n          } else {\n            this.htmlComp.layout.reset();\n            this.htmlComp.invalidateLayoutTree(); // Layout immediately to make sure column width is adjusted along with the removal and not delayed (Scout JS)\n\n            this.htmlComp.validateLayoutTree();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getComponents\",\n    value: function getComponents() {\n      return this.components;\n    }\n  }, {\n    key: \"getTabBox\",\n    value: function getTabBox(displayViewId) {\n      var viewColumn = this._getColumn(displayViewId);\n\n      if (!viewColumn) {\n        return;\n      }\n\n      return viewColumn.getTabBox(displayViewId);\n    }\n  }, {\n    key: \"visibleTabBoxes\",\n    value: function visibleTabBoxes() {\n      return this.visibleColumns().reduce(function (arr, column) {\n        arrays.pushAll(arr, column.visibleTabBoxes());\n        return arr;\n      }, []);\n    }\n  }, {\n    key: \"hasView\",\n    value: function hasView(view) {\n      return this.columns.filter(function (column) {\n        return column.hasView(view);\n      }).length > 0;\n    }\n  }, {\n    key: \"getViews\",\n    value: function getViews(displayViewId) {\n      return this.columns.reduce(function (arr, column) {\n        arrays.pushAll(arr, column.getViews(displayViewId));\n        return arr;\n      }, []);\n    }\n  }, {\n    key: \"getViewTab\",\n    value: function getViewTab(view) {\n      var viewTab = null;\n      this.getTabs().some(function (vt) {\n        if (vt.view === view) {\n          viewTab = vt;\n          return true;\n        }\n\n        return false;\n      });\n      return viewTab;\n    }\n  }, {\n    key: \"getTabs\",\n    value: function getTabs() {\n      var tabs = []; // consider right order\n\n      tabs = tabs.concat(this.getTabBox('NW').getController().getTabs());\n      tabs = tabs.concat(this.getTabBox('W').getController().getTabs());\n      tabs = tabs.concat(this.getTabBox('SW').getController().getTabs());\n      tabs = tabs.concat(this.getTabBox('N').getController().getTabs());\n\n      if (this.headerTabAreaController) {\n        tabs = tabs.concat(this.headerTabAreaController.getTabs());\n      } else {\n        tabs = tabs.concat(this.getTabBox('C').getController().getTabs());\n      }\n\n      tabs = tabs.concat(this.getTabBox('S').getController().getTabs());\n      tabs = tabs.concat(this.getTabBox('NE').getController().getTabs());\n      tabs = tabs.concat(this.getTabBox('E').getController().getTabs());\n      tabs = tabs.concat(this.getTabBox('SE').getController().getTabs());\n      return tabs;\n    }\n    /**\n     * @returns {array} all the currently active views (the selected ones) of all the visible tab boxes\n     */\n\n  }, {\n    key: \"activeViews\",\n    value: function activeViews() {\n      var activeViews = [];\n      this.visibleColumns().forEach(function (column) {\n        column.visibleTabBoxes().forEach(function (tabBox) {\n          activeViews.push(tabBox.currentView);\n        });\n      });\n      return activeViews;\n    }\n  }]);\n\n  return DesktopBench;\n}(Widget);\n\n_defineProperty(DesktopBench, \"VIEW_MIN_HEIGHT\", null);\n\n_defineProperty(DesktopBench, \"VIEW_MIN_WIDTH\", null);\n\n_defineProperty(DesktopBench, \"VIEW_AREA_COLUMN_INDEX\", {\n  LEFT: 0,\n  CENTER: 1,\n  RIGHT: 2\n});\n\n_defineProperty(DesktopBench, \"VIEW_AREA_COLUMN_CLASSES\", ['west', 'center', 'east']);\n\nexport { DesktopBench as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/desktop/bench/DesktopBench.js"],"names":["arrays","BenchColumn","DesktopTabSelectKeyStroke","FlexboxLayout","FlexboxLayoutData","HtmlComponent","KeyStrokeContext","scout","Splitter","styles","Table","Widget","widgets","$","DesktopBench","columns","components","tabBoxMap","_removeViewInProgress","changingCounter","changed","layoutCacheKey","_desktopOutlineChangeHandler","_onDesktopOutlineChange","bind","_desktopPropertyChangeHandler","_onDesktopPropertyChange","_outlineNodesSelectedHandler","_onOutlineNodesSelected","_outlinePageChangedHandler","_onOutlinePageChanged","_outlinePropertyChangeHandler","_onOutlinePropertyChange","_outlineContentDestroyHandler","_onoutlineContentDestroy","_viewAddHandler","_onViewAdd","_viewRemoveHandler","_onViewRemove","_viewActivateHandler","_onViewActivate","_viewDeactivateHandler","_onViewDeactivate","_desktopAnimationEndHandler","_onDesktopAnimationEnd","model","VIEW_MIN_HEIGHT","pxToNumber","get","minHeight","VIEW_MIN_WIDTH","minWidth","desktop","session","setLayoutData","benchLayoutData","_createColumns","headerTabArea","headerTabAreaController","create","install","outlineContentVisible","nvl","setOutline","outline","updateNavigationHandleVisibility","tabBox","getTabBox","viewStack","slice","reverse","forEach","view","currentView","_onViewsChanged","validateLayoutTree","layoutData","getLayoutData","columnLayoutData","getColumns","i","cacheKey","length","push","column","parent","cssClass","VIEW_AREA_COLUMN_CLASSES","on","desktopKeyStrokeContext","invokeAcceptInputOnActiveValueField","$bindTarget","$container","$scopeTarget","registerKeyStroke","$parent","appendDiv","htmlComp","setLayout","_createLayout","_renderColumns","_revalidateSplitters","_renderNavigationHandleVisible","keyStrokeManager","installKeyStrokeContext","Direction","ROW","filter","hasViews","visibleColumns","_renderColumn","updateFirstLastMarker","rendered","render","off","uninstallKeyStrokeContext","outlineContent","title","subTitle","iconId","addView","inBackground","focusManager","validateFocus","removeView","leftVisible","navigationHandle","_createNavigationHandle","addCssClass","_onNavigationHandleAction","destroy","navigationHandleVisible","_renderNavigationHandle","_removeNavigationHandle","toggleClass","postRender","changing","layout","reset","invalidateLayoutTree","columnDatas","c","updateLayoutData","setCacheKey","_updateSplitterMovable","visible","setProperty","_setProperty","updateOutlineContent","content","oldContent","_removeOutlineContent","one","header","onBenchOutlineContentChange","_renderOutlineContent","defaultDetailForm","outlineOverview","node","Error","detailForm","detailFormVisible","detailFormVisibleByUi","uiCssClass","detailTable","detailTableVisible","selectedPage","selectedNode","_computeDetailContentForPage","_computeDefaultDetailForm","_computeOutlineOverview","menuBar","setCssClass","displayViewId","setOutlineContent","clearTimeout","_updateOutlineContentTimeout","setTimeout","setNavigationHandleVisible","navigationVisible","event","debounce","updateOutlineContentDebounced","page","isOneOf","propertyName","_onDesktopNavigationVisibleChange","_onDesktopNavigationHandleVisibleChange","_onBenchLayoutDataChange","enlargeNavigation","comp","reduce","arr","col","splitter","$anchor","$root","maxRatio","fixed","withOrder","order","addClass","c1","c2","index","insertAfter","undefined","componentsBefore","componentsAfter","shrink","grow","setEnabled","_onSplitterMove","source","diff","position","location","x","margins","left","insets","revalidateLayout","preventDefault","trigger","bringOutlineToFront","sendOutlineToBack","activate","_getColumn","id","viewCount","hasView","activateView","VIEW_AREA_COLUMN_INDEX","LEFT","RIGHT","CENTER","showSiblingView","remove","viewColumn","pushAll","visibleTabBoxes","getViews","viewTab","getTabs","some","vt","tabs","concat","getController","activeViews"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, BenchColumn, DesktopTabSelectKeyStroke, FlexboxLayout, FlexboxLayoutData, HtmlComponent, KeyStrokeContext, scout, Splitter, styles, Table, Widget, widgets} from '../../index';\nimport $ from 'jquery';\n\nexport default class DesktopBench extends Widget {\n\n  constructor() {\n    super();\n    this.columns = [];\n    this.components = null;\n    this.tabBoxMap = {}; // [key=viewId, value=SimpleTabBox instance]\n    this._removeViewInProgress = 0;\n    this.changingCounter = 0;\n    this.changed = false;\n    this.layoutCacheKey = [];\n\n    this._desktopOutlineChangeHandler = this._onDesktopOutlineChange.bind(this);\n    this._desktopPropertyChangeHandler = this._onDesktopPropertyChange.bind(this);\n    this._outlineNodesSelectedHandler = this._onOutlineNodesSelected.bind(this);\n    this._outlinePageChangedHandler = this._onOutlinePageChanged.bind(this);\n    this._outlinePropertyChangeHandler = this._onOutlinePropertyChange.bind(this);\n    this._outlineContentDestroyHandler = this._onoutlineContentDestroy.bind(this);\n\n    // event listener functions\n    this._viewAddHandler = this._onViewAdd.bind(this);\n    this._viewRemoveHandler = this._onViewRemove.bind(this);\n    this._viewActivateHandler = this._onViewActivate.bind(this);\n    this._viewDeactivateHandler = this._onViewDeactivate.bind(this);\n\n    this._desktopAnimationEndHandler = this._onDesktopAnimationEnd.bind(this);\n  }\n\n  static VIEW_MIN_HEIGHT = null; // Configured in sizes.css\n  static VIEW_MIN_WIDTH = null; // Configured in sizes.css\n\n  static VIEW_AREA_COLUMN_INDEX = {\n    LEFT: 0,\n    CENTER: 1,\n    RIGHT: 2\n  };\n\n  static VIEW_AREA_COLUMN_CLASSES = [\n    'west',\n    'center',\n    'east'\n  ];\n\n  _init(model) {\n    super._init(model);\n\n    DesktopBench.VIEW_MIN_HEIGHT = $.pxToNumber(styles.get('view-tab-box', 'min-height').minHeight);\n    DesktopBench.VIEW_MIN_WIDTH = $.pxToNumber(styles.get('view-tab-box', 'min-width').minWidth);\n\n    this.desktop = this.session.desktop;\n\n    this.setLayoutData(this.desktop.benchLayoutData);\n    this._createColumns();\n    this.headerTabArea = model.headerTabArea;\n    // controller for headerTabArea\n    if (this.headerTabArea) {\n      this.headerTabAreaController = scout.create('HeaderTabBoxController');\n      this.headerTabAreaController.install(this, this.headerTabArea);\n    }\n    this.outlineContentVisible = scout.nvl(model.outlineContentVisible, true);\n    this.setOutline(this.desktop.outline);\n    this.updateNavigationHandleVisibility();\n  }\n\n  _setTabArea(headerTabArea) {\n    this.headerTabArea = headerTabArea;\n    if (this.headerTabAreaController) {\n      this.headerTabAreaController.install(this, this.headerTabArea);\n      // for all views\n      var tabBox = this.getTabBox('C');\n      tabBox.viewStack.slice().reverse().forEach(function(view) {\n        this.headerTabAreaController._onViewAdd({\n          view: view\n        });\n        if (tabBox.currentView === view) {\n          this.headerTabAreaController._onViewActivate({\n            view: view\n          });\n        }\n      }, this);\n      // ensure the correct view tab area is visible (header or center part)\n      this.headerTabAreaController._onViewsChanged();\n      // prevent flickering\n      this.validateLayoutTree();\n    }\n  }\n\n  _createColumns() {\n    var layoutData = this.getLayoutData(),\n      columnLayoutData = [];\n\n    if (layoutData) {\n      columnLayoutData = this.getLayoutData().getColumns();\n    }\n    for (var i = 0; i < 3; i++) {\n      var cacheKey = this.layoutCacheKey.slice();\n      if (cacheKey.length > 0) {\n        cacheKey.push('column' + i);\n      }\n      var column = scout.create('BenchColumn', {\n        parent: this,\n        layoutData: columnLayoutData[i],\n        cacheKey: cacheKey,\n        cssClass: DesktopBench.VIEW_AREA_COLUMN_CLASSES[i]\n      });\n      column.on('viewAdd', this._viewAddHandler);\n      column.on('viewRemove', this._viewRemoveHandler);\n      column.on('viewActivate', this._viewActivateHandler);\n      column.on('viewDeactivate', this._viewDeactivateHandler);\n      this.columns.push(column);\n    }\n  }\n\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    // Bound to desktop\n    this.desktopKeyStrokeContext = new KeyStrokeContext();\n    this.desktopKeyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n    this.desktopKeyStrokeContext.$bindTarget = this.desktop.$container;\n    this.desktopKeyStrokeContext.$scopeTarget = this.desktop.$container;\n    this.desktopKeyStrokeContext.registerKeyStroke(new DesktopTabSelectKeyStroke(this.desktop));\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('desktop-bench');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n\n    this.htmlComp.setLayout(this._createLayout());\n    this.htmlComp.layoutData = this.getLayoutData();\n\n    this._renderColumns();\n    this._revalidateSplitters();\n    this._renderNavigationHandleVisible();\n\n    this.session.keyStrokeManager.installKeyStrokeContext(this.desktopKeyStrokeContext);\n    this.desktop.on('propertyChange', this._desktopPropertyChangeHandler);\n    this.desktop.on('outlineChange', this._desktopOutlineChangeHandler);\n    this.desktop.on('animationEnd', this._desktopAnimationEndHandler);\n  }\n\n  _createLayout() {\n    return new FlexboxLayout(FlexboxLayout.Direction.ROW, this.layoutCacheKey);\n  }\n\n  visibleColumns() {\n    return this.columns.filter(function(column) {\n      return column.hasViews();\n    });\n  }\n\n  _renderColumns() {\n    this.visibleColumns().forEach(function(column) {\n      this._renderColumn(column);\n    }, this);\n    this.updateFirstLastMarker();\n  }\n\n  _renderColumn(column) {\n    if (!column || column.rendered) {\n      return;\n    }\n    column.render();\n  }\n\n  _remove() {\n    this.desktop.off('propertyChange', this._desktopPropertyChangeHandler);\n    this.desktop.off('outlineChange', this._desktopOutlineChangeHandler);\n    this.desktop.off('animationEnd', this._desktopAnimationEndHandler);\n    this.session.keyStrokeManager.uninstallKeyStrokeContext(this.desktopKeyStrokeContext);\n    super._remove();\n  }\n\n  updateFirstLastMarker() {\n    widgets.updateFirstLastMarker(this.visibleColumns());\n  }\n\n  _renderOutlineContent() {\n    if (!this.outlineContent) {\n      return;\n    }\n\n    // Reset view tab relevant properties to make sure no tab is visible for the outline content\n    delete this.outlineContent.title;\n    delete this.outlineContent.subTitle;\n    delete this.outlineContent.iconId;\n\n    // bring the view to top if the desktop is not in background.\n    this.addView(this.outlineContent, !this.desktop.inBackground);\n\n    if (this.desktop.rendered) {\n      // Request focus on first element in outline content\n      this.session.focusManager.validateFocus();\n    }\n  }\n\n  _removeOutlineContent() {\n    if (!this.outlineContent) {\n      return;\n    }\n    this.removeView(this.outlineContent, false);\n  }\n\n  _createNavigationHandle() {\n    return scout.create('DesktopNavigationHandle', {\n      parent: this,\n      leftVisible: false\n    });\n  }\n\n  _renderNavigationHandle() {\n    if (this.navigationHandle) {\n      return;\n    }\n    this.navigationHandle = this._createNavigationHandle();\n    this.navigationHandle.render();\n    this.navigationHandle.addCssClass('navigation-closed');\n    this.navigationHandle.on('action', this._onNavigationHandleAction.bind(this));\n  }\n\n  _removeNavigationHandle() {\n    if (!this.navigationHandle) {\n      return;\n    }\n    this.navigationHandle.destroy();\n    this.navigationHandle = null;\n  }\n\n  _renderNavigationHandleVisible() {\n    if (this.navigationHandleVisible) {\n      this._renderNavigationHandle();\n    } else {\n      this._removeNavigationHandle();\n    }\n    this.$container.toggleClass('has-navigation-handle', this.navigationHandleVisible);\n  }\n\n  /**\n   * is called in post render of desktop used to initialize the ui state. E.g. show default views\n   */\n  postRender() {\n    this.columns.forEach(function(column) {\n      column.postRender();\n    });\n  }\n\n  setChanging(changing) {\n    if (changing) {\n      this.changingCounter++;\n    } else {\n      this.changingCounter--;\n    }\n    if (this.changingCounter === 0 && this.changed && this.rendered) {\n      this.htmlComp.layout.reset();\n      this.htmlComp.invalidateLayoutTree();\n      this.htmlComp.validateLayoutTree();\n      this.changed = false;\n    }\n  }\n\n  updateLayoutData(layoutData) {\n    if (this.getLayoutData() === layoutData) {\n      return;\n    }\n    this.setLayoutData(layoutData);\n\n    // update columns\n    var columnDatas = layoutData.getColumns();\n\n    this.columns.forEach(function(c, i) {\n      var cacheKey;\n      if (this.layoutCacheKey && this.layoutCacheKey.length > 0) {\n        cacheKey = this.layoutCacheKey.slice();\n        cacheKey.push('column' + i);\n      }\n      c.updateLayoutData(columnDatas[i], cacheKey);\n    }.bind(this));\n    if (this.rendered) {\n      this.htmlComp.layout.setCacheKey(this.layoutCacheKey);\n      this.htmlComp.layout.reset();\n      this.htmlComp.invalidateLayoutTree();\n      this.htmlComp.validateLayoutTree();\n    }\n    this._updateSplitterMovable();\n  }\n\n  setLayoutData(layoutData) {\n    if (this.layoutData === layoutData) {\n      return;\n    }\n    super.setLayoutData(layoutData);\n    this.layoutData = layoutData;\n    this.layoutCacheKey = [];\n    if (layoutData.cacheKey) {\n      this.layoutCacheKey.push(layoutData.cacheKey);\n    }\n  }\n\n  getLayoutData() {\n    return this.layoutData;\n  }\n\n  setNavigationHandleVisible(visible) {\n    this.setProperty('navigationHandleVisible', visible);\n  }\n\n  setOutline(outline) {\n    if (this.outline) {\n      this.outline.off('nodesSelected', this._outlineNodesSelectedHandler);\n      this.outline.off('pageChanged', this._outlinePageChangedHandler);\n      this.outline.off('propertyChange', this._outlinePropertyChangeHandler);\n    }\n    this._setProperty('outline', outline);\n    if (this.outline) {\n      this.outline.on('nodesSelected', this._outlineNodesSelectedHandler);\n      this.outline.on('pageChanged', this._outlinePageChangedHandler);\n      this.outline.on('propertyChange', this._outlinePropertyChangeHandler);\n    }\n    this.updateOutlineContent();\n  }\n\n  setOutlineContent(content) {\n    var oldContent = this.outlineContent;\n    if (this.outlineContent === content) {\n      return;\n    }\n    if (oldContent) {\n      oldContent.off('destroy', this._outlineContentDestroyHandler);\n    }\n    if (this.rendered) {\n      this._removeOutlineContent();\n    }\n    // add a destroy listener to the outline-content, so we can reset the property - otherwise we'd work\n    // with a potentially destroyed content which would cause an error later, when we try to render the\n    // bench with the outline-content.\n    if (content) {\n      content.one('destroy', this._outlineContentDestroyHandler);\n    }\n\n    this._setProperty('outlineContent', content);\n\n    // Inform header that outline content has changed\n    // (having a listener in the header is quite complex due to initialization phase, a direct call here is much easier to implement)\n    if (this.desktop.header) {\n      this.desktop.header.onBenchOutlineContentChange(content, oldContent);\n    }\n    this._renderOutlineContent();\n  }\n\n  setOutlineContentVisible(visible) {\n    if (visible === this.outlineContentVisible) {\n      return;\n    }\n    this._setProperty('outlineContentVisible', visible);\n    this.updateOutlineContent();\n  }\n\n  bringToFront() {\n    if (!this.outlineContent) {\n      return;\n    }\n    this._renderOutlineContent();\n  }\n\n  sendToBack() {\n    // nop\n  }\n\n  _computeDefaultDetailForm() {\n    return this.outline.defaultDetailForm;\n  }\n\n  _computeOutlineOverview() {\n    return this.outline.outlineOverview;\n  }\n\n  _computeDetailContentForPage(node) {\n    if (!node) {\n      throw new Error('called _showDetailContentForPage without node');\n    }\n\n    var content;\n    if (node.detailForm && node.detailFormVisible && node.detailFormVisibleByUi) {\n      content = node.detailForm;\n      content.uiCssClass = 'detail-form';\n    } else if (node.detailTable && node.detailTableVisible) {\n      content = node.detailTable;\n      content.uiCssClass = 'detail-table';\n    }\n\n    return content;\n  }\n\n  updateOutlineContent() {\n    if (!this.outlineContentVisible || !this.outline) {\n      return;\n    }\n    var content,\n      selectedPage = this.outline.selectedNode();\n    if (selectedPage) {\n      // Outline does not support multi selection\n      content = this._computeDetailContentForPage(selectedPage);\n    } else {\n      if (this.outline.defaultDetailForm) {\n        content = this._computeDefaultDetailForm();\n      } else if (this.outline.outlineOverview) {\n        content = this._computeOutlineOverview();\n      }\n    }\n    if (content) {\n      if (content instanceof Table) {\n        content.menuBar.setCssClass('main-menubar');\n      }\n      content.displayViewId = 'C';\n    }\n    this.setOutlineContent(content);\n  }\n\n  updateOutlineContentDebounced() {\n    clearTimeout(this._updateOutlineContentTimeout);\n    this._updateOutlineContentTimeout = setTimeout(function() {\n      this.updateOutlineContent();\n    }.bind(this), 300);\n  }\n\n  updateNavigationHandleVisibility() {\n    // Don't show handle if desktop says handle must not be visible\n    // Only show handle if navigation is invisible\n    this.setNavigationHandleVisible(this.desktop.navigationHandleVisible && !this.desktop.navigationVisible);\n  }\n\n  _onDesktopOutlineChange(event) {\n    this.setOutline(this.desktop.outline);\n    this.updateNavigationHandleVisibility();\n  }\n\n  _onoutlineContentDestroy(event) {\n    this.setOutlineContent(null);\n  }\n\n  _onOutlineNodesSelected(event) {\n    if (event.debounce) {\n      this.updateOutlineContentDebounced();\n    } else {\n      this.updateOutlineContent();\n    }\n  }\n\n  _onOutlinePageChanged(event) {\n    var selectedPage = this.outline.selectedNode();\n    if (!event.page && !selectedPage || event.page === selectedPage) {\n      this.updateOutlineContent();\n    }\n  }\n\n  _onOutlinePropertyChange(event) {\n    if (scout.isOneOf(event.propertyName, ['defaultDetailForm', 'outlineOverview'])) {\n      this.updateOutlineContent();\n    }\n  }\n\n  _onDesktopNavigationVisibleChange(event) {\n    // If navigation gets visible: Hide handle immediately\n    // If navigation gets hidden using animation: Show handle when animation ends\n    if (this.desktop.navigationVisible) {\n      this.updateNavigationHandleVisibility();\n    }\n  }\n\n  _onDesktopNavigationHandleVisibleChange(event) {\n    this.updateNavigationHandleVisibility();\n  }\n\n  _onDesktopAnimationEnd(event) {\n    if (!this.desktop.navigationVisible) {\n      this.updateNavigationHandleVisibility();\n    }\n  }\n\n  _onBenchLayoutDataChange(event) {\n    this.updateLayoutData(this.desktop.benchLayoutData);\n  }\n\n  _onDesktopPropertyChange(event) {\n    if (event.propertyName === 'navigationVisible') {\n      this._onDesktopNavigationVisibleChange();\n    } else if (event.propertyName === 'navigationHandleVisible') {\n      this._onDesktopNavigationHandleVisibleChange();\n    }\n    if (event.propertyName === 'benchLayoutData') {\n      this._onBenchLayoutDataChange();\n    }\n  }\n\n  _onNavigationHandleAction(event) {\n    this.desktop.enlargeNavigation();\n  }\n\n  _revalidateSplitters() {\n    // remove old splitters\n    if (this.components) {\n      this.components.forEach(function(comp) {\n        if (comp instanceof Splitter) {\n          comp.destroy();\n        }\n      });\n    }\n    this.components = this.visibleColumns()\n      .reduce(function(arr, col) {\n        if (arr.length > 0) {\n          // add sep\n          var splitter = scout.create('Splitter', {\n            parent: this,\n            $anchor: arr[arr.length - 1].$container,\n            $root: this.$container,\n            maxRatio: 1\n          });\n          splitter.render();\n          splitter.setLayoutData(FlexboxLayoutData.fixed().withOrder(col.getLayoutData().order - 1));\n          splitter.$container.addClass('line');\n\n          arr.push(splitter);\n        }\n        arr.push(col);\n        return arr;\n      }.bind(this), []);\n    // well order the dom elements (reduce is used for simple code reasons, the result of reduce is not of interest).\n    this.components.filter(function(comp) {\n      return comp instanceof BenchColumn;\n    })\n      .reduce(function(c1, c2, index) {\n        if (index > 0) {\n          c2.$container.insertAfter(c1.$container);\n        }\n        return c2;\n      }, undefined);\n    this._updateSplitterMovable();\n  }\n\n  _updateSplitterMovable() {\n    if (!this.components) {\n      return;\n    }\n    this.components.forEach(function(c, i) {\n      if (c instanceof Splitter) {\n        var componentsBefore = this.components.slice(0, i).reverse();\n        var componentsAfter = this.components.slice(i + 1);\n        // shrink\n        if (\n          componentsBefore.filter(function(c) {\n            return c.getLayoutData().shrink > 0;\n          }).length > 0 &&\n          componentsAfter.filter(function(c) {\n            return c.getLayoutData().grow > 0;\n          }).length > 0\n        ) {\n          c.setEnabled(true);\n          c.on('move', this._onSplitterMove.bind(this));\n          return;\n        }\n        // grow\n        if (\n          componentsBefore.filter(function(c) {\n            return c.getLayoutData().grow > 0;\n          }).length > 0 &&\n          componentsAfter.filter(function(c) {\n            return c.getLayoutData().shrink > 0;\n          }).length > 0\n        ) {\n          c.setEnabled(true);\n          c.on('move', this._onSplitterMove.bind(this));\n          return;\n        }\n        c.setEnabled(false);\n\n      }\n    }.bind(this));\n  }\n\n  _onSplitterMove(event) {\n    var splitter = event.source;\n    // noinspection UnnecessaryLocalVariableJS\n    var diff = event.position - splitter.htmlComp.location().x - splitter.htmlComp.margins().left - splitter.htmlComp.insets().left;\n    splitter.getLayoutData().diff = diff;\n    this.revalidateLayout();\n    splitter.getLayoutData().diff = null;\n    event.preventDefault();\n  }\n\n  _onViewAdd(event) {\n    this.trigger('viewAdd', {\n      view: event.view\n    });\n  }\n\n  _onViewRemove(event) {\n    this.trigger('viewRemove', {\n      view: event.view\n    });\n  }\n\n  _onViewActivate(event) {\n    var view = event.view;\n    if (this.outlineContent === view) {\n      this.desktop.bringOutlineToFront();\n    }\n    this.trigger('viewActivate', {\n      view: view\n    });\n  }\n\n  _onViewDeactivate(event) {\n    if (this.outlineContent === event.view) {\n      this.desktop.sendOutlineToBack();\n    }\n    this.trigger('viewDeactivate', {\n      view: event.view\n    });\n  }\n\n  addView(view, activate) {\n    // normalize displayViewId\n    switch (view.displayViewId) {\n      case 'NW':\n      case 'W':\n      case 'SW':\n      case 'N':\n      case 'C':\n      case 'S':\n      case 'NE':\n      case 'E':\n      case 'SE':\n        break;\n      default:\n        // map all other displayViewIds to center\n        view.displayViewId = 'C';\n        break;\n    }\n    var column = this._getColumn(view.displayViewId);\n    this.tabBoxMap[view.id] = column;\n    column.addView(view, activate);\n\n    if (this.rendered) {\n      if (column.viewCount() === 1) {\n        this._renderColumn(column);\n        this._revalidateSplitters();\n        this.updateFirstLastMarker();\n        if (this.changingCounter > 0) {\n          this.changed = true;\n        } else {\n          this.htmlComp.layout.reset();\n          this.htmlComp.invalidateLayoutTree();\n          // Layout immediately to prevent 'laggy' form visualization,\n          // but not initially while desktop gets rendered because it will be done at the end anyway\n          this.htmlComp.validateLayoutTree();\n        }\n      }\n    }\n  }\n\n  activateView(view) {\n    // activate views is only for existing views allowed.\n    if (!this.hasView(view)) {\n      return;\n    }\n    var column = this._getColumn(view.displayViewId);\n    if (column) {\n      column.activateView(view);\n    }\n  }\n\n  _getColumn(displayViewId) {\n    var column;\n\n    switch (displayViewId) {\n      case 'NW':\n      case 'W':\n      case 'SW':\n        column = this.columns[DesktopBench.VIEW_AREA_COLUMN_INDEX.LEFT];\n        break;\n      case 'NE':\n      case 'E':\n      case 'SE':\n        column = this.columns[DesktopBench.VIEW_AREA_COLUMN_INDEX.RIGHT];\n        break;\n      default:\n        column = this.columns[DesktopBench.VIEW_AREA_COLUMN_INDEX.CENTER];\n        break;\n    }\n    return column;\n  }\n\n  removeView(view, showSiblingView) {\n    var column = this.tabBoxMap[view.id];\n    if (column) {\n      this._removeViewInProgress++;\n      column.removeView(view, showSiblingView);\n      this._removeViewInProgress--;\n      delete this.tabBoxMap[view.id];\n      // remove if empty\n      if (this.rendered && column.viewCount() === 0 && this._removeViewInProgress === 0) {\n        column.remove();\n        this._revalidateSplitters();\n        this.updateFirstLastMarker();\n        if (this.changingCounter > 0) {\n          this.changed = true;\n        } else {\n          this.htmlComp.layout.reset();\n          this.htmlComp.invalidateLayoutTree();\n          // Layout immediately to make sure column width is adjusted along with the removal and not delayed (Scout JS)\n          this.htmlComp.validateLayoutTree();\n        }\n      }\n    }\n  }\n\n  getComponents() {\n    return this.components;\n  }\n\n  getTabBox(displayViewId) {\n    var viewColumn = this._getColumn(displayViewId);\n    if (!viewColumn) {\n      return;\n    }\n    return viewColumn.getTabBox(displayViewId);\n  }\n\n  visibleTabBoxes() {\n    return this.visibleColumns().reduce(function(arr, column) {\n      arrays.pushAll(arr, column.visibleTabBoxes());\n      return arr;\n    }, []);\n  }\n\n  hasView(view) {\n    return this.columns.filter(function(column) {\n      return column.hasView(view);\n    }).length > 0;\n  }\n\n  getViews(displayViewId) {\n    return this.columns.reduce(function(arr, column) {\n      arrays.pushAll(arr, column.getViews(displayViewId));\n      return arr;\n    }, []);\n  }\n\n  getViewTab(view) {\n    var viewTab = null;\n    this.getTabs().some(function(vt) {\n      if (vt.view === view) {\n        viewTab = vt;\n        return true;\n      }\n      return false;\n    });\n    return viewTab;\n  }\n\n  getTabs() {\n    var tabs = [];\n    // consider right order\n    tabs = tabs.concat(this.getTabBox('NW').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('W').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('SW').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('N').getController().getTabs());\n    if (this.headerTabAreaController) {\n      tabs = tabs.concat(this.headerTabAreaController.getTabs());\n    } else {\n      tabs = tabs.concat(this.getTabBox('C').getController().getTabs());\n    }\n    tabs = tabs.concat(this.getTabBox('S').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('NE').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('E').getController().getTabs());\n    tabs = tabs.concat(this.getTabBox('SE').getController().getTabs());\n    return tabs;\n  }\n\n  /**\n   * @returns {array} all the currently active views (the selected ones) of all the visible tab boxes\n   */\n  activeViews() {\n    var activeViews = [];\n    this.visibleColumns().forEach(function(column) {\n      column.visibleTabBoxes().forEach(function(tabBox) {\n        activeViews.push(tabBox.currentView);\n      });\n    });\n    return activeViews;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}