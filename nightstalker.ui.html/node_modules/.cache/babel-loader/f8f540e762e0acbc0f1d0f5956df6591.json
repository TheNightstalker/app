{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { CompositeFieldAdapter, GridData, ResponsiveManager } from '../../../index';\n\nvar GroupBoxAdapter = /*#__PURE__*/function (_CompositeFieldAdapte) {\n  _inherits(GroupBoxAdapter, _CompositeFieldAdapte);\n\n  var _super = _createSuper(GroupBoxAdapter);\n\n  function GroupBoxAdapter() {\n    var _this;\n\n    _classCallCheck(this, GroupBoxAdapter);\n\n    _this = _super.call(this);\n\n    _this._addRemoteProperties(['expanded']);\n\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  _createClass(GroupBoxAdapter, [{\n    key: \"_initModel\",\n    value: function _initModel(model, parent) {\n      model = _get(_getPrototypeOf(GroupBoxAdapter.prototype), \"_initModel\", this).call(this, model, parent); // Set logical grid to null -> Calculation happens on server side\n\n      model.logicalGrid = null;\n      return model;\n    } // Replace method on responsive handler.\n\n  }, {\n    key: \"_postCreateWidget\",\n    value: function _postCreateWidget() {\n      _get(_getPrototypeOf(GroupBoxAdapter.prototype), \"_postCreateWidget\", this).call(this);\n\n      if (this.widget.responsiveHandler) {\n        this.widget.responsiveHandler.setAllowedStates([ResponsiveManager.ResponsiveState.NORMAL, ResponsiveManager.ResponsiveState.CONDENSED]);\n        this.widget.responsiveHandler.getGridData = this._getGridData;\n        this.widget.responsiveHandler.setGridData = this._setGridData;\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(GroupBoxAdapter.prototype), \"destroy\", this).call(this);\n    }\n  }, {\n    key: \"_getGridData\",\n    value: function _getGridData(field) {\n      return new GridData(field.gridData);\n    }\n  }, {\n    key: \"_setGridData\",\n    value: function _setGridData(field, gridData) {\n      field._setGridData(gridData);\n    }\n  }]);\n\n  return GroupBoxAdapter;\n}(CompositeFieldAdapter);\n\nexport { GroupBoxAdapter as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/groupbox/GroupBoxAdapter.js"],"names":["CompositeFieldAdapter","GridData","ResponsiveManager","GroupBoxAdapter","_addRemoteProperties","model","parent","logicalGrid","widget","responsiveHandler","setAllowedStates","ResponsiveState","NORMAL","CONDENSED","getGridData","_getGridData","setGridData","_setGridData","field","gridData"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,qBAAR,EAA+BC,QAA/B,EAAyCC,iBAAzC,QAAiE,gBAAjE;;IAEqBC,e;;;;;AAEnB,6BAAc;AAAA;;AAAA;;AACZ;;AACA,UAAKC,oBAAL,CAA0B,CAAC,UAAD,CAA1B;;AAFY;AAGb;AAED;AACF;AACA;;;;;+BACaC,K,EAAOC,M,EAAQ;AACxBD,MAAAA,KAAK,mFAAoBA,KAApB,EAA2BC,MAA3B,CAAL,CADwB,CAExB;;AACAD,MAAAA,KAAK,CAACE,WAAN,GAAoB,IAApB;AAEA,aAAOF,KAAP;AACD,K,CAED;;;;wCACoB;AAClB;;AAEA,UAAI,KAAKG,MAAL,CAAYC,iBAAhB,EAAmC;AACjC,aAAKD,MAAL,CAAYC,iBAAZ,CAA8BC,gBAA9B,CAA+C,CAACR,iBAAiB,CAACS,eAAlB,CAAkCC,MAAnC,EAA2CV,iBAAiB,CAACS,eAAlB,CAAkCE,SAA7E,CAA/C;AACA,aAAKL,MAAL,CAAYC,iBAAZ,CAA8BK,WAA9B,GAA4C,KAAKC,YAAjD;AACA,aAAKP,MAAL,CAAYC,iBAAZ,CAA8BO,WAA9B,GAA4C,KAAKC,YAAjD;AACD;AACF;;;8BAES;AACR;AACD;;;iCAEYC,K,EAAO;AAClB,aAAO,IAAIjB,QAAJ,CAAaiB,KAAK,CAACC,QAAnB,CAAP;AACD;;;iCAEYD,K,EAAOC,Q,EAAU;AAC5BD,MAAAA,KAAK,CAACD,YAAN,CAAmBE,QAAnB;AACD;;;;EAvC0CnB,qB;;SAAxBG,e","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {CompositeFieldAdapter, GridData, ResponsiveManager} from '../../../index';\n\nexport default class GroupBoxAdapter extends CompositeFieldAdapter {\n\n  constructor() {\n    super();\n    this._addRemoteProperties(['expanded']);\n  }\n\n  /**\n   * @override\n   */\n  _initModel(model, parent) {\n    model = super._initModel(model, parent);\n    // Set logical grid to null -> Calculation happens on server side\n    model.logicalGrid = null;\n\n    return model;\n  }\n\n  // Replace method on responsive handler.\n  _postCreateWidget() {\n    super._postCreateWidget();\n\n    if (this.widget.responsiveHandler) {\n      this.widget.responsiveHandler.setAllowedStates([ResponsiveManager.ResponsiveState.NORMAL, ResponsiveManager.ResponsiveState.CONDENSED]);\n      this.widget.responsiveHandler.getGridData = this._getGridData;\n      this.widget.responsiveHandler.setGridData = this._setGridData;\n    }\n  }\n\n  destroy() {\n    super.destroy();\n  }\n\n  _getGridData(field) {\n    return new GridData(field.gridData);\n  }\n\n  _setGridData(field, gridData) {\n    field._setGridData(gridData);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}