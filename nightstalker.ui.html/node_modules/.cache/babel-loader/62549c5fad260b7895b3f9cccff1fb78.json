{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { HtmlComponent, PopupWithHeadLayout } from '../index';\nimport $ from 'jquery';\n\nvar ContextMenuPopupLayout = /*#__PURE__*/function (_PopupWithHeadLayout) {\n  _inherits(ContextMenuPopupLayout, _PopupWithHeadLayout);\n\n  var _super = _createSuper(ContextMenuPopupLayout);\n\n  function ContextMenuPopupLayout(popup) {\n    _classCallCheck(this, ContextMenuPopupLayout);\n\n    return _super.call(this, popup);\n  }\n\n  _createClass(ContextMenuPopupLayout, [{\n    key: \"layout\",\n    value: function layout($container) {\n      var $menuItems = this.popup.$visibleMenuItems();\n\n      this._adjustTextAlignment($menuItems);\n\n      this._resetMaxWidthFor($menuItems);\n\n      _get(_getPrototypeOf(ContextMenuPopupLayout.prototype), \"layout\", this).call(this, $container);\n\n      this._setMaxWidthFor($menuItems);\n    }\n  }, {\n    key: \"_adjustTextAlignment\",\n    value: function _adjustTextAlignment($menuItems) {\n      // Calculate the text offset (= max icon width)\n      var textOffset = 0;\n      $menuItems.each(function (index, menuItem) {\n        var $menuItem = $(menuItem);\n        var $icon = $menuItem.children('.icon');\n        var iconWidth = 0;\n\n        if ($icon.length > 0) {\n          iconWidth = $icon.outerWidth(true);\n        }\n\n        textOffset = Math.max(textOffset, iconWidth);\n      }); // Update the padding of each text such that the sum of icon width and the padding\n      // are the same for all items. This ensures that the texts are all aligned.\n\n      $menuItems.each(function (index, menuItem) {\n        var $menuItem = $(menuItem);\n        var $icon = $menuItem.children('.icon');\n        var $text = $menuItem.children('.text');\n        var iconWidth = 0;\n\n        if ($icon.length > 0) {\n          iconWidth = $icon.outerWidth(true);\n        }\n\n        $text.css('padding-left', textOffset - iconWidth);\n        var htmlComp = HtmlComponent.optGet($menuItem);\n\n        if (htmlComp) {\n          htmlComp.invalidateLayout();\n        }\n      });\n    }\n  }, {\n    key: \"_resetMaxWidthFor\",\n    value: function _resetMaxWidthFor($menuItems) {\n      $menuItems.each(function (pos, item) {\n        var $menu = $(item),\n            menu = $menu.data('widget');\n\n        if (!menu) {\n          // After closing a submenu the link to the widget gets lost\n          return;\n        }\n\n        if (menu.$text) {\n          menu.$text.css('max-width', '');\n        }\n      });\n    }\n  }, {\n    key: \"_setMaxWidthFor\",\n    value: function _setMaxWidthFor($menuItems) {\n      $menuItems.each(function (pos, item) {\n        var $menu = $(item),\n            menu = $menu.data('widget');\n\n        if (!menu) {\n          // After closing a submenu the link to the widget gets lost\n          return;\n        }\n\n        if (menu.$text) {\n          // Submenu icon is on the right side of the text.\n          // If there is not enough space to show the whole menu item (icon, text and submenu icon), the text is truncated.\n          // Icon and submenu icon are always shown.\n          var textMaxWidth = this._calcTextMaxWidth(menu);\n\n          menu.$text.cssPxValue('max-width', textMaxWidth);\n        }\n      }.bind(this));\n    }\n  }, {\n    key: \"_calcTextMaxWidth\",\n    value: function _calcTextMaxWidth(menu) {\n      var containerWidth = menu.$container.width(),\n          $icon = menu.get$Icon(),\n          $text = menu.$text,\n          $submenuIcon = menu.$submenuIcon,\n          textWidth = containerWidth + 1; // add 1px to make it work even if containerWidth is a float\n\n      if ($text && $text.isVisible()) {\n        textWidth -= $text.cssMarginX();\n      }\n\n      if ($icon && $icon.isVisible()) {\n        textWidth -= $icon.outerWidth(true);\n      }\n\n      if ($submenuIcon && $submenuIcon.isVisible()) {\n        textWidth -= $submenuIcon.outerWidth(true);\n      }\n\n      return textWidth;\n    }\n  }]);\n\n  return ContextMenuPopupLayout;\n}(PopupWithHeadLayout);\n\nexport { ContextMenuPopupLayout as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/menu/ContextMenuPopupLayout.js"],"names":["HtmlComponent","PopupWithHeadLayout","$","ContextMenuPopupLayout","popup","$container","$menuItems","$visibleMenuItems","_adjustTextAlignment","_resetMaxWidthFor","_setMaxWidthFor","textOffset","each","index","menuItem","$menuItem","$icon","children","iconWidth","length","outerWidth","Math","max","$text","css","htmlComp","optGet","invalidateLayout","pos","item","$menu","menu","data","textMaxWidth","_calcTextMaxWidth","cssPxValue","bind","containerWidth","width","get$Icon","$submenuIcon","textWidth","isVisible","cssMarginX"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {HtmlComponent, PopupWithHeadLayout} from '../index';\nimport $ from 'jquery';\n\nexport default class ContextMenuPopupLayout extends PopupWithHeadLayout {\n\n  constructor(popup) {\n    super(popup);\n  }\n\n  layout($container) {\n    var $menuItems = this.popup.$visibleMenuItems();\n    this._adjustTextAlignment($menuItems);\n    this._resetMaxWidthFor($menuItems);\n    super.layout($container);\n    this._setMaxWidthFor($menuItems);\n  }\n\n  _adjustTextAlignment($menuItems) {\n    // Calculate the text offset (= max icon width)\n    var textOffset = 0;\n    $menuItems.each(function(index, menuItem) {\n      var $menuItem = $(menuItem);\n      var $icon = $menuItem.children('.icon');\n      var iconWidth = 0;\n\n      if ($icon.length > 0) {\n        iconWidth = $icon.outerWidth(true);\n      }\n      textOffset = Math.max(textOffset, iconWidth);\n    });\n\n    // Update the padding of each text such that the sum of icon width and the padding\n    // are the same for all items. This ensures that the texts are all aligned.\n    $menuItems.each(function(index, menuItem) {\n      var $menuItem = $(menuItem);\n      var $icon = $menuItem.children('.icon');\n      var $text = $menuItem.children('.text');\n      var iconWidth = 0;\n\n      if ($icon.length > 0) {\n        iconWidth = $icon.outerWidth(true);\n      }\n      $text.css('padding-left', textOffset - iconWidth);\n      var htmlComp = HtmlComponent.optGet($menuItem);\n      if (htmlComp) {\n        htmlComp.invalidateLayout();\n      }\n    });\n  }\n\n  _resetMaxWidthFor($menuItems) {\n    $menuItems.each(function(pos, item) {\n      var $menu = $(item),\n        menu = $menu.data('widget');\n\n      if (!menu) {\n        // After closing a submenu the link to the widget gets lost\n        return;\n      }\n\n      if (menu.$text) {\n        menu.$text.css('max-width', '');\n      }\n    });\n  }\n\n  _setMaxWidthFor($menuItems) {\n    $menuItems.each(function(pos, item) {\n      var $menu = $(item),\n        menu = $menu.data('widget');\n\n      if (!menu) {\n        // After closing a submenu the link to the widget gets lost\n        return;\n      }\n\n      if (menu.$text) {\n        // Submenu icon is on the right side of the text.\n        // If there is not enough space to show the whole menu item (icon, text and submenu icon), the text is truncated.\n        // Icon and submenu icon are always shown.\n        var textMaxWidth = this._calcTextMaxWidth(menu);\n        menu.$text.cssPxValue('max-width', textMaxWidth);\n      }\n    }.bind(this));\n  }\n\n  _calcTextMaxWidth(menu) {\n    var containerWidth = menu.$container.width(),\n      $icon = menu.get$Icon(),\n      $text = menu.$text,\n      $submenuIcon = menu.$submenuIcon,\n      textWidth = containerWidth + 1; // add 1px to make it work even if containerWidth is a float\n\n    if ($text && $text.isVisible()) {\n      textWidth -= $text.cssMarginX();\n    }\n    if ($icon && $icon.isVisible()) {\n      textWidth -= $icon.outerWidth(true);\n    }\n    if ($submenuIcon && $submenuIcon.isVisible()) {\n      textWidth -= $submenuIcon.outerWidth(true);\n    }\n    return textWidth;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}