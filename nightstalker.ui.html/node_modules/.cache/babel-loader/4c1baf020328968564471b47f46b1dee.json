{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { ColumnUserFilter, scout, strings } from '../../index';\nimport $ from 'jquery';\n\nvar TextColumnUserFilter = /*#__PURE__*/function (_ColumnUserFilter) {\n  _inherits(TextColumnUserFilter, _ColumnUserFilter);\n\n  var _super = _createSuper(TextColumnUserFilter);\n\n  function TextColumnUserFilter() {\n    var _this;\n\n    _classCallCheck(this, TextColumnUserFilter);\n\n    _this = _super.call(this);\n    _this.freeText = null;\n    _this.freeTextField = null;\n    _this.hasFilterFields = true;\n    return _this;\n  }\n  /**\n   * @override ColumnUserFilter.js\n   */\n\n\n  _createClass(TextColumnUserFilter, [{\n    key: \"createFilterAddedEventData\",\n    value: function createFilterAddedEventData() {\n      var data = _get(_getPrototypeOf(TextColumnUserFilter.prototype), \"createFilterAddedEventData\", this).call(this);\n\n      data.freeText = this.freeText;\n      return data;\n    }\n    /**\n     * @override ColumnUserFilter.js\n     */\n\n  }, {\n    key: \"fieldsFilterActive\",\n    value: function fieldsFilterActive() {\n      return strings.hasText(this.freeText);\n    }\n    /**\n     * @override ColumnUserFilter.js\n     */\n\n  }, {\n    key: \"acceptByFields\",\n    value: function acceptByFields(key, normKey, row) {\n      var filterFieldText = strings.nvl(this.freeText).toLowerCase(),\n          rowText = strings.nvl(this.column.cellTextForTextFilter(row)).toLowerCase();\n      return rowText.indexOf(filterFieldText) > -1;\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_useTextInsteadOfNormValue\",\n    value: function _useTextInsteadOfNormValue(value) {\n      // null is valid, if for text columns. We do not want to store -empty-\n      return value !== null;\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"filterFieldsTitle\",\n    value: function filterFieldsTitle() {\n      return this.session.text('ui.FreeText');\n    }\n    /**\n     * @override ColumnUserFilter.js\n     */\n\n  }, {\n    key: \"addFilterFields\",\n    value: function addFilterFields(groupBox) {\n      this.freeTextField = scout.create('StringField', {\n        parent: groupBox,\n        labelVisible: false,\n        statusVisible: false,\n        maxLength: 100,\n        displayText: this.freeText,\n        updateDisplayTextOnModify: true\n      });\n      this.freeTextField.on('acceptInput', this._onAcceptInput.bind(this));\n      groupBox.addField0(this.freeTextField);\n    }\n  }, {\n    key: \"_onAcceptInput\",\n    value: function _onAcceptInput(event) {\n      this.freeText = this.freeTextField.$field.val().trim();\n      $.log.isDebugEnabled() && $.log.debug('(TextColumnUserFilter#_onAcceptInput) freeText=' + this.freeText);\n      this.triggerFilterFieldsChanged(event);\n    }\n    /**\n     * @override ColumnUserFilter.js\n     */\n\n  }, {\n    key: \"modifyFilterFields\",\n    value: function modifyFilterFields() {\n      this.freeTextField.removeMandatoryIndicator();\n    }\n  }]);\n\n  return TextColumnUserFilter;\n}(ColumnUserFilter);\n\nexport { TextColumnUserFilter as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/table/userfilter/TextColumnUserFilter.js"],"names":["ColumnUserFilter","scout","strings","$","TextColumnUserFilter","freeText","freeTextField","hasFilterFields","data","hasText","key","normKey","row","filterFieldText","nvl","toLowerCase","rowText","column","cellTextForTextFilter","indexOf","value","session","text","groupBox","create","parent","labelVisible","statusVisible","maxLength","displayText","updateDisplayTextOnModify","on","_onAcceptInput","bind","addField0","event","$field","val","trim","log","isDebugEnabled","debug","triggerFilterFieldsChanged","removeMandatoryIndicator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,gBAAR,EAA0BC,KAA1B,EAAiCC,OAAjC,QAA+C,aAA/C;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEqBC,oB;;;;;AAEnB,kCAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,QAAL,GAAgB,IAAhB;AACA,UAAKC,aAAL,GAAqB,IAArB;AACA,UAAKC,eAAL,GAAuB,IAAvB;AALY;AAMb;AAED;AACF;AACA;;;;;iDAC+B;AAC3B,UAAIC,IAAI,uGAAR;;AACAA,MAAAA,IAAI,CAACH,QAAL,GAAgB,KAAKA,QAArB;AACA,aAAOG,IAAP;AACD;AAED;AACF;AACA;;;;yCACuB;AACnB,aAAON,OAAO,CAACO,OAAR,CAAgB,KAAKJ,QAArB,CAAP;AACD;AAED;AACF;AACA;;;;mCACiBK,G,EAAKC,O,EAASC,G,EAAK;AAChC,UAAIC,eAAe,GAAGX,OAAO,CAACY,GAAR,CAAY,KAAKT,QAAjB,EAA2BU,WAA3B,EAAtB;AAAA,UACEC,OAAO,GAAGd,OAAO,CAACY,GAAR,CAAY,KAAKG,MAAL,CAAYC,qBAAZ,CAAkCN,GAAlC,CAAZ,EAAoDG,WAApD,EADZ;AAEA,aAAOC,OAAO,CAACG,OAAR,CAAgBN,eAAhB,IAAmC,CAAC,CAA3C;AACD;AAED;AACF;AACA;;;;+CAC6BO,K,EAAO;AAChC;AACA,aAAOA,KAAK,KAAK,IAAjB;AACD;AAED;AACF;AACA;;;;wCACsB;AAClB,aAAO,KAAKC,OAAL,CAAaC,IAAb,CAAkB,aAAlB,CAAP;AACD;AAED;AACF;AACA;;;;oCACkBC,Q,EAAU;AACxB,WAAKjB,aAAL,GAAqBL,KAAK,CAACuB,MAAN,CAAa,aAAb,EAA4B;AAC/CC,QAAAA,MAAM,EAAEF,QADuC;AAE/CG,QAAAA,YAAY,EAAE,KAFiC;AAG/CC,QAAAA,aAAa,EAAE,KAHgC;AAI/CC,QAAAA,SAAS,EAAE,GAJoC;AAK/CC,QAAAA,WAAW,EAAE,KAAKxB,QAL6B;AAM/CyB,QAAAA,yBAAyB,EAAE;AANoB,OAA5B,CAArB;AAQA,WAAKxB,aAAL,CAAmByB,EAAnB,CAAsB,aAAtB,EAAqC,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAArC;AACAV,MAAAA,QAAQ,CAACW,SAAT,CAAmB,KAAK5B,aAAxB;AACD;;;mCAEc6B,K,EAAO;AACpB,WAAK9B,QAAL,GAAgB,KAAKC,aAAL,CAAmB8B,MAAnB,CAA0BC,GAA1B,GAAgCC,IAAhC,EAAhB;AACAnC,MAAAA,CAAC,CAACoC,GAAF,CAAMC,cAAN,MAA0BrC,CAAC,CAACoC,GAAF,CAAME,KAAN,CAAY,oDAAoD,KAAKpC,QAArE,CAA1B;AACA,WAAKqC,0BAAL,CAAgCP,KAAhC;AACD;AAED;AACF;AACA;;;;yCACuB;AACnB,WAAK7B,aAAL,CAAmBqC,wBAAnB;AACD;;;;EA7E+C3C,gB;;SAA7BI,oB","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {ColumnUserFilter, scout, strings} from '../../index';\nimport $ from 'jquery';\n\nexport default class TextColumnUserFilter extends ColumnUserFilter {\n\n  constructor() {\n    super();\n\n    this.freeText = null;\n    this.freeTextField = null;\n    this.hasFilterFields = true;\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  createFilterAddedEventData() {\n    var data = super.createFilterAddedEventData();\n    data.freeText = this.freeText;\n    return data;\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  fieldsFilterActive() {\n    return strings.hasText(this.freeText);\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  acceptByFields(key, normKey, row) {\n    var filterFieldText = strings.nvl(this.freeText).toLowerCase(),\n      rowText = strings.nvl(this.column.cellTextForTextFilter(row)).toLowerCase();\n    return rowText.indexOf(filterFieldText) > -1;\n  }\n\n  /**\n   * @override\n   */\n  _useTextInsteadOfNormValue(value) {\n    // null is valid, if for text columns. We do not want to store -empty-\n    return value !== null;\n  }\n\n  /**\n   * @override\n   */\n  filterFieldsTitle() {\n    return this.session.text('ui.FreeText');\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  addFilterFields(groupBox) {\n    this.freeTextField = scout.create('StringField', {\n      parent: groupBox,\n      labelVisible: false,\n      statusVisible: false,\n      maxLength: 100,\n      displayText: this.freeText,\n      updateDisplayTextOnModify: true\n    });\n    this.freeTextField.on('acceptInput', this._onAcceptInput.bind(this));\n    groupBox.addField0(this.freeTextField);\n  }\n\n  _onAcceptInput(event) {\n    this.freeText = this.freeTextField.$field.val().trim();\n    $.log.isDebugEnabled() && $.log.debug('(TextColumnUserFilter#_onAcceptInput) freeText=' + this.freeText);\n    this.triggerFilterFieldsChanged(event);\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  modifyFilterFields() {\n    this.freeTextField.removeMandatoryIndicator();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}