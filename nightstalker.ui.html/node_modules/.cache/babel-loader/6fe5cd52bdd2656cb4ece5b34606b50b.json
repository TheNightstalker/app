{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { EventDelegator, FormField } from '../../../index';\n\nvar TileField = /*#__PURE__*/function (_FormField) {\n  _inherits(TileField, _FormField);\n\n  var _super = _createSuper(TileField);\n\n  function TileField() {\n    var _this;\n\n    _classCallCheck(this, TileField);\n\n    _this = _super.call(this);\n    _this.eventDelegator = null;\n\n    _this._addWidgetProperties(['tileGrid']);\n\n    return _this;\n  }\n\n  _createClass(TileField, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(TileField.prototype), \"_init\", this).call(this, model);\n\n      this._setTileGrid(this.tileGrid);\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_createLoadingSupport\",\n    value: function _createLoadingSupport() {\n      // Loading is delegated to tileGrid\n      return null;\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.addContainer(this.$parent, 'tile-field');\n      this.addLabel();\n      this.addMandatoryIndicator();\n      this.addStatus();\n\n      if (this.tileGrid) {\n        this._renderTileGrid();\n      }\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(TileField.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderDropType();\n    }\n  }, {\n    key: \"setTileGrid\",\n    value: function setTileGrid(tileGrid) {\n      this.setProperty('tileGrid', tileGrid);\n    }\n  }, {\n    key: \"_setTileGrid\",\n    value: function _setTileGrid(tileGrid) {\n      if (this.tileGrid) {\n        if (this.eventDelegator) {\n          this.eventDelegator.destroy();\n          this.eventDelegator = null;\n        }\n      }\n\n      this._setProperty('tileGrid', tileGrid);\n\n      if (tileGrid) {\n        this.eventDelegator = EventDelegator.create(this, tileGrid, {\n          delegateProperties: ['loading']\n        });\n        tileGrid.setLoading(this.loading);\n        tileGrid.setScrollTop(this.scrollTop);\n      }\n    }\n  }, {\n    key: \"_renderTileGrid\",\n    value: function _renderTileGrid() {\n      if (!this.tileGrid) {\n        return;\n      }\n\n      this.tileGrid.render();\n      this.addField(this.tileGrid.$container);\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"_removeTileGrid\",\n    value: function _removeTileGrid() {\n      if (!this.tileGrid) {\n        return;\n      }\n\n      this.tileGrid.remove();\n\n      this._removeField();\n\n      this.invalidateLayoutTree();\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"getDelegateScrollable\",\n    value: function getDelegateScrollable() {\n      return this.tileGrid;\n    }\n  }]);\n\n  return TileField;\n}(FormField);\n\nexport { TileField as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/tilefield/TileField.js"],"names":["EventDelegator","FormField","TileField","eventDelegator","_addWidgetProperties","model","_setTileGrid","tileGrid","addContainer","$parent","addLabel","addMandatoryIndicator","addStatus","_renderTileGrid","_renderDropType","setProperty","destroy","_setProperty","create","delegateProperties","setLoading","loading","setScrollTop","scrollTop","render","addField","$container","invalidateLayoutTree","remove","_removeField"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,cAAR,EAAwBC,SAAxB,QAAwC,gBAAxC;;IAEqBC,S;;;;;AAEnB,uBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,cAAL,GAAsB,IAAtB;;AACA,UAAKC,oBAAL,CAA0B,CAAC,UAAD,CAA1B;;AAHY;AAIb;;;;0BAEKC,K,EAAO;AACX,2EAAYA,KAAZ;;AAEA,WAAKC,YAAL,CAAkB,KAAKC,QAAvB;AACD;AAED;AACF;AACA;;;;4CAC0B;AACtB;AACA,aAAO,IAAP;AACD;;;8BAES;AACR,WAAKC,YAAL,CAAkB,KAAKC,OAAvB,EAAgC,YAAhC;AACA,WAAKC,QAAL;AACA,WAAKC,qBAAL;AACA,WAAKC,SAAL;;AACA,UAAI,KAAKL,QAAT,EAAmB;AACjB,aAAKM,eAAL;AACD;AACF;;;wCAEmB;AAClB;;AACA,WAAKC,eAAL;AACD;;;gCAEWP,Q,EAAU;AACpB,WAAKQ,WAAL,CAAiB,UAAjB,EAA6BR,QAA7B;AACD;;;iCAEYA,Q,EAAU;AACrB,UAAI,KAAKA,QAAT,EAAmB;AACjB,YAAI,KAAKJ,cAAT,EAAyB;AACvB,eAAKA,cAAL,CAAoBa,OAApB;AACA,eAAKb,cAAL,GAAsB,IAAtB;AACD;AACF;;AACD,WAAKc,YAAL,CAAkB,UAAlB,EAA8BV,QAA9B;;AACA,UAAIA,QAAJ,EAAc;AACZ,aAAKJ,cAAL,GAAsBH,cAAc,CAACkB,MAAf,CAAsB,IAAtB,EAA4BX,QAA5B,EAAsC;AAC1DY,UAAAA,kBAAkB,EAAE,CAAC,SAAD;AADsC,SAAtC,CAAtB;AAGAZ,QAAAA,QAAQ,CAACa,UAAT,CAAoB,KAAKC,OAAzB;AACAd,QAAAA,QAAQ,CAACe,YAAT,CAAsB,KAAKC,SAA3B;AACD;AACF;;;sCAEiB;AAChB,UAAI,CAAC,KAAKhB,QAAV,EAAoB;AAClB;AACD;;AACD,WAAKA,QAAL,CAAciB,MAAd;AACA,WAAKC,QAAL,CAAc,KAAKlB,QAAL,CAAcmB,UAA5B;AACA,WAAKC,oBAAL;AACD;;;sCAEiB;AAChB,UAAI,CAAC,KAAKpB,QAAV,EAAoB;AAClB;AACD;;AACD,WAAKA,QAAL,CAAcqB,MAAd;;AACA,WAAKC,YAAL;;AACA,WAAKF,oBAAL;AACD;AAED;AACF;AACA;;;;4CAC0B;AACtB,aAAO,KAAKpB,QAAZ;AACD;;;;EAjFoCN,S;;SAAlBC,S","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {EventDelegator, FormField} from '../../../index';\n\nexport default class TileField extends FormField {\n\n  constructor() {\n    super();\n    this.eventDelegator = null;\n    this._addWidgetProperties(['tileGrid']);\n  }\n\n  _init(model) {\n    super._init(model);\n\n    this._setTileGrid(this.tileGrid);\n  }\n\n  /**\n   * @override\n   */\n  _createLoadingSupport() {\n    // Loading is delegated to tileGrid\n    return null;\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'tile-field');\n    this.addLabel();\n    this.addMandatoryIndicator();\n    this.addStatus();\n    if (this.tileGrid) {\n      this._renderTileGrid();\n    }\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderDropType();\n  }\n\n  setTileGrid(tileGrid) {\n    this.setProperty('tileGrid', tileGrid);\n  }\n\n  _setTileGrid(tileGrid) {\n    if (this.tileGrid) {\n      if (this.eventDelegator) {\n        this.eventDelegator.destroy();\n        this.eventDelegator = null;\n      }\n    }\n    this._setProperty('tileGrid', tileGrid);\n    if (tileGrid) {\n      this.eventDelegator = EventDelegator.create(this, tileGrid, {\n        delegateProperties: ['loading']\n      });\n      tileGrid.setLoading(this.loading);\n      tileGrid.setScrollTop(this.scrollTop);\n    }\n  }\n\n  _renderTileGrid() {\n    if (!this.tileGrid) {\n      return;\n    }\n    this.tileGrid.render();\n    this.addField(this.tileGrid.$container);\n    this.invalidateLayoutTree();\n  }\n\n  _removeTileGrid() {\n    if (!this.tileGrid) {\n      return;\n    }\n    this.tileGrid.remove();\n    this._removeField();\n    this.invalidateLayoutTree();\n  }\n\n  /**\n   * @override\n   */\n  getDelegateScrollable() {\n    return this.tileGrid;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}