{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Calendar, dates, Planner, scout, scrollbars, Widget } from '../index';\nimport $ from 'jquery';\n\nvar YearPanel = /*#__PURE__*/function (_Widget) {\n  _inherits(YearPanel, _Widget);\n\n  var _super = _createSuper(YearPanel);\n\n  function YearPanel() {\n    var _this;\n\n    _classCallCheck(this, YearPanel);\n\n    _this = _super.call(this);\n    _this.$yearTitle;\n    _this.$yearList;\n    _this.selectedDate;\n    _this.displayMode;\n    _this.alwaysSelectFirstDay;\n    return _this;\n  }\n\n  _createClass(YearPanel, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(YearPanel.prototype), \"_init\", this).call(this, model); // If true, it is only possible to select the first day of a range, depending of the selected mode\n      // day mode: every day may be selected\n      // week, work week, calendar week mode: only first day of week may be selected\n      // year, month mode: only first day of month may be selected\n\n\n      this.alwaysSelectFirstDay = model.alwaysSelectFirstDay;\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent.appendDiv('year-panel-container');\n      this.$yearTitle = this.$container.appendDiv('year-panel-title');\n      this.$yearList = this.$container.appendDiv('year-panel-list');\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      this.removeContent();\n\n      this._drawYear();\n\n      this._installScrollbars({\n        axis: 'y'\n      });\n\n      this.yearRendered = true;\n\n      this._colorYear();\n    }\n  }, {\n    key: \"get$Scrollable\",\n    value: function get$Scrollable() {\n      return this.$yearList;\n    }\n  }, {\n    key: \"removeContent\",\n    value: function removeContent() {\n      this._uninstallScrollbars();\n\n      this.$yearList.empty();\n      this.yearRendered = false;\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.removeContent();\n\n      _get(_getPrototypeOf(YearPanel.prototype), \"_remove\", this).call(this);\n    }\n  }, {\n    key: \"_drawYear\",\n    value: function _drawYear() {\n      var first,\n          month,\n          $month,\n          d,\n          day,\n          $day,\n          year = this.selectedDate.getFullYear(); // append 3 years\n\n      this.$yearTitle.data('year', year).empty();\n      this.$yearTitle.appendDiv('year-title-item', year - 1).data('year-diff', -1).click(this._onYearClick.bind(this));\n      this.$yearTitle.appendDiv('year-title-item selected', year);\n      this.$yearTitle.appendDiv('year-title-item', year + 1).data('year-diff', +1).click(this._onYearClick.bind(this)); // add months and days\n\n      for (month = 0; month < 12; month++) {\n        first = new Date(year, month, 1);\n        $month = this.$yearList.appendDiv('year-month').attr('data-title', this._format(first, 'MMMM'));\n\n        for (d = 1; d <= 31; d++) {\n          day = new Date(year, month, d); // stop if day is already out of range\n\n          if (day.getMonth() !== month) {\n            break;\n          } // add div per day\n\n\n          $day = $month.appendDiv('year-day', d).data('date', day);\n\n          if (day.getDay() === 0 || day.getDay() === 6) {\n            $day.addClass('weekend');\n          } // first day has margin depending on weekday\n\n\n          if (d === 1) {\n            $day.css('margin-left', (day.getDay() + 6) % 7 * $day.outerWidth());\n          }\n        }\n      } // bind events for days divs\n\n\n      $('.year-day', this.$yearList).click(this._onYearDayClick.bind(this)).hover(this._onYearHoverIn.bind(this), this._onYearHoverOut.bind(this)); // update scrollbar\n\n      scrollbars.update(this.$yearList);\n    }\n  }, {\n    key: \"_colorYear\",\n    value: function _colorYear() {\n      if (!this.yearRendered) {\n        return;\n      } // remove color information\n\n\n      $('.year-day.year-range, .year-day.year-range-day', this.$yearList).removeClass('year-range year-range-day'); // loop all days and colorize based on range and selected\n\n      var that = this,\n          $day,\n          date;\n      $('.year-day', this.$yearList).each(function () {\n        $day = $(this);\n        date = $day.data('date');\n\n        if (that.displayMode !== Calendar.DisplayMode.DAY && date >= that.viewRange.from && date < that.viewRange.to) {\n          $day.addClass('year-range');\n        }\n\n        if (dates.isSameDay(date, that.selectedDate)) {\n          $day.addClass('year-range-day');\n        }\n      }); // selected has to be visible day\n\n      this._scrollYear();\n    }\n  }, {\n    key: \"_scrollYear\",\n    value: function _scrollYear() {\n      var top,\n          halfMonth,\n          halfYear,\n          $day = $('.year-range-day', this.$yearList),\n          $month = $day.parent(),\n          $year = $day.parent().parent();\n\n      if (!$month[0]) {\n        return;\n      }\n\n      top = $month[0].offsetTop;\n      halfMonth = $month.outerHeight() / 2;\n      halfYear = $year.outerHeight() / 2;\n      this.$yearList.animateAVCSD('scrollTop', top + halfMonth - halfYear);\n    }\n  }, {\n    key: \"_format\",\n    value: function _format(date, pattern) {\n      return dates.format(date, this.session.locale, pattern);\n    }\n  }, {\n    key: \"selectDate\",\n    value: function selectDate(date) {\n      this.selectedDate = date;\n\n      if (this.rendered) {\n        // If year shown and changed, redraw year\n        if (!date || date.getFullYear() !== this.$yearTitle.data('year')) {\n          this.renderContent();\n        }\n\n        this._colorYear();\n      }\n    }\n  }, {\n    key: \"setDisplayMode\",\n    value: function setDisplayMode(displayMode) {\n      if (displayMode === this.displayMode) {\n        return;\n      }\n\n      this._setProperty('displayMode', displayMode);\n\n      if (this.rendered) {\n        this._colorYear();\n      }\n    }\n  }, {\n    key: \"setViewRange\",\n    value: function setViewRange(viewRange) {\n      if (viewRange === this.viewRange) {\n        return;\n      }\n\n      this._setProperty('viewRange', viewRange);\n\n      if (this.rendered) {\n        this._colorYear();\n      }\n    }\n    /* -- events ---------------------------------------- */\n\n  }, {\n    key: \"_onYearClick\",\n    value: function _onYearClick(event) {\n      var // we must use Planner.DisplayMode (extends Calendar.DisplayMode) here\n      // because YearPanel must work for calendar and planner.\n      displayMode = Planner.DisplayMode,\n          diff = $(event.target).data('year-diff'),\n          year = this.selectedDate.getFullYear(),\n          month = this.selectedDate.getMonth(),\n          date = this.selectedDate.getDate(),\n          newDate = new Date(year + diff, month, date),\n          oldWeek,\n          newWeek,\n          weekDiff;\n\n      if (this.alwaysSelectFirstDay) {\n        // find date based on mode\n        if (scout.isOneOf(this.displayMode, displayMode.WEEK, displayMode.WORK_WEEK, displayMode.CALENDAR_WEEK)) {\n          oldWeek = dates.weekInYear(this.selectedDate);\n          newWeek = dates.weekInYear(newDate);\n          weekDiff = oldWeek - newWeek; // shift new selection that week in year does not change and the new selection is a monday.\n\n          newDate = dates.shift(newDate, 0, 0, weekDiff * 7);\n          newDate = dates.shiftToNextOrPrevMonday(newDate, 0);\n        } else if (scout.isOneOf(this.displayMode, displayMode.MONTH, displayMode.YEAR)) {\n          // set to first day of month\n          newDate = new Date(year + diff, month, 1);\n        }\n      }\n\n      this.selectedDate = newDate;\n      this.trigger('dateSelect', {\n        date: this.selectedDate\n      });\n    }\n  }, {\n    key: \"_onYearDayClick\",\n    value: function _onYearDayClick(event) {\n      this.selectedDate = $('.year-hover-day', this.$yearList).data('date');\n\n      if (this.selectedDate) {\n        this.trigger('dateSelect', {\n          date: this.selectedDate\n        });\n      }\n    }\n  }, {\n    key: \"_onYearHoverIn\",\n    value: function _onYearHoverIn(event) {\n      var $day = $(event.target),\n          date1 = $day.data('date'),\n          year = date1.getFullYear(),\n          month = date1.getMonth(),\n          date = date1.getDate(),\n          day = (date1.getDay() + 6) % 7,\n          startHover,\n          endHover,\n          $day2,\n          date2; // find hover based on mode\n\n      if (this.displayMode === Calendar.DisplayMode.DAY) {\n        startHover = new Date(year, month, date);\n        endHover = new Date(year, month, date);\n      } else if (this.displayMode === Calendar.DisplayMode.WEEK) {\n        startHover = new Date(year, month, date - day);\n        endHover = new Date(year, month, date - day + 6);\n      } else if (this.displayMode === Calendar.DisplayMode.WORK_WEEK) {\n        startHover = new Date(year, month, date - day);\n        endHover = new Date(year, month, date - day + 4); // don't allow selecting a weekend day\n\n        if (date1 > endHover) {\n          date1 = endHover;\n        }\n      } else if (this.displayMode === Calendar.DisplayMode.MONTH) {\n        startHover = new Date(year, month, 1);\n        endHover = new Date(year, month + 1, 0);\n      } else if (this.displayMode === Planner.DisplayMode.YEAR) {\n        startHover = new Date(year, month, 1);\n        endHover = startHover;\n      } else {\n        startHover = new Date(year, month, date - day);\n        endHover = startHover;\n      }\n\n      if (this.alwaysSelectFirstDay) {\n        date1 = startHover;\n      } // loop days and colorize based on hover start and hover end\n\n\n      $('.year-day', this.$yearList).each(function () {\n        $day2 = $(this);\n        date2 = $day2.data('date');\n\n        if (date2 >= startHover && date2 <= endHover) {\n          $day2.addClass('year-hover');\n        } else {\n          $day2.removeClass('year-hover');\n        }\n\n        if (dates.isSameDay(date1, date2)) {\n          $day2.addClass('year-hover-day');\n        }\n      });\n    } // remove all hover effects\n\n  }, {\n    key: \"_onYearHoverOut\",\n    value: function _onYearHoverOut(event) {\n      $('.year-day.year-hover, .year-day.year-hover-day', this.$yearList).removeClass('year-hover year-hover-day');\n    }\n  }]);\n\n  return YearPanel;\n}(Widget);\n\nexport { YearPanel as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/calendar/YearPanel.js"],"names":["Calendar","dates","Planner","scout","scrollbars","Widget","$","YearPanel","$yearTitle","$yearList","selectedDate","displayMode","alwaysSelectFirstDay","model","$container","$parent","appendDiv","removeContent","_drawYear","_installScrollbars","axis","yearRendered","_colorYear","_uninstallScrollbars","empty","first","month","$month","d","day","$day","year","getFullYear","data","click","_onYearClick","bind","Date","attr","_format","getMonth","getDay","addClass","css","outerWidth","_onYearDayClick","hover","_onYearHoverIn","_onYearHoverOut","update","removeClass","that","date","each","DisplayMode","DAY","viewRange","from","to","isSameDay","_scrollYear","top","halfMonth","halfYear","parent","$year","offsetTop","outerHeight","animateAVCSD","pattern","format","session","locale","rendered","renderContent","_setProperty","event","diff","target","getDate","newDate","oldWeek","newWeek","weekDiff","isOneOf","WEEK","WORK_WEEK","CALENDAR_WEEK","weekInYear","shift","shiftToNextOrPrevMonday","MONTH","YEAR","trigger","date1","startHover","endHover","$day2","date2"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Calendar, dates, Planner, scout, scrollbars, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class YearPanel extends Widget {\n\n  constructor() {\n    super();\n\n    this.$yearTitle;\n    this.$yearList;\n    this.selectedDate;\n    this.displayMode;\n    this.alwaysSelectFirstDay;\n  }\n\n  _init(model) {\n    super._init(model);\n\n    // If true, it is only possible to select the first day of a range, depending of the selected mode\n    // day mode: every day may be selected\n    // week, work week, calendar week mode: only first day of week may be selected\n    // year, month mode: only first day of month may be selected\n    this.alwaysSelectFirstDay = model.alwaysSelectFirstDay;\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('year-panel-container');\n    this.$yearTitle = this.$container.appendDiv('year-panel-title');\n    this.$yearList = this.$container.appendDiv('year-panel-list');\n  }\n\n  renderContent() {\n    this.removeContent();\n    this._drawYear();\n    this._installScrollbars({\n      axis: 'y'\n    });\n    this.yearRendered = true;\n    this._colorYear();\n  }\n\n  get$Scrollable() {\n    return this.$yearList;\n  }\n\n  removeContent() {\n    this._uninstallScrollbars();\n    this.$yearList.empty();\n    this.yearRendered = false;\n  }\n\n  _remove() {\n    this.removeContent();\n    super._remove();\n  }\n\n  _drawYear() {\n    var first, month, $month, d, day, $day,\n      year = this.selectedDate.getFullYear();\n\n    // append 3 years\n    this.$yearTitle\n      .data('year', year)\n      .empty();\n\n    this.$yearTitle.appendDiv('year-title-item', year - 1)\n      .data('year-diff', -1)\n      .click(this._onYearClick.bind(this));\n\n    this.$yearTitle.appendDiv('year-title-item selected', year);\n\n    this.$yearTitle.appendDiv('year-title-item', year + 1)\n      .data('year-diff', +1)\n      .click(this._onYearClick.bind(this));\n\n    // add months and days\n    for (month = 0; month < 12; month++) {\n      first = new Date(year, month, 1);\n      $month = this.$yearList.appendDiv('year-month').attr('data-title', this._format(first, 'MMMM'));\n      for (d = 1; d <= 31; d++) {\n        day = new Date(year, month, d);\n\n        // stop if day is already out of range\n        if (day.getMonth() !== month) {\n          break;\n        }\n\n        // add div per day\n        $day = $month.appendDiv('year-day', d).data('date', day);\n\n        if (day.getDay() === 0 || day.getDay() === 6) {\n          $day.addClass('weekend');\n        }\n\n        // first day has margin depending on weekday\n        if (d === 1) {\n          $day.css('margin-left', ((day.getDay() + 6) % 7) * $day.outerWidth());\n        }\n      }\n    }\n\n    // bind events for days divs\n    $('.year-day', this.$yearList)\n      .click(this._onYearDayClick.bind(this))\n      .hover(this._onYearHoverIn.bind(this), this._onYearHoverOut.bind(this));\n\n    // update scrollbar\n    scrollbars.update(this.$yearList);\n  }\n\n  _colorYear() {\n    if (!this.yearRendered) {\n      return;\n    }\n\n    // remove color information\n    $('.year-day.year-range, .year-day.year-range-day', this.$yearList).removeClass('year-range year-range-day');\n\n    // loop all days and colorize based on range and selected\n    var that = this,\n      $day, date;\n\n    $('.year-day', this.$yearList).each(function() {\n      $day = $(this);\n      date = $day.data('date');\n      if (that.displayMode !== Calendar.DisplayMode.DAY &&\n        date >= that.viewRange.from && date < that.viewRange.to) {\n        $day.addClass('year-range');\n      }\n      if (dates.isSameDay(date, that.selectedDate)) {\n        $day.addClass('year-range-day');\n      }\n    });\n\n    // selected has to be visible day\n    this._scrollYear();\n  }\n\n  _scrollYear() {\n    var top, halfMonth, halfYear,\n      $day = $('.year-range-day', this.$yearList),\n      $month = $day.parent(),\n      $year = $day.parent().parent();\n\n    if (!$month[0]) {\n      return;\n    }\n    top = $month[0].offsetTop;\n    halfMonth = $month.outerHeight() / 2;\n    halfYear = $year.outerHeight() / 2;\n\n    this.$yearList.animateAVCSD('scrollTop', top + halfMonth - halfYear);\n  }\n\n  _format(date, pattern) {\n    return dates.format(date, this.session.locale, pattern);\n  }\n\n  selectDate(date) {\n    this.selectedDate = date;\n\n    if (this.rendered) {\n      // If year shown and changed, redraw year\n      if (!date || date.getFullYear() !== this.$yearTitle.data('year')) {\n        this.renderContent();\n      }\n      this._colorYear();\n    }\n  }\n\n  setDisplayMode(displayMode) {\n    if (displayMode === this.displayMode) {\n      return;\n    }\n    this._setProperty('displayMode', displayMode);\n    if (this.rendered) {\n      this._colorYear();\n    }\n  }\n\n  setViewRange(viewRange) {\n    if (viewRange === this.viewRange) {\n      return;\n    }\n    this._setProperty('viewRange', viewRange);\n    if (this.rendered) {\n      this._colorYear();\n    }\n  }\n\n  /* -- events ---------------------------------------- */\n\n  _onYearClick(event) {\n    var\n      // we must use Planner.DisplayMode (extends Calendar.DisplayMode) here\n      // because YearPanel must work for calendar and planner.\n      displayMode = Planner.DisplayMode,\n      diff = $(event.target).data('year-diff'),\n      year = this.selectedDate.getFullYear(),\n      month = this.selectedDate.getMonth(),\n      date = this.selectedDate.getDate(),\n      newDate = new Date(year + diff, month, date),\n      oldWeek,\n      newWeek,\n      weekDiff;\n\n    if (this.alwaysSelectFirstDay) {\n      // find date based on mode\n      if (scout.isOneOf(this.displayMode, displayMode.WEEK, displayMode.WORK_WEEK, displayMode.CALENDAR_WEEK)) {\n        oldWeek = dates.weekInYear(this.selectedDate);\n        newWeek = dates.weekInYear(newDate);\n        weekDiff = oldWeek - newWeek;\n        // shift new selection that week in year does not change and the new selection is a monday.\n        newDate = dates.shift(newDate, 0, 0, weekDiff * 7);\n        newDate = dates.shiftToNextOrPrevMonday(newDate, 0);\n      } else if (scout.isOneOf(this.displayMode, displayMode.MONTH, displayMode.YEAR)) {\n        // set to first day of month\n        newDate = new Date(year + diff, month, 1);\n      }\n    }\n\n    this.selectedDate = newDate;\n    this.trigger('dateSelect', {\n      date: this.selectedDate\n    });\n  }\n\n  _onYearDayClick(event) {\n    this.selectedDate = $('.year-hover-day', this.$yearList).data('date');\n    if (this.selectedDate) {\n      this.trigger('dateSelect', {\n        date: this.selectedDate\n      });\n    }\n  }\n\n  _onYearHoverIn(event) {\n    var $day = $(event.target),\n      date1 = $day.data('date'),\n      year = date1.getFullYear(),\n      month = date1.getMonth(),\n      date = date1.getDate(),\n      day = (date1.getDay() + 6) % 7,\n      startHover,\n      endHover,\n      $day2, date2;\n\n    // find hover based on mode\n    if (this.displayMode === Calendar.DisplayMode.DAY) {\n      startHover = new Date(year, month, date);\n      endHover = new Date(year, month, date);\n    } else if (this.displayMode === Calendar.DisplayMode.WEEK) {\n      startHover = new Date(year, month, date - day);\n      endHover = new Date(year, month, date - day + 6);\n    } else if (this.displayMode === Calendar.DisplayMode.WORK_WEEK) {\n      startHover = new Date(year, month, date - day);\n      endHover = new Date(year, month, date - day + 4);\n\n      // don't allow selecting a weekend day\n      if (date1 > endHover) {\n        date1 = endHover;\n      }\n    } else if (this.displayMode === Calendar.DisplayMode.MONTH) {\n      startHover = new Date(year, month, 1);\n      endHover = new Date(year, month + 1, 0);\n    } else if (this.displayMode === Planner.DisplayMode.YEAR) {\n      startHover = new Date(year, month, 1);\n      endHover = startHover;\n    } else {\n      startHover = new Date(year, month, date - day);\n      endHover = startHover;\n    }\n\n    if (this.alwaysSelectFirstDay) {\n      date1 = startHover;\n    }\n\n    // loop days and colorize based on hover start and hover end\n    $('.year-day', this.$yearList).each(function() {\n      $day2 = $(this);\n      date2 = $day2.data('date');\n      if (date2 >= startHover && date2 <= endHover) {\n        $day2.addClass('year-hover');\n      } else {\n        $day2.removeClass('year-hover');\n      }\n      if (dates.isSameDay(date1, date2)) {\n        $day2.addClass('year-hover-day');\n      }\n    });\n  }\n\n  // remove all hover effects\n  _onYearHoverOut(event) {\n    $('.year-day.year-hover, .year-day.year-hover-day', this.$yearList).removeClass('year-hover year-hover-day');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}