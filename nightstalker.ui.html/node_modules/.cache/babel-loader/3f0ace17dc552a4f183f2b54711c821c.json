{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { DateRange, dates, ModelAdapter } from '../index';\n\nvar PlannerAdapter = /*#__PURE__*/function (_ModelAdapter) {\n  _inherits(PlannerAdapter, _ModelAdapter);\n\n  var _super = _createSuper(PlannerAdapter);\n\n  function PlannerAdapter() {\n    var _this;\n\n    _classCallCheck(this, PlannerAdapter);\n\n    _this = _super.call(this);\n\n    _this._addRemoteProperties(['displayMode', 'viewRange', 'selectionRange', 'selectedActivity']);\n\n    return _this;\n  }\n\n  _createClass(PlannerAdapter, [{\n    key: \"_sendViewRange\",\n    value: function _sendViewRange(viewRange) {\n      this._send('property', {\n        viewRange: dates.toJsonDateRange(viewRange)\n      });\n    }\n  }, {\n    key: \"_sendSelectedActivity\",\n    value: function _sendSelectedActivity() {\n      var activityId = null;\n\n      if (this.widget.selectedActivity) {\n        activityId = this.widget.selectedActivity.id;\n      }\n\n      this._send('property', {\n        selectedActivity: activityId\n      });\n    }\n  }, {\n    key: \"_sendSelectionRange\",\n    value: function _sendSelectionRange() {\n      var selectionRange = dates.toJsonDateRange(this.widget.selectionRange);\n\n      this._send('property', {\n        selectionRange: selectionRange\n      });\n    }\n  }, {\n    key: \"_onWidgetResourcesSelected\",\n    value: function _onWidgetResourcesSelected(event) {\n      this._sendResourcesSelected();\n    }\n  }, {\n    key: \"_sendResourcesSelected\",\n    value: function _sendResourcesSelected() {\n      var resourceIds = this.widget.selectedResources.map(function (r) {\n        return r.id;\n      });\n\n      this._send('resourcesSelected', {\n        resourceIds: resourceIds\n      });\n    }\n  }, {\n    key: \"_onWidgetEvent\",\n    value: function _onWidgetEvent(event) {\n      if (event.type === 'resourcesSelected') {\n        this._onWidgetResourcesSelected(event);\n      } else {\n        _get(_getPrototypeOf(PlannerAdapter.prototype), \"_onWidgetEvent\", this).call(this, event);\n      }\n    }\n  }, {\n    key: \"_onResourcesInserted\",\n    value: function _onResourcesInserted(resources) {\n      this.widget.insertResources(resources);\n    }\n  }, {\n    key: \"_onResourcesDeleted\",\n    value: function _onResourcesDeleted(resourceIds) {\n      var resources = this.widget._resourcesByIds(resourceIds);\n\n      this.addFilterForWidgetEventType('resourcesSelected');\n      this.addFilterForProperties({\n        selectionRange: new DateRange()\n      });\n      this.widget.deleteResources(resources);\n    }\n  }, {\n    key: \"_onAllResourcesDeleted\",\n    value: function _onAllResourcesDeleted() {\n      this.addFilterForWidgetEventType('resourcesSelected');\n      this.addFilterForProperties({\n        selectionRange: new DateRange()\n      });\n      this.widget.deleteAllResources();\n    }\n  }, {\n    key: \"_onResourcesSelected\",\n    value: function _onResourcesSelected(resourceIds) {\n      var resources = this.widget._resourcesByIds(resourceIds);\n\n      this.addFilterForWidgetEventType('resourcesSelected');\n      this.widget.selectResources(resources, false);\n    }\n  }, {\n    key: \"_onResourcesUpdated\",\n    value: function _onResourcesUpdated(resources) {\n      this.widget.updateResources(resources);\n    }\n  }, {\n    key: \"onModelAction\",\n    value: function onModelAction(event) {\n      if (event.type === 'resourcesInserted') {\n        this._onResourcesInserted(event.resources);\n      } else if (event.type === 'resourcesDeleted') {\n        this._onResourcesDeleted(event.resourceIds);\n      } else if (event.type === 'allResourcesDeleted') {\n        this._onAllResourcesDeleted();\n      } else if (event.type === 'resourcesSelected') {\n        this._onResourcesSelected(event.resourceIds);\n      } else if (event.type === 'resourcesUpdated') {\n        this._onResourcesUpdated(event.resources);\n      } else {\n        _get(_getPrototypeOf(PlannerAdapter.prototype), \"onModelAction\", this).call(this, event);\n      }\n    }\n  }]);\n\n  return PlannerAdapter;\n}(ModelAdapter);\n\nexport { PlannerAdapter as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/planner/PlannerAdapter.js"],"names":["DateRange","dates","ModelAdapter","PlannerAdapter","_addRemoteProperties","viewRange","_send","toJsonDateRange","activityId","widget","selectedActivity","id","selectionRange","event","_sendResourcesSelected","resourceIds","selectedResources","map","r","type","_onWidgetResourcesSelected","resources","insertResources","_resourcesByIds","addFilterForWidgetEventType","addFilterForProperties","deleteResources","deleteAllResources","selectResources","updateResources","_onResourcesInserted","_onResourcesDeleted","_onAllResourcesDeleted","_onResourcesSelected","_onResourcesUpdated"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {DateRange, dates, ModelAdapter} from '../index';\n\nexport default class PlannerAdapter extends ModelAdapter {\n\n  constructor() {\n    super();\n    this._addRemoteProperties(['displayMode', 'viewRange', 'selectionRange', 'selectedActivity']);\n  }\n\n  _sendViewRange(viewRange) {\n    this._send('property', {\n      viewRange: dates.toJsonDateRange(viewRange)\n    });\n  }\n\n  _sendSelectedActivity() {\n    var activityId = null;\n    if (this.widget.selectedActivity) {\n      activityId = this.widget.selectedActivity.id;\n    }\n    this._send('property', {\n      selectedActivity: activityId\n    });\n  }\n\n  _sendSelectionRange() {\n    var selectionRange = dates.toJsonDateRange(this.widget.selectionRange);\n    this._send('property', {\n      selectionRange: selectionRange\n    });\n  }\n\n  _onWidgetResourcesSelected(event) {\n    this._sendResourcesSelected();\n  }\n\n  _sendResourcesSelected() {\n    var resourceIds = this.widget.selectedResources.map(function(r) {\n      return r.id;\n    });\n    this._send('resourcesSelected', {\n      resourceIds: resourceIds\n    });\n  }\n\n  _onWidgetEvent(event) {\n    if (event.type === 'resourcesSelected') {\n      this._onWidgetResourcesSelected(event);\n    } else {\n      super._onWidgetEvent(event);\n    }\n  }\n\n  _onResourcesInserted(resources) {\n    this.widget.insertResources(resources);\n  }\n\n  _onResourcesDeleted(resourceIds) {\n    var resources = this.widget._resourcesByIds(resourceIds);\n    this.addFilterForWidgetEventType('resourcesSelected');\n    this.addFilterForProperties({\n      selectionRange: new DateRange()\n    });\n    this.widget.deleteResources(resources);\n  }\n\n  _onAllResourcesDeleted() {\n    this.addFilterForWidgetEventType('resourcesSelected');\n    this.addFilterForProperties({\n      selectionRange: new DateRange()\n    });\n    this.widget.deleteAllResources();\n  }\n\n  _onResourcesSelected(resourceIds) {\n    var resources = this.widget._resourcesByIds(resourceIds);\n    this.addFilterForWidgetEventType('resourcesSelected');\n    this.widget.selectResources(resources, false);\n  }\n\n  _onResourcesUpdated(resources) {\n    this.widget.updateResources(resources);\n  }\n\n  onModelAction(event) {\n    if (event.type === 'resourcesInserted') {\n      this._onResourcesInserted(event.resources);\n    } else if (event.type === 'resourcesDeleted') {\n      this._onResourcesDeleted(event.resourceIds);\n    } else if (event.type === 'allResourcesDeleted') {\n      this._onAllResourcesDeleted();\n    } else if (event.type === 'resourcesSelected') {\n      this._onResourcesSelected(event.resourceIds);\n    } else if (event.type === 'resourcesUpdated') {\n      this._onResourcesUpdated(event.resources);\n    } else {\n      super.onModelAction(event);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}