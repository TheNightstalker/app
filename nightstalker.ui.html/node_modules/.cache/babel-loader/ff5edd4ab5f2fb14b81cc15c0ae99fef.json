{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { DesktopTabBoxController, scout, SimpleTabBoxController } from '../../index';\n/**\n * The {@link {@link scout.HeaderViewTabAreaController}} is used to link the center {@link {@link SimpleTabBox}} (all forms with displayViewId='C')\n * with a {@link {@link SimpleTabArea}} placed in the header.\n * It is an extension of {@link {@link SimpleTabBoxController}}.\n *\n * @see SimpleTabBoxController\n */\n\nvar HeaderTabBoxController = /*#__PURE__*/function (_DesktopTabBoxControl) {\n  _inherits(HeaderTabBoxController, _DesktopTabBoxControl);\n\n  var _super = _createSuper(HeaderTabBoxController);\n\n  function HeaderTabBoxController() {\n    var _this;\n\n    _classCallCheck(this, HeaderTabBoxController);\n\n    _this = _super.call(this);\n    _this.bench = null;\n    _this._viewsChangedHandler = _this._onViewsChanged.bind(_assertThisInitialized(_this));\n    _this.tabAreaCenter = null;\n    _this.tabAreaInHeader = false;\n    return _this;\n  }\n\n  _createClass(HeaderTabBoxController, [{\n    key: \"install\",\n    value: function install(bench, tabArea) {\n      this.bench = scout.assertParameter('bench', bench);\n      var tabBoxCenter = this.bench.getTabBox('C');\n      this.tabAreaCenter = tabBoxCenter.tabArea;\n\n      _get(_getPrototypeOf(HeaderTabBoxController.prototype), \"install\", this).call(this, tabBoxCenter, tabArea);\n    }\n  }, {\n    key: \"_installListeners\",\n    value: function _installListeners() {\n      _get(_getPrototypeOf(HeaderTabBoxController.prototype), \"_installListeners\", this).call(this);\n\n      this.bench.on('viewAdd', this._viewsChangedHandler);\n      this.bench.on('viewRemove', this._viewsChangedHandler);\n    }\n  }, {\n    key: \"_onViewsChanged\",\n    value: function _onViewsChanged() {\n      if (this.bench.getViews().some(function (view) {\n        return 'C' !== view.displayViewId;\n      })) {\n        // has views in other view stacks\n        this._setViewTabAreaInHeader(false);\n      } else {\n        // has only views in center\n        this._setViewTabAreaInHeader(true);\n      }\n    }\n  }, {\n    key: \"_setViewTabAreaInHeader\",\n    value: function _setViewTabAreaInHeader(inHeader) {\n      this.tabAreaInHeader = inHeader;\n      this.tabAreaCenter.setVisible(!inHeader);\n      this.tabArea.setVisible(inHeader);\n    }\n  }, {\n    key: \"getTabs\",\n    value: function getTabs() {\n      if (this.tabAreaInHeader) {\n        return this.tabArea.getTabs();\n      }\n\n      return this.tabAreaCenter.getTabs();\n    }\n  }]);\n\n  return HeaderTabBoxController;\n}(DesktopTabBoxController);\n\nexport { HeaderTabBoxController as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/desktop/header/HeaderTabBoxController.js"],"names":["DesktopTabBoxController","scout","SimpleTabBoxController","HeaderTabBoxController","bench","_viewsChangedHandler","_onViewsChanged","bind","tabAreaCenter","tabAreaInHeader","tabArea","assertParameter","tabBoxCenter","getTabBox","on","getViews","some","view","displayViewId","_setViewTabAreaInHeader","inHeader","setVisible","getTabs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,uBAAR,EAAiCC,KAAjC,EAAwCC,sBAAxC,QAAqE,aAArE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqBC,sB;;;;;AACnB,oCAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,KAAL,GAAa,IAAb;AACA,UAAKC,oBAAL,GAA4B,MAAKC,eAAL,CAAqBC,IAArB,+BAA5B;AAEA,UAAKC,aAAL,GAAqB,IAArB;AACA,UAAKC,eAAL,GAAuB,KAAvB;AAPY;AAQb;;;;4BAEOL,K,EAAOM,O,EAAS;AACtB,WAAKN,KAAL,GAAaH,KAAK,CAACU,eAAN,CAAsB,OAAtB,EAA+BP,KAA/B,CAAb;AAEA,UAAIQ,YAAY,GAAG,KAAKR,KAAL,CAAWS,SAAX,CAAqB,GAArB,CAAnB;AACA,WAAKL,aAAL,GAAqBI,YAAY,CAACF,OAAlC;;AAEA,0FAAcE,YAAd,EAA4BF,OAA5B;AACD;;;wCAEmB;AAClB;;AACA,WAAKN,KAAL,CAAWU,EAAX,CAAc,SAAd,EAAyB,KAAKT,oBAA9B;AACA,WAAKD,KAAL,CAAWU,EAAX,CAAc,YAAd,EAA4B,KAAKT,oBAAjC;AACD;;;sCAEiB;AAChB,UAAI,KAAKD,KAAL,CAAWW,QAAX,GAAsBC,IAAtB,CAA2B,UAASC,IAAT,EAAe;AAC5C,eAAO,QAAQA,IAAI,CAACC,aAApB;AACD,OAFG,CAAJ,EAEI;AACF;AACA,aAAKC,uBAAL,CAA6B,KAA7B;AACD,OALD,MAKO;AACL;AACA,aAAKA,uBAAL,CAA6B,IAA7B;AACD;AACF;;;4CAEuBC,Q,EAAU;AAChC,WAAKX,eAAL,GAAuBW,QAAvB;AACA,WAAKZ,aAAL,CAAmBa,UAAnB,CAA8B,CAACD,QAA/B;AACA,WAAKV,OAAL,CAAaW,UAAb,CAAwBD,QAAxB;AACD;;;8BAES;AACR,UAAI,KAAKX,eAAT,EAA0B;AACxB,eAAO,KAAKC,OAAL,CAAaY,OAAb,EAAP;AACD;;AACD,aAAO,KAAKd,aAAL,CAAmBc,OAAnB,EAAP;AACD;;;;EAjDiDtB,uB;;SAA/BG,sB","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {DesktopTabBoxController, scout, SimpleTabBoxController} from '../../index';\n\n/**\n * The {@link {@link scout.HeaderViewTabAreaController}} is used to link the center {@link {@link SimpleTabBox}} (all forms with displayViewId='C')\n * with a {@link {@link SimpleTabArea}} placed in the header.\n * It is an extension of {@link {@link SimpleTabBoxController}}.\n *\n * @see SimpleTabBoxController\n */\nexport default class HeaderTabBoxController extends DesktopTabBoxController {\n  constructor() {\n    super();\n\n    this.bench = null;\n    this._viewsChangedHandler = this._onViewsChanged.bind(this);\n\n    this.tabAreaCenter = null;\n    this.tabAreaInHeader = false;\n  }\n\n  install(bench, tabArea) {\n    this.bench = scout.assertParameter('bench', bench);\n\n    var tabBoxCenter = this.bench.getTabBox('C');\n    this.tabAreaCenter = tabBoxCenter.tabArea;\n\n    super.install(tabBoxCenter, tabArea);\n  }\n\n  _installListeners() {\n    super._installListeners();\n    this.bench.on('viewAdd', this._viewsChangedHandler);\n    this.bench.on('viewRemove', this._viewsChangedHandler);\n  }\n\n  _onViewsChanged() {\n    if (this.bench.getViews().some(function(view) {\n      return 'C' !== view.displayViewId;\n    })) {\n      // has views in other view stacks\n      this._setViewTabAreaInHeader(false);\n    } else {\n      // has only views in center\n      this._setViewTabAreaInHeader(true);\n    }\n  }\n\n  _setViewTabAreaInHeader(inHeader) {\n    this.tabAreaInHeader = inHeader;\n    this.tabAreaCenter.setVisible(!inHeader);\n    this.tabArea.setVisible(inHeader);\n  }\n\n  getTabs() {\n    if (this.tabAreaInHeader) {\n      return this.tabArea.getTabs();\n    }\n    return this.tabAreaCenter.getTabs();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}