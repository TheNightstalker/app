{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2010-2020 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, arrays, graphics } from '../index';\n\nvar BreadcrumbBarLayout = /*#__PURE__*/function (_AbstractLayout) {\n  _inherits(BreadcrumbBarLayout, _AbstractLayout);\n\n  var _super = _createSuper(BreadcrumbBarLayout);\n\n  function BreadcrumbBarLayout(breadcrumbBar) {\n    var _this;\n\n    _classCallCheck(this, BreadcrumbBarLayout);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"_collapse\", function ($container, containerSize) {\n      var currentIndex = 1;\n\n      var visibleBreadcrumbItems = this._visibleBreadcrumbItems();\n\n      var prefSize = this._actualPrefSize(visibleBreadcrumbItems, true);\n\n      while (prefSize.width > containerSize.width && currentIndex < visibleBreadcrumbItems.length - 1) {\n        // remove breadcrumbItems until size fits or only 2 breadcrumbItems are visible\n        var crumb = visibleBreadcrumbItems[currentIndex];\n        crumb.$container.hide();\n        crumb._layHidden = true;\n        visibleBreadcrumbItems.splice(currentIndex, 1);\n        prefSize = this._actualPrefSize(visibleBreadcrumbItems, true);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_breadcrumbItemsWidth\", function (breadcrumbItems, considerEllipsis) {\n      var breadcrumbsWidth = 0;\n      breadcrumbItems = breadcrumbItems || this._visibleBreadcrumbItems();\n      breadcrumbItems.forEach(function (breadcrumbItem) {\n        if (breadcrumbItem.rendered) {\n          breadcrumbsWidth += breadcrumbItem.$container.outerWidth(true);\n        }\n      }, this);\n\n      if (considerEllipsis && this._breadcrumbBar._ellipsisBreadcrumbItem && this._breadcrumbBar._ellipsisBreadcrumbItem.rendered) {\n        breadcrumbsWidth += this._breadcrumbBar._ellipsisBreadcrumbItem.$container.outerWidth(true);\n      }\n\n      return breadcrumbsWidth;\n    });\n\n    _this._breadcrumbBar = breadcrumbBar;\n    return _this;\n  }\n\n  _createClass(BreadcrumbBarLayout, [{\n    key: \"layout\",\n    value: function layout($container) {\n      // 1) undo all shrinking etc.\n      this._undoCollapse(this._breadcrumbBar.breadcrumbItems);\n\n      var breadcrumbItems = this._visibleBreadcrumbItems();\n\n      var htmlContainer = this._breadcrumbBar.htmlComp;\n      var containerSize = htmlContainer.size();\n\n      var breadcrumbItemsWidth = this._actualPrefSize(breadcrumbItems, false).width;\n\n      if (breadcrumbItemsWidth <= containerSize.width) {\n        this._applyToEllipsis(function (ell) {\n          ell.setVisible(false);\n        }); // OK, every breadcrumbItems fits into container\n\n\n        return;\n      }\n\n      this._applyToEllipsis(function (ell) {\n        ell.setVisible(true);\n      }); // breadcrumbItems don't fit\n      // Third approach: Create ellipsis and move overflown menus into it\n\n\n      this._collapse(breadcrumbItems, containerSize);\n    }\n  }, {\n    key: \"_applyToEllipsis\",\n    value: function _applyToEllipsis(fun) {\n      if (this._breadcrumbBar._ellipsisBreadcrumbItem) {\n        fun(this._breadcrumbBar._ellipsisBreadcrumbItem);\n      }\n    }\n  }, {\n    key: \"_undoCollapse\",\n    value: function _undoCollapse() {\n      arrays.ensure(this._breadcrumbBar.breadcrumbItems).forEach(function (crumb) {\n        crumb.$container.show();\n        crumb._layHidden = false;\n      });\n    }\n  }, {\n    key: \"preferredLayoutSize\",\n    value: function preferredLayoutSize($container) {\n      var breadcrumbItems = this._visibleBreadcrumbItems();\n\n      this._undoCollapse(breadcrumbItems);\n\n      return this._actualPrefSize();\n    }\n  }, {\n    key: \"_breadcrumbSize\",\n    value: function _breadcrumbSize(breadcrumbItem) {\n      var classList = breadcrumbItem.$container.attr('class');\n      breadcrumbItem.$container.removeClass('hidden');\n      breadcrumbItem.htmlComp.invalidateLayout();\n      var prefSize = breadcrumbItem.htmlComp.prefSize({\n        useCssSize: true,\n        exact: true\n      }).add(graphics.margins(breadcrumbItem.$container));\n      breadcrumbItem.$container.attrOrRemove('class', classList);\n      return prefSize;\n    }\n  }, {\n    key: \"_visibleBreadcrumbItems\",\n    value: function _visibleBreadcrumbItems() {\n      return this._breadcrumbBar.breadcrumbItems.filter(function (breadcrumb) {\n        return breadcrumb.visible;\n      }, this);\n    }\n  }, {\n    key: \"_actualPrefSize\",\n    value: function _actualPrefSize(breadcrumbItems, considerEllipsis) {\n      breadcrumbItems = breadcrumbItems || this._visibleBreadcrumbItems();\n\n      var breadcrumbItemsWidth = this._breadcrumbItemsWidth(breadcrumbItems, considerEllipsis);\n\n      var prefSize = graphics.prefSize(this._breadcrumbBar.$container, {\n        includeMargin: true,\n        useCssSize: true\n      });\n      prefSize.width = breadcrumbItemsWidth + this._breadcrumbBar.htmlComp.insets().horizontal();\n      return prefSize;\n    }\n    /**\n     * @return the preferred width of all breadcrumbItems (plus ellipsis breadcrumb)\n     */\n\n  }]);\n\n  return BreadcrumbBarLayout;\n}(AbstractLayout);\n\nexport { BreadcrumbBarLayout as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/breadcrumbbar/BreadcrumbBarLayout.js"],"names":["AbstractLayout","arrays","graphics","BreadcrumbBarLayout","breadcrumbBar","$container","containerSize","currentIndex","visibleBreadcrumbItems","_visibleBreadcrumbItems","prefSize","_actualPrefSize","width","length","crumb","hide","_layHidden","splice","breadcrumbItems","considerEllipsis","breadcrumbsWidth","forEach","breadcrumbItem","rendered","outerWidth","_breadcrumbBar","_ellipsisBreadcrumbItem","_undoCollapse","htmlContainer","htmlComp","size","breadcrumbItemsWidth","_applyToEllipsis","ell","setVisible","_collapse","fun","ensure","show","classList","attr","removeClass","invalidateLayout","useCssSize","exact","add","margins","attrOrRemove","filter","breadcrumb","visible","_breadcrumbItemsWidth","includeMargin","insets","horizontal"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2010-2020 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, arrays, graphics} from '../index';\n\nexport default class BreadcrumbBarLayout extends AbstractLayout {\n\n  constructor(breadcrumbBar) {\n    super();\n\n    this._breadcrumbBar = breadcrumbBar;\n  }\n\n  layout($container) {\n    // 1) undo all shrinking etc.\n    this._undoCollapse(this._breadcrumbBar.breadcrumbItems);\n\n    const breadcrumbItems = this._visibleBreadcrumbItems();\n\n    const htmlContainer = this._breadcrumbBar.htmlComp;\n    const containerSize = htmlContainer.size();\n    const breadcrumbItemsWidth = this._actualPrefSize(breadcrumbItems, false).width;\n    if (breadcrumbItemsWidth <= containerSize.width) {\n      this._applyToEllipsis(ell => {\n        ell.setVisible(false);\n      });\n      // OK, every breadcrumbItems fits into container\n      return;\n    }\n    this._applyToEllipsis(ell => {\n      ell.setVisible(true);\n    });\n\n    // breadcrumbItems don't fit\n\n    // Third approach: Create ellipsis and move overflown menus into it\n    this._collapse(breadcrumbItems, containerSize);\n  }\n\n  _collapse = function($container, containerSize) {\n    let currentIndex = 1;\n    const visibleBreadcrumbItems = this._visibleBreadcrumbItems();\n    let prefSize = this._actualPrefSize(visibleBreadcrumbItems, true);\n\n    while (prefSize.width > containerSize.width && currentIndex < visibleBreadcrumbItems.length - 1) {\n      // remove breadcrumbItems until size fits or only 2 breadcrumbItems are visible\n      const crumb = visibleBreadcrumbItems[currentIndex];\n      crumb.$container.hide();\n      crumb._layHidden = true;\n      visibleBreadcrumbItems.splice(currentIndex, 1);\n      prefSize = this._actualPrefSize(visibleBreadcrumbItems, true);\n    }\n  }\n\n  _applyToEllipsis(fun) {\n    if (this._breadcrumbBar._ellipsisBreadcrumbItem) {\n      fun(this._breadcrumbBar._ellipsisBreadcrumbItem);\n    }\n  }\n\n  _undoCollapse() {\n    arrays.ensure(this._breadcrumbBar.breadcrumbItems).forEach(crumb => {\n      crumb.$container.show();\n      crumb._layHidden = false;\n    });\n  }\n\n  preferredLayoutSize($container) {\n    const breadcrumbItems = this._visibleBreadcrumbItems();\n\n    this._undoCollapse(breadcrumbItems);\n\n    return this._actualPrefSize();\n  }\n\n  _breadcrumbSize(breadcrumbItem) {\n    const classList = breadcrumbItem.$container.attr('class');\n    breadcrumbItem.$container.removeClass('hidden');\n\n    breadcrumbItem.htmlComp.invalidateLayout();\n    const prefSize = breadcrumbItem.htmlComp.prefSize({\n      useCssSize: true,\n      exact: true\n    }).add(graphics.margins(breadcrumbItem.$container));\n\n    breadcrumbItem.$container.attrOrRemove('class', classList);\n    return prefSize;\n  }\n\n  _visibleBreadcrumbItems() {\n    return this._breadcrumbBar.breadcrumbItems.filter(breadcrumb => {\n      return breadcrumb.visible;\n    }, this);\n  }\n\n  _actualPrefSize(breadcrumbItems, considerEllipsis) {\n    breadcrumbItems = breadcrumbItems || this._visibleBreadcrumbItems();\n\n    const breadcrumbItemsWidth = this._breadcrumbItemsWidth(breadcrumbItems, considerEllipsis);\n    const prefSize = graphics.prefSize(this._breadcrumbBar.$container, {\n      includeMargin: true,\n      useCssSize: true\n    });\n    prefSize.width = breadcrumbItemsWidth + this._breadcrumbBar.htmlComp.insets().horizontal();\n\n    return prefSize;\n  }\n\n  /**\n   * @return the preferred width of all breadcrumbItems (plus ellipsis breadcrumb)\n   */\n  _breadcrumbItemsWidth = function(breadcrumbItems, considerEllipsis) {\n    let breadcrumbsWidth = 0;\n    breadcrumbItems = breadcrumbItems || this._visibleBreadcrumbItems();\n    breadcrumbItems.forEach(function(breadcrumbItem) {\n      if (breadcrumbItem.rendered) {\n        breadcrumbsWidth += breadcrumbItem.$container.outerWidth(true);\n      }\n    }, this);\n\n    if (considerEllipsis && this._breadcrumbBar._ellipsisBreadcrumbItem && this._breadcrumbBar._ellipsisBreadcrumbItem.rendered) {\n      breadcrumbsWidth += this._breadcrumbBar._ellipsisBreadcrumbItem.$container.outerWidth(true);\n    }\n    return breadcrumbsWidth;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}