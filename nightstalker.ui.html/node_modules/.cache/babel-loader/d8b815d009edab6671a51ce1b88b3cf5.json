{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { ModelAdapter } from '../../index';\n\nvar FormFieldAdapter = /*#__PURE__*/function (_ModelAdapter) {\n  _inherits(FormFieldAdapter, _ModelAdapter);\n\n  var _super = _createSuper(FormFieldAdapter);\n\n  function FormFieldAdapter() {\n    var _this;\n\n    _classCallCheck(this, FormFieldAdapter);\n\n    _this = _super.call(this);\n    /**\n     * Set this property to true when the form-field should stay enabled in offline case.\n     * By default the field will be disabled.\n     */\n\n    _this.enabledWhenOffline = false;\n    return _this;\n  }\n\n  _createClass(FormFieldAdapter, [{\n    key: \"_goOffline\",\n    value: function _goOffline() {\n      if (this.enabledWhenOffline) {\n        return;\n      }\n\n      this._enabledBeforeOffline = this.widget.enabled;\n      this.widget.setEnabled(false);\n    }\n  }, {\n    key: \"_goOnline\",\n    value: function _goOnline() {\n      if (this.enabledWhenOffline) {\n        return;\n      }\n\n      this.widget.setEnabled(this._enabledBeforeOffline);\n    }\n  }]);\n\n  return FormFieldAdapter;\n}(ModelAdapter);\n\nexport { FormFieldAdapter as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/FormFieldAdapter.js"],"names":["ModelAdapter","FormFieldAdapter","enabledWhenOffline","_enabledBeforeOffline","widget","enabled","setEnabled"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,YAAR,QAA2B,aAA3B;;IAEqBC,gB;;;;;AAEnB,8BAAc;AAAA;;AAAA;;AACZ;AAEA;AACJ;AACA;AACA;;AACI,UAAKC,kBAAL,GAA0B,KAA1B;AAPY;AASb;;;;iCAEY;AACX,UAAI,KAAKA,kBAAT,EAA6B;AAC3B;AACD;;AACD,WAAKC,qBAAL,GAA6B,KAAKC,MAAL,CAAYC,OAAzC;AACA,WAAKD,MAAL,CAAYE,UAAZ,CAAuB,KAAvB;AACD;;;gCAEW;AACV,UAAI,KAAKJ,kBAAT,EAA6B;AAC3B;AACD;;AACD,WAAKE,MAAL,CAAYE,UAAZ,CAAuB,KAAKH,qBAA5B;AACD;;;;EA1B2CH,Y;;SAAzBC,gB","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {ModelAdapter} from '../../index';\n\nexport default class FormFieldAdapter extends ModelAdapter {\n\n  constructor() {\n    super();\n\n    /**\n     * Set this property to true when the form-field should stay enabled in offline case.\n     * By default the field will be disabled.\n     */\n    this.enabledWhenOffline = false;\n\n  }\n\n  _goOffline() {\n    if (this.enabledWhenOffline) {\n      return;\n    }\n    this._enabledBeforeOffline = this.widget.enabled;\n    this.widget.setEnabled(false);\n  }\n\n  _goOnline() {\n    if (this.enabledWhenOffline) {\n      return;\n    }\n    this.widget.setEnabled(this._enabledBeforeOffline);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}