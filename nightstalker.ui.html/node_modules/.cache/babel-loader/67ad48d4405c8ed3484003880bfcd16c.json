{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Device, FileInput, FormField, HtmlComponent, ImageFieldLayout, scout, scrollbars, SingleLayout } from '../../../index';\nimport $ from 'jquery';\n\nvar ImageField = /*#__PURE__*/function (_FormField) {\n  _inherits(ImageField, _FormField);\n\n  var _super = _createSuper(ImageField);\n\n  function ImageField() {\n    var _this;\n\n    _classCallCheck(this, ImageField);\n\n    _this = _super.call(this);\n    _this.autoFit = false;\n    _this.scrollBarEnabled = false;\n    _this.uploadEnabled = false;\n    _this.acceptTypes = null;\n    _this.maximumUploadSize = FileInput.DEFAULT_MAXIMUM_UPLOAD_SIZE;\n    _this._clickHandler = null;\n    return _this;\n  }\n\n  _createClass(ImageField, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(ImageField.prototype), \"_init\", this).call(this, model);\n\n      this.resolveIconIds(['imageUrl']);\n      this.icon = scout.create('Icon', {\n        parent: this,\n        iconDesc: this.imageUrl,\n        autoFit: this.autoFit,\n        prepend: true\n      });\n      this.icon.on('load', this._onImageLoad.bind(this));\n      this.icon.on('error', this._onImageError.bind(this));\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.addContainer(this.$parent, 'image-field', new ImageFieldLayout(this));\n      this.addFieldContainer(this.$parent.makeDiv()); // Complete the layout hierarchy between the image field and the image\n\n      var htmlComp = HtmlComponent.install(this.$fieldContainer, this.session);\n      htmlComp.setLayout(new SingleLayout());\n      this.icon.render(this.$fieldContainer);\n      this.addLabel();\n      this.addField(this.icon.$container);\n      this.addStatus();\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(ImageField.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderScrollBarEnabled();\n\n      this._renderDropType();\n\n      this._renderImageUrl();\n\n      this._renderUploadEnabled();\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      _get(_getPrototypeOf(ImageField.prototype), \"_remove\", this).call(this);\n\n      this._clickHandler = null;\n\n      if (this.fileInput) {\n        this.fileInput.destroy();\n        this.fileInput = null;\n      }\n    }\n  }, {\n    key: \"_installDragAndDropHandler\",\n    value: function _installDragAndDropHandler(event) {\n      if (this.dragAndDropHandler) {\n        return;\n      } // add drag and drop event listeners to field container, img field might be hidden (e.g. if no image has been set)\n\n\n      this.dragAndDropHandler = this._createDragAndDropHandler();\n      this.dragAndDropHandler.install(this.$fieldContainer);\n    }\n  }, {\n    key: \"setImageUrl\",\n    value: function setImageUrl(imageUrl) {\n      this.setProperty('imageUrl', imageUrl);\n    }\n  }, {\n    key: \"_setImageUrl\",\n    value: function _setImageUrl(imageUrl) {\n      this._setProperty('imageUrl', imageUrl);\n\n      this.icon.setIconDesc(imageUrl);\n    }\n  }, {\n    key: \"_renderImageUrl\",\n    value: function _renderImageUrl() {\n      var hasImageUrl = !!this.imageUrl;\n      this.$fieldContainer.toggleClass('has-image', hasImageUrl);\n      this.$container.toggleClass('has-image', hasImageUrl);\n      scrollbars.update(this.$fieldContainer);\n    }\n  }, {\n    key: \"setAutoFit\",\n    value: function setAutoFit(autoFit) {\n      this.setProperty('autoFit', autoFit);\n    }\n  }, {\n    key: \"_setAutoFit\",\n    value: function _setAutoFit(autoFit) {\n      this._setProperty('autoFit', autoFit);\n\n      this.icon.setAutoFit(autoFit);\n    }\n  }, {\n    key: \"_renderAutoFit\",\n    value: function _renderAutoFit() {\n      scrollbars.update(this.$fieldContainer);\n    }\n  }, {\n    key: \"_renderScrollBarEnabled\",\n    value: function _renderScrollBarEnabled() {\n      // Note: Inner alignment has to be updated _before_ installing the scrollbar, because the inner\n      // alignment uses absolute positioning, which confuses the scrollbar calculations.\n      this._updateInnerAlignment();\n\n      if (this.scrollBarEnabled) {\n        this._installScrollbars();\n      } else {\n        this._uninstallScrollbars();\n      }\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"get$Scrollable\",\n    value: function get$Scrollable() {\n      return this.$fieldContainer;\n    }\n  }, {\n    key: \"_renderGridData\",\n    value: function _renderGridData() {\n      _get(_getPrototypeOf(ImageField.prototype), \"_renderGridData\", this).call(this);\n\n      this._updateInnerAlignment();\n    }\n  }, {\n    key: \"_renderGridDataHints\",\n    value: function _renderGridDataHints() {\n      _get(_getPrototypeOf(ImageField.prototype), \"_renderGridDataHints\", this).call(this);\n\n      this._updateInnerAlignment();\n    }\n  }, {\n    key: \"_updateInnerAlignment\",\n    value: function _updateInnerAlignment() {\n      // Enable inner alignment only when scrollbars are disabled\n      this.updateInnerAlignment({\n        useHorizontalAlignment: !this.scrollBarEnabled,\n        useVerticalAlignment: !this.scrollBarEnabled\n      });\n    }\n  }, {\n    key: \"setUploadEnabled\",\n    value: function setUploadEnabled(uploadEnabled) {\n      this.setProperty('uploadEnabled', uploadEnabled);\n    }\n  }, {\n    key: \"_renderEnabled\",\n    value: function _renderEnabled() {\n      _get(_getPrototypeOf(ImageField.prototype), \"_renderEnabled\", this).call(this);\n\n      this._updateUploadEnabled();\n    }\n  }, {\n    key: \"_renderUploadEnabled\",\n    value: function _renderUploadEnabled() {\n      this._updateUploadEnabled();\n    }\n  }, {\n    key: \"_updateUploadEnabled\",\n    value: function _updateUploadEnabled() {\n      var enabled = this.enabledComputed && this.uploadEnabled;\n      this.$fieldContainer.toggleClass('clickable', enabled);\n\n      if (enabled) {\n        if (!this._clickHandler) {\n          this._clickHandler = this._onClickUpload.bind(this);\n          this.$fieldContainer.on('click', this._clickHandler);\n        }\n\n        if (!this.fileInput) {\n          this.fileInput = scout.create('FileInput', {\n            parent: this,\n            acceptTypes: this.acceptTypes,\n            text: this.displayText,\n            enabled: this.enabledComputed,\n            maximumUploadSize: this.maximumUploadSize,\n            visible: !Device.get().supportsFile()\n          });\n          this.fileInput.render(this.$fieldContainer);\n          this.fileInput.on('change', this._onFileChange.bind(this));\n        }\n      } else {\n        this.$fieldContainer.off('click', this._clickHandler);\n        this._clickHandler = null;\n\n        if (this.fileInput) {\n          this.fileInput.destroy();\n          this.fileInput = null;\n        }\n      }\n    }\n    /**\n     * The browse() function triggers an artificial click event on the INPUT element,\n     * this would trigger our own click handler again. We prevent recursion by\n     * checking the click target.\n     */\n\n  }, {\n    key: \"_onClickUpload\",\n    value: function _onClickUpload(event) {\n      if ($(event.target).isOrHas(this.$field)) {\n        this.fileInput.browse();\n      }\n    }\n  }, {\n    key: \"_onFileChange\",\n    value: function _onFileChange(event) {\n      this.trigger('fileUpload', {\n        file: arrays.first(event.files)\n      });\n    }\n  }, {\n    key: \"_onImageLoad\",\n    value: function _onImageLoad(event) {\n      this._onIconUpdated();\n    }\n  }, {\n    key: \"_onImageError\",\n    value: function _onImageError(event) {\n      this._onIconUpdated();\n    }\n    /**\n     * This function is called whenever the icon has updated its $container. Since the $field\n     * variable from ImageField.js references the $container of the icon directly, we must update\n     * that variable now.\n     * <p>\n     * Override this method if a sub-class of ImageField.js needs to update its DOM too.\n     */\n\n  }, {\n    key: \"_onIconUpdated\",\n    value: function _onIconUpdated() {\n      scrollbars.update(this.$fieldContainer);\n      this.$field = this.icon.$container;\n    }\n  }]);\n\n  return ImageField;\n}(FormField);\n\nexport { ImageField as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/imagefield/ImageField.js"],"names":["arrays","Device","FileInput","FormField","HtmlComponent","ImageFieldLayout","scout","scrollbars","SingleLayout","$","ImageField","autoFit","scrollBarEnabled","uploadEnabled","acceptTypes","maximumUploadSize","DEFAULT_MAXIMUM_UPLOAD_SIZE","_clickHandler","model","resolveIconIds","icon","create","parent","iconDesc","imageUrl","prepend","on","_onImageLoad","bind","_onImageError","addContainer","$parent","addFieldContainer","makeDiv","htmlComp","install","$fieldContainer","session","setLayout","render","addLabel","addField","$container","addStatus","_renderScrollBarEnabled","_renderDropType","_renderImageUrl","_renderUploadEnabled","fileInput","destroy","event","dragAndDropHandler","_createDragAndDropHandler","setProperty","_setProperty","setIconDesc","hasImageUrl","toggleClass","update","setAutoFit","_updateInnerAlignment","_installScrollbars","_uninstallScrollbars","updateInnerAlignment","useHorizontalAlignment","useVerticalAlignment","_updateUploadEnabled","enabled","enabledComputed","_onClickUpload","text","displayText","visible","get","supportsFile","_onFileChange","off","target","isOrHas","$field","browse","trigger","file","first","files","_onIconUpdated"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,MAAR,EAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,SAAnC,EAA8CC,aAA9C,EAA6DC,gBAA7D,EAA+EC,KAA/E,EAAsFC,UAAtF,EAAkGC,YAAlG,QAAqH,gBAArH;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEqBC,U;;;;;AAEnB,wBAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,OAAL,GAAe,KAAf;AACA,UAAKC,gBAAL,GAAwB,KAAxB;AACA,UAAKC,aAAL,GAAqB,KAArB;AACA,UAAKC,WAAL,GAAmB,IAAnB;AACA,UAAKC,iBAAL,GAAyBb,SAAS,CAACc,2BAAnC;AAEA,UAAKC,aAAL,GAAqB,IAArB;AATY;AAUb;;;;0BAEKC,K,EAAO;AACX,4EAAYA,KAAZ;;AAEA,WAAKC,cAAL,CAAoB,CAAC,UAAD,CAApB;AACA,WAAKC,IAAL,GAAYd,KAAK,CAACe,MAAN,CAAa,MAAb,EAAqB;AAC/BC,QAAAA,MAAM,EAAE,IADuB;AAE/BC,QAAAA,QAAQ,EAAE,KAAKC,QAFgB;AAG/Bb,QAAAA,OAAO,EAAE,KAAKA,OAHiB;AAI/Bc,QAAAA,OAAO,EAAE;AAJsB,OAArB,CAAZ;AAMA,WAAKL,IAAL,CAAUM,EAAV,CAAa,MAAb,EAAqB,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAArB;AACA,WAAKR,IAAL,CAAUM,EAAV,CAAa,OAAb,EAAsB,KAAKG,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAAtB;AACD;;;8BAES;AACR,WAAKE,YAAL,CAAkB,KAAKC,OAAvB,EAAgC,aAAhC,EAA+C,IAAI1B,gBAAJ,CAAqB,IAArB,CAA/C;AACA,WAAK2B,iBAAL,CAAuB,KAAKD,OAAL,CAAaE,OAAb,EAAvB,EAFQ,CAIR;;AACA,UAAIC,QAAQ,GAAG9B,aAAa,CAAC+B,OAAd,CAAsB,KAAKC,eAA3B,EAA4C,KAAKC,OAAjD,CAAf;AACAH,MAAAA,QAAQ,CAACI,SAAT,CAAmB,IAAI9B,YAAJ,EAAnB;AACA,WAAKY,IAAL,CAAUmB,MAAV,CAAiB,KAAKH,eAAtB;AAEA,WAAKI,QAAL;AACA,WAAKC,QAAL,CAAc,KAAKrB,IAAL,CAAUsB,UAAxB;AACA,WAAKC,SAAL;AACD;;;wCAEmB;AAClB;;AACA,WAAKC,uBAAL;;AACA,WAAKC,eAAL;;AACA,WAAKC,eAAL;;AACA,WAAKC,oBAAL;AACD;;;8BAES;AACR;;AACA,WAAK9B,aAAL,GAAqB,IAArB;;AACA,UAAI,KAAK+B,SAAT,EAAoB;AAClB,aAAKA,SAAL,CAAeC,OAAf;AACA,aAAKD,SAAL,GAAiB,IAAjB;AACD;AACF;;;+CAE0BE,K,EAAO;AAChC,UAAI,KAAKC,kBAAT,EAA6B;AAC3B;AACD,OAH+B,CAIhC;;;AACA,WAAKA,kBAAL,GAA0B,KAAKC,yBAAL,EAA1B;AACA,WAAKD,kBAAL,CAAwBhB,OAAxB,CAAgC,KAAKC,eAArC;AACD;;;gCAEWZ,Q,EAAU;AACpB,WAAK6B,WAAL,CAAiB,UAAjB,EAA6B7B,QAA7B;AACD;;;iCAEYA,Q,EAAU;AACrB,WAAK8B,YAAL,CAAkB,UAAlB,EAA8B9B,QAA9B;;AACA,WAAKJ,IAAL,CAAUmC,WAAV,CAAsB/B,QAAtB;AACD;;;sCAEiB;AAChB,UAAIgC,WAAW,GAAG,CAAC,CAAC,KAAKhC,QAAzB;AACA,WAAKY,eAAL,CAAqBqB,WAArB,CAAiC,WAAjC,EAA8CD,WAA9C;AACA,WAAKd,UAAL,CAAgBe,WAAhB,CAA4B,WAA5B,EAAyCD,WAAzC;AACAjD,MAAAA,UAAU,CAACmD,MAAX,CAAkB,KAAKtB,eAAvB;AACD;;;+BAEUzB,O,EAAS;AAClB,WAAK0C,WAAL,CAAiB,SAAjB,EAA4B1C,OAA5B;AACD;;;gCAEWA,O,EAAS;AACnB,WAAK2C,YAAL,CAAkB,SAAlB,EAA6B3C,OAA7B;;AACA,WAAKS,IAAL,CAAUuC,UAAV,CAAqBhD,OAArB;AACD;;;qCAEgB;AACfJ,MAAAA,UAAU,CAACmD,MAAX,CAAkB,KAAKtB,eAAvB;AACD;;;8CAEyB;AACxB;AACA;AACA,WAAKwB,qBAAL;;AAEA,UAAI,KAAKhD,gBAAT,EAA2B;AACzB,aAAKiD,kBAAL;AACD,OAFD,MAEO;AACL,aAAKC,oBAAL;AACD;AACF;AAED;AACF;AACA;;;;qCACmB;AACf,aAAO,KAAK1B,eAAZ;AACD;;;sCAEiB;AAChB;;AACA,WAAKwB,qBAAL;AACD;;;2CAEsB;AACrB;;AACA,WAAKA,qBAAL;AACD;;;4CAEuB;AACtB;AACA,WAAKG,oBAAL,CAA0B;AACxBC,QAAAA,sBAAsB,EAAG,CAAC,KAAKpD,gBADP;AAExBqD,QAAAA,oBAAoB,EAAG,CAAC,KAAKrD;AAFL,OAA1B;AAID;;;qCAEgBC,a,EAAe;AAC9B,WAAKwC,WAAL,CAAiB,eAAjB,EAAkCxC,aAAlC;AACD;;;qCAEgB;AACf;;AACA,WAAKqD,oBAAL;AACD;;;2CAEsB;AACrB,WAAKA,oBAAL;AACD;;;2CAEsB;AACrB,UAAIC,OAAO,GAAG,KAAKC,eAAL,IAAwB,KAAKvD,aAA3C;AACA,WAAKuB,eAAL,CAAqBqB,WAArB,CAAiC,WAAjC,EAA8CU,OAA9C;;AACA,UAAIA,OAAJ,EAAa;AACX,YAAI,CAAC,KAAKlD,aAAV,EAAyB;AACvB,eAAKA,aAAL,GAAqB,KAAKoD,cAAL,CAAoBzC,IAApB,CAAyB,IAAzB,CAArB;AACA,eAAKQ,eAAL,CAAqBV,EAArB,CAAwB,OAAxB,EAAiC,KAAKT,aAAtC;AACD;;AACD,YAAI,CAAC,KAAK+B,SAAV,EAAqB;AACnB,eAAKA,SAAL,GAAiB1C,KAAK,CAACe,MAAN,CAAa,WAAb,EAA0B;AACzCC,YAAAA,MAAM,EAAE,IADiC;AAEzCR,YAAAA,WAAW,EAAE,KAAKA,WAFuB;AAGzCwD,YAAAA,IAAI,EAAE,KAAKC,WAH8B;AAIzCJ,YAAAA,OAAO,EAAE,KAAKC,eAJ2B;AAKzCrD,YAAAA,iBAAiB,EAAE,KAAKA,iBALiB;AAMzCyD,YAAAA,OAAO,EAAE,CAACvE,MAAM,CAACwE,GAAP,GAAaC,YAAb;AAN+B,WAA1B,CAAjB;AAQA,eAAK1B,SAAL,CAAeT,MAAf,CAAsB,KAAKH,eAA3B;AACA,eAAKY,SAAL,CAAetB,EAAf,CAAkB,QAAlB,EAA4B,KAAKiD,aAAL,CAAmB/C,IAAnB,CAAwB,IAAxB,CAA5B;AACD;AACF,OAjBD,MAiBO;AACL,aAAKQ,eAAL,CAAqBwC,GAArB,CAAyB,OAAzB,EAAkC,KAAK3D,aAAvC;AACA,aAAKA,aAAL,GAAqB,IAArB;;AACA,YAAI,KAAK+B,SAAT,EAAoB;AAClB,eAAKA,SAAL,CAAeC,OAAf;AACA,eAAKD,SAAL,GAAiB,IAAjB;AACD;AACF;AACF;AAED;AACF;AACA;AACA;AACA;;;;mCACiBE,K,EAAO;AACpB,UAAIzC,CAAC,CAACyC,KAAK,CAAC2B,MAAP,CAAD,CAAgBC,OAAhB,CAAwB,KAAKC,MAA7B,CAAJ,EAA0C;AACxC,aAAK/B,SAAL,CAAegC,MAAf;AACD;AACF;;;kCAEa9B,K,EAAO;AACnB,WAAK+B,OAAL,CAAa,YAAb,EAA2B;AACzBC,QAAAA,IAAI,EAAElF,MAAM,CAACmF,KAAP,CAAajC,KAAK,CAACkC,KAAnB;AADmB,OAA3B;AAGD;;;iCAEYlC,K,EAAO;AAClB,WAAKmC,cAAL;AACD;;;kCAEanC,K,EAAO;AACnB,WAAKmC,cAAL;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;qCACmB;AACf9E,MAAAA,UAAU,CAACmD,MAAX,CAAkB,KAAKtB,eAAvB;AACA,WAAK2C,MAAL,GAAc,KAAK3D,IAAL,CAAUsB,UAAxB;AACD;;;;EApNqCvC,S;;SAAnBO,U","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Device, FileInput, FormField, HtmlComponent, ImageFieldLayout, scout, scrollbars, SingleLayout} from '../../../index';\nimport $ from 'jquery';\n\nexport default class ImageField extends FormField {\n\n  constructor() {\n    super();\n\n    this.autoFit = false;\n    this.scrollBarEnabled = false;\n    this.uploadEnabled = false;\n    this.acceptTypes = null;\n    this.maximumUploadSize = FileInput.DEFAULT_MAXIMUM_UPLOAD_SIZE;\n\n    this._clickHandler = null;\n  }\n\n  _init(model) {\n    super._init(model);\n\n    this.resolveIconIds(['imageUrl']);\n    this.icon = scout.create('Icon', {\n      parent: this,\n      iconDesc: this.imageUrl,\n      autoFit: this.autoFit,\n      prepend: true\n    });\n    this.icon.on('load', this._onImageLoad.bind(this));\n    this.icon.on('error', this._onImageError.bind(this));\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'image-field', new ImageFieldLayout(this));\n    this.addFieldContainer(this.$parent.makeDiv());\n\n    // Complete the layout hierarchy between the image field and the image\n    var htmlComp = HtmlComponent.install(this.$fieldContainer, this.session);\n    htmlComp.setLayout(new SingleLayout());\n    this.icon.render(this.$fieldContainer);\n\n    this.addLabel();\n    this.addField(this.icon.$container);\n    this.addStatus();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderScrollBarEnabled();\n    this._renderDropType();\n    this._renderImageUrl();\n    this._renderUploadEnabled();\n  }\n\n  _remove() {\n    super._remove();\n    this._clickHandler = null;\n    if (this.fileInput) {\n      this.fileInput.destroy();\n      this.fileInput = null;\n    }\n  }\n\n  _installDragAndDropHandler(event) {\n    if (this.dragAndDropHandler) {\n      return;\n    }\n    // add drag and drop event listeners to field container, img field might be hidden (e.g. if no image has been set)\n    this.dragAndDropHandler = this._createDragAndDropHandler();\n    this.dragAndDropHandler.install(this.$fieldContainer);\n  }\n\n  setImageUrl(imageUrl) {\n    this.setProperty('imageUrl', imageUrl);\n  }\n\n  _setImageUrl(imageUrl) {\n    this._setProperty('imageUrl', imageUrl);\n    this.icon.setIconDesc(imageUrl);\n  }\n\n  _renderImageUrl() {\n    var hasImageUrl = !!this.imageUrl;\n    this.$fieldContainer.toggleClass('has-image', hasImageUrl);\n    this.$container.toggleClass('has-image', hasImageUrl);\n    scrollbars.update(this.$fieldContainer);\n  }\n\n  setAutoFit(autoFit) {\n    this.setProperty('autoFit', autoFit);\n  }\n\n  _setAutoFit(autoFit) {\n    this._setProperty('autoFit', autoFit);\n    this.icon.setAutoFit(autoFit);\n  }\n\n  _renderAutoFit() {\n    scrollbars.update(this.$fieldContainer);\n  }\n\n  _renderScrollBarEnabled() {\n    // Note: Inner alignment has to be updated _before_ installing the scrollbar, because the inner\n    // alignment uses absolute positioning, which confuses the scrollbar calculations.\n    this._updateInnerAlignment();\n\n    if (this.scrollBarEnabled) {\n      this._installScrollbars();\n    } else {\n      this._uninstallScrollbars();\n    }\n  }\n\n  /**\n   * @override\n   */\n  get$Scrollable() {\n    return this.$fieldContainer;\n  }\n\n  _renderGridData() {\n    super._renderGridData();\n    this._updateInnerAlignment();\n  }\n\n  _renderGridDataHints() {\n    super._renderGridDataHints();\n    this._updateInnerAlignment();\n  }\n\n  _updateInnerAlignment() {\n    // Enable inner alignment only when scrollbars are disabled\n    this.updateInnerAlignment({\n      useHorizontalAlignment: (!this.scrollBarEnabled),\n      useVerticalAlignment: (!this.scrollBarEnabled)\n    });\n  }\n\n  setUploadEnabled(uploadEnabled) {\n    this.setProperty('uploadEnabled', uploadEnabled);\n  }\n\n  _renderEnabled() {\n    super._renderEnabled();\n    this._updateUploadEnabled();\n  }\n\n  _renderUploadEnabled() {\n    this._updateUploadEnabled();\n  }\n\n  _updateUploadEnabled() {\n    var enabled = this.enabledComputed && this.uploadEnabled;\n    this.$fieldContainer.toggleClass('clickable', enabled);\n    if (enabled) {\n      if (!this._clickHandler) {\n        this._clickHandler = this._onClickUpload.bind(this);\n        this.$fieldContainer.on('click', this._clickHandler);\n      }\n      if (!this.fileInput) {\n        this.fileInput = scout.create('FileInput', {\n          parent: this,\n          acceptTypes: this.acceptTypes,\n          text: this.displayText,\n          enabled: this.enabledComputed,\n          maximumUploadSize: this.maximumUploadSize,\n          visible: !Device.get().supportsFile()\n        });\n        this.fileInput.render(this.$fieldContainer);\n        this.fileInput.on('change', this._onFileChange.bind(this));\n      }\n    } else {\n      this.$fieldContainer.off('click', this._clickHandler);\n      this._clickHandler = null;\n      if (this.fileInput) {\n        this.fileInput.destroy();\n        this.fileInput = null;\n      }\n    }\n  }\n\n  /**\n   * The browse() function triggers an artificial click event on the INPUT element,\n   * this would trigger our own click handler again. We prevent recursion by\n   * checking the click target.\n   */\n  _onClickUpload(event) {\n    if ($(event.target).isOrHas(this.$field)) {\n      this.fileInput.browse();\n    }\n  }\n\n  _onFileChange(event) {\n    this.trigger('fileUpload', {\n      file: arrays.first(event.files)\n    });\n  }\n\n  _onImageLoad(event) {\n    this._onIconUpdated();\n  }\n\n  _onImageError(event) {\n    this._onIconUpdated();\n  }\n\n  /**\n   * This function is called whenever the icon has updated its $container. Since the $field\n   * variable from ImageField.js references the $container of the icon directly, we must update\n   * that variable now.\n   * <p>\n   * Override this method if a sub-class of ImageField.js needs to update its DOM too.\n   */\n  _onIconUpdated() {\n    scrollbars.update(this.$fieldContainer);\n    this.$field = this.icon.$container;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}