{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { GroupBox, TabItemLayout } from '../../../index';\n\nvar TabItem = /*#__PURE__*/function (_GroupBox) {\n  _inherits(TabItem, _GroupBox);\n\n  var _super = _createSuper(TabItem);\n\n  function TabItem() {\n    var _this;\n\n    _classCallCheck(this, TabItem);\n\n    _this = _super.call(this);\n    _this.marked = false;\n    return _this;\n  }\n\n  _createClass(TabItem, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(TabItem.prototype), \"_init\", this).call(this, model);\n\n      this._setMenusVisible(this.menusVisible);\n    }\n  }, {\n    key: \"_createLayout\",\n    value: function _createLayout() {\n      return new TabItemLayout(this);\n    }\n    /**\n     * @override GroupBox.js\n     *\n     * handled by Tab.js\n     */\n\n  }, {\n    key: \"_computeTitleVisible\",\n    value: function _computeTitleVisible(labelVisible) {\n      return false;\n    }\n    /**\n     * @override GroupBox.js\n     *\n     * handled by Tab.js\n     */\n\n  }, {\n    key: \"addStatus\",\n    value: function addStatus() {// void\n    }\n    /**\n     * @override GroupBox.js\n     *\n     * handled by Tab.js\n     */\n\n  }, {\n    key: \"_computeStatusVisible\",\n    value: function _computeStatusVisible() {\n      return false;\n    }\n  }, {\n    key: \"setMarked\",\n    value: function setMarked(marked) {\n      this.setProperty('marked', marked);\n    }\n  }, {\n    key: \"_setMenusVisible\",\n    value: function _setMenusVisible() {\n      // Always invisible because menus are displayed in menu bar and not with status icon\n      // Actually not needed at the moment because only value fields have menus (at least at the java model).\n      // But actually we should change this so that menus are possible for every form field\n      // TODO [7.0] cgu: remove this comment if java model supports form field menus\n      this._setProperty('menusVisible', false);\n    }\n    /**\n     * @override FormField.js\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (this.parent.selectedTab !== this) {\n        this.parent.setSelectedTab(this);\n      } // ensure the focus is on the tab\n\n\n      this.parent.focusTabItem(this);\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      return this.parent.isTabItemFocused(this);\n    }\n  }]);\n\n  return TabItem;\n}(GroupBox);\n\nexport { TabItem as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/tabbox/TabItem.js"],"names":["GroupBox","TabItemLayout","TabItem","marked","model","_setMenusVisible","menusVisible","labelVisible","setProperty","_setProperty","parent","selectedTab","setSelectedTab","focusTabItem","isTabItemFocused"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,QAAR,EAAkBC,aAAlB,QAAsC,gBAAtC;;IAEqBC,O;;;;;AAEnB,qBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,MAAL,GAAc,KAAd;AAFY;AAGb;;;;0BAEKC,K,EAAO;AACX,yEAAYA,KAAZ;;AACA,WAAKC,gBAAL,CAAsB,KAAKC,YAA3B;AACD;;;oCAEe;AACd,aAAO,IAAIL,aAAJ,CAAkB,IAAlB,CAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;;yCACuBM,Y,EAAc;AACjC,aAAO,KAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;;gCACc,CACV;AACD;AAED;AACF;AACA;AACA;AACA;;;;4CAC0B;AACtB,aAAO,KAAP;AACD;;;8BAESJ,M,EAAQ;AAChB,WAAKK,WAAL,CAAiB,QAAjB,EAA2BL,MAA3B;AACD;;;uCAEkB;AACjB;AACA;AACA;AACA;AACA,WAAKM,YAAL,CAAkB,cAAlB,EAAkC,KAAlC;AACD;AAED;AACF;AACA;;;;4BACU;AACN,UAAI,KAAKC,MAAL,CAAYC,WAAZ,KAA4B,IAAhC,EAAsC;AACpC,aAAKD,MAAL,CAAYE,cAAZ,CAA2B,IAA3B;AACD,OAHK,CAIN;;;AACA,WAAKF,MAAL,CAAYG,YAAZ,CAAyB,IAAzB;AACD;;;gCAEW;AACV,aAAO,KAAKH,MAAL,CAAYI,gBAAZ,CAA6B,IAA7B,CAAP;AACD;;;;EApEkCd,Q;;SAAhBE,O","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {GroupBox, TabItemLayout} from '../../../index';\n\nexport default class TabItem extends GroupBox {\n\n  constructor() {\n    super();\n    this.marked = false;\n  }\n\n  _init(model) {\n    super._init(model);\n    this._setMenusVisible(this.menusVisible);\n  }\n\n  _createLayout() {\n    return new TabItemLayout(this);\n  }\n\n  /**\n   * @override GroupBox.js\n   *\n   * handled by Tab.js\n   */\n  _computeTitleVisible(labelVisible) {\n    return false;\n  }\n\n  /**\n   * @override GroupBox.js\n   *\n   * handled by Tab.js\n   */\n  addStatus() {\n    // void\n  }\n\n  /**\n   * @override GroupBox.js\n   *\n   * handled by Tab.js\n   */\n  _computeStatusVisible() {\n    return false;\n  }\n\n  setMarked(marked) {\n    this.setProperty('marked', marked);\n  }\n\n  _setMenusVisible() {\n    // Always invisible because menus are displayed in menu bar and not with status icon\n    // Actually not needed at the moment because only value fields have menus (at least at the java model).\n    // But actually we should change this so that menus are possible for every form field\n    // TODO [7.0] cgu: remove this comment if java model supports form field menus\n    this._setProperty('menusVisible', false);\n  }\n\n  /**\n   * @override FormField.js\n   */\n  focus() {\n    if (this.parent.selectedTab !== this) {\n      this.parent.setSelectedTab(this);\n    }\n    // ensure the focus is on the tab\n    this.parent.focusTabItem(this);\n  }\n\n  isFocused() {\n    return this.parent.isTabItemFocused(this);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}