{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { ButtonKeyStroke, ButtonLayout, Device, DoubleClickSupport, FormField, icons, KeyStrokeContext, LoadingSupport, scout, styles, tooltips } from '../../../index';\n\nvar Button = /*#__PURE__*/function (_FormField) {\n  _inherits(Button, _FormField);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    _this = _super.call(this);\n    _this.adaptedBy = null;\n    _this.defaultButton = false;\n    _this.displayStyle = Button.DisplayStyle.DEFAULT;\n    _this.gridDataHints.fillHorizontal = false;\n    _this.iconId = null;\n    _this.keyStroke = null;\n    _this.keyStrokeScope = null;\n    _this.processButton = true;\n    _this.selected = false;\n    _this.statusVisible = false;\n    _this.systemType = Button.SystemType.NONE;\n    _this.preventDoubleClick = false;\n    _this.stackable = true;\n    _this.shrinkable = false;\n    _this.$buttonLabel = null;\n    _this.buttonKeyStroke = new ButtonKeyStroke(_assertThisInitialized(_this), null);\n    _this._doubleClickSupport = new DoubleClickSupport();\n\n    _this._addCloneProperties(['defaultButton', 'displayStyle', 'iconId', 'keyStroke', 'processButton', 'selected', 'systemType', 'preventDoubleClick', 'stackable', 'shrinkable']);\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(Button.prototype), \"_init\", this).call(this, model);\n\n      this.resolveIconIds(['iconId']);\n\n      this._setKeyStroke(this.keyStroke);\n\n      this._setKeyStrokeScope(this.keyStrokeScope);\n\n      this._setInheritAccessibility(this.inheritAccessibility && !this._isIgnoreAccessibilityFlags());\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_initKeyStrokeContext\",\n    value: function _initKeyStrokeContext() {\n      _get(_getPrototypeOf(Button.prototype), \"_initKeyStrokeContext\", this).call(this);\n\n      this._initDefaultKeyStrokes();\n\n      this.formKeyStrokeContext = new KeyStrokeContext();\n      this.formKeyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n      this.formKeyStrokeContext.registerKeyStroke(this.buttonKeyStroke);\n\n      this.formKeyStrokeContext.$bindTarget = function () {\n        if (this.keyStrokeScope) {\n          return this.keyStrokeScope.$container;\n        } // use form if available\n\n\n        var form = this.getForm();\n\n        if (form) {\n          return form.$container;\n        } // use desktop otherwise\n\n\n        return this.session.desktop.$container;\n      }.bind(this);\n    }\n  }, {\n    key: \"_isIgnoreAccessibilityFlags\",\n    value: function _isIgnoreAccessibilityFlags() {\n      return this.systemType === Button.SystemType.CANCEL || this.systemType === Button.SystemType.CLOSE;\n    }\n  }, {\n    key: \"_initDefaultKeyStrokes\",\n    value: function _initDefaultKeyStrokes() {\n      this.keyStrokeContext.registerKeyStroke([new ButtonKeyStroke(this, 'ENTER'), new ButtonKeyStroke(this, 'SPACE')]);\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_createLoadingSupport\",\n    value: function _createLoadingSupport() {\n      return new LoadingSupport({\n        widget: this,\n        $container: function () {\n          return this.$field;\n        }.bind(this)\n      });\n    }\n    /**\n     * The button form-field has no label and no status. Additionally it also has no container.\n     * Container and field are the same thing.\n     */\n\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      var _this2 = this;\n\n      var $button;\n\n      if (this.displayStyle === Button.DisplayStyle.LINK) {\n        // Render as link-button/ menu-item.\n        // This is a bit weird: the model defines a button, but in the UI it behaves like a menu-item.\n        // Probably it would be more reasonable to change the configuration (which would lead to additional\n        // effort required to change an existing application).\n        $button = this.$parent.makeDiv('link-button'); // Separate $link element to have a smaller focus border\n\n        this.$link = $button.appendDiv('menu-item link');\n        this.$buttonLabel = this.$link.appendSpan('button-label text');\n      } else {\n        // render as button\n        $button = this.$parent.makeElement('<button>').addClass('button');\n        this.$buttonLabel = $button.appendSpan('button-label');\n\n        if (Device.get().supportsOnlyTouch()) {\n          $button.setTabbable(false);\n        }\n      }\n\n      this.addContainer(this.$parent, 'button-field', new ButtonLayout(this));\n      this.addField($button); // TODO [10.0] cgu: should we add a label? -> would make it possible to control the space left of the button using labelVisible, like it is possible with checkboxes\n\n      this.addStatus();\n      $button.on('mousedown', function (event) {\n        return _this2._doubleClickSupport.mousedown(event);\n      }).on('click', this._onClick.bind(this)).unfocusable();\n\n      if (this.menus && this.menus.length > 0) {\n        this.menus.forEach(function (menu) {\n          this.keyStrokeContext.registerKeyStroke(menu);\n        }, this);\n\n        if (this.label || !this.iconId) {\n          // no indicator when _only_ the icon is visible\n          var icon = icons.parseIconId(Button.SUBMENU_ICON);\n          this.$submenuIcon = (this.$link || $button).appendSpan('submenu-icon').text(icon.iconCharacter);\n        }\n      }\n\n      this.session.keyStrokeManager.installKeyStrokeContext(this.formKeyStrokeContext);\n      tooltips.installForEllipsis(this.$buttonLabel, {\n        parent: this\n      });\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      _get(_getPrototypeOf(Button.prototype), \"_remove\", this).call(this);\n\n      tooltips.uninstall(this.$buttonLabel);\n      this.session.keyStrokeManager.uninstallKeyStrokeContext(this.formKeyStrokeContext);\n      this.$submenuIcon = null;\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(Button.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderIconId();\n\n      this._renderSelected();\n\n      this._renderDefaultButton();\n    }\n  }, {\n    key: \"_renderForegroundColor\",\n    value: function _renderForegroundColor() {\n      _get(_getPrototypeOf(Button.prototype), \"_renderForegroundColor\", this).call(this); // Color button label as well, otherwise the color would not be visible because button label has already a color set using css\n\n\n      styles.legacyForegroundColor(this, this.$buttonLabel);\n      styles.legacyForegroundColor(this, this.get$Icon());\n      styles.legacyForegroundColor(this, this.$submenuIcon);\n    }\n  }, {\n    key: \"_renderBackgroundColor\",\n    value: function _renderBackgroundColor() {\n      _get(_getPrototypeOf(Button.prototype), \"_renderBackgroundColor\", this).call(this);\n\n      styles.legacyBackgroundColor(this, this.$fieldContainer);\n    }\n  }, {\n    key: \"_renderFont\",\n    value: function _renderFont() {\n      _get(_getPrototypeOf(Button.prototype), \"_renderFont\", this).call(this);\n\n      styles.legacyFont(this, this.$buttonLabel); // Changing the font may enlarge or shrink the field (e.g. set the style to bold makes the text bigger) -> invalidate layout\n\n      this.invalidateLayoutTree();\n    }\n    /**\n     * @returns {Boolean}\n     *          <code>true</code> if the action has been performed or <code>false</code> if it\n     *          has not been performed (e.g. when the button is not enabled).\n     */\n\n  }, {\n    key: \"doAction\",\n    value: function doAction() {\n      if (!this.enabledComputed || !this.visible) {\n        return false;\n      }\n\n      if (this.displayStyle === Button.DisplayStyle.TOGGLE) {\n        this.setSelected(!this.selected);\n      } else if (this.menus.length > 0) {\n        this.togglePopup();\n      }\n\n      this._doAction();\n\n      return true;\n    }\n  }, {\n    key: \"_doAction\",\n    value: function _doAction() {\n      this.trigger('click');\n    }\n  }, {\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      if (this.popup) {\n        this.popup.close();\n      } else {\n        this.popup = this._openPopup();\n        this.popup.one('destroy', function (event) {\n          this.popup = null;\n        }.bind(this));\n      }\n    }\n  }, {\n    key: \"_openPopup\",\n    value: function _openPopup() {\n      var popup = scout.create('ContextMenuPopup', {\n        parent: this,\n        menuItems: this.menus,\n        cloneMenuItems: false,\n        closeOnAnchorMouseDown: false,\n        $anchor: this.$field\n      });\n      popup.open();\n      return popup;\n    }\n  }, {\n    key: \"_doActionTogglesSubMenu\",\n    value: function _doActionTogglesSubMenu() {\n      return false;\n    }\n  }, {\n    key: \"setDefaultButton\",\n    value: function setDefaultButton(defaultButton) {\n      this.setProperty('defaultButton', defaultButton);\n    }\n  }, {\n    key: \"_renderDefaultButton\",\n    value: function _renderDefaultButton() {\n      this.$field.toggleClass('default', this.defaultButton);\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_renderEnabled\",\n    value: function _renderEnabled() {\n      _get(_getPrototypeOf(Button.prototype), \"_renderEnabled\", this).call(this);\n\n      if (this.displayStyle === Button.DisplayStyle.LINK) {\n        this.$link.setEnabled(this.enabledComputed);\n        this.$field.setTabbable(this.enabledComputed && !Device.get().supportsOnlyTouch());\n      }\n    }\n  }, {\n    key: \"setSelected\",\n    value: function setSelected(selected) {\n      this.setProperty('selected', selected);\n    }\n  }, {\n    key: \"_renderSelected\",\n    value: function _renderSelected() {\n      if (this.displayStyle === Button.DisplayStyle.TOGGLE) {\n        this.$field.toggleClass('selected', this.selected);\n      }\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_renderLabel\",\n    value: function _renderLabel() {\n      this.$buttonLabel.contentOrNbsp(this.labelHtmlEnabled, this.label, 'empty');\n\n      this._updateLabelAndIconStyle(); // Invalidate layout because button may now be longer or shorter\n\n\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"setIconId\",\n    value: function setIconId(iconId) {\n      this.setProperty('iconId', iconId);\n    }\n    /**\n     * Adds an image or font-based icon to the button by adding either an IMG or SPAN element to the button.\n     */\n\n  }, {\n    key: \"_renderIconId\",\n    value: function _renderIconId() {\n      var $iconTarget = this.$link || this.$fieldContainer;\n      $iconTarget.icon(this.iconId);\n      var $icon = $iconTarget.data('$icon');\n\n      if ($icon) {\n        // <img>s are loaded asynchronously. The real image size is not known until the image is loaded.\n        // We add a listener to revalidate the button layout after this has happened. The 'loading' and\n        // 'broken' classes ensure the incomplete icon is not taking any space.\n        $icon.removeClass('loading broken');\n\n        if ($icon.is('img')) {\n          $icon.addClass('loading');\n          $icon.off('load error').on('load', updateButtonLayoutAfterImageLoaded.bind(this, true)).on('error', updateButtonLayoutAfterImageLoaded.bind(this, false));\n        }\n\n        if (!this.rendered) {\n          styles.legacyForegroundColor(this, $icon);\n        }\n      }\n\n      this._updateLabelAndIconStyle(); // Invalidate layout because button may now be longer or shorter\n\n\n      this.invalidateLayoutTree(); // ----- Helper functions -----\n\n      function updateButtonLayoutAfterImageLoaded(success) {\n        $icon.removeClass('loading');\n        $icon.toggleClass('broken', !success);\n        this.invalidateLayoutTree();\n      }\n    }\n  }, {\n    key: \"get$Icon\",\n    value: function get$Icon() {\n      var $iconTarget = this.$link || this.$fieldContainer;\n      return $iconTarget.children('.icon');\n    }\n  }, {\n    key: \"_updateLabelAndIconStyle\",\n    value: function _updateLabelAndIconStyle() {\n      var hasText = !!this.label;\n      this.$buttonLabel.setVisible(hasText || !this.iconId);\n      this.get$Icon().toggleClass('with-label', hasText);\n    }\n  }, {\n    key: \"setKeyStroke\",\n    value: function setKeyStroke(keyStroke) {\n      this.setProperty('keyStroke', keyStroke);\n    }\n  }, {\n    key: \"_setKeyStroke\",\n    value: function _setKeyStroke(keyStroke) {\n      this._setProperty('keyStroke', keyStroke);\n\n      this.buttonKeyStroke.parseAndSetKeyStroke(this.keyStroke);\n    }\n  }, {\n    key: \"_setKeyStrokeScope\",\n    value: function _setKeyStrokeScope(keyStrokeScope) {\n      if (typeof keyStrokeScope === 'string') {\n        keyStrokeScope = this._resolveKeyStrokeScope(keyStrokeScope);\n\n        if (!keyStrokeScope) {\n          // Will be resolved later\n          return;\n        }\n      }\n\n      this._setProperty('keyStrokeScope', keyStrokeScope);\n    }\n  }, {\n    key: \"_resolveKeyStrokeScope\",\n    value: function _resolveKeyStrokeScope(keyStrokeScope) {\n      // Basically, the desktop could be used to find the scope, but that would mean to traverse the whole widget tree.\n      // To make it faster the form is used instead but that limits the resolving to the form.\n      // This should be acceptable because the scope can still be set explicitly without using an id.\n      var form = this.findNonWrappedForm();\n\n      if (!form) {\n        throw new Error('Could not resolve keyStrokeScope ' + keyStrokeScope + ' because no form has been found.');\n      }\n\n      if (!form.initialized) {\n        // KeyStrokeScope is another widget (form or formfield) which may not be initialized yet.\n        // The widget must be on the same form as the button, so once that form is initialized the keyStrokeScope has to be available\n        form.one('init', this._setKeyStrokeScope.bind(this, keyStrokeScope));\n        return;\n      }\n\n      keyStrokeScope = form.widget(keyStrokeScope);\n\n      if (!keyStrokeScope) {\n        throw new Error('Could not resolve keyStrokeScope ' + keyStrokeScope + ' using form ' + form);\n      }\n\n      return keyStrokeScope;\n    }\n  }, {\n    key: \"_onClick\",\n    value: function _onClick(event) {\n      if (event.which !== 1) {\n        return; // Other button than left mouse button --> nop\n      }\n\n      if (this.preventDoubleClick && this._doubleClickSupport.doubleClicked()) {\n        return; // More than one consecutive click --> nop\n      }\n\n      if (this.enabledComputed) {\n        this.doAction();\n      }\n    }\n  }, {\n    key: \"setStackable\",\n    value: function setStackable(stackable) {\n      this.setProperty('stackable', stackable);\n    }\n  }, {\n    key: \"setShrinkable\",\n    value: function setShrinkable(shrinkable) {\n      this.setProperty('shrinkable', shrinkable);\n    }\n  }, {\n    key: \"setPreventDoubleClick\",\n    value: function setPreventDoubleClick(preventDoubleClick) {\n      this.setProperty('preventDoubleClick', preventDoubleClick);\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"getFocusableElement\",\n    value: function getFocusableElement() {\n      if (this.adaptedBy) {\n        return this.adaptedBy.getFocusableElement();\n      }\n\n      return _get(_getPrototypeOf(Button.prototype), \"getFocusableElement\", this).call(this);\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"isFocusable\",\n    value: function isFocusable() {\n      if (this.adaptedBy) {\n        return this.adaptedBy.isFocusable();\n      }\n\n      return _get(_getPrototypeOf(Button.prototype), \"isFocusable\", this).call(this);\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (this.adaptedBy) {\n        return this.adaptedBy.focus();\n      }\n\n      return _get(_getPrototypeOf(Button.prototype), \"focus\", this).call(this);\n    }\n  }]);\n\n  return Button;\n}(FormField);\n\n_defineProperty(Button, \"SystemType\", {\n  NONE: 0,\n  CANCEL: 1,\n  CLOSE: 2,\n  OK: 3,\n  RESET: 4,\n  SAVE: 5,\n  SAVE_WITHOUT_MARKER_CHANGE: 6\n});\n\n_defineProperty(Button, \"DisplayStyle\", {\n  DEFAULT: 0,\n  TOGGLE: 1,\n  RADIO: 2,\n  LINK: 3\n});\n\n_defineProperty(Button, \"SUBMENU_ICON\", icons.ANGLE_DOWN_BOLD);\n\nexport { Button as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/button/Button.js"],"names":["ButtonKeyStroke","ButtonLayout","Device","DoubleClickSupport","FormField","icons","KeyStrokeContext","LoadingSupport","scout","styles","tooltips","Button","adaptedBy","defaultButton","displayStyle","DisplayStyle","DEFAULT","gridDataHints","fillHorizontal","iconId","keyStroke","keyStrokeScope","processButton","selected","statusVisible","systemType","SystemType","NONE","preventDoubleClick","stackable","shrinkable","$buttonLabel","buttonKeyStroke","_doubleClickSupport","_addCloneProperties","model","resolveIconIds","_setKeyStroke","_setKeyStrokeScope","_setInheritAccessibility","inheritAccessibility","_isIgnoreAccessibilityFlags","_initDefaultKeyStrokes","formKeyStrokeContext","invokeAcceptInputOnActiveValueField","registerKeyStroke","$bindTarget","$container","form","getForm","session","desktop","bind","CANCEL","CLOSE","keyStrokeContext","widget","$field","$button","LINK","$parent","makeDiv","$link","appendDiv","appendSpan","makeElement","addClass","get","supportsOnlyTouch","setTabbable","addContainer","addField","addStatus","on","event","mousedown","_onClick","unfocusable","menus","length","forEach","menu","label","icon","parseIconId","SUBMENU_ICON","$submenuIcon","text","iconCharacter","keyStrokeManager","installKeyStrokeContext","installForEllipsis","parent","uninstall","uninstallKeyStrokeContext","_renderIconId","_renderSelected","_renderDefaultButton","legacyForegroundColor","get$Icon","legacyBackgroundColor","$fieldContainer","legacyFont","invalidateLayoutTree","enabledComputed","visible","TOGGLE","setSelected","togglePopup","_doAction","trigger","popup","close","_openPopup","one","create","menuItems","cloneMenuItems","closeOnAnchorMouseDown","$anchor","open","setProperty","toggleClass","setEnabled","contentOrNbsp","labelHtmlEnabled","_updateLabelAndIconStyle","$iconTarget","$icon","data","removeClass","is","off","updateButtonLayoutAfterImageLoaded","rendered","success","children","hasText","setVisible","_setProperty","parseAndSetKeyStroke","_resolveKeyStrokeScope","findNonWrappedForm","Error","initialized","which","doubleClicked","doAction","getFocusableElement","isFocusable","focus","OK","RESET","SAVE","SAVE_WITHOUT_MARKER_CHANGE","RADIO","ANGLE_DOWN_BOLD"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {ButtonKeyStroke, ButtonLayout, Device, DoubleClickSupport, FormField, icons, KeyStrokeContext, LoadingSupport, scout, styles, tooltips} from '../../../index';\n\nexport default class Button extends FormField {\n\n  constructor() {\n    super();\n\n    this.adaptedBy = null;\n    this.defaultButton = false;\n    this.displayStyle = Button.DisplayStyle.DEFAULT;\n    this.gridDataHints.fillHorizontal = false;\n    this.iconId = null;\n    this.keyStroke = null;\n    this.keyStrokeScope = null;\n    this.processButton = true;\n    this.selected = false;\n    this.statusVisible = false;\n    this.systemType = Button.SystemType.NONE;\n    this.preventDoubleClick = false;\n    this.stackable = true;\n    this.shrinkable = false;\n\n    this.$buttonLabel = null;\n    this.buttonKeyStroke = new ButtonKeyStroke(this, null);\n    this._doubleClickSupport = new DoubleClickSupport();\n    this._addCloneProperties(['defaultButton', 'displayStyle', 'iconId', 'keyStroke', 'processButton', 'selected', 'systemType', 'preventDoubleClick', 'stackable', 'shrinkable']);\n  }\n\n  static SystemType = {\n    NONE: 0,\n    CANCEL: 1,\n    CLOSE: 2,\n    OK: 3,\n    RESET: 4,\n    SAVE: 5,\n    SAVE_WITHOUT_MARKER_CHANGE: 6\n  };\n\n  static DisplayStyle = {\n    DEFAULT: 0,\n    TOGGLE: 1,\n    RADIO: 2,\n    LINK: 3\n  };\n\n  static SUBMENU_ICON = icons.ANGLE_DOWN_BOLD;\n\n  _init(model) {\n    super._init(model);\n    this.resolveIconIds(['iconId']);\n    this._setKeyStroke(this.keyStroke);\n    this._setKeyStrokeScope(this.keyStrokeScope);\n    this._setInheritAccessibility(this.inheritAccessibility && !this._isIgnoreAccessibilityFlags());\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    this._initDefaultKeyStrokes();\n\n    this.formKeyStrokeContext = new KeyStrokeContext();\n    this.formKeyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n    this.formKeyStrokeContext.registerKeyStroke(this.buttonKeyStroke);\n    this.formKeyStrokeContext.$bindTarget = function() {\n      if (this.keyStrokeScope) {\n        return this.keyStrokeScope.$container;\n      }\n      // use form if available\n      var form = this.getForm();\n      if (form) {\n        return form.$container;\n      }\n      // use desktop otherwise\n      return this.session.desktop.$container;\n    }.bind(this);\n  }\n\n  _isIgnoreAccessibilityFlags() {\n    return this.systemType === Button.SystemType.CANCEL || this.systemType === Button.SystemType.CLOSE;\n  }\n\n  _initDefaultKeyStrokes() {\n    this.keyStrokeContext.registerKeyStroke([\n      new ButtonKeyStroke(this, 'ENTER'),\n      new ButtonKeyStroke(this, 'SPACE')\n    ]);\n  }\n\n  /**\n   * @override\n   */\n  _createLoadingSupport() {\n    return new LoadingSupport({\n      widget: this,\n      $container: function() {\n        return this.$field;\n      }.bind(this)\n    });\n  }\n\n  /**\n   * The button form-field has no label and no status. Additionally it also has no container.\n   * Container and field are the same thing.\n   */\n  _render() {\n    var $button;\n    if (this.displayStyle === Button.DisplayStyle.LINK) {\n      // Render as link-button/ menu-item.\n      // This is a bit weird: the model defines a button, but in the UI it behaves like a menu-item.\n      // Probably it would be more reasonable to change the configuration (which would lead to additional\n      // effort required to change an existing application).\n      $button = this.$parent.makeDiv('link-button');\n      // Separate $link element to have a smaller focus border\n      this.$link = $button.appendDiv('menu-item link');\n      this.$buttonLabel = this.$link.appendSpan('button-label text');\n    } else {\n      // render as button\n      $button = this.$parent.makeElement('<button>')\n        .addClass('button');\n      this.$buttonLabel = $button.appendSpan('button-label');\n\n      if (Device.get().supportsOnlyTouch()) {\n        $button.setTabbable(false);\n      }\n    }\n    this.addContainer(this.$parent, 'button-field', new ButtonLayout(this));\n    this.addField($button);\n    // TODO [10.0] cgu: should we add a label? -> would make it possible to control the space left of the button using labelVisible, like it is possible with checkboxes\n    this.addStatus();\n\n    $button\n      .on('mousedown', event => this._doubleClickSupport.mousedown(event))\n      .on('click', this._onClick.bind(this))\n      .unfocusable();\n\n    if (this.menus && this.menus.length > 0) {\n      this.menus.forEach(function(menu) {\n        this.keyStrokeContext.registerKeyStroke(menu);\n      }, this);\n      if (this.label || !this.iconId) { // no indicator when _only_ the icon is visible\n        var icon = icons.parseIconId(Button.SUBMENU_ICON);\n        this.$submenuIcon = (this.$link || $button)\n          .appendSpan('submenu-icon')\n          .text(icon.iconCharacter);\n      }\n    }\n    this.session.keyStrokeManager.installKeyStrokeContext(this.formKeyStrokeContext);\n\n    tooltips.installForEllipsis(this.$buttonLabel, {\n      parent: this\n    });\n  }\n\n  _remove() {\n    super._remove();\n    tooltips.uninstall(this.$buttonLabel);\n    this.session.keyStrokeManager.uninstallKeyStrokeContext(this.formKeyStrokeContext);\n    this.$submenuIcon = null;\n  }\n\n  /**\n   * @override\n   */\n  _renderProperties() {\n    super._renderProperties();\n    this._renderIconId();\n    this._renderSelected();\n    this._renderDefaultButton();\n  }\n\n  _renderForegroundColor() {\n    super._renderForegroundColor();\n    // Color button label as well, otherwise the color would not be visible because button label has already a color set using css\n    styles.legacyForegroundColor(this, this.$buttonLabel);\n    styles.legacyForegroundColor(this, this.get$Icon());\n    styles.legacyForegroundColor(this, this.$submenuIcon);\n  }\n\n  _renderBackgroundColor() {\n    super._renderBackgroundColor();\n    styles.legacyBackgroundColor(this, this.$fieldContainer);\n  }\n\n  _renderFont() {\n    super._renderFont();\n    styles.legacyFont(this, this.$buttonLabel);\n    // Changing the font may enlarge or shrink the field (e.g. set the style to bold makes the text bigger) -> invalidate layout\n    this.invalidateLayoutTree();\n  }\n\n  /**\n   * @returns {Boolean}\n   *          <code>true</code> if the action has been performed or <code>false</code> if it\n   *          has not been performed (e.g. when the button is not enabled).\n   */\n  doAction() {\n    if (!this.enabledComputed || !this.visible) {\n      return false;\n    }\n\n    if (this.displayStyle === Button.DisplayStyle.TOGGLE) {\n      this.setSelected(!this.selected);\n    } else if (this.menus.length > 0) {\n      this.togglePopup();\n    }\n    this._doAction();\n    return true;\n  }\n\n  _doAction() {\n    this.trigger('click');\n  }\n\n  togglePopup() {\n    if (this.popup) {\n      this.popup.close();\n    } else {\n      this.popup = this._openPopup();\n      this.popup.one('destroy', function(event) {\n        this.popup = null;\n      }.bind(this));\n    }\n  }\n\n  _openPopup() {\n    var popup = scout.create('ContextMenuPopup', {\n      parent: this,\n      menuItems: this.menus,\n      cloneMenuItems: false,\n      closeOnAnchorMouseDown: false,\n      $anchor: this.$field\n    });\n    popup.open();\n    return popup;\n  }\n\n  _doActionTogglesSubMenu() {\n    return false;\n  }\n\n  setDefaultButton(defaultButton) {\n    this.setProperty('defaultButton', defaultButton);\n  }\n\n  _renderDefaultButton() {\n    this.$field.toggleClass('default', this.defaultButton);\n  }\n\n  /**\n   * @override\n   */\n  _renderEnabled() {\n    super._renderEnabled();\n    if (this.displayStyle === Button.DisplayStyle.LINK) {\n      this.$link.setEnabled(this.enabledComputed);\n      this.$field.setTabbable(this.enabledComputed && !Device.get().supportsOnlyTouch());\n    }\n  }\n\n  setSelected(selected) {\n    this.setProperty('selected', selected);\n  }\n\n  _renderSelected() {\n    if (this.displayStyle === Button.DisplayStyle.TOGGLE) {\n      this.$field.toggleClass('selected', this.selected);\n    }\n  }\n\n  /**\n   * @override\n   */\n  _renderLabel() {\n    this.$buttonLabel.contentOrNbsp(this.labelHtmlEnabled, this.label, 'empty');\n    this._updateLabelAndIconStyle();\n\n    // Invalidate layout because button may now be longer or shorter\n    this.invalidateLayoutTree();\n  }\n\n  setIconId(iconId) {\n    this.setProperty('iconId', iconId);\n  }\n\n  /**\n   * Adds an image or font-based icon to the button by adding either an IMG or SPAN element to the button.\n   */\n  _renderIconId() {\n    var $iconTarget = this.$link || this.$fieldContainer;\n    $iconTarget.icon(this.iconId);\n    var $icon = $iconTarget.data('$icon');\n    if ($icon) {\n      // <img>s are loaded asynchronously. The real image size is not known until the image is loaded.\n      // We add a listener to revalidate the button layout after this has happened. The 'loading' and\n      // 'broken' classes ensure the incomplete icon is not taking any space.\n      $icon.removeClass('loading broken');\n      if ($icon.is('img')) {\n        $icon.addClass('loading');\n        $icon\n          .off('load error')\n          .on('load', updateButtonLayoutAfterImageLoaded.bind(this, true))\n          .on('error', updateButtonLayoutAfterImageLoaded.bind(this, false));\n      }\n      if (!this.rendered) {\n        styles.legacyForegroundColor(this, $icon);\n      }\n    }\n\n    this._updateLabelAndIconStyle();\n    // Invalidate layout because button may now be longer or shorter\n    this.invalidateLayoutTree();\n\n    // ----- Helper functions -----\n\n    function updateButtonLayoutAfterImageLoaded(success) {\n      $icon.removeClass('loading');\n      $icon.toggleClass('broken', !success);\n      this.invalidateLayoutTree();\n    }\n  }\n\n  get$Icon() {\n    var $iconTarget = this.$link || this.$fieldContainer;\n    return $iconTarget.children('.icon');\n  }\n\n  _updateLabelAndIconStyle() {\n    var hasText = !!this.label;\n    this.$buttonLabel.setVisible(hasText || !this.iconId);\n    this.get$Icon().toggleClass('with-label', hasText);\n  }\n\n  setKeyStroke(keyStroke) {\n    this.setProperty('keyStroke', keyStroke);\n  }\n\n  _setKeyStroke(keyStroke) {\n    this._setProperty('keyStroke', keyStroke);\n    this.buttonKeyStroke.parseAndSetKeyStroke(this.keyStroke);\n  }\n\n  _setKeyStrokeScope(keyStrokeScope) {\n    if (typeof keyStrokeScope === 'string') {\n      keyStrokeScope = this._resolveKeyStrokeScope(keyStrokeScope);\n      if (!keyStrokeScope) {\n        // Will be resolved later\n        return;\n      }\n    }\n\n    this._setProperty('keyStrokeScope', keyStrokeScope);\n  }\n\n  _resolveKeyStrokeScope(keyStrokeScope) {\n    // Basically, the desktop could be used to find the scope, but that would mean to traverse the whole widget tree.\n    // To make it faster the form is used instead but that limits the resolving to the form.\n    // This should be acceptable because the scope can still be set explicitly without using an id.\n    var form = this.findNonWrappedForm();\n    if (!form) {\n      throw new Error('Could not resolve keyStrokeScope ' + keyStrokeScope + ' because no form has been found.');\n    }\n    if (!form.initialized) {\n      // KeyStrokeScope is another widget (form or formfield) which may not be initialized yet.\n      // The widget must be on the same form as the button, so once that form is initialized the keyStrokeScope has to be available\n      form.one('init', this._setKeyStrokeScope.bind(this, keyStrokeScope));\n      return;\n    }\n    keyStrokeScope = form.widget(keyStrokeScope);\n    if (!keyStrokeScope) {\n      throw new Error('Could not resolve keyStrokeScope ' + keyStrokeScope + ' using form ' + form);\n    }\n    return keyStrokeScope;\n  }\n\n  _onClick(event) {\n    if (event.which !== 1) {\n      return; // Other button than left mouse button --> nop\n    }\n    if (this.preventDoubleClick && this._doubleClickSupport.doubleClicked()) {\n      return; // More than one consecutive click --> nop\n    }\n\n    if (this.enabledComputed) {\n      this.doAction();\n    }\n  }\n\n  setStackable(stackable) {\n    this.setProperty('stackable', stackable);\n  }\n\n  setShrinkable(shrinkable) {\n    this.setProperty('shrinkable', shrinkable);\n  }\n\n  setPreventDoubleClick(preventDoubleClick) {\n    this.setProperty('preventDoubleClick', preventDoubleClick);\n  }\n\n  /**\n   * @override\n   */\n  getFocusableElement() {\n    if (this.adaptedBy) {\n      return this.adaptedBy.getFocusableElement();\n    }\n    return super.getFocusableElement();\n  }\n\n  /**\n   * @override\n   */\n  isFocusable() {\n    if (this.adaptedBy) {\n      return this.adaptedBy.isFocusable();\n    }\n    return super.isFocusable();\n  }\n\n  /**\n   * @override\n   */\n  focus() {\n    if (this.adaptedBy) {\n      return this.adaptedBy.focus();\n    }\n    return super.focus();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}