{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { scout, TimePickerTouchPopupLayout, TouchPopup } from '../index';\n\nvar TimePickerTouchPopup = /*#__PURE__*/function (_TouchPopup) {\n  _inherits(TimePickerTouchPopup, _TouchPopup);\n\n  var _super = _createSuper(TimePickerTouchPopup);\n\n  function TimePickerTouchPopup() {\n    _classCallCheck(this, TimePickerTouchPopup);\n\n    return _super.call(this);\n  }\n\n  _createClass(TimePickerTouchPopup, [{\n    key: \"_init\",\n    value: function _init(options) {\n      _get(_getPrototypeOf(TimePickerTouchPopup.prototype), \"_init\", this).call(this, options);\n\n      this._field.on('acceptInput', this._onFieldAcceptInput.bind(this));\n    }\n    /**\n     * @override TouchPopup.js\n     */\n\n  }, {\n    key: \"_initWidget\",\n    value: function _initWidget(options) {\n      this._widget = scout.create('TimePicker', {\n        parent: this,\n        timeResolution: options.timeResolution\n      });\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      _get(_getPrototypeOf(TimePickerTouchPopup.prototype), \"_render\", this).call(this);\n\n      this._field.$container.addClass('time');\n    }\n  }, {\n    key: \"getTimePicker\",\n    value: function getTimePicker() {\n      return this._widget;\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_createLayout\",\n    value: function _createLayout() {\n      return new TimePickerTouchPopupLayout(this);\n    }\n  }, {\n    key: \"_onFieldAcceptInput\",\n    value: function _onFieldAcceptInput(event) {\n      // Delegate to original field\n      this._touchField.setDisplayText(event.displayText);\n\n      this._touchField.setErrorStatus(event.errorStatus);\n\n      if (!event.errorStatus) {\n        this._touchField.setValue(event.value);\n      }\n\n      this._touchField._triggerAcceptInput();\n    }\n  }]);\n\n  return TimePickerTouchPopup;\n}(TouchPopup);\n\nexport { TimePickerTouchPopup as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/timepicker/TimePickerTouchPopup.js"],"names":["scout","TimePickerTouchPopupLayout","TouchPopup","TimePickerTouchPopup","options","_field","on","_onFieldAcceptInput","bind","_widget","create","parent","timeResolution","$container","addClass","event","_touchField","setDisplayText","displayText","setErrorStatus","errorStatus","setValue","value","_triggerAcceptInput"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,KAAR,EAAeC,0BAAf,EAA2CC,UAA3C,QAA4D,UAA5D;;IAEqBC,oB;;;;;AAEnB,kCAAc;AAAA;;AAAA;AAEb;;;;0BAEKC,O,EAAS;AACb,sFAAYA,OAAZ;;AACA,WAAKC,MAAL,CAAYC,EAAZ,CAAe,aAAf,EAA8B,KAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA9B;AACD;AAED;AACF;AACA;;;;gCACcJ,O,EAAS;AACnB,WAAKK,OAAL,GAAeT,KAAK,CAACU,MAAN,CAAa,YAAb,EAA2B;AACxCC,QAAAA,MAAM,EAAE,IADgC;AAExCC,QAAAA,cAAc,EAAER,OAAO,CAACQ;AAFgB,OAA3B,CAAf;AAID;;;8BAES;AACR;;AACA,WAAKP,MAAL,CAAYQ,UAAZ,CAAuBC,QAAvB,CAAgC,MAAhC;AACD;;;oCAEe;AACd,aAAO,KAAKL,OAAZ;AACD;AAED;AACF;AACA;;;;oCACkB;AACd,aAAO,IAAIR,0BAAJ,CAA+B,IAA/B,CAAP;AACD;;;wCAEmBc,K,EAAO;AACzB;AACA,WAAKC,WAAL,CAAiBC,cAAjB,CAAgCF,KAAK,CAACG,WAAtC;;AACA,WAAKF,WAAL,CAAiBG,cAAjB,CAAgCJ,KAAK,CAACK,WAAtC;;AACA,UAAI,CAACL,KAAK,CAACK,WAAX,EAAwB;AACtB,aAAKJ,WAAL,CAAiBK,QAAjB,CAA0BN,KAAK,CAACO,KAAhC;AACD;;AACD,WAAKN,WAAL,CAAiBO,mBAAjB;AACD;;;;EA7C+CrB,U;;SAA7BC,oB","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {scout, TimePickerTouchPopupLayout, TouchPopup} from '../index';\n\nexport default class TimePickerTouchPopup extends TouchPopup {\n\n  constructor() {\n    super();\n  }\n\n  _init(options) {\n    super._init(options);\n    this._field.on('acceptInput', this._onFieldAcceptInput.bind(this));\n  }\n\n  /**\n   * @override TouchPopup.js\n   */\n  _initWidget(options) {\n    this._widget = scout.create('TimePicker', {\n      parent: this,\n      timeResolution: options.timeResolution\n    });\n  }\n\n  _render() {\n    super._render();\n    this._field.$container.addClass('time');\n  }\n\n  getTimePicker() {\n    return this._widget;\n  }\n\n  /**\n   * @override\n   */\n  _createLayout() {\n    return new TimePickerTouchPopupLayout(this);\n  }\n\n  _onFieldAcceptInput(event) {\n    // Delegate to original field\n    this._touchField.setDisplayText(event.displayText);\n    this._touchField.setErrorStatus(event.errorStatus);\n    if (!event.errorStatus) {\n      this._touchField.setValue(event.value);\n    }\n    this._touchField._triggerAcceptInput();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}