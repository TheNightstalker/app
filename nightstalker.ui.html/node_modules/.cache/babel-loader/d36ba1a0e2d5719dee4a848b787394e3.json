{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { ContextMenuPopup } from '../../index';\n/**\n * The MenuBarPopup is a special Popup that is used in the menu-bar. It is tightly coupled with a menu-item and shows a header\n * which has a different size than the popup-body.\n */\n\nvar MenuBarPopup = /*#__PURE__*/function (_ContextMenuPopup) {\n  _inherits(MenuBarPopup, _ContextMenuPopup);\n\n  var _super = _createSuper(MenuBarPopup);\n\n  function MenuBarPopup() {\n    var _this;\n\n    _classCallCheck(this, MenuBarPopup);\n\n    _this = _super.call(this);\n    _this.menu = null;\n    _this.$headBlueprint = null;\n    _this.ignoreEvent = null;\n    _this._headVisible = true;\n    _this.parentMenuPropertyChangeHandler = _this._onParentMenuPropertyChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MenuBarPopup, [{\n    key: \"_init\",\n    value: function _init(options) {\n      options.$anchor = options.menu.$container;\n\n      _get(_getPrototypeOf(MenuBarPopup.prototype), \"_init\", this).call(this, options);\n\n      this.$headBlueprint = this.menu.$container;\n    }\n    /**\n     * @override ContextMenuPopup.js\n     */\n\n  }, {\n    key: \"_getMenuItems\",\n    value: function _getMenuItems() {\n      return this.menu.childActions || this.menu.menus;\n    }\n    /**\n     * @override Popup.js\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(event) {\n      if (!event || !this.ignoreEvent || event.originalEvent !== this.ignoreEvent.originalEvent) {\n        _get(_getPrototypeOf(MenuBarPopup.prototype), \"close\", this).call(this, event);\n      }\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      _get(_getPrototypeOf(MenuBarPopup.prototype), \"_render\", this).call(this);\n\n      this.menu.on('propertyChange', this.parentMenuPropertyChangeHandler);\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.menu.off('propertyChange', this.parentMenuPropertyChangeHandler);\n\n      _get(_getPrototypeOf(MenuBarPopup.prototype), \"_remove\", this).call(this);\n    }\n    /**\n     * @override PopupWithHead.js\n     */\n\n  }, {\n    key: \"_renderHead\",\n    value: function _renderHead() {\n      _get(_getPrototypeOf(MenuBarPopup.prototype), \"_renderHead\", this).call(this);\n\n      if (this.menu.$container.parent().hasClass('main-menubar')) {\n        this.$head.addClass('in-main-menubar');\n      }\n\n      if (this.menu.uiCssClass) {\n        this._copyCssClassToHead(this.menu.uiCssClass);\n      }\n\n      this._copyCssClassToHead('unfocusable');\n\n      this._copyCssClassToHead('button');\n    }\n  }, {\n    key: \"_onParentMenuPropertyChange\",\n    value: function _onParentMenuPropertyChange(event) {\n      this.session.layoutValidator.schedulePostValidateFunction(function () {\n        // Because this post layout validation function is executed asynchronously,\n        // we have to check again if the popup is still rendered.\n        if (!this.rendered) {\n          return;\n        }\n\n        this.rerenderHead();\n        this.position();\n      }.bind(this));\n    }\n  }]);\n\n  return MenuBarPopup;\n}(ContextMenuPopup);\n\nexport { MenuBarPopup as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/menu/menubar/MenuBarPopup.js"],"names":["ContextMenuPopup","MenuBarPopup","menu","$headBlueprint","ignoreEvent","_headVisible","parentMenuPropertyChangeHandler","_onParentMenuPropertyChange","bind","options","$anchor","$container","childActions","menus","event","originalEvent","on","off","parent","hasClass","$head","addClass","uiCssClass","_copyCssClassToHead","session","layoutValidator","schedulePostValidateFunction","rendered","rerenderHead","position"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,gBAAR,QAA+B,aAA/B;AAEA;AACA;AACA;AACA;;IACqBC,Y;;;;;AAEnB,0BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,IAAL,GAAY,IAAZ;AACA,UAAKC,cAAL,GAAsB,IAAtB;AACA,UAAKC,WAAL,GAAmB,IAAnB;AACA,UAAKC,YAAL,GAAoB,IAApB;AACA,UAAKC,+BAAL,GAAuC,MAAKC,2BAAL,CAAiCC,IAAjC,+BAAvC;AANY;AAOb;;;;0BAEKC,O,EAAS;AACbA,MAAAA,OAAO,CAACC,OAAR,GAAkBD,OAAO,CAACP,IAAR,CAAaS,UAA/B;;AACA,8EAAYF,OAAZ;;AAEA,WAAKN,cAAL,GAAsB,KAAKD,IAAL,CAAUS,UAAhC;AACD;AAED;AACF;AACA;;;;oCACkB;AACd,aAAO,KAAKT,IAAL,CAAUU,YAAV,IAA0B,KAAKV,IAAL,CAAUW,KAA3C;AACD;AAED;AACF;AACA;;;;0BACQC,K,EAAO;AACX,UAAI,CAACA,KAAD,IAAU,CAAC,KAAKV,WAAhB,IAA+BU,KAAK,CAACC,aAAN,KAAwB,KAAKX,WAAL,CAAiBW,aAA5E,EAA2F;AACzF,gFAAYD,KAAZ;AACD;AACF;;;8BAES;AACR;;AACA,WAAKZ,IAAL,CAAUc,EAAV,CAAa,gBAAb,EAA+B,KAAKV,+BAApC;AACD;;;8BAES;AACR,WAAKJ,IAAL,CAAUe,GAAV,CAAc,gBAAd,EAAgC,KAAKX,+BAArC;;AACA;AACD;AAED;AACF;AACA;;;;kCACgB;AACZ;;AAEA,UAAI,KAAKJ,IAAL,CAAUS,UAAV,CAAqBO,MAArB,GAA8BC,QAA9B,CAAuC,cAAvC,CAAJ,EAA4D;AAC1D,aAAKC,KAAL,CAAWC,QAAX,CAAoB,iBAApB;AACD;;AAED,UAAI,KAAKnB,IAAL,CAAUoB,UAAd,EAA0B;AACxB,aAAKC,mBAAL,CAAyB,KAAKrB,IAAL,CAAUoB,UAAnC;AACD;;AACD,WAAKC,mBAAL,CAAyB,aAAzB;;AACA,WAAKA,mBAAL,CAAyB,QAAzB;AACD;;;gDAE2BT,K,EAAO;AACjC,WAAKU,OAAL,CAAaC,eAAb,CAA6BC,4BAA7B,CAA0D,YAAW;AACnE;AACA;AACA,YAAI,CAAC,KAAKC,QAAV,EAAoB;AAClB;AACD;;AACD,aAAKC,YAAL;AACA,aAAKC,QAAL;AACD,OARyD,CAQxDrB,IARwD,CAQnD,IARmD,CAA1D;AASD;;;;EAvEuCR,gB;;SAArBC,Y","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {ContextMenuPopup} from '../../index';\n\n/**\n * The MenuBarPopup is a special Popup that is used in the menu-bar. It is tightly coupled with a menu-item and shows a header\n * which has a different size than the popup-body.\n */\nexport default class MenuBarPopup extends ContextMenuPopup {\n\n  constructor() {\n    super();\n    this.menu = null;\n    this.$headBlueprint = null;\n    this.ignoreEvent = null;\n    this._headVisible = true;\n    this.parentMenuPropertyChangeHandler = this._onParentMenuPropertyChange.bind(this);\n  }\n\n  _init(options) {\n    options.$anchor = options.menu.$container;\n    super._init(options);\n\n    this.$headBlueprint = this.menu.$container;\n  }\n\n  /**\n   * @override ContextMenuPopup.js\n   */\n  _getMenuItems() {\n    return this.menu.childActions || this.menu.menus;\n  }\n\n  /**\n   * @override Popup.js\n   */\n  close(event) {\n    if (!event || !this.ignoreEvent || event.originalEvent !== this.ignoreEvent.originalEvent) {\n      super.close(event);\n    }\n  }\n\n  _render() {\n    super._render();\n    this.menu.on('propertyChange', this.parentMenuPropertyChangeHandler);\n  }\n\n  _remove() {\n    this.menu.off('propertyChange', this.parentMenuPropertyChangeHandler);\n    super._remove();\n  }\n\n  /**\n   * @override PopupWithHead.js\n   */\n  _renderHead() {\n    super._renderHead();\n\n    if (this.menu.$container.parent().hasClass('main-menubar')) {\n      this.$head.addClass('in-main-menubar');\n    }\n\n    if (this.menu.uiCssClass) {\n      this._copyCssClassToHead(this.menu.uiCssClass);\n    }\n    this._copyCssClassToHead('unfocusable');\n    this._copyCssClassToHead('button');\n  }\n\n  _onParentMenuPropertyChange(event) {\n    this.session.layoutValidator.schedulePostValidateFunction(function() {\n      // Because this post layout validation function is executed asynchronously,\n      // we have to check again if the popup is still rendered.\n      if (!this.rendered) {\n        return;\n      }\n      this.rerenderHead();\n      this.position();\n    }.bind(this));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}