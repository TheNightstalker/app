{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, graphics, SimpleTabAreaLayout } from '../../index';\n\nvar DesktopHeaderLayout = /*#__PURE__*/function (_AbstractLayout) {\n  _inherits(DesktopHeaderLayout, _AbstractLayout);\n\n  var _super = _createSuper(DesktopHeaderLayout);\n\n  function DesktopHeaderLayout(header) {\n    var _this;\n\n    _classCallCheck(this, DesktopHeaderLayout);\n\n    _this = _super.call(this);\n    _this.header = header;\n    _this.desktop = header.desktop;\n    return _this;\n  }\n  /**\n   * @override AbstractLayout.js\n   */\n\n\n  _createClass(DesktopHeaderLayout, [{\n    key: \"layout\",\n    value: function layout($container) {\n      var viewButtonBoxPrefSize,\n          toolBoxPrefSize,\n          htmlContainer = this.header.htmlComp,\n          containerSize = htmlContainer.size(),\n          toolBox = this.header.toolBox,\n          viewButtonBox = this.header.viewButtonBox,\n          tabArea = this.header.tabArea,\n          smallTabsPrefSize = tabArea.htmlComp.layout.smallPrefSize(),\n          tabsPrefSize = tabArea.htmlComp.prefSize(),\n          tabsWidth = 0,\n          // = available width for tabs\n      logoWidth = 0,\n          viewButtonBoxWidth = 0,\n          toolBoxWidth = 0;\n      containerSize = containerSize.subtract(htmlContainer.insets());\n\n      if (this.header.logo) {\n        logoWidth = graphics.size(this.header.logo.$container, true).width;\n      }\n\n      if (viewButtonBox) {\n        viewButtonBoxPrefSize = viewButtonBox.htmlComp.prefSize();\n        viewButtonBoxWidth = viewButtonBoxPrefSize.width;\n        viewButtonBox.htmlComp.setSize(viewButtonBoxPrefSize.subtract(viewButtonBox.htmlComp.margins()));\n      }\n\n      tabArea.htmlComp.$comp.cssLeft(viewButtonBoxWidth);\n\n      if (toolBox) {\n        toolBoxPrefSize = toolBox.htmlComp.prefSize();\n        toolBoxWidth = toolBoxPrefSize.width;\n        setToolBoxSize();\n        setToolBoxLocation();\n      }\n\n      tabsWidth = calcTabsWidth();\n\n      if (tabsWidth >= smallTabsPrefSize.width) {\n        // All tabs fit when they have small size -> use available size but max the pref size -> prefSize = size of maximumtabs if tabs use their large (max) size\n        tabsWidth = Math.min(tabsPrefSize.width, tabsWidth);\n        tabArea.htmlComp.setSize(new Dimension(tabsWidth, tabsPrefSize.height));\n        return;\n      } // 1st try to minimize padding around tool-bar items -> compact mode\n\n\n      if (toolBox) {\n        toolBoxPrefSize = toolBox.htmlComp.layout.compactPrefSize();\n        toolBoxWidth = toolBoxPrefSize.width;\n        setToolBoxSize();\n        setToolBoxLocation();\n      }\n\n      tabsWidth = calcTabsWidth();\n\n      if (tabsWidth >= smallTabsPrefSize.width) {\n        tabArea.htmlComp.setSize(smallTabsPrefSize);\n        setTabsSize();\n        return;\n      } // 2nd remove text from tool-bar items, only show icon\n\n\n      if (toolBox) {\n        toolBoxPrefSize = toolBox.htmlComp.layout.shrinkPrefSize();\n        toolBoxWidth = toolBoxPrefSize.width;\n        setToolBoxSize();\n        setToolBoxLocation();\n      }\n\n      tabsWidth = calcTabsWidth();\n      tabsWidth = Math.min(smallTabsPrefSize.width, tabsWidth); // Ensure minimum with for the the overflow menu - expect if there are no tabs at all (in that case ensure min width of 0)\n\n      tabsWidth = Math.max(tabsWidth, tabArea.tabs.length ? SimpleTabAreaLayout.OVERFLOW_MENU_WIDTH : 0);\n      setTabsSize(); // 3rd if only the overflow menu is shown make toolBox smaller so that ellipsis may be displayed\n\n      if (toolBox && tabsWidth <= SimpleTabAreaLayout.OVERFLOW_MENU_WIDTH) {\n        // layout toolBox, now an ellipsis menu may be shown\n        toolBoxWidth = containerSize.width - tabsWidth - logoWidth - viewButtonBoxWidth;\n        setToolBoxSize(); // update size of the toolBox again with the actual width to make it correctly right aligned\n\n        toolBoxWidth = toolBox.htmlComp.layout.actualPrefSize().width;\n        setToolBoxSize();\n        setToolBoxLocation();\n      }\n\n      function calcTabsWidth() {\n        return containerSize.width - toolBoxWidth - logoWidth - viewButtonBoxWidth;\n      }\n\n      function setTabsSize() {\n        tabArea.htmlComp.setSize(new Dimension(tabsWidth, tabsPrefSize.height));\n      }\n\n      function setToolBoxSize() {\n        toolBox.htmlComp.setSize(new Dimension(toolBoxWidth, toolBoxPrefSize.height).subtract(toolBox.htmlComp.margins()));\n      }\n\n      function setToolBoxLocation() {\n        toolBox.htmlComp.$comp.cssLeft(containerSize.width - toolBoxWidth - logoWidth);\n      }\n    }\n  }]);\n\n  return DesktopHeaderLayout;\n}(AbstractLayout);\n\nexport { DesktopHeaderLayout as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/desktop/header/DesktopHeaderLayout.js"],"names":["AbstractLayout","Dimension","graphics","SimpleTabAreaLayout","DesktopHeaderLayout","header","desktop","$container","viewButtonBoxPrefSize","toolBoxPrefSize","htmlContainer","htmlComp","containerSize","size","toolBox","viewButtonBox","tabArea","smallTabsPrefSize","layout","smallPrefSize","tabsPrefSize","prefSize","tabsWidth","logoWidth","viewButtonBoxWidth","toolBoxWidth","subtract","insets","logo","width","setSize","margins","$comp","cssLeft","setToolBoxSize","setToolBoxLocation","calcTabsWidth","Math","min","height","compactPrefSize","setTabsSize","shrinkPrefSize","max","tabs","length","OVERFLOW_MENU_WIDTH","actualPrefSize"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, graphics, SimpleTabAreaLayout} from '../../index';\n\nexport default class DesktopHeaderLayout extends AbstractLayout {\n\n  constructor(header) {\n    super();\n    this.header = header;\n    this.desktop = header.desktop;\n  }\n\n  /**\n   * @override AbstractLayout.js\n   */\n  layout($container) {\n    var viewButtonBoxPrefSize, toolBoxPrefSize,\n      htmlContainer = this.header.htmlComp,\n      containerSize = htmlContainer.size(),\n      toolBox = this.header.toolBox,\n      viewButtonBox = this.header.viewButtonBox,\n      tabArea = this.header.tabArea,\n      smallTabsPrefSize = tabArea.htmlComp.layout.smallPrefSize(),\n      tabsPrefSize = tabArea.htmlComp.prefSize(),\n      tabsWidth = 0, // = available width for tabs\n      logoWidth = 0,\n      viewButtonBoxWidth = 0,\n      toolBoxWidth = 0;\n\n    containerSize = containerSize.subtract(htmlContainer.insets());\n\n    if (this.header.logo) {\n      logoWidth = graphics.size(this.header.logo.$container, true).width;\n    }\n\n    if (viewButtonBox) {\n      viewButtonBoxPrefSize = viewButtonBox.htmlComp.prefSize();\n      viewButtonBoxWidth = viewButtonBoxPrefSize.width;\n      viewButtonBox.htmlComp.setSize(viewButtonBoxPrefSize.subtract(viewButtonBox.htmlComp.margins()));\n    }\n    tabArea.htmlComp.$comp.cssLeft(viewButtonBoxWidth);\n\n    if (toolBox) {\n      toolBoxPrefSize = toolBox.htmlComp.prefSize();\n      toolBoxWidth = toolBoxPrefSize.width;\n      setToolBoxSize();\n      setToolBoxLocation();\n    }\n\n    tabsWidth = calcTabsWidth();\n    if (tabsWidth >= smallTabsPrefSize.width) {\n      // All tabs fit when they have small size -> use available size but max the pref size -> prefSize = size of maximumtabs if tabs use their large (max) size\n      tabsWidth = Math.min(tabsPrefSize.width, tabsWidth);\n      tabArea.htmlComp.setSize(new Dimension(tabsWidth, tabsPrefSize.height));\n      return;\n    }\n\n    // 1st try to minimize padding around tool-bar items -> compact mode\n    if (toolBox) {\n      toolBoxPrefSize = toolBox.htmlComp.layout.compactPrefSize();\n      toolBoxWidth = toolBoxPrefSize.width;\n      setToolBoxSize();\n      setToolBoxLocation();\n    }\n\n    tabsWidth = calcTabsWidth();\n    if (tabsWidth >= smallTabsPrefSize.width) {\n      tabArea.htmlComp.setSize(smallTabsPrefSize);\n      setTabsSize();\n      return;\n    }\n\n    // 2nd remove text from tool-bar items, only show icon\n    if (toolBox) {\n      toolBoxPrefSize = toolBox.htmlComp.layout.shrinkPrefSize();\n      toolBoxWidth = toolBoxPrefSize.width;\n      setToolBoxSize();\n      setToolBoxLocation();\n    }\n\n    tabsWidth = calcTabsWidth();\n    tabsWidth = Math.min(smallTabsPrefSize.width, tabsWidth);\n    // Ensure minimum with for the the overflow menu - expect if there are no tabs at all (in that case ensure min width of 0)\n    tabsWidth = Math.max(tabsWidth, (tabArea.tabs.length ? SimpleTabAreaLayout.OVERFLOW_MENU_WIDTH : 0));\n    setTabsSize();\n\n    // 3rd if only the overflow menu is shown make toolBox smaller so that ellipsis may be displayed\n    if (toolBox && tabsWidth <= SimpleTabAreaLayout.OVERFLOW_MENU_WIDTH) {\n      // layout toolBox, now an ellipsis menu may be shown\n      toolBoxWidth = containerSize.width - tabsWidth - logoWidth - viewButtonBoxWidth;\n      setToolBoxSize();\n\n      // update size of the toolBox again with the actual width to make it correctly right aligned\n      toolBoxWidth = toolBox.htmlComp.layout.actualPrefSize().width;\n      setToolBoxSize();\n      setToolBoxLocation();\n    }\n\n    function calcTabsWidth() {\n      return containerSize.width - toolBoxWidth - logoWidth - viewButtonBoxWidth;\n    }\n\n    function setTabsSize() {\n      tabArea.htmlComp.setSize(new Dimension(tabsWidth, tabsPrefSize.height));\n    }\n\n    function setToolBoxSize() {\n      toolBox.htmlComp.setSize(new Dimension(toolBoxWidth, toolBoxPrefSize.height).subtract(toolBox.htmlComp.margins()));\n    }\n\n    function setToolBoxLocation() {\n      toolBox.htmlComp.$comp.cssLeft(containerSize.width - toolBoxWidth - logoWidth);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}