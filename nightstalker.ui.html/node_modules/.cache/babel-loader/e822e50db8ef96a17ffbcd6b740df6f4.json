{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension } from '../index';\n\nvar GroupLayout = /*#__PURE__*/function (_AbstractLayout) {\n  _inherits(GroupLayout, _AbstractLayout);\n\n  var _super = _createSuper(GroupLayout);\n\n  function GroupLayout(group) {\n    var _this;\n\n    _classCallCheck(this, GroupLayout);\n\n    _this = _super.call(this);\n    _this.group = group;\n    return _this;\n  }\n\n  _createClass(GroupLayout, [{\n    key: \"layout\",\n    value: function layout($container) {\n      var htmlComp = this.group.htmlComp;\n      var containerSize = htmlComp.availableSize().subtract(htmlComp.insets());\n      var htmlHeader = this.group.htmlHeader;\n      var headerSize = htmlHeader.prefSize({\n        widthHint: containerSize.width\n      });\n      headerSize.width = containerSize.width;\n      headerSize = headerSize.subtract(htmlHeader.margins());\n      htmlHeader.setSize(headerSize);\n      var htmlFooter = this.group.htmlFooter;\n\n      if (htmlFooter.isVisible()) {\n        var footerSize = htmlFooter.prefSize({\n          includeMargin: false,\n          useCssSize: true\n        });\n        footerSize.width = containerSize.width;\n        htmlFooter.setSize(footerSize.subtract(htmlFooter.margins()));\n      } // 1st condition: Set size only if group is expanded\n      // 2nd condition: There is no need to update it during the expand animation (the body will be layouted correctly before the animation starts)\n      // 3rd condition: When Group.setCollapsed(false) has been called an event is triggered that might causes invalidating layout on other all groups (inclusive currently expanding group).\n      //                The body of the currently expanding group is not rendered at this time.\n      // 4th condition: When body is invisible by property (bodyVisible)\n\n\n      if (this.group.collapsed || this.group.bodyAnimating || !this.group.body.rendered || !this.group.body.isVisible()) {\n        return;\n      }\n\n      var htmlBody = this.group.body.htmlComp;\n      var bodySize = containerSize.subtract(htmlBody.margins());\n      bodySize.height -= headerSize.height;\n\n      if (htmlFooter.isVisible()) {\n        bodySize.height -= htmlFooter.prefSize(true).height;\n      }\n\n      htmlBody.setSize(bodySize);\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate(htmlSource) {\n      var htmlBody = this.group.body.htmlComp; // If a child triggers a layout invalidation, the animation should be stopped and restarted because the body will likely have another height.\n      // This will happen for sure if a child is an image which will be loaded during the animation.\n\n      if (htmlBody && this.group.bodyAnimating && htmlSource && htmlSource.isDescendantOf(this.group.htmlComp)) {\n        // Stop running animation\n        this.group.body.$container.stop(); // Resize to new height\n\n        this.group.resizeBody();\n      }\n    }\n  }, {\n    key: \"preferredLayoutSize\",\n    value: function preferredLayoutSize($container, options) {\n      options = options || {};\n      var prefSize;\n      var htmlComp = this.group.htmlComp;\n      var htmlHeader = this.group.htmlHeader;\n      var htmlBody = this.group.body.htmlComp;\n      var htmlFooter = this.group.htmlFooter; // HeightHint not supported\n\n      options.heightHint = null;\n\n      if (this.group.bodyAnimating) {\n        // Return the current size when the body is collapsing or expanding\n        // so that the widgets on the bottom and on top move smoothly with the animation\n        prefSize = htmlBody.size(true);\n      } else if (this.group.collapsed || !this.group.body.rendered || !this.group.body.isVisible()) {\n        // Body may not be rendered even if collapsed is false if property has changed but _renderCollapse not called yet\n        // (if revalidateLayoutTree is called during collapsed property event)\n        prefSize = new Dimension(0, 0);\n      } else {\n        prefSize = htmlBody.prefSize(options).add(htmlBody.margins());\n      }\n\n      prefSize = prefSize.add(htmlComp.insets({\n        includeMargin: true\n      }));\n      prefSize.height += htmlHeader.prefSize(options).add(htmlHeader.margins()).height;\n\n      if (htmlFooter.isVisible()) {\n        prefSize.height += htmlFooter.prefSize({\n          includeMargin: true,\n          useCssSize: true\n        }).height;\n      }\n\n      return prefSize;\n    }\n  }]);\n\n  return GroupLayout;\n}(AbstractLayout);\n\nexport { GroupLayout as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/group/GroupLayout.js"],"names":["AbstractLayout","Dimension","GroupLayout","group","$container","htmlComp","containerSize","availableSize","subtract","insets","htmlHeader","headerSize","prefSize","widthHint","width","margins","setSize","htmlFooter","isVisible","footerSize","includeMargin","useCssSize","collapsed","bodyAnimating","body","rendered","htmlBody","bodySize","height","htmlSource","isDescendantOf","stop","resizeBody","options","heightHint","size","add"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,cAAR,EAAwBC,SAAxB,QAAwC,UAAxC;;IAEqBC,W;;;;;AAEnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB;AACA,UAAKA,KAAL,GAAaA,KAAb;AAFiB;AAGlB;;;;2BAEMC,U,EAAY;AACjB,UAAIC,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA1B;AACA,UAAIC,aAAa,GAAGD,QAAQ,CAACE,aAAT,GACjBC,QADiB,CACRH,QAAQ,CAACI,MAAT,EADQ,CAApB;AAGA,UAAIC,UAAU,GAAG,KAAKP,KAAL,CAAWO,UAA5B;AACA,UAAIC,UAAU,GAAGD,UAAU,CAACE,QAAX,CAAoB;AACnCC,QAAAA,SAAS,EAAEP,aAAa,CAACQ;AADU,OAApB,CAAjB;AAGAH,MAAAA,UAAU,CAACG,KAAX,GAAmBR,aAAa,CAACQ,KAAjC;AACAH,MAAAA,UAAU,GAAGA,UAAU,CAACH,QAAX,CAAoBE,UAAU,CAACK,OAAX,EAApB,CAAb;AACAL,MAAAA,UAAU,CAACM,OAAX,CAAmBL,UAAnB;AAEA,UAAIM,UAAU,GAAG,KAAKd,KAAL,CAAWc,UAA5B;;AACA,UAAIA,UAAU,CAACC,SAAX,EAAJ,EAA4B;AAC1B,YAAIC,UAAU,GAAGF,UAAU,CAACL,QAAX,CAAoB;AACnCQ,UAAAA,aAAa,EAAE,KADoB;AAEnCC,UAAAA,UAAU,EAAE;AAFuB,SAApB,CAAjB;AAIAF,QAAAA,UAAU,CAACL,KAAX,GAAmBR,aAAa,CAACQ,KAAjC;AACAG,QAAAA,UAAU,CAACD,OAAX,CAAmBG,UAAU,CAACX,QAAX,CAAoBS,UAAU,CAACF,OAAX,EAApB,CAAnB;AACD,OArBgB,CAuBjB;AACA;AACA;AACA;AACA;;;AACA,UAAI,KAAKZ,KAAL,CAAWmB,SAAX,IAAwB,KAAKnB,KAAL,CAAWoB,aAAnC,IAAoD,CAAC,KAAKpB,KAAL,CAAWqB,IAAX,CAAgBC,QAArE,IAAiF,CAAC,KAAKtB,KAAL,CAAWqB,IAAX,CAAgBN,SAAhB,EAAtF,EAAmH;AACjH;AACD;;AAED,UAAIQ,QAAQ,GAAG,KAAKvB,KAAL,CAAWqB,IAAX,CAAgBnB,QAA/B;AACA,UAAIsB,QAAQ,GAAGrB,aAAa,CAACE,QAAd,CAAuBkB,QAAQ,CAACX,OAAT,EAAvB,CAAf;AACAY,MAAAA,QAAQ,CAACC,MAAT,IAAmBjB,UAAU,CAACiB,MAA9B;;AACA,UAAIX,UAAU,CAACC,SAAX,EAAJ,EAA4B;AAC1BS,QAAAA,QAAQ,CAACC,MAAT,IAAmBX,UAAU,CAACL,QAAX,CAAoB,IAApB,EAA0BgB,MAA7C;AACD;;AACDF,MAAAA,QAAQ,CAACV,OAAT,CAAiBW,QAAjB;AACD;;;+BAEUE,U,EAAY;AACrB,UAAIH,QAAQ,GAAG,KAAKvB,KAAL,CAAWqB,IAAX,CAAgBnB,QAA/B,CADqB,CAErB;AACA;;AACA,UAAIqB,QAAQ,IAAI,KAAKvB,KAAL,CAAWoB,aAAvB,IAAwCM,UAAxC,IAAsDA,UAAU,CAACC,cAAX,CAA0B,KAAK3B,KAAL,CAAWE,QAArC,CAA1D,EAA0G;AACxG;AACA,aAAKF,KAAL,CAAWqB,IAAX,CAAgBpB,UAAhB,CAA2B2B,IAA3B,GAFwG,CAIxG;;AACA,aAAK5B,KAAL,CAAW6B,UAAX;AACD;AACF;;;wCAEmB5B,U,EAAY6B,O,EAAS;AACvCA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,UAAIrB,QAAJ;AACA,UAAIP,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA1B;AACA,UAAIK,UAAU,GAAG,KAAKP,KAAL,CAAWO,UAA5B;AACA,UAAIgB,QAAQ,GAAG,KAAKvB,KAAL,CAAWqB,IAAX,CAAgBnB,QAA/B;AACA,UAAIY,UAAU,GAAG,KAAKd,KAAL,CAAWc,UAA5B,CANuC,CAQvC;;AACAgB,MAAAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,UAAI,KAAK/B,KAAL,CAAWoB,aAAf,EAA8B;AAC5B;AACA;AACAX,QAAAA,QAAQ,GAAGc,QAAQ,CAACS,IAAT,CAAc,IAAd,CAAX;AACD,OAJD,MAIO,IAAI,KAAKhC,KAAL,CAAWmB,SAAX,IAAwB,CAAC,KAAKnB,KAAL,CAAWqB,IAAX,CAAgBC,QAAzC,IAAqD,CAAC,KAAKtB,KAAL,CAAWqB,IAAX,CAAgBN,SAAhB,EAA1D,EAAuF;AAC5F;AACA;AACAN,QAAAA,QAAQ,GAAG,IAAIX,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAX;AACD,OAJM,MAIA;AACLW,QAAAA,QAAQ,GAAGc,QAAQ,CAACd,QAAT,CAAkBqB,OAAlB,EACRG,GADQ,CACJV,QAAQ,CAACX,OAAT,EADI,CAAX;AAED;;AACDH,MAAAA,QAAQ,GAAGA,QAAQ,CAACwB,GAAT,CAAa/B,QAAQ,CAACI,MAAT,CAAgB;AACtCW,QAAAA,aAAa,EAAE;AADuB,OAAhB,CAAb,CAAX;AAGAR,MAAAA,QAAQ,CAACgB,MAAT,IAAmBlB,UAAU,CAACE,QAAX,CAAoBqB,OAApB,EAChBG,GADgB,CACZ1B,UAAU,CAACK,OAAX,EADY,EACUa,MAD7B;;AAEA,UAAIX,UAAU,CAACC,SAAX,EAAJ,EAA4B;AAC1BN,QAAAA,QAAQ,CAACgB,MAAT,IAAmBX,UAAU,CAACL,QAAX,CAAoB;AACrCQ,UAAAA,aAAa,EAAE,IADsB;AAErCC,UAAAA,UAAU,EAAE;AAFyB,SAApB,EAGhBO,MAHH;AAID;;AACD,aAAOhB,QAAP;AACD;;;;EAhGsCZ,c;;SAApBE,W","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension} from '../index';\n\nexport default class GroupLayout extends AbstractLayout {\n\n  constructor(group) {\n    super();\n    this.group = group;\n  }\n\n  layout($container) {\n    var htmlComp = this.group.htmlComp;\n    var containerSize = htmlComp.availableSize()\n      .subtract(htmlComp.insets());\n\n    var htmlHeader = this.group.htmlHeader;\n    var headerSize = htmlHeader.prefSize({\n      widthHint: containerSize.width\n    });\n    headerSize.width = containerSize.width;\n    headerSize = headerSize.subtract(htmlHeader.margins());\n    htmlHeader.setSize(headerSize);\n\n    var htmlFooter = this.group.htmlFooter;\n    if (htmlFooter.isVisible()) {\n      var footerSize = htmlFooter.prefSize({\n        includeMargin: false,\n        useCssSize: true\n      });\n      footerSize.width = containerSize.width;\n      htmlFooter.setSize(footerSize.subtract(htmlFooter.margins()));\n    }\n\n    // 1st condition: Set size only if group is expanded\n    // 2nd condition: There is no need to update it during the expand animation (the body will be layouted correctly before the animation starts)\n    // 3rd condition: When Group.setCollapsed(false) has been called an event is triggered that might causes invalidating layout on other all groups (inclusive currently expanding group).\n    //                The body of the currently expanding group is not rendered at this time.\n    // 4th condition: When body is invisible by property (bodyVisible)\n    if (this.group.collapsed || this.group.bodyAnimating || !this.group.body.rendered || !this.group.body.isVisible()) {\n      return;\n    }\n\n    var htmlBody = this.group.body.htmlComp;\n    var bodySize = containerSize.subtract(htmlBody.margins());\n    bodySize.height -= headerSize.height;\n    if (htmlFooter.isVisible()) {\n      bodySize.height -= htmlFooter.prefSize(true).height;\n    }\n    htmlBody.setSize(bodySize);\n  }\n\n  invalidate(htmlSource) {\n    var htmlBody = this.group.body.htmlComp;\n    // If a child triggers a layout invalidation, the animation should be stopped and restarted because the body will likely have another height.\n    // This will happen for sure if a child is an image which will be loaded during the animation.\n    if (htmlBody && this.group.bodyAnimating && htmlSource && htmlSource.isDescendantOf(this.group.htmlComp)) {\n      // Stop running animation\n      this.group.body.$container.stop();\n\n      // Resize to new height\n      this.group.resizeBody();\n    }\n  }\n\n  preferredLayoutSize($container, options) {\n    options = options || {};\n    var prefSize;\n    var htmlComp = this.group.htmlComp;\n    var htmlHeader = this.group.htmlHeader;\n    var htmlBody = this.group.body.htmlComp;\n    var htmlFooter = this.group.htmlFooter;\n\n    // HeightHint not supported\n    options.heightHint = null;\n\n    if (this.group.bodyAnimating) {\n      // Return the current size when the body is collapsing or expanding\n      // so that the widgets on the bottom and on top move smoothly with the animation\n      prefSize = htmlBody.size(true);\n    } else if (this.group.collapsed || !this.group.body.rendered || !this.group.body.isVisible()) {\n      // Body may not be rendered even if collapsed is false if property has changed but _renderCollapse not called yet\n      // (if revalidateLayoutTree is called during collapsed property event)\n      prefSize = new Dimension(0, 0);\n    } else {\n      prefSize = htmlBody.prefSize(options)\n        .add(htmlBody.margins());\n    }\n    prefSize = prefSize.add(htmlComp.insets({\n      includeMargin: true\n    }));\n    prefSize.height += htmlHeader.prefSize(options)\n      .add(htmlHeader.margins()).height;\n    if (htmlFooter.isVisible()) {\n      prefSize.height += htmlFooter.prefSize({\n        includeMargin: true,\n        useCssSize: true\n      }).height;\n    }\n    return prefSize;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}