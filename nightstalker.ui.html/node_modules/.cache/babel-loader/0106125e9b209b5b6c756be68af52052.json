{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, HtmlComponent, strings, Widget } from '../index';\n\nvar TableRowDetail = /*#__PURE__*/function (_Widget) {\n  _inherits(TableRowDetail, _Widget);\n\n  var _super = _createSuper(TableRowDetail);\n\n  function TableRowDetail() {\n    var _this;\n\n    _classCallCheck(this, TableRowDetail);\n\n    _this = _super.call(this);\n    _this.table = null;\n    _this.page = null;\n    _this.row = null;\n    _this._tableRowsUpdatedHandler = _this._onTableRowsUpdated.bind(_assertThisInitialized(_this));\n    _this._tableRowsInsertedHandler = _this._onTableRowsInserted.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TableRowDetail, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(TableRowDetail.prototype), \"_init\", this).call(this, model);\n\n      this.row = this.page.row;\n      this.table.on('rowsUpdated', this._tableRowsUpdatedHandler);\n      this.table.on('rowsInserted', this._tableRowsInsertedHandler);\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      this.table.off('rowsUpdated', this._tableRowsUpdatedHandler);\n      this.table.off('rowsInserted', this._tableRowsInsertedHandler);\n\n      _get(_getPrototypeOf(TableRowDetail.prototype), \"_destroy\", this).call(this);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent.appendDiv('table-row-detail');\n      this.htmlComp = HtmlComponent.install(this.$container, this.session);\n\n      this._renderRow();\n    }\n  }, {\n    key: \"_renderRow\",\n    value: function _renderRow() {\n      this.table.visibleColumns().forEach(this._renderCell.bind(this));\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"_renderCell\",\n    value: function _renderCell(column) {\n      var cell = this.table.cell(column, this.row);\n\n      if (strings.empty(cell.text) && !cell.iconId) {\n        return;\n      }\n\n      var headerText;\n\n      if (column.headerHtmlEnabled) {\n        headerText = strings.plainText(column.text);\n      } else {\n        headerText = column.text;\n      }\n\n      if (strings.empty(headerText)) {\n        if (column.headerTooltipHtmlEnabled) {\n          headerText = strings.plainText(column.headerTooltipText);\n        } else {\n          headerText = column.headerTooltipText;\n        }\n      }\n\n      var cellText = column.cellTextForRowDetail(this.row);\n      var $field = this.$container.appendDiv('table-row-detail-field');\n\n      if (!strings.empty(headerText)) {\n        $field.appendSpan('table-row-detail-name').text(headerText + ': ');\n      }\n\n      var iconId = cell.iconId;\n      var hasCellText = !strings.empty(cellText);\n\n      if (iconId) {\n        var $icon = $field.appendIcon(iconId, 'table-row-detail-icon');\n        $icon.toggleClass('with-text', hasCellText);\n      }\n\n      if (hasCellText) {\n        $field.appendSpan('table-row-detail-value').html(cellText);\n      }\n    }\n  }, {\n    key: \"_refreshRow\",\n    value: function _refreshRow() {\n      this.$container.empty();\n\n      this._renderRow();\n    }\n  }, {\n    key: \"_onTableRowsUpdated\",\n    value: function _onTableRowsUpdated(event) {\n      if (!this.rendered) {\n        return;\n      }\n\n      var row = arrays.find(event.rows, function (row) {\n        return row.id === this.row.id;\n      }.bind(this));\n\n      if (!row) {\n        return;\n      }\n\n      this.row = row;\n\n      this._refreshRow();\n    }\n    /**\n     * If the table is reloaded without reloading the corresponding nodes,\n     * the insert events need to be handled to refresh the table row detail.\n     */\n\n  }, {\n    key: \"_onTableRowsInserted\",\n    value: function _onTableRowsInserted(event) {\n      if (!this.rendered) {\n        return;\n      }\n\n      if (event.source.rows.indexOf(this.page.row) < 0) {\n        return;\n      }\n\n      this.row = this.page.row;\n\n      this._refreshRow();\n    }\n  }]);\n\n  return TableRowDetail;\n}(Widget);\n\nexport { TableRowDetail as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/table/TableRowDetail.js"],"names":["arrays","HtmlComponent","strings","Widget","TableRowDetail","table","page","row","_tableRowsUpdatedHandler","_onTableRowsUpdated","bind","_tableRowsInsertedHandler","_onTableRowsInserted","model","on","off","$container","$parent","appendDiv","htmlComp","install","session","_renderRow","visibleColumns","forEach","_renderCell","invalidateLayoutTree","column","cell","empty","text","iconId","headerText","headerHtmlEnabled","plainText","headerTooltipHtmlEnabled","headerTooltipText","cellText","cellTextForRowDetail","$field","appendSpan","hasCellText","$icon","appendIcon","toggleClass","html","event","rendered","find","rows","id","_refreshRow","source","indexOf"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, HtmlComponent, strings, Widget} from '../index';\n\nexport default class TableRowDetail extends Widget {\n\n  constructor() {\n    super();\n    this.table = null;\n    this.page = null;\n    this.row = null;\n    this._tableRowsUpdatedHandler = this._onTableRowsUpdated.bind(this);\n    this._tableRowsInsertedHandler = this._onTableRowsInserted.bind(this);\n  }\n\n  _init(model) {\n    super._init(model);\n    this.row = this.page.row;\n    this.table.on('rowsUpdated', this._tableRowsUpdatedHandler);\n    this.table.on('rowsInserted', this._tableRowsInsertedHandler);\n  }\n\n  _destroy() {\n    this.table.off('rowsUpdated', this._tableRowsUpdatedHandler);\n    this.table.off('rowsInserted', this._tableRowsInsertedHandler);\n    super._destroy();\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('table-row-detail');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this._renderRow();\n  }\n\n  _renderRow() {\n    this.table.visibleColumns().forEach(this._renderCell.bind(this));\n    this.invalidateLayoutTree();\n  }\n\n  _renderCell(column) {\n    var cell = this.table.cell(column, this.row);\n    if (strings.empty(cell.text) && !cell.iconId) {\n      return;\n    }\n\n    var headerText;\n    if (column.headerHtmlEnabled) {\n      headerText = strings.plainText(column.text);\n    } else {\n      headerText = column.text;\n    }\n\n    if (strings.empty(headerText)) {\n      if (column.headerTooltipHtmlEnabled) {\n        headerText = strings.plainText(column.headerTooltipText);\n      } else {\n        headerText = column.headerTooltipText;\n      }\n    }\n\n    var cellText = column.cellTextForRowDetail(this.row);\n\n    var $field = this.$container.appendDiv('table-row-detail-field');\n    if (!strings.empty(headerText)) {\n      $field.appendSpan('table-row-detail-name').text(headerText + ': ');\n    }\n\n    var iconId = cell.iconId;\n    var hasCellText = !strings.empty(cellText);\n    if (iconId) {\n      var $icon = $field.appendIcon(iconId, 'table-row-detail-icon');\n      $icon.toggleClass('with-text', hasCellText);\n    }\n    if (hasCellText) {\n      $field.appendSpan('table-row-detail-value').html(cellText);\n    }\n  }\n\n  _refreshRow() {\n    this.$container.empty();\n    this._renderRow();\n  }\n\n  _onTableRowsUpdated(event) {\n    if (!this.rendered) {\n      return;\n    }\n\n    var row = arrays.find(event.rows, function(row) {\n      return row.id === this.row.id;\n    }.bind(this));\n\n    if (!row) {\n      return;\n    }\n\n    this.row = row;\n\n    this._refreshRow();\n  }\n\n  /**\n   * If the table is reloaded without reloading the corresponding nodes,\n   * the insert events need to be handled to refresh the table row detail.\n   */\n  _onTableRowsInserted(event) {\n    if (!this.rendered) {\n      return;\n    }\n\n    if (event.source.rows.indexOf(this.page.row) < 0) {\n      return;\n    }\n\n    this.row = this.page.row;\n    this._refreshRow();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}