{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { comparators, FormFieldAdapter } from '../../index';\n\nvar ValueFieldAdapter = /*#__PURE__*/function (_FormFieldAdapter) {\n  _inherits(ValueFieldAdapter, _FormFieldAdapter);\n\n  var _super = _createSuper(ValueFieldAdapter);\n\n  function ValueFieldAdapter() {\n    _classCallCheck(this, ValueFieldAdapter);\n\n    return _super.call(this);\n  }\n\n  _createClass(ValueFieldAdapter, [{\n    key: \"_onWidgetAcceptInput\",\n    value: function _onWidgetAcceptInput(event) {\n      this._send('acceptInput', {\n        displayText: event.displayText,\n        whileTyping: event.whileTyping\n      }, {\n        showBusyIndicator: !event.whileTyping,\n        coalesce: function coalesce(previous) {\n          return this.target === previous.target && this.type === previous.type && this.whileTyping === previous.whileTyping;\n        }\n      });\n    }\n  }, {\n    key: \"_onWidgetEvent\",\n    value: function _onWidgetEvent(event) {\n      if (event.type === 'acceptInput') {\n        this._onWidgetAcceptInput(event);\n      } else {\n        _get(_getPrototypeOf(ValueFieldAdapter.prototype), \"_onWidgetEvent\", this).call(this, event);\n      }\n    }\n    /**\n     * @override ModelAdapter.js\n     */\n\n  }, {\n    key: \"exportAdapterData\",\n    value: function exportAdapterData(adapterData) {\n      adapterData = _get(_getPrototypeOf(ValueFieldAdapter.prototype), \"exportAdapterData\", this).call(this, adapterData);\n      delete adapterData.displayText;\n      return adapterData;\n    }\n  }, {\n    key: \"_syncDisplayText\",\n    value: function _syncDisplayText(displayText) {\n      this.widget.setDisplayText(displayText);\n      this.widget.parseAndSetValue(displayText);\n    }\n  }, {\n    key: \"_createPropertySortFunc\",\n    value: function _createPropertySortFunc(order) {\n      return function (a, b) {\n        var ia = order.indexOf(a);\n        var ib = order.indexOf(b);\n\n        if (ia > -1 && ib > -1) {\n          // both are in the list\n          return ia - ib;\n        }\n\n        if (ia > -1) {\n          // B is not in list\n          return -1;\n        }\n\n        if (ib > -1) {\n          // A is not in list\n          return 1;\n        }\n\n        return comparators.TEXT.compare(a, b); // both are not in list\n      };\n    }\n  }]);\n\n  return ValueFieldAdapter;\n}(FormFieldAdapter);\n\nexport { ValueFieldAdapter as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/ValueFieldAdapter.js"],"names":["comparators","FormFieldAdapter","ValueFieldAdapter","event","_send","displayText","whileTyping","showBusyIndicator","coalesce","previous","target","type","_onWidgetAcceptInput","adapterData","widget","setDisplayText","parseAndSetValue","order","a","b","ia","indexOf","ib","TEXT","compare"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,aAA5C;;IAEqBC,iB;;;;;AAEnB,+BAAc;AAAA;;AAAA;AAEb;;;;yCAEoBC,K,EAAO;AAC1B,WAAKC,KAAL,CAAW,aAAX,EAA0B;AACxBC,QAAAA,WAAW,EAAEF,KAAK,CAACE,WADK;AAExBC,QAAAA,WAAW,EAAEH,KAAK,CAACG;AAFK,OAA1B,EAGG;AACDC,QAAAA,iBAAiB,EAAE,CAACJ,KAAK,CAACG,WADzB;AAEDE,QAAAA,QAAQ,EAAE,kBAASC,QAAT,EAAmB;AAC3B,iBAAO,KAAKC,MAAL,KAAgBD,QAAQ,CAACC,MAAzB,IAAmC,KAAKC,IAAL,KAAcF,QAAQ,CAACE,IAA1D,IAAkE,KAAKL,WAAL,KAAqBG,QAAQ,CAACH,WAAvG;AACD;AAJA,OAHH;AASD;;;mCAEcH,K,EAAO;AACpB,UAAIA,KAAK,CAACQ,IAAN,KAAe,aAAnB,EAAkC;AAChC,aAAKC,oBAAL,CAA0BT,KAA1B;AACD,OAFD,MAEO;AACL,8FAAqBA,KAArB;AACD;AACF;AAED;AACF;AACA;;;;sCACoBU,W,EAAa;AAC7BA,MAAAA,WAAW,4FAA2BA,WAA3B,CAAX;AACA,aAAOA,WAAW,CAACR,WAAnB;AACA,aAAOQ,WAAP;AACD;;;qCAEgBR,W,EAAa;AAC5B,WAAKS,MAAL,CAAYC,cAAZ,CAA2BV,WAA3B;AACA,WAAKS,MAAL,CAAYE,gBAAZ,CAA6BX,WAA7B;AACD;;;4CAEuBY,K,EAAO;AAC7B,aAAO,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACpB,YAAIC,EAAE,GAAGH,KAAK,CAACI,OAAN,CAAcH,CAAd,CAAT;AACA,YAAII,EAAE,GAAGL,KAAK,CAACI,OAAN,CAAcF,CAAd,CAAT;;AACA,YAAIC,EAAE,GAAG,CAAC,CAAN,IAAWE,EAAE,GAAG,CAAC,CAArB,EAAwB;AAAE;AACxB,iBAAOF,EAAE,GAAGE,EAAZ;AACD;;AACD,YAAIF,EAAE,GAAG,CAAC,CAAV,EAAa;AAAE;AACb,iBAAO,CAAC,CAAR;AACD;;AACD,YAAIE,EAAE,GAAG,CAAC,CAAV,EAAa;AAAE;AACb,iBAAO,CAAP;AACD;;AACD,eAAOtB,WAAW,CAACuB,IAAZ,CAAiBC,OAAjB,CAAyBN,CAAzB,EAA4BC,CAA5B,CAAP,CAZoB,CAYmB;AACxC,OAbD;AAcD;;;;EAvD4ClB,gB;;SAA1BC,iB","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {comparators, FormFieldAdapter} from '../../index';\n\nexport default class ValueFieldAdapter extends FormFieldAdapter {\n\n  constructor() {\n    super();\n  }\n\n  _onWidgetAcceptInput(event) {\n    this._send('acceptInput', {\n      displayText: event.displayText,\n      whileTyping: event.whileTyping\n    }, {\n      showBusyIndicator: !event.whileTyping,\n      coalesce: function(previous) {\n        return this.target === previous.target && this.type === previous.type && this.whileTyping === previous.whileTyping;\n      }\n    });\n  }\n\n  _onWidgetEvent(event) {\n    if (event.type === 'acceptInput') {\n      this._onWidgetAcceptInput(event);\n    } else {\n      super._onWidgetEvent(event);\n    }\n  }\n\n  /**\n   * @override ModelAdapter.js\n   */\n  exportAdapterData(adapterData) {\n    adapterData = super.exportAdapterData(adapterData);\n    delete adapterData.displayText;\n    return adapterData;\n  }\n\n  _syncDisplayText(displayText) {\n    this.widget.setDisplayText(displayText);\n    this.widget.parseAndSetValue(displayText);\n  }\n\n  _createPropertySortFunc(order) {\n    return function(a, b) {\n      var ia = order.indexOf(a);\n      var ib = order.indexOf(b);\n      if (ia > -1 && ib > -1) { // both are in the list\n        return ia - ib;\n      }\n      if (ia > -1) { // B is not in list\n        return -1;\n      }\n      if (ib > -1) { // A is not in list\n        return 1;\n      }\n      return comparators.TEXT.compare(a, b); // both are not in list\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}