{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, FormField, graphics, GroupBox, HtmlComponent, HtmlEnvironment, MenuBarLayout, ResponsiveManager, scrollbars } from '../../../index';\nimport $ from 'jquery';\n\nvar GroupBoxLayout = /*#__PURE__*/function (_AbstractLayout) {\n  _inherits(GroupBoxLayout, _AbstractLayout);\n\n  var _super = _createSuper(GroupBoxLayout);\n\n  function GroupBoxLayout(groupBox) {\n    var _this;\n\n    _classCallCheck(this, GroupBoxLayout);\n\n    _this = _super.call(this);\n    _this.groupBox = groupBox;\n\n    _this._initDefaults();\n\n    _this._htmlPropertyChangeHandler = _this._onHtmlEnvironmentPropertyChange.bind(_assertThisInitialized(_this));\n    HtmlEnvironment.get().on('propertyChange', _this._htmlPropertyChangeHandler);\n\n    _this.groupBox.one('remove', function () {\n      HtmlEnvironment.get().off('propertyChange', this._htmlPropertyChangeHandler);\n    }.bind(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(GroupBoxLayout, [{\n    key: \"_initDefaults\",\n    value: function _initDefaults() {\n      this._statusWidth = HtmlEnvironment.get().fieldStatusWidth;\n    }\n  }, {\n    key: \"_onHtmlEnvironmentPropertyChange\",\n    value: function _onHtmlEnvironmentPropertyChange() {\n      this._initDefaults();\n\n      this.groupBox.invalidateLayoutTree();\n    }\n  }, {\n    key: \"layout\",\n    value: function layout($container) {\n      var gbBodySize,\n          menuBarSize,\n          menuBarHeight = 0,\n          statusWidth = 0,\n          statusPosition = this.groupBox.statusPosition,\n          htmlContainer = this.groupBox.htmlComp,\n          htmlGbBody = this._htmlGbBody(),\n          htmlMenuBar = this._htmlMenuBar(),\n          tooltip = this.groupBox._tooltip(),\n          $groupBoxTitle = this.groupBox.$title,\n          $label = this.groupBox.$label,\n          $status = this.groupBox.$status,\n          containerSize = htmlContainer.availableSize().subtract(htmlContainer.insets()); // apply responsive transformations if necessary.\n\n\n      if (this.groupBox.responsive) {\n        ResponsiveManager.get().handleResponsive(this.groupBox, containerSize.width);\n      }\n\n      if ($status && $status.isVisible()) {\n        this._layoutStatus();\n\n        statusWidth = $status.outerWidth(true);\n      } // Menu-bar\n\n\n      if (htmlMenuBar) {\n        if (this.groupBox.menuBarPosition === GroupBox.MenuBarPosition.TITLE) {\n          // position: TITLE\n          // Use Math.floor/ceil and +1 to avoid rounding issues with text-ellipsis and title label\n          menuBarSize = htmlMenuBar.prefSize({\n            exact: true\n          });\n          var titleSize = graphics.prefSize(this.groupBox.$title);\n          var titleLabelWidth = Math.ceil(graphics.prefSize(this.groupBox.$label, true).width) + 1;\n          var menuBarWidth = menuBarSize.width;\n          var titleWidth = titleSize.width - statusWidth;\n\n          if (titleLabelWidth + menuBarWidth < titleWidth) {\n            // label and menu-bar both fit into the title\n            // let menu-bar use all the available width\n            menuBarWidth = Math.floor(titleWidth - titleLabelWidth);\n            menuBarSize.width = menuBarWidth;\n            $label.cssWidth('');\n          } else {\n            // label and menu-bar don't fit into the title\n            // scale down until both fit into the title, try to keep the same width-ratio (r)\n            var scaleFactor = (titleLabelWidth + menuBarWidth) / titleWidth;\n            var rLabel = titleLabelWidth / titleWidth / scaleFactor;\n            var rMenuBar = menuBarWidth / titleWidth / scaleFactor;\n\n            if (rLabel < rMenuBar) {\n              rLabel = Math.max(0.33, rLabel);\n              rMenuBar = 1.0 - rLabel;\n            } else {\n              rMenuBar = Math.max(0.33, rMenuBar);\n              rLabel = 1.0 - rMenuBar;\n            }\n\n            titleLabelWidth = rLabel * titleWidth;\n            menuBarWidth = rMenuBar * titleWidth;\n            menuBarSize.width = Math.floor(menuBarWidth);\n            $label.cssWidth(Math.floor(titleLabelWidth));\n          }\n        } else {\n          // position: TOP and BOTTOM\n          menuBarSize = this._menuBarSize(htmlMenuBar, containerSize, statusWidth);\n          menuBarHeight = menuBarSize.height;\n          setWidthForStatus($label);\n        }\n\n        htmlMenuBar.setSize(menuBarSize);\n      } else {\n        setWidthForStatus($label);\n      } // Position of label and title\n\n\n      setWidthForStatus($groupBoxTitle);\n\n      if (statusPosition === FormField.StatusPosition.TOP) {\n        if (this.groupBox.menuBarPosition !== GroupBox.MenuBarPosition.TITLE) {\n          setWidthForStatus($label, statusWidth);\n        }\n      } else {\n        setWidthForStatus($groupBoxTitle, statusWidth);\n      }\n\n      gbBodySize = containerSize.subtract(htmlGbBody.margins());\n      gbBodySize.height -= this._titleHeight();\n      gbBodySize.height -= this._notificationHeight();\n      gbBodySize.height -= menuBarHeight;\n      $.log.isTraceEnabled() && $.log.trace('(GroupBoxLayout#layout) gbBodySize=' + gbBodySize);\n      htmlGbBody.setSize(gbBodySize); // Make sure tooltip is at correct position after layouting, if there is one\n\n      if (tooltip && tooltip.rendered) {\n        tooltip.position();\n      }\n\n      if (htmlGbBody.scrollable || this.groupBox.bodyLayoutConfig.minWidth > 0) {\n        scrollbars.update(htmlGbBody.$comp);\n      } // Make $element wider, so status is on the left\n\n\n      function setWidthForStatus($element, statusWidth) {\n        if (statusWidth) {\n          var marginX = $element.cssMarginX() + statusWidth;\n          $element.cssWidth('calc(100% - ' + marginX + 'px)');\n        } else {\n          $element.cssWidth('');\n        }\n      }\n    }\n  }, {\n    key: \"_layoutStatus\",\n    value: function _layoutStatus() {\n      var htmlContainer = this.groupBox.htmlComp,\n          containerPadding = htmlContainer.insets({\n        includeBorder: false\n      }),\n          top = containerPadding.top,\n          right = containerPadding.right,\n          $groupBoxTitle = this.groupBox.$title,\n          titleInnerHeight = $groupBoxTitle.innerHeight(),\n          $status = this.groupBox.$status,\n          statusMargins = graphics.margins($status),\n          statusPosition = this.groupBox.statusPosition;\n      $status.cssWidth(this._statusWidth);\n\n      if (statusPosition === FormField.StatusPosition.DEFAULT) {\n        $status.cssTop(top + $groupBoxTitle.cssMarginTop()).cssRight(right).cssHeight(titleInnerHeight - statusMargins.vertical()).cssLineHeight(titleInnerHeight - statusMargins.vertical());\n      }\n    }\n  }, {\n    key: \"preferredLayoutSize\",\n    value: function preferredLayoutSize($container, options) {\n      options = options || {};\n\n      var htmlContainer = this.groupBox.htmlComp,\n          htmlGbBody = this._htmlGbBody(),\n          htmlMenuBar,\n          prefSize,\n          widthInPixel = 0,\n          heightInPixel = 0,\n          gridData = this.groupBox.gridData,\n          undoResponsive = false;\n\n      if (this.groupBox.responsive && options.widthHint) {\n        undoResponsive = ResponsiveManager.get().handleResponsive(this.groupBox, options.widthHint);\n      }\n\n      if (gridData) {\n        widthInPixel = gridData.widthInPixel;\n        heightInPixel = gridData.heightInPixel;\n      }\n\n      if (widthInPixel && heightInPixel) {\n        // If width and height are set there is no need to calculate anything -> just return it as preferred size\n        prefSize = new Dimension(widthInPixel, heightInPixel).add(htmlContainer.insets());\n        return prefSize;\n      } // Use explicit width as hint if set\n\n\n      if (!options.widthHint && widthInPixel) {\n        options.widthHint = widthInPixel;\n      } // HeightHint not supported\n\n\n      options.heightHint = null;\n\n      if (this.groupBox.expanded) {\n        prefSize = htmlGbBody.prefSize(options).add(htmlGbBody.margins());\n        htmlMenuBar = this._htmlMenuBar();\n\n        if (htmlMenuBar && this.groupBox.menuBarPosition !== GroupBox.MenuBarPosition.TITLE) {\n          prefSize.height += htmlMenuBar.prefSize(options).height;\n        }\n      } else {\n        prefSize = new Dimension(0, 0);\n      }\n\n      prefSize = prefSize.add(htmlContainer.insets());\n      prefSize.height += this._titleHeight();\n      prefSize.height += this._notificationHeight(options); // predefined height or width in pixel override other values\n\n      if (widthInPixel) {\n        prefSize.width = widthInPixel;\n      }\n\n      if (heightInPixel) {\n        prefSize.height = heightInPixel;\n      }\n\n      if (undoResponsive) {\n        ResponsiveManager.get().reset(this.groupBox);\n      }\n\n      return prefSize;\n    }\n  }, {\n    key: \"_titleHeight\",\n    value: function _titleHeight() {\n      return graphics.prefSize(this.groupBox.$title, true).height;\n    }\n  }, {\n    key: \"_notificationHeight\",\n    value: function _notificationHeight(options) {\n      options = options || {};\n\n      if (!this.groupBox.notification) {\n        return 0;\n      }\n\n      options.includeMargin = true;\n      return this.groupBox.notification.htmlComp.prefSize(options).height;\n    }\n  }, {\n    key: \"_menuBarSize\",\n    value: function _menuBarSize(htmlMenuBar, containerSize, statusWidth) {\n      var menuBarSize = MenuBarLayout.size(htmlMenuBar, containerSize);\n\n      if (!this.groupBox.mainBox) {\n        // adjust size of menubar as well if it is in a regular group box\n        menuBarSize.width -= statusWidth;\n      }\n\n      return menuBarSize;\n    }\n    /**\n     * Return menu-bar when it exists and it is visible.\n     */\n\n  }, {\n    key: \"_htmlMenuBar\",\n    value: function _htmlMenuBar() {\n      if (this.groupBox.menuBar && this.groupBox.menuBarVisible) {\n        var htmlMenuBar = HtmlComponent.optGet(this.groupBox.menuBar.$container);\n\n        if (htmlMenuBar && htmlMenuBar.isVisible()) {\n          return htmlMenuBar;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_htmlGbBody\",\n    value: function _htmlGbBody() {\n      return HtmlComponent.get(this.groupBox.$body);\n    }\n  }]);\n\n  return GroupBoxLayout;\n}(AbstractLayout);\n\nexport { GroupBoxLayout as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/groupbox/GroupBoxLayout.js"],"names":["AbstractLayout","Dimension","FormField","graphics","GroupBox","HtmlComponent","HtmlEnvironment","MenuBarLayout","ResponsiveManager","scrollbars","$","GroupBoxLayout","groupBox","_initDefaults","_htmlPropertyChangeHandler","_onHtmlEnvironmentPropertyChange","bind","get","on","one","off","_statusWidth","fieldStatusWidth","invalidateLayoutTree","$container","gbBodySize","menuBarSize","menuBarHeight","statusWidth","statusPosition","htmlContainer","htmlComp","htmlGbBody","_htmlGbBody","htmlMenuBar","_htmlMenuBar","tooltip","_tooltip","$groupBoxTitle","$title","$label","$status","containerSize","availableSize","subtract","insets","responsive","handleResponsive","width","isVisible","_layoutStatus","outerWidth","menuBarPosition","MenuBarPosition","TITLE","prefSize","exact","titleSize","titleLabelWidth","Math","ceil","menuBarWidth","titleWidth","floor","cssWidth","scaleFactor","rLabel","rMenuBar","max","_menuBarSize","height","setWidthForStatus","setSize","StatusPosition","TOP","margins","_titleHeight","_notificationHeight","log","isTraceEnabled","trace","rendered","position","scrollable","bodyLayoutConfig","minWidth","update","$comp","$element","marginX","cssMarginX","containerPadding","includeBorder","top","right","titleInnerHeight","innerHeight","statusMargins","DEFAULT","cssTop","cssMarginTop","cssRight","cssHeight","vertical","cssLineHeight","options","widthInPixel","heightInPixel","gridData","undoResponsive","widthHint","add","heightHint","expanded","reset","notification","includeMargin","size","mainBox","menuBar","menuBarVisible","optGet","$body"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, FormField, graphics, GroupBox, HtmlComponent, HtmlEnvironment, MenuBarLayout, ResponsiveManager, scrollbars} from '../../../index';\nimport $ from 'jquery';\n\nexport default class GroupBoxLayout extends AbstractLayout {\n\n  constructor(groupBox) {\n    super();\n    this.groupBox = groupBox;\n\n    this._initDefaults();\n\n    this._htmlPropertyChangeHandler = this._onHtmlEnvironmentPropertyChange.bind(this);\n    HtmlEnvironment.get().on('propertyChange', this._htmlPropertyChangeHandler);\n    this.groupBox.one('remove', function() {\n      HtmlEnvironment.get().off('propertyChange', this._htmlPropertyChangeHandler);\n    }.bind(this));\n  }\n\n  _initDefaults() {\n    this._statusWidth = HtmlEnvironment.get().fieldStatusWidth;\n  }\n\n  _onHtmlEnvironmentPropertyChange() {\n    this._initDefaults();\n    this.groupBox.invalidateLayoutTree();\n  }\n\n  layout($container) {\n    var gbBodySize,\n      menuBarSize,\n      menuBarHeight = 0,\n      statusWidth = 0,\n      statusPosition = this.groupBox.statusPosition,\n      htmlContainer = this.groupBox.htmlComp,\n      htmlGbBody = this._htmlGbBody(),\n      htmlMenuBar = this._htmlMenuBar(),\n      tooltip = this.groupBox._tooltip(),\n      $groupBoxTitle = this.groupBox.$title,\n      $label = this.groupBox.$label,\n      $status = this.groupBox.$status,\n      containerSize = htmlContainer.availableSize()\n        .subtract(htmlContainer.insets());\n\n    // apply responsive transformations if necessary.\n    if (this.groupBox.responsive) {\n      ResponsiveManager.get().handleResponsive(this.groupBox, containerSize.width);\n    }\n\n    if ($status && $status.isVisible()) {\n      this._layoutStatus();\n      statusWidth = $status.outerWidth(true);\n    }\n\n    // Menu-bar\n    if (htmlMenuBar) {\n      if (this.groupBox.menuBarPosition === GroupBox.MenuBarPosition.TITLE) {\n        // position: TITLE\n        // Use Math.floor/ceil and +1 to avoid rounding issues with text-ellipsis and title label\n        menuBarSize = htmlMenuBar.prefSize({\n          exact: true\n        });\n        var titleSize = graphics.prefSize(this.groupBox.$title);\n        var titleLabelWidth = Math.ceil(graphics.prefSize(this.groupBox.$label, true).width) + 1;\n        var menuBarWidth = menuBarSize.width;\n        var titleWidth = titleSize.width - statusWidth;\n\n        if ((titleLabelWidth + menuBarWidth) < titleWidth) {\n          // label and menu-bar both fit into the title\n          // let menu-bar use all the available width\n          menuBarWidth = Math.floor(titleWidth - titleLabelWidth);\n          menuBarSize.width = menuBarWidth;\n          $label.cssWidth('');\n\n        } else {\n          // label and menu-bar don't fit into the title\n          // scale down until both fit into the title, try to keep the same width-ratio (r)\n          var scaleFactor = (titleLabelWidth + menuBarWidth) / titleWidth;\n          var rLabel = (titleLabelWidth / titleWidth) / scaleFactor;\n          var rMenuBar = (menuBarWidth / titleWidth) / scaleFactor;\n\n          if (rLabel < rMenuBar) {\n            rLabel = Math.max(0.33, rLabel);\n            rMenuBar = 1.0 - rLabel;\n          } else {\n            rMenuBar = Math.max(0.33, rMenuBar);\n            rLabel = 1.0 - rMenuBar;\n          }\n\n          titleLabelWidth = rLabel * titleWidth;\n          menuBarWidth = rMenuBar * titleWidth;\n\n          menuBarSize.width = Math.floor(menuBarWidth);\n          $label.cssWidth(Math.floor(titleLabelWidth));\n        }\n      } else {\n        // position: TOP and BOTTOM\n        menuBarSize = this._menuBarSize(htmlMenuBar, containerSize, statusWidth);\n        menuBarHeight = menuBarSize.height;\n        setWidthForStatus($label);\n      }\n      htmlMenuBar.setSize(menuBarSize);\n    } else {\n      setWidthForStatus($label);\n    }\n\n    // Position of label and title\n    setWidthForStatus($groupBoxTitle);\n    if (statusPosition === FormField.StatusPosition.TOP) {\n      if (this.groupBox.menuBarPosition !== GroupBox.MenuBarPosition.TITLE) {\n        setWidthForStatus($label, statusWidth);\n      }\n    } else {\n      setWidthForStatus($groupBoxTitle, statusWidth);\n    }\n\n    gbBodySize = containerSize.subtract(htmlGbBody.margins());\n    gbBodySize.height -= this._titleHeight();\n    gbBodySize.height -= this._notificationHeight();\n    gbBodySize.height -= menuBarHeight;\n    $.log.isTraceEnabled() && $.log.trace('(GroupBoxLayout#layout) gbBodySize=' + gbBodySize);\n    htmlGbBody.setSize(gbBodySize);\n\n    // Make sure tooltip is at correct position after layouting, if there is one\n    if (tooltip && tooltip.rendered) {\n      tooltip.position();\n    }\n\n    if (htmlGbBody.scrollable || this.groupBox.bodyLayoutConfig.minWidth > 0) {\n      scrollbars.update(htmlGbBody.$comp);\n    }\n\n    // Make $element wider, so status is on the left\n    function setWidthForStatus($element, statusWidth) {\n      if (statusWidth) {\n        var marginX = $element.cssMarginX() + statusWidth;\n        $element.cssWidth('calc(100% - ' + marginX + 'px)');\n      } else {\n        $element.cssWidth('');\n      }\n    }\n  }\n\n  _layoutStatus() {\n    var htmlContainer = this.groupBox.htmlComp,\n      containerPadding = htmlContainer.insets({\n        includeBorder: false\n      }),\n      top = containerPadding.top,\n      right = containerPadding.right,\n      $groupBoxTitle = this.groupBox.$title,\n      titleInnerHeight = $groupBoxTitle.innerHeight(),\n      $status = this.groupBox.$status,\n      statusMargins = graphics.margins($status),\n      statusPosition = this.groupBox.statusPosition;\n\n    $status.cssWidth(this._statusWidth);\n    if (statusPosition === FormField.StatusPosition.DEFAULT) {\n      $status\n        .cssTop(top + $groupBoxTitle.cssMarginTop())\n        .cssRight(right)\n        .cssHeight(titleInnerHeight - statusMargins.vertical())\n        .cssLineHeight(titleInnerHeight - statusMargins.vertical());\n    }\n  }\n\n  preferredLayoutSize($container, options) {\n    options = options || {};\n    var htmlContainer = this.groupBox.htmlComp,\n      htmlGbBody = this._htmlGbBody(),\n      htmlMenuBar,\n      prefSize,\n      widthInPixel = 0,\n      heightInPixel = 0,\n      gridData = this.groupBox.gridData,\n      undoResponsive = false;\n\n    if (this.groupBox.responsive &&\n      options.widthHint) {\n      undoResponsive = ResponsiveManager.get().handleResponsive(this.groupBox, options.widthHint);\n    }\n\n    if (gridData) {\n      widthInPixel = gridData.widthInPixel;\n      heightInPixel = gridData.heightInPixel;\n    }\n    if (widthInPixel && heightInPixel) {\n      // If width and height are set there is no need to calculate anything -> just return it as preferred size\n      prefSize = new Dimension(widthInPixel, heightInPixel)\n        .add(htmlContainer.insets());\n      return prefSize;\n    }\n    // Use explicit width as hint if set\n    if (!options.widthHint && widthInPixel) {\n      options.widthHint = widthInPixel;\n    }\n    // HeightHint not supported\n    options.heightHint = null;\n\n    if (this.groupBox.expanded) {\n      prefSize = htmlGbBody.prefSize(options)\n        .add(htmlGbBody.margins());\n\n      htmlMenuBar = this._htmlMenuBar();\n      if (htmlMenuBar && this.groupBox.menuBarPosition !== GroupBox.MenuBarPosition.TITLE) {\n        prefSize.height += htmlMenuBar.prefSize(options).height;\n      }\n    } else {\n      prefSize = new Dimension(0, 0);\n    }\n    prefSize = prefSize.add(htmlContainer.insets());\n    prefSize.height += this._titleHeight();\n    prefSize.height += this._notificationHeight(options);\n\n    // predefined height or width in pixel override other values\n    if (widthInPixel) {\n      prefSize.width = widthInPixel;\n    }\n    if (heightInPixel) {\n      prefSize.height = heightInPixel;\n    }\n\n    if (undoResponsive) {\n      ResponsiveManager.get().reset(this.groupBox);\n    }\n\n    return prefSize;\n  }\n\n  _titleHeight() {\n    return graphics.prefSize(this.groupBox.$title, true).height;\n  }\n\n  _notificationHeight(options) {\n    options = options || {};\n    if (!this.groupBox.notification) {\n      return 0;\n    }\n    options.includeMargin = true;\n    return this.groupBox.notification.htmlComp.prefSize(options).height;\n  }\n\n  _menuBarSize(htmlMenuBar, containerSize, statusWidth) {\n    var menuBarSize = MenuBarLayout.size(htmlMenuBar, containerSize);\n    if (!this.groupBox.mainBox) {\n      // adjust size of menubar as well if it is in a regular group box\n      menuBarSize.width -= statusWidth;\n    }\n    return menuBarSize;\n  }\n\n  /**\n   * Return menu-bar when it exists and it is visible.\n   */\n  _htmlMenuBar() {\n    if (this.groupBox.menuBar && this.groupBox.menuBarVisible) {\n      var htmlMenuBar = HtmlComponent.optGet(this.groupBox.menuBar.$container);\n      if (htmlMenuBar && htmlMenuBar.isVisible()) {\n        return htmlMenuBar;\n      }\n    }\n    return null;\n  }\n\n  _htmlGbBody() {\n    return HtmlComponent.get(this.groupBox.$body);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}