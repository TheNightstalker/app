{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, HtmlComponent, LoadingSupport, LogicalGridData, LogicalGridLayoutConfig, LookupCall, objects, RadioButton, RadioButtonGroupGridConfig, RadioButtonGroupLayout, RadioButtonGroupLeftKeyStroke, RadioButtonGroupRightKeyStroke, scout, Status, TreeVisitResult, ValueField } from '../../../index';\nimport $ from 'jquery';\n\nvar RadioButtonGroup = /*#__PURE__*/function (_ValueField) {\n  _inherits(RadioButtonGroup, _ValueField);\n\n  var _super = _createSuper(RadioButtonGroup);\n\n  function RadioButtonGroup() {\n    var _this;\n\n    _classCallCheck(this, RadioButtonGroup);\n\n    _this = _super.call(this);\n    _this.logicalGrid = scout.create('scout.HorizontalGrid');\n    _this.layoutConfig = null;\n    _this.fields = [];\n    _this.radioButtons = [];\n    _this.gridColumnCount = RadioButtonGroup.DEFAULT_GRID_COLUMN_COUNT;\n    _this.selectedButton = null;\n    _this.$body = null;\n    _this.lookupStatus = null;\n    _this.lookupCall = null;\n    _this._lookupExecuted = false;\n    _this._selectButtonLocked = false;\n    _this._pendingLookup = null;\n    _this._lookupInProgress = false;\n    _this._currentLookupCall = null;\n\n    _this._addWidgetProperties(['fields']);\n\n    _this._addCloneProperties(['lookupCall', 'layoutConfig', 'gridColumnCount']);\n\n    _this._buttonPropertyChangeHandler = _this._onButtonPropertyChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RadioButtonGroup, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(RadioButtonGroup.prototype), \"_init\", this).call(this, model);\n\n      this._setLayoutConfig(this.layoutConfig);\n\n      this._setGridColumnCount(this.gridColumnCount);\n    }\n  }, {\n    key: \"_initValue\",\n    value: function _initValue(value) {\n      if (this.lookupCall) {\n        this._setLookupCall(this.lookupCall);\n      } // must be called before value is set\n\n\n      this._setFields(this.fields);\n\n      _get(_getPrototypeOf(RadioButtonGroup.prototype), \"_initValue\", this).call(this, value);\n    }\n    /**\n     * @override ModelAdapter.js\n     */\n\n  }, {\n    key: \"_initKeyStrokeContext\",\n    value: function _initKeyStrokeContext() {\n      _get(_getPrototypeOf(RadioButtonGroup.prototype), \"_initKeyStrokeContext\", this).call(this);\n\n      this.keyStrokeContext.registerKeyStroke([new RadioButtonGroupLeftKeyStroke(this), new RadioButtonGroupRightKeyStroke(this)]);\n    }\n  }, {\n    key: \"_initButtons\",\n    value: function _initButtons() {\n      this.radioButtons = this.fields.filter(function (formField) {\n        return formField instanceof RadioButton;\n      });\n      this.radioButtons.forEach(this._initButton.bind(this));\n    }\n  }, {\n    key: \"_initButton\",\n    value: function _initButton(button) {\n      if (button.events.count('propertyChange', this._buttonPropertyChangeHandler) === 0) {\n        button.on('propertyChange', this._buttonPropertyChangeHandler);\n      }\n\n      if (button.selected) {\n        this.setValue(button.radioValue);\n        this.selectButton(button);\n\n        if (button.focused) {\n          this.setFocused(true);\n        }\n      }\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.addContainer(this.$parent, 'radiobutton-group');\n      this.addLabel();\n      this.addMandatoryIndicator();\n      this.$body = this.$container.appendDiv('radiobutton-group-body');\n      this.htmlBody = HtmlComponent.install(this.$body, this.session);\n      this.htmlBody.setLayout(this._createBodyLayout()); // fields are rendered in _renderFields\n\n      this.addField(this.$body);\n      this.addStatus();\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(RadioButtonGroup.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderFields();\n\n      this._renderLayoutConfig();\n    }\n  }, {\n    key: \"_createBodyLayout\",\n    value: function _createBodyLayout() {\n      return new RadioButtonGroupLayout(this, this.layoutConfig);\n    }\n    /**\n     * @override Widgets.js\n     */\n\n  }, {\n    key: \"_setLogicalGrid\",\n    value: function _setLogicalGrid(logicalGrid) {\n      _get(_getPrototypeOf(RadioButtonGroup.prototype), \"_setLogicalGrid\", this).call(this, logicalGrid);\n\n      if (this.logicalGrid) {\n        this.logicalGrid.setGridConfig(new RadioButtonGroupGridConfig());\n      }\n    }\n    /**\n     * @override Widgets.js\n     */\n\n  }, {\n    key: \"invalidateLogicalGrid\",\n    value: function invalidateLogicalGrid(invalidateLayout) {\n      _get(_getPrototypeOf(RadioButtonGroup.prototype), \"invalidateLogicalGrid\", this).call(this, false);\n\n      if (scout.nvl(invalidateLayout, true) && this.rendered) {\n        this.htmlBody.invalidateLayoutTree();\n      }\n    }\n  }, {\n    key: \"setLayoutConfig\",\n    value: function setLayoutConfig(layoutConfig) {\n      this.setProperty('layoutConfig', layoutConfig);\n    }\n  }, {\n    key: \"_setLayoutConfig\",\n    value: function _setLayoutConfig(layoutConfig) {\n      if (!layoutConfig) {\n        layoutConfig = new LogicalGridLayoutConfig();\n      }\n\n      this._setProperty('layoutConfig', LogicalGridLayoutConfig.ensure(layoutConfig));\n    }\n  }, {\n    key: \"_renderLayoutConfig\",\n    value: function _renderLayoutConfig() {\n      this.layoutConfig.applyToLayout(this.htmlBody.layout);\n\n      if (this.rendered) {\n        this.htmlBody.invalidateLayoutTree();\n      }\n    }\n    /**\n     * @override ValueField.js\n     */\n\n  }, {\n    key: \"isClearable\",\n    value: function isClearable() {\n      return false;\n    }\n  }, {\n    key: \"getFields\",\n    value: function getFields() {\n      return this.fields;\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"visitFields\",\n    value: function visitFields(visitor) {\n      var treeVisitResult = _get(_getPrototypeOf(RadioButtonGroup.prototype), \"visitFields\", this).call(this, visitor);\n\n      if (treeVisitResult === TreeVisitResult.TERMINATE) {\n        return TreeVisitResult.TERMINATE;\n      }\n\n      if (treeVisitResult === TreeVisitResult.SKIP_SUBTREE) {\n        return;\n      }\n\n      var fields = this.getFields();\n\n      for (var i = 0; i < fields.length; i++) {\n        var field = fields[i];\n        treeVisitResult = field.visitFields(visitor);\n\n        if (treeVisitResult === TreeVisitResult.TERMINATE) {\n          return TreeVisitResult.TERMINATE;\n        }\n      }\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"getFocusableElement\",\n    value: function getFocusableElement() {\n      // The first button may not be focusable because it is not selected and therefore has no tab index -> find the first focusable button\n      return this.session.focusManager.findFirstFocusableElement(this.$container);\n    }\n  }, {\n    key: \"setFields\",\n    value: function setFields(fields) {\n      this.setProperty('fields', fields);\n    }\n  }, {\n    key: \"_setFields\",\n    value: function _setFields(fields) {\n      this._setProperty('fields', fields);\n\n      this._initButtons();\n    }\n  }, {\n    key: \"_renderFields\",\n    value: function _renderFields() {\n      this._ensureLookupCallExecuted();\n\n      this.fields.forEach(function (formField) {\n        formField.render(this.$body); // set each children layout data to logical grid data\n\n        formField.setLayoutData(new LogicalGridData(formField));\n\n        this._linkWithLabel(formField.$field);\n      }, this);\n\n      this._provideTabIndex(); // depends on rendered fields\n\n\n      this.invalidateLogicalGrid();\n      this.validateLayoutTree(); // prevent flickering\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_renderEnabled\",\n    value: function _renderEnabled() {\n      _get(_getPrototypeOf(RadioButtonGroup.prototype), \"_renderEnabled\", this).call(this);\n\n      this._provideTabIndex();\n    }\n    /**\n     * Set the selected (or first if none is selected) to tabbable\n     */\n\n  }, {\n    key: \"_provideTabIndex\",\n    value: function _provideTabIndex() {\n      var tabSet;\n      this.radioButtons.forEach(function (radioButton) {\n        if (radioButton.enabledComputed && this.enabledComputed && !tabSet) {\n          radioButton.setTabbable(true);\n          tabSet = radioButton;\n        } else if (tabSet && this.enabledComputed && radioButton.enabledComputed && radioButton.selected) {\n          tabSet.setTabbable(false);\n          radioButton.setTabbable(true);\n          tabSet = radioButton;\n        } else {\n          radioButton.setTabbable(false);\n        }\n      }, this);\n    }\n  }, {\n    key: \"setGridColumnCount\",\n    value: function setGridColumnCount(gridColumnCount) {\n      this.setProperty('gridColumnCount', gridColumnCount);\n    }\n  }, {\n    key: \"_setGridColumnCount\",\n    value: function _setGridColumnCount(gridColumnCount) {\n      if (gridColumnCount < 0) {\n        gridColumnCount = this._calcDefaultGridColumnCount();\n      }\n\n      if (gridColumnCount === this.gridColumnCount) {\n        return false;\n      }\n\n      this._setProperty('gridColumnCount', gridColumnCount);\n\n      this.invalidateLogicalGrid();\n      return true;\n    }\n  }, {\n    key: \"_calcDefaultGridColumnCount\",\n    value: function _calcDefaultGridColumnCount() {\n      var height = 1,\n          hints = this.gridDataHints;\n\n      if (hints && hints.h > 1) {\n        height = hints.h;\n      }\n\n      return Math.ceil(this.fields.length / height);\n    }\n  }, {\n    key: \"getButtonForRadioValue\",\n    value: function getButtonForRadioValue(radioValue) {\n      if (radioValue === null) {\n        return null;\n      }\n\n      return arrays.find(this.radioButtons, function (button) {\n        return objects.equals(button.radioValue, radioValue);\n      });\n    }\n    /**\n     * Search and then select the button with the corresponding radioValue\n     */\n\n  }, {\n    key: \"_validateValue\",\n    value: function _validateValue(value) {\n      _get(_getPrototypeOf(RadioButtonGroup.prototype), \"_validateValue\", this).call(this, value);\n\n      if (!this.initialized && this.lookupCall) {\n        // lookup call may not be started during field initialization. otherwise lookup prepare listeners cannot be attached.\n        // do not validate now (as there are no buttons yet, because the lookup call has not yet been executed).\n        // validation will be done later again when the lookup call is executed.\n        return value;\n      }\n\n      var lookupScheduled = this._ensureLookupCallExecuted();\n\n      if (lookupScheduled) {\n        // the first lookup was scheduled now: buttons are not yet available, not possible to select one. will be done later as soon as the lookup call is finished.\n        return value;\n      } // only show error if value is not null or undefined\n\n\n      var buttonToSelect = this.getButtonForRadioValue(value);\n\n      if (!buttonToSelect && value !== null && value !== undefined && !this._lookupInProgress) {\n        throw this.session.text('InvalidValueMessageX', value);\n      }\n\n      return value;\n    }\n  }, {\n    key: \"_valueChanged\",\n    value: function _valueChanged() {\n      _get(_getPrototypeOf(RadioButtonGroup.prototype), \"_valueChanged\", this).call(this); // Don't select button during initialization if value is null to not override selected state of a button\n\n\n      if (this.value !== null || this.initialized) {\n        this.selectButton(this.getButtonForRadioValue(this.value));\n      }\n    }\n  }, {\n    key: \"selectFirstButton\",\n    value: function selectFirstButton() {\n      this.selectButtonByIndex(0);\n    }\n  }, {\n    key: \"selectLastButton\",\n    value: function selectLastButton() {\n      this.selectButtonByIndex(this.radioButtons.length - 1);\n    }\n  }, {\n    key: \"selectButtonByIndex\",\n    value: function selectButtonByIndex(index) {\n      if (this.radioButtons.length && index >= 0 && index < this.radioButtons.length) {\n        this.selectButton(this.radioButtons[index]);\n      }\n    }\n  }, {\n    key: \"selectButton\",\n    value: function selectButton(radioButton) {\n      if (this.selectedButton === radioButton) {\n        // Already selected\n        return;\n      }\n\n      if (this._selectButtonLocked) {\n        // Don't execute when triggered by this function to make sure the states are updated before firing the selectButton event\n        return;\n      }\n\n      this._selectButtonLocked = true; // Deselect previously selected button\n\n      if (this.selectedButton) {\n        // Do not unset tabbable here, because at least one button has to be tabbable even if the button is deselected\n        this.selectedButton.setSelected(false);\n      } // Select new button\n\n\n      if (radioButton) {\n        var tabbableButton = this.getTabbableButton();\n        var needsFocus = false;\n\n        if (tabbableButton) {\n          // Only one button in the group should have a tab index -> remove it from the current tabbable button after the new button is tabbable.\n          // If that button is focused the newly selected button needs to gain the focus otherwise the focus would fall back to the body.\n          needsFocus = tabbableButton.isFocused();\n        }\n\n        radioButton.setSelected(true);\n        radioButton.setTabbable(true);\n\n        if (needsFocus) {\n          radioButton.focus();\n        }\n\n        if (tabbableButton && tabbableButton !== radioButton) {\n          tabbableButton.setTabbable(false);\n        }\n      }\n\n      this._selectButtonLocked = false;\n      this.setProperty('selectedButton', radioButton);\n    }\n  }, {\n    key: \"getTabbableButton\",\n    value: function getTabbableButton() {\n      return arrays.find(this.radioButtons, function (button) {\n        return button.visible && button.isTabbable();\n      });\n    }\n  }, {\n    key: \"insertButton\",\n    value: function insertButton(radioButton) {\n      var newFields = this.fields.slice();\n      newFields.push(radioButton);\n      this.setFields(newFields);\n    }\n  }, {\n    key: \"_onButtonPropertyChange\",\n    value: function _onButtonPropertyChange(event) {\n      if (event.propertyName === 'selected') {\n        var selected = event.newValue;\n\n        if (selected) {\n          this.setValue(event.source.radioValue);\n          this.selectButton(event.source);\n        } else if (event.source === this.selectedButton) {\n          this.selectButton(null);\n        }\n      } else if (event.propertyName === 'focused') {\n        this.setFocused(event.newValue);\n      }\n    }\n  }, {\n    key: \"_setLookupCall\",\n    value: function _setLookupCall(lookupCall) {\n      this._setProperty('lookupCall', LookupCall.ensure(lookupCall, this.session));\n\n      this._lookupExecuted = false;\n\n      if (this.rendered) {\n        this._ensureLookupCallExecuted();\n      }\n    }\n    /**\n     * @return {boolean} true if a lookup call execution has been scheduled now. false otherwise.\n     */\n\n  }, {\n    key: \"_ensureLookupCallExecuted\",\n    value: function _ensureLookupCallExecuted() {\n      if (!this.lookupCall) {\n        return false;\n      }\n\n      if (this._lookupExecuted) {\n        return false;\n      }\n\n      this._lookupByAll();\n\n      return true;\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_createLoadingSupport\",\n    value: function _createLoadingSupport() {\n      return new LoadingSupport({\n        widget: this,\n        $container: function () {\n          return this.$body;\n        }.bind(this)\n      });\n    }\n  }, {\n    key: \"_lookupByAll\",\n    value: function _lookupByAll() {\n      if (!this.lookupCall) {\n        return;\n      }\n\n      this._clearPendingLookup();\n\n      var deferred = $.Deferred();\n\n      var doneHandler = function (result) {\n        this._lookupByAllDone(result);\n\n        deferred.resolve(result);\n      }.bind(this);\n\n      this._executeLookup(this.lookupCall.cloneForAll(), true).done(doneHandler);\n\n      return deferred.promise();\n    }\n  }, {\n    key: \"_clearPendingLookup\",\n    value: function _clearPendingLookup() {\n      if (this._pendingLookup) {\n        clearTimeout(this._pendingLookup);\n        this._pendingLookup = null;\n      }\n    }\n    /**\n     * A wrapper function around lookup calls used to set the _lookupInProgress flag, and display the state in the UI.\n     */\n\n  }, {\n    key: \"_executeLookup\",\n    value: function _executeLookup(lookupCall, abortExisting) {\n      if (abortExisting && this._currentLookupCall) {\n        this._currentLookupCall.abort();\n      }\n\n      this._lookupInProgress = true;\n      this.setLoading(true);\n      this._currentLookupCall = lookupCall;\n      this.trigger('prepareLookupCall', {\n        lookupCall: lookupCall\n      });\n      return lookupCall.execute().always(function () {\n        this._lookupInProgress = false;\n        this._lookupExecuted = true;\n        this._currentLookupCall = null;\n        this.setLoading(false);\n\n        this._clearLookupStatus();\n      }.bind(this));\n    }\n  }, {\n    key: \"_lookupByAllDone\",\n    value: function _lookupByAllDone(result) {\n      try {\n        if (result.exception) {\n          // Oops! Something went wrong while the lookup has been processed.\n          this.setErrorStatus(Status.error({\n            message: result.exception\n          }));\n          return;\n        } // 'No data' case\n\n\n        if (result.lookupRows.length === 0) {\n          this.setLookupStatus(Status.warning({\n            message: this.session.text('SmartFieldNoDataFound'),\n            code: RadioButtonGroup.ErrorCode.NO_DATA\n          }));\n          return;\n        }\n\n        this._populateRadioButtonGroup(result);\n      } finally {\n        this.trigger('lookupCallDone', {\n          result: result\n        });\n      }\n    }\n  }, {\n    key: \"_populateRadioButtonGroup\",\n    value: function _populateRadioButtonGroup(result) {\n      var lookupRows = result.lookupRows;\n      var newFields = this.fields.slice();\n      lookupRows.forEach(function (lookupRow) {\n        newFields.push(this._createLookupRowRadioButton(lookupRow));\n      }, this);\n      this.setFields(newFields); // because the lookup call is asynchronus, reset the value so that it is revalidated.\n\n      this.setValue(this.value); // also select the button (the line above does not change the value, therefore _valueChanged is not called)\n\n      this.selectButton(this.getButtonForRadioValue(this.value));\n    }\n  }, {\n    key: \"_clearLookupStatus\",\n    value: function _clearLookupStatus() {\n      this.setLookupStatus(null);\n    }\n  }, {\n    key: \"setLookupStatus\",\n    value: function setLookupStatus(lookupStatus) {\n      this.setProperty('lookupStatus', lookupStatus);\n\n      if (this.rendered) {\n        this._renderErrorStatus();\n      }\n    }\n  }, {\n    key: \"_errorStatus\",\n    value: function _errorStatus() {\n      return this.lookupStatus || this.errorStatus;\n    }\n  }, {\n    key: \"_createLookupRowRadioButton\",\n    value: function _createLookupRowRadioButton(lookupRow) {\n      var button = {\n        parent: this,\n        label: lookupRow.text,\n        radioValue: lookupRow.key,\n        lookupRow: lookupRow\n      };\n\n      if (lookupRow.iconId) {\n        button.iconId = lookupRow.iconId;\n      }\n\n      if (lookupRow.tooltipText) {\n        button.tooltipText = lookupRow.tooltipText;\n      }\n\n      if (lookupRow.backgroundColor) {\n        button.backgroundColor = lookupRow.backgroundColor;\n      }\n\n      if (lookupRow.foregroundColor) {\n        button.foregroundColor = lookupRow.foregroundColor;\n      }\n\n      if (lookupRow.font) {\n        button.font = lookupRow.font;\n      }\n\n      if (lookupRow.enabled === false) {\n        button.enabled = false;\n      }\n\n      if (lookupRow.active === false) {\n        button.visible = false;\n      }\n\n      if (lookupRow.cssClass) {\n        button.cssClass = lookupRow.cssClass;\n      }\n\n      return scout.create('RadioButton', button);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(model, options) {\n      var clone = _get(_getPrototypeOf(RadioButtonGroup.prototype), \"clone\", this).call(this, model, options);\n\n      this._deepCloneProperties(clone, 'fields', options);\n\n      clone._initButtons();\n\n      return clone;\n    }\n  }]);\n\n  return RadioButtonGroup;\n}(ValueField);\n\n_defineProperty(RadioButtonGroup, \"DEFAULT_GRID_COLUMN_COUNT\", -1);\n\n_defineProperty(RadioButtonGroup, \"ErrorCode\", {\n  NO_DATA: 1\n});\n\nexport { RadioButtonGroup as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/radiobutton/RadioButtonGroup.js"],"names":["arrays","HtmlComponent","LoadingSupport","LogicalGridData","LogicalGridLayoutConfig","LookupCall","objects","RadioButton","RadioButtonGroupGridConfig","RadioButtonGroupLayout","RadioButtonGroupLeftKeyStroke","RadioButtonGroupRightKeyStroke","scout","Status","TreeVisitResult","ValueField","$","RadioButtonGroup","logicalGrid","create","layoutConfig","fields","radioButtons","gridColumnCount","DEFAULT_GRID_COLUMN_COUNT","selectedButton","$body","lookupStatus","lookupCall","_lookupExecuted","_selectButtonLocked","_pendingLookup","_lookupInProgress","_currentLookupCall","_addWidgetProperties","_addCloneProperties","_buttonPropertyChangeHandler","_onButtonPropertyChange","bind","model","_setLayoutConfig","_setGridColumnCount","value","_setLookupCall","_setFields","keyStrokeContext","registerKeyStroke","filter","formField","forEach","_initButton","button","events","count","on","selected","setValue","radioValue","selectButton","focused","setFocused","addContainer","$parent","addLabel","addMandatoryIndicator","$container","appendDiv","htmlBody","install","session","setLayout","_createBodyLayout","addField","addStatus","_renderFields","_renderLayoutConfig","setGridConfig","invalidateLayout","nvl","rendered","invalidateLayoutTree","setProperty","_setProperty","ensure","applyToLayout","layout","visitor","treeVisitResult","TERMINATE","SKIP_SUBTREE","getFields","i","length","field","visitFields","focusManager","findFirstFocusableElement","_initButtons","_ensureLookupCallExecuted","render","setLayoutData","_linkWithLabel","$field","_provideTabIndex","invalidateLogicalGrid","validateLayoutTree","tabSet","radioButton","enabledComputed","setTabbable","_calcDefaultGridColumnCount","height","hints","gridDataHints","h","Math","ceil","find","equals","initialized","lookupScheduled","buttonToSelect","getButtonForRadioValue","undefined","text","selectButtonByIndex","index","setSelected","tabbableButton","getTabbableButton","needsFocus","isFocused","focus","visible","isTabbable","newFields","slice","push","setFields","event","propertyName","newValue","source","_lookupByAll","widget","_clearPendingLookup","deferred","Deferred","doneHandler","result","_lookupByAllDone","resolve","_executeLookup","cloneForAll","done","promise","clearTimeout","abortExisting","abort","setLoading","trigger","execute","always","_clearLookupStatus","exception","setErrorStatus","error","message","lookupRows","setLookupStatus","warning","code","ErrorCode","NO_DATA","_populateRadioButtonGroup","lookupRow","_createLookupRowRadioButton","_renderErrorStatus","errorStatus","parent","label","key","iconId","tooltipText","backgroundColor","foregroundColor","font","enabled","active","cssClass","options","clone","_deepCloneProperties"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {\n  arrays,\n  HtmlComponent,\n  LoadingSupport,\n  LogicalGridData,\n  LogicalGridLayoutConfig,\n  LookupCall,\n  objects,\n  RadioButton,\n  RadioButtonGroupGridConfig,\n  RadioButtonGroupLayout,\n  RadioButtonGroupLeftKeyStroke,\n  RadioButtonGroupRightKeyStroke,\n  scout,\n  Status,\n  TreeVisitResult,\n  ValueField\n} from '../../../index';\nimport $ from 'jquery';\n\nexport default class RadioButtonGroup extends ValueField {\n\n  constructor() {\n    super();\n    this.logicalGrid = scout.create('scout.HorizontalGrid');\n    this.layoutConfig = null;\n    this.fields = [];\n    this.radioButtons = [];\n    this.gridColumnCount = RadioButtonGroup.DEFAULT_GRID_COLUMN_COUNT;\n    this.selectedButton = null;\n    this.$body = null;\n    this.lookupStatus = null;\n    this.lookupCall = null;\n\n    this._lookupExecuted = false;\n    this._selectButtonLocked = false;\n    this._pendingLookup = null;\n    this._lookupInProgress = false;\n    this._currentLookupCall = null;\n\n    this._addWidgetProperties(['fields']);\n    this._addCloneProperties(['lookupCall', 'layoutConfig', 'gridColumnCount']);\n    this._buttonPropertyChangeHandler = this._onButtonPropertyChange.bind(this);\n  }\n\n  static DEFAULT_GRID_COLUMN_COUNT = -1;\n\n  static ErrorCode = {\n    NO_DATA: 1\n  };\n\n  _init(model) {\n    super._init(model);\n\n    this._setLayoutConfig(this.layoutConfig);\n    this._setGridColumnCount(this.gridColumnCount);\n  }\n\n  _initValue(value) {\n    if (this.lookupCall) {\n      this._setLookupCall(this.lookupCall);\n    }\n    // must be called before value is set\n    this._setFields(this.fields);\n    super._initValue(value);\n  }\n\n  /**\n   * @override ModelAdapter.js\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    this.keyStrokeContext.registerKeyStroke([\n      new RadioButtonGroupLeftKeyStroke(this),\n      new RadioButtonGroupRightKeyStroke(this)\n    ]);\n  }\n\n  _initButtons() {\n    this.radioButtons = this.fields.filter(function(formField) {\n      return formField instanceof RadioButton;\n    });\n    this.radioButtons.forEach(this._initButton.bind(this));\n  }\n\n  _initButton(button) {\n    if (button.events.count('propertyChange', this._buttonPropertyChangeHandler) === 0) {\n      button.on('propertyChange', this._buttonPropertyChangeHandler);\n    }\n    if (button.selected) {\n      this.setValue(button.radioValue);\n      this.selectButton(button);\n      if (button.focused) {\n        this.setFocused(true);\n      }\n    }\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'radiobutton-group');\n    this.addLabel();\n    this.addMandatoryIndicator();\n\n    this.$body = this.$container.appendDiv('radiobutton-group-body');\n    this.htmlBody = HtmlComponent.install(this.$body, this.session);\n    this.htmlBody.setLayout(this._createBodyLayout());\n\n    // fields are rendered in _renderFields\n    this.addField(this.$body);\n    this.addStatus();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderFields();\n    this._renderLayoutConfig();\n  }\n\n  _createBodyLayout() {\n    return new RadioButtonGroupLayout(this, this.layoutConfig);\n  }\n\n  /**\n   * @override Widgets.js\n   */\n  _setLogicalGrid(logicalGrid) {\n    super._setLogicalGrid(logicalGrid);\n    if (this.logicalGrid) {\n      this.logicalGrid.setGridConfig(new RadioButtonGroupGridConfig());\n    }\n  }\n\n  /**\n   * @override Widgets.js\n   */\n  invalidateLogicalGrid(invalidateLayout) {\n    super.invalidateLogicalGrid(false);\n    if (scout.nvl(invalidateLayout, true) && this.rendered) {\n      this.htmlBody.invalidateLayoutTree();\n    }\n  }\n\n  setLayoutConfig(layoutConfig) {\n    this.setProperty('layoutConfig', layoutConfig);\n  }\n\n  _setLayoutConfig(layoutConfig) {\n    if (!layoutConfig) {\n      layoutConfig = new LogicalGridLayoutConfig();\n    }\n    this._setProperty('layoutConfig', LogicalGridLayoutConfig.ensure(layoutConfig));\n  }\n\n  _renderLayoutConfig() {\n    this.layoutConfig.applyToLayout(this.htmlBody.layout);\n    if (this.rendered) {\n      this.htmlBody.invalidateLayoutTree();\n    }\n  }\n\n  /**\n   * @override ValueField.js\n   */\n  isClearable() {\n    return false;\n  }\n\n  getFields() {\n    return this.fields;\n  }\n\n  /**\n   * @override\n   */\n  visitFields(visitor) {\n    var treeVisitResult = super.visitFields(visitor);\n    if (treeVisitResult === TreeVisitResult.TERMINATE) {\n      return TreeVisitResult.TERMINATE;\n    }\n\n    if (treeVisitResult === TreeVisitResult.SKIP_SUBTREE) {\n      return;\n    }\n\n    var fields = this.getFields();\n    for (var i = 0; i < fields.length; i++) {\n      var field = fields[i];\n      treeVisitResult = field.visitFields(visitor);\n      if (treeVisitResult === TreeVisitResult.TERMINATE) {\n        return TreeVisitResult.TERMINATE;\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  getFocusableElement() {\n    // The first button may not be focusable because it is not selected and therefore has no tab index -> find the first focusable button\n    return this.session.focusManager.findFirstFocusableElement(this.$container);\n  }\n\n  setFields(fields) {\n    this.setProperty('fields', fields);\n  }\n\n  _setFields(fields) {\n    this._setProperty('fields', fields);\n    this._initButtons();\n  }\n\n  _renderFields() {\n    this._ensureLookupCallExecuted();\n    this.fields.forEach(function(formField) {\n      formField.render(this.$body);\n\n      // set each children layout data to logical grid data\n      formField.setLayoutData(new LogicalGridData(formField));\n\n      this._linkWithLabel(formField.$field);\n    }, this);\n    this._provideTabIndex(); // depends on rendered fields\n    this.invalidateLogicalGrid();\n    this.validateLayoutTree(); // prevent flickering\n  }\n\n  /**\n   * @override\n   */\n  _renderEnabled() {\n    super._renderEnabled();\n    this._provideTabIndex();\n  }\n\n  /**\n   * Set the selected (or first if none is selected) to tabbable\n   */\n  _provideTabIndex() {\n    var tabSet;\n    this.radioButtons.forEach(function(radioButton) {\n      if (radioButton.enabledComputed && this.enabledComputed && !tabSet) {\n        radioButton.setTabbable(true);\n        tabSet = radioButton;\n      } else if (tabSet && this.enabledComputed && radioButton.enabledComputed && radioButton.selected) {\n        tabSet.setTabbable(false);\n        radioButton.setTabbable(true);\n        tabSet = radioButton;\n      } else {\n        radioButton.setTabbable(false);\n      }\n    }, this);\n  }\n\n  setGridColumnCount(gridColumnCount) {\n    this.setProperty('gridColumnCount', gridColumnCount);\n  }\n\n  _setGridColumnCount(gridColumnCount) {\n    if (gridColumnCount < 0) {\n      gridColumnCount = this._calcDefaultGridColumnCount();\n    }\n    if (gridColumnCount === this.gridColumnCount) {\n      return false;\n    }\n\n    this._setProperty('gridColumnCount', gridColumnCount);\n    this.invalidateLogicalGrid();\n    return true;\n  }\n\n  _calcDefaultGridColumnCount() {\n    var height = 1,\n      hints = this.gridDataHints;\n    if (hints && hints.h > 1) {\n      height = hints.h;\n    }\n    return Math.ceil(this.fields.length / height);\n  }\n\n  getButtonForRadioValue(radioValue) {\n    if (radioValue === null) {\n      return null;\n    }\n    return arrays.find(this.radioButtons, function(button) {\n      return objects.equals(button.radioValue, radioValue);\n    });\n  }\n\n  /**\n   * Search and then select the button with the corresponding radioValue\n   */\n  _validateValue(value) {\n    super._validateValue(value);\n\n    if (!this.initialized && this.lookupCall) {\n      // lookup call may not be started during field initialization. otherwise lookup prepare listeners cannot be attached.\n      // do not validate now (as there are no buttons yet, because the lookup call has not yet been executed).\n      // validation will be done later again when the lookup call is executed.\n      return value;\n    }\n\n    var lookupScheduled = this._ensureLookupCallExecuted();\n    if (lookupScheduled) {\n      // the first lookup was scheduled now: buttons are not yet available, not possible to select one. will be done later as soon as the lookup call is finished.\n      return value;\n    }\n\n    // only show error if value is not null or undefined\n    var buttonToSelect = this.getButtonForRadioValue(value);\n    if (!buttonToSelect && value !== null && value !== undefined && !this._lookupInProgress) {\n      throw this.session.text('InvalidValueMessageX', value);\n    }\n    return value;\n  }\n\n  _valueChanged() {\n    super._valueChanged();\n    // Don't select button during initialization if value is null to not override selected state of a button\n    if (this.value !== null || this.initialized) {\n      this.selectButton(this.getButtonForRadioValue(this.value));\n    }\n  }\n\n  selectFirstButton() {\n    this.selectButtonByIndex(0);\n  }\n\n  selectLastButton() {\n    this.selectButtonByIndex(this.radioButtons.length - 1);\n  }\n\n  selectButtonByIndex(index) {\n    if (this.radioButtons.length && index >= 0 && index < this.radioButtons.length) {\n      this.selectButton(this.radioButtons[index]);\n    }\n  }\n\n  selectButton(radioButton) {\n    if (this.selectedButton === radioButton) {\n      // Already selected\n      return;\n    }\n    if (this._selectButtonLocked) {\n      // Don't execute when triggered by this function to make sure the states are updated before firing the selectButton event\n      return;\n    }\n    this._selectButtonLocked = true;\n\n    // Deselect previously selected button\n    if (this.selectedButton) {\n      // Do not unset tabbable here, because at least one button has to be tabbable even if the button is deselected\n      this.selectedButton.setSelected(false);\n    }\n\n    // Select new button\n    if (radioButton) {\n      var tabbableButton = this.getTabbableButton();\n      var needsFocus = false;\n      if (tabbableButton) {\n        // Only one button in the group should have a tab index -> remove it from the current tabbable button after the new button is tabbable.\n        // If that button is focused the newly selected button needs to gain the focus otherwise the focus would fall back to the body.\n        needsFocus = tabbableButton.isFocused();\n      }\n      radioButton.setSelected(true);\n      radioButton.setTabbable(true);\n      if (needsFocus) {\n        radioButton.focus();\n      }\n      if (tabbableButton && tabbableButton !== radioButton) {\n        tabbableButton.setTabbable(false);\n      }\n    }\n    this._selectButtonLocked = false;\n    this.setProperty('selectedButton', radioButton);\n  }\n\n  getTabbableButton() {\n    return arrays.find(this.radioButtons, function(button) {\n      return button.visible && button.isTabbable();\n    });\n  }\n\n  insertButton(radioButton) {\n    var newFields = this.fields.slice();\n    newFields.push(radioButton);\n    this.setFields(newFields);\n  }\n\n  _onButtonPropertyChange(event) {\n    if (event.propertyName === 'selected') {\n      var selected = event.newValue;\n      if (selected) {\n        this.setValue(event.source.radioValue);\n        this.selectButton(event.source);\n      } else if (event.source === this.selectedButton) {\n        this.selectButton(null);\n      }\n    } else if (event.propertyName === 'focused') {\n      this.setFocused(event.newValue);\n    }\n  }\n\n  _setLookupCall(lookupCall) {\n    this._setProperty('lookupCall', LookupCall.ensure(lookupCall, this.session));\n    this._lookupExecuted = false;\n    if (this.rendered) {\n      this._ensureLookupCallExecuted();\n    }\n  }\n\n  /**\n   * @return {boolean} true if a lookup call execution has been scheduled now. false otherwise.\n   */\n  _ensureLookupCallExecuted() {\n    if (!this.lookupCall) {\n      return false;\n    }\n    if (this._lookupExecuted) {\n      return false;\n    }\n    this._lookupByAll();\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  _createLoadingSupport() {\n    return new LoadingSupport({\n      widget: this,\n      $container: function() {\n        return this.$body;\n      }.bind(this)\n    });\n  }\n\n  _lookupByAll() {\n    if (!this.lookupCall) {\n      return;\n    }\n\n    this._clearPendingLookup();\n\n    var deferred = $.Deferred();\n    var doneHandler = function(result) {\n      this._lookupByAllDone(result);\n      deferred.resolve(result);\n    }.bind(this);\n\n    this._executeLookup(this.lookupCall.cloneForAll(), true)\n      .done(doneHandler);\n\n    return deferred.promise();\n  }\n\n  _clearPendingLookup() {\n    if (this._pendingLookup) {\n      clearTimeout(this._pendingLookup);\n      this._pendingLookup = null;\n    }\n  }\n\n  /**\n   * A wrapper function around lookup calls used to set the _lookupInProgress flag, and display the state in the UI.\n   */\n  _executeLookup(lookupCall, abortExisting) {\n    if (abortExisting && this._currentLookupCall) {\n      this._currentLookupCall.abort();\n    }\n\n    this._lookupInProgress = true;\n    this.setLoading(true);\n\n    this._currentLookupCall = lookupCall;\n    this.trigger('prepareLookupCall', {\n      lookupCall: lookupCall\n    });\n\n    return lookupCall\n      .execute()\n      .always(function() {\n        this._lookupInProgress = false;\n        this._lookupExecuted = true;\n        this._currentLookupCall = null;\n        this.setLoading(false);\n        this._clearLookupStatus();\n      }.bind(this));\n  }\n\n  _lookupByAllDone(result) {\n    try {\n\n      if (result.exception) {\n        // Oops! Something went wrong while the lookup has been processed.\n        this.setErrorStatus(Status.error({\n          message: result.exception\n        }));\n        return;\n      }\n\n      // 'No data' case\n      if (result.lookupRows.length === 0) {\n        this.setLookupStatus(Status.warning({\n          message: this.session.text('SmartFieldNoDataFound'),\n          code: RadioButtonGroup.ErrorCode.NO_DATA\n        }));\n        return;\n      }\n\n      this._populateRadioButtonGroup(result);\n\n    } finally {\n      this.trigger('lookupCallDone', {\n        result: result\n      });\n    }\n  }\n\n  _populateRadioButtonGroup(result) {\n    var lookupRows = result.lookupRows;\n    var newFields = this.fields.slice();\n    lookupRows.forEach(function(lookupRow) {\n      newFields.push(this._createLookupRowRadioButton(lookupRow));\n    }, this);\n    this.setFields(newFields);\n\n    // because the lookup call is asynchronus, reset the value so that it is revalidated.\n    this.setValue(this.value);\n    // also select the button (the line above does not change the value, therefore _valueChanged is not called)\n    this.selectButton(this.getButtonForRadioValue(this.value));\n  }\n\n  _clearLookupStatus() {\n    this.setLookupStatus(null);\n  }\n\n  setLookupStatus(lookupStatus) {\n    this.setProperty('lookupStatus', lookupStatus);\n    if (this.rendered) {\n      this._renderErrorStatus();\n    }\n  }\n\n  _errorStatus() {\n    return this.lookupStatus || this.errorStatus;\n  }\n\n  _createLookupRowRadioButton(lookupRow) {\n    var button = {\n      parent: this,\n      label: lookupRow.text,\n      radioValue: lookupRow.key,\n      lookupRow: lookupRow\n    };\n\n    if (lookupRow.iconId) {\n      button.iconId = lookupRow.iconId;\n    }\n    if (lookupRow.tooltipText) {\n      button.tooltipText = lookupRow.tooltipText;\n    }\n    if (lookupRow.backgroundColor) {\n      button.backgroundColor = lookupRow.backgroundColor;\n    }\n    if (lookupRow.foregroundColor) {\n      button.foregroundColor = lookupRow.foregroundColor;\n    }\n    if (lookupRow.font) {\n      button.font = lookupRow.font;\n    }\n    if (lookupRow.enabled === false) {\n      button.enabled = false;\n    }\n    if (lookupRow.active === false) {\n      button.visible = false;\n    }\n    if (lookupRow.cssClass) {\n      button.cssClass = lookupRow.cssClass;\n    }\n\n    return scout.create('RadioButton', button);\n  }\n\n  clone(model, options) {\n    var clone = super.clone(model, options);\n    this._deepCloneProperties(clone, 'fields', options);\n    clone._initButtons();\n    return clone;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}