{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Dimension, graphics, HtmlComponent, PopupLayout } from '../index';\n\nvar TableHeaderMenuLayout = /*#__PURE__*/function (_PopupLayout) {\n  _inherits(TableHeaderMenuLayout, _PopupLayout);\n\n  var _super = _createSuper(TableHeaderMenuLayout);\n\n  function TableHeaderMenuLayout(popup) {\n    var _this;\n\n    _classCallCheck(this, TableHeaderMenuLayout);\n\n    _this = _super.call(this, popup);\n    _this.popup = popup;\n    _this.doubleCalcPrefSize = false;\n    return _this;\n  }\n\n  _createClass(TableHeaderMenuLayout, [{\n    key: \"layout\",\n\n    /**\n     * When this layout method is called we've calculated the pref. size before. Layout does this:\n     * - layout the filter-fields (their size is fixed)\n     * - use the remaining height to layout the filter table\n     */\n    value: function layout($container) {\n      _get(_getPrototypeOf(TableHeaderMenuLayout.prototype), \"layout\", this).call(this, $container);\n\n      if (!this.popup.hasFilterFields && !this.popup.hasFilterTable) {\n        return;\n      }\n\n      var actionColumnSize,\n          filterColumnSize,\n          $filterColumn = this.popup.$columnFilters,\n          filterColumnInsets = graphics.insets($filterColumn),\n          filterColumnMargins = graphics.margins($filterColumn),\n          filterFieldGroupSize = new Dimension();\n\n      if (this.popup.$body.hasClass('compact')) {\n        // height is auto -> read pref size\n        filterColumnSize = HtmlComponent.get($filterColumn).prefSize();\n      } else {\n        // make filter column as height as body (since body is scrollable pref size is calculated which takes TABLE_MAX_HEIGHT into account)\n        filterColumnSize = this.preferredLayoutSize($container).subtract(graphics.insets($container));\n        filterColumnSize = filterColumnSize.subtract(filterColumnMargins);\n      } // width is always set with css\n\n\n      filterColumnSize.width = $filterColumn.cssWidth(); // Set explicit height, necessary if there is no filter table\n\n      $filterColumn.cssHeight(filterColumnSize.height); // TODO [7.0] cgu this code could be written a lot easier -> replace following code (filter fields, filter table) with HtmlComponent.get($filterColumn).setSize(filterColumnSize);\n      // Same for pref size. To implement max height of table, the RowLayout could read css max-height\n      // Filter fields\n\n      if (this.popup.hasFilterFields) {\n        var $filterFieldsGroup = this.popup.$filterFieldsGroup,\n            filterFieldHtmlComp = HtmlComponent.get($filterFieldsGroup.find('.form-field')); // Layout filter field(s) and get size\n\n        filterFieldHtmlComp.setSize(new Dimension(filterColumnSize.width - filterColumnInsets.horizontal(), this._filterFieldsGroupBoxHeight()));\n        filterFieldGroupSize = graphics.size($filterFieldsGroup, true);\n      } // Filter table\n\n\n      if (this.popup.hasFilterTable) {\n        var filterTableContainerHeight,\n            $filterTableGroup = this.popup.$filterTableGroup,\n            filterTableContainerInsets = graphics.insets($filterTableGroup),\n            filterTableHtmlComp = this.popup.filterTable.htmlComp;\n        filterTableContainerHeight = filterColumnSize.height - filterColumnInsets.vertical(); // subtract height of filter-fields container\n\n        filterTableContainerHeight -= filterFieldGroupSize.height; // subtract group-title height\n\n        filterTableContainerHeight -= this._groupTitleHeight($filterTableGroup); // subtract insets of table container\n\n        filterTableContainerHeight -= filterTableContainerInsets.vertical(); // limit height of table\n\n        filterTableContainerHeight = Math.min(filterTableContainerHeight, TableHeaderMenuLayout.TABLE_MAX_HEIGHT); // Layout filter table\n\n        filterTableHtmlComp.setSize(new Dimension(filterColumnSize.width - filterColumnInsets.horizontal(), filterTableContainerHeight));\n      } // fix width of actions column, so it doesn't become wider when user\n      // hovers over a button and thus the text of the group changes.\n\n\n      this._setMaxWidth();\n\n      actionColumnSize = graphics.size(this.popup.$columnActions);\n\n      this._setMaxWidth(actionColumnSize.width); // IE hack: IE adds some invisible space to the left box which causes unecessary scrollbars to appear. Setting the vertical align flags the following way seems to fix it...\n\n\n      this.popup.$columnActions.css('vertical-align', actionColumnSize.height >= filterColumnSize.height ? 'middle' : 'top');\n      $filterColumn.css('vertical-align', 'middle');\n    }\n  }, {\n    key: \"_adjustSizeWithAnchor\",\n    value: function _adjustSizeWithAnchor(prefSize) {\n      var maxWidth,\n          htmlComp = this.popup.htmlComp,\n          windowPaddingX = this.popup.windowPaddingX,\n          popupMargins = htmlComp.margins(),\n          popupBounds = htmlComp.offsetBounds(),\n          $window = this.popup.$container.window(),\n          windowWidth = $window.width();\n      maxWidth = windowWidth - popupMargins.horizontal() - popupBounds.x - windowPaddingX;\n      var compact = popupBounds.width > maxWidth;\n\n      if (compact) {\n        this.popup.$body.addClass('compact', compact);\n        prefSize = this.preferredLayoutSize(this.popup.$container);\n      }\n\n      return _get(_getPrototypeOf(TableHeaderMenuLayout.prototype), \"_adjustSizeWithAnchor\", this).call(this, prefSize);\n    } // group title (size used for table + field container)\n\n  }, {\n    key: \"_groupTitleHeight\",\n    value: function _groupTitleHeight($group) {\n      return graphics.size($group.find('.table-header-menu-group-text'), true).height;\n    }\n  }, {\n    key: \"_filterFieldsGroupBoxHeight\",\n    value: function _filterFieldsGroupBoxHeight() {\n      return this.popup.filterFieldsGroupBox.htmlComp.prefSize().height;\n    }\n    /**\n     * The preferred layout size of this widget is\n     * + size of table (but height is limited to TABLE_MAX_HEIGHT, if table becomes too large)\n     * + size of filter-fields\n     * + paddings of surrounding containers\n     */\n\n  }, {\n    key: \"preferredLayoutSize\",\n    value: function preferredLayoutSize($container, options) {\n      var prefSize,\n          filterColumnMargins,\n          filterColumnInsets,\n          rightColumnHeight = 0,\n          leftColumnHeight = 0,\n          containerInsets = graphics.insets($container),\n          oldMaxWidth = this._getMaxWidth();\n\n      this._setMaxWidth(); // temp. remove max-width so we can determine pref. size\n\n\n      leftColumnHeight = graphics.size(this.popup.$columnActions, true).height; // Filter table\n\n      if (this.popup.hasFilterTable) {\n        var $filterTableGroup = this.popup.$filterTableGroup,\n            filterTableHeight = this.popup.filterTable.htmlComp.size(true).height,\n            filterTableContainerInsets = graphics.insets($filterTableGroup),\n            filterTableContainerHeight; // limit height of table\n\n        filterTableHeight = Math.min(filterTableHeight, TableHeaderMenuLayout.TABLE_MAX_HEIGHT); // size of container with table\n\n        filterTableContainerHeight = filterTableHeight; // add group-title height\n\n        filterTableContainerHeight += this._groupTitleHeight($filterTableGroup); // add insets of container\n\n        filterTableContainerHeight += filterTableContainerInsets.vertical();\n        rightColumnHeight += filterTableContainerHeight;\n      } // Filter fields\n\n\n      if (this.popup.hasFilterFields) {\n        var $filterFieldsGroup = this.popup.$filterFieldsGroup,\n            filterFieldContainerInsets = graphics.insets($filterFieldsGroup),\n            filterFieldContainerHeight; // size of group-box with 1 or 2 filter fields\n\n        filterFieldContainerHeight = this._filterFieldsGroupBoxHeight(); // add group-title height\n\n        filterFieldContainerHeight += this._groupTitleHeight($filterFieldsGroup); // add insets of container\n\n        filterFieldContainerHeight += filterFieldContainerInsets.vertical();\n        rightColumnHeight += filterFieldContainerHeight;\n      }\n\n      if (this.popup.hasFilterFields || this.popup.hasFilterTable) {\n        filterColumnMargins = graphics.margins(this.popup.$columnFilters);\n        filterColumnInsets = graphics.insets(this.popup.$columnFilters);\n        rightColumnHeight += filterColumnMargins.vertical();\n        rightColumnHeight += filterColumnInsets.vertical();\n      } // Use height of left or right column as preferred size (and add insets of container)\n\n\n      prefSize = graphics.prefSize($container);\n\n      if (!this.popup.$body.hasClass('compact')) {\n        prefSize.height = Math.max(leftColumnHeight, rightColumnHeight) + containerInsets.vertical();\n      } else {\n        prefSize.height = leftColumnHeight + rightColumnHeight + containerInsets.vertical();\n      } // restore max-width\n\n\n      this._setMaxWidth(oldMaxWidth);\n\n      return prefSize;\n    }\n  }, {\n    key: \"_getMaxWidth\",\n    value: function _getMaxWidth() {\n      return this.popup.$columnActions.css('max-width');\n    }\n  }, {\n    key: \"_setMaxWidth\",\n    value: function _setMaxWidth(maxWidth) {\n      this.popup.$columnActions.css('max-width', maxWidth || '');\n    }\n  }]);\n\n  return TableHeaderMenuLayout;\n}(PopupLayout);\n\n_defineProperty(TableHeaderMenuLayout, \"TABLE_MAX_HEIGHT\", 330);\n\nexport { TableHeaderMenuLayout as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/table/TableHeaderMenuLayout.js"],"names":["Dimension","graphics","HtmlComponent","PopupLayout","TableHeaderMenuLayout","popup","doubleCalcPrefSize","$container","hasFilterFields","hasFilterTable","actionColumnSize","filterColumnSize","$filterColumn","$columnFilters","filterColumnInsets","insets","filterColumnMargins","margins","filterFieldGroupSize","$body","hasClass","get","prefSize","preferredLayoutSize","subtract","width","cssWidth","cssHeight","height","$filterFieldsGroup","filterFieldHtmlComp","find","setSize","horizontal","_filterFieldsGroupBoxHeight","size","filterTableContainerHeight","$filterTableGroup","filterTableContainerInsets","filterTableHtmlComp","filterTable","htmlComp","vertical","_groupTitleHeight","Math","min","TABLE_MAX_HEIGHT","_setMaxWidth","$columnActions","css","maxWidth","windowPaddingX","popupMargins","popupBounds","offsetBounds","$window","window","windowWidth","x","compact","addClass","$group","filterFieldsGroupBox","options","rightColumnHeight","leftColumnHeight","containerInsets","oldMaxWidth","_getMaxWidth","filterTableHeight","filterFieldContainerInsets","filterFieldContainerHeight","max"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Dimension, graphics, HtmlComponent, PopupLayout} from '../index';\n\nexport default class TableHeaderMenuLayout extends PopupLayout {\n\n  constructor(popup) {\n    super(popup);\n    this.popup = popup;\n    this.doubleCalcPrefSize = false;\n  }\n\n  static TABLE_MAX_HEIGHT = 330;\n\n  /**\n   * When this layout method is called we've calculated the pref. size before. Layout does this:\n   * - layout the filter-fields (their size is fixed)\n   * - use the remaining height to layout the filter table\n   */\n  layout($container) {\n    super.layout($container);\n\n    if (!this.popup.hasFilterFields && !this.popup.hasFilterTable) {\n      return;\n    }\n\n    var\n      actionColumnSize, filterColumnSize,\n      $filterColumn = this.popup.$columnFilters,\n      filterColumnInsets = graphics.insets($filterColumn),\n      filterColumnMargins = graphics.margins($filterColumn),\n      filterFieldGroupSize = new Dimension();\n\n    if (this.popup.$body.hasClass('compact')) {\n      // height is auto -> read pref size\n      filterColumnSize = HtmlComponent.get($filterColumn).prefSize();\n    } else {\n      // make filter column as height as body (since body is scrollable pref size is calculated which takes TABLE_MAX_HEIGHT into account)\n      filterColumnSize = this.preferredLayoutSize($container).subtract(graphics.insets($container));\n      filterColumnSize = filterColumnSize.subtract(filterColumnMargins);\n    }\n    // width is always set with css\n    filterColumnSize.width = $filterColumn.cssWidth();\n\n    // Set explicit height, necessary if there is no filter table\n    $filterColumn.cssHeight(filterColumnSize.height);\n\n    // TODO [7.0] cgu this code could be written a lot easier -> replace following code (filter fields, filter table) with HtmlComponent.get($filterColumn).setSize(filterColumnSize);\n    // Same for pref size. To implement max height of table, the RowLayout could read css max-height\n    // Filter fields\n    if (this.popup.hasFilterFields) {\n      var\n        $filterFieldsGroup = this.popup.$filterFieldsGroup,\n        filterFieldHtmlComp = HtmlComponent.get($filterFieldsGroup.find('.form-field'));\n\n      // Layout filter field(s) and get size\n      filterFieldHtmlComp.setSize(new Dimension(filterColumnSize.width - filterColumnInsets.horizontal(), this._filterFieldsGroupBoxHeight()));\n      filterFieldGroupSize = graphics.size($filterFieldsGroup, true);\n    }\n\n    // Filter table\n    if (this.popup.hasFilterTable) {\n      var\n        filterTableContainerHeight,\n        $filterTableGroup = this.popup.$filterTableGroup,\n        filterTableContainerInsets = graphics.insets($filterTableGroup),\n        filterTableHtmlComp = this.popup.filterTable.htmlComp;\n\n      filterTableContainerHeight = filterColumnSize.height - filterColumnInsets.vertical();\n      // subtract height of filter-fields container\n      filterTableContainerHeight -= filterFieldGroupSize.height;\n      // subtract group-title height\n      filterTableContainerHeight -= this._groupTitleHeight($filterTableGroup);\n      // subtract insets of table container\n      filterTableContainerHeight -= filterTableContainerInsets.vertical();\n      // limit height of table\n      filterTableContainerHeight = Math.min(filterTableContainerHeight, TableHeaderMenuLayout.TABLE_MAX_HEIGHT);\n\n      // Layout filter table\n      filterTableHtmlComp.setSize(new Dimension(\n        filterColumnSize.width - filterColumnInsets.horizontal(),\n        filterTableContainerHeight));\n    }\n\n    // fix width of actions column, so it doesn't become wider when user\n    // hovers over a button and thus the text of the group changes.\n    this._setMaxWidth();\n    actionColumnSize = graphics.size(this.popup.$columnActions);\n    this._setMaxWidth(actionColumnSize.width);\n\n    // IE hack: IE adds some invisible space to the left box which causes unecessary scrollbars to appear. Setting the vertical align flags the following way seems to fix it...\n    this.popup.$columnActions.css('vertical-align', actionColumnSize.height >= filterColumnSize.height ? 'middle' : 'top');\n    $filterColumn.css('vertical-align', 'middle');\n  }\n\n  _adjustSizeWithAnchor(prefSize) {\n    var maxWidth,\n      htmlComp = this.popup.htmlComp,\n      windowPaddingX = this.popup.windowPaddingX,\n      popupMargins = htmlComp.margins(),\n      popupBounds = htmlComp.offsetBounds(),\n      $window = this.popup.$container.window(),\n      windowWidth = $window.width();\n\n    maxWidth = (windowWidth - popupMargins.horizontal() - popupBounds.x - windowPaddingX);\n    var compact = popupBounds.width > maxWidth;\n    if (compact) {\n      this.popup.$body.addClass('compact', compact);\n      prefSize = this.preferredLayoutSize(this.popup.$container);\n    }\n\n    return super._adjustSizeWithAnchor(prefSize);\n  }\n\n  // group title (size used for table + field container)\n  _groupTitleHeight($group) {\n    return graphics.size($group.find('.table-header-menu-group-text'), true).height;\n  }\n\n  _filterFieldsGroupBoxHeight() {\n    return this.popup.filterFieldsGroupBox.htmlComp.prefSize().height;\n  }\n\n  /**\n   * The preferred layout size of this widget is\n   * + size of table (but height is limited to TABLE_MAX_HEIGHT, if table becomes too large)\n   * + size of filter-fields\n   * + paddings of surrounding containers\n   */\n  preferredLayoutSize($container, options) {\n    var prefSize, filterColumnMargins, filterColumnInsets,\n      rightColumnHeight = 0,\n      leftColumnHeight = 0,\n      containerInsets = graphics.insets($container),\n      oldMaxWidth = this._getMaxWidth();\n\n    this._setMaxWidth(); // temp. remove max-width so we can determine pref. size\n    leftColumnHeight = graphics.size(this.popup.$columnActions, true).height;\n\n    // Filter table\n    if (this.popup.hasFilterTable) {\n      var\n        $filterTableGroup = this.popup.$filterTableGroup,\n        filterTableHeight = this.popup.filterTable.htmlComp.size(true).height,\n        filterTableContainerInsets = graphics.insets($filterTableGroup),\n        filterTableContainerHeight;\n\n      // limit height of table\n      filterTableHeight = Math.min(filterTableHeight, TableHeaderMenuLayout.TABLE_MAX_HEIGHT);\n      // size of container with table\n      filterTableContainerHeight = filterTableHeight;\n      // add group-title height\n      filterTableContainerHeight += this._groupTitleHeight($filterTableGroup);\n      // add insets of container\n      filterTableContainerHeight += filterTableContainerInsets.vertical();\n\n      rightColumnHeight += filterTableContainerHeight;\n    }\n\n    // Filter fields\n    if (this.popup.hasFilterFields) {\n      var\n        $filterFieldsGroup = this.popup.$filterFieldsGroup,\n        filterFieldContainerInsets = graphics.insets($filterFieldsGroup),\n        filterFieldContainerHeight;\n\n      // size of group-box with 1 or 2 filter fields\n      filterFieldContainerHeight = this._filterFieldsGroupBoxHeight();\n      // add group-title height\n      filterFieldContainerHeight += this._groupTitleHeight($filterFieldsGroup);\n      // add insets of container\n      filterFieldContainerHeight += filterFieldContainerInsets.vertical();\n\n      rightColumnHeight += filterFieldContainerHeight;\n    }\n\n    if (this.popup.hasFilterFields || this.popup.hasFilterTable) {\n      filterColumnMargins = graphics.margins(this.popup.$columnFilters);\n      filterColumnInsets = graphics.insets(this.popup.$columnFilters);\n      rightColumnHeight += filterColumnMargins.vertical();\n      rightColumnHeight += filterColumnInsets.vertical();\n    }\n\n    // Use height of left or right column as preferred size (and add insets of container)\n    prefSize = graphics.prefSize($container);\n    if (!this.popup.$body.hasClass('compact')) {\n      prefSize.height = Math.max(leftColumnHeight, rightColumnHeight) + containerInsets.vertical();\n    } else {\n      prefSize.height = leftColumnHeight + rightColumnHeight + containerInsets.vertical();\n    }\n\n    // restore max-width\n    this._setMaxWidth(oldMaxWidth);\n\n    return prefSize;\n  }\n\n  _getMaxWidth() {\n    return this.popup.$columnActions.css('max-width');\n  }\n\n  _setMaxWidth(maxWidth) {\n    this.popup.$columnActions.css('max-width', maxWidth || '');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}