{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { icons, NavigateButton } from '../../../index';\nimport $ from 'jquery';\n\nvar NavigateUpButton = /*#__PURE__*/function (_NavigateButton) {\n  _inherits(NavigateUpButton, _NavigateButton);\n\n  var _super = _createSuper(NavigateUpButton);\n\n  function NavigateUpButton() {\n    var _this;\n\n    _classCallCheck(this, NavigateUpButton);\n\n    _this = _super.call(this);\n    _this._defaultIconId = icons.ANGLE_UP;\n    _this._defaultText = 'ui.Up';\n    _this._additionalCssClass = 'small-gap';\n    _this.iconId = _this._defaultIconId;\n    _this.keyStroke = 'backspace';\n    return _this;\n  }\n\n  _createClass(NavigateUpButton, [{\n    key: \"_render\",\n    value: function _render() {\n      _get(_getPrototypeOf(NavigateUpButton.prototype), \"_render\", this).call(this);\n\n      this.$container.addClass('up');\n    }\n  }, {\n    key: \"_isDetail\",\n    value: function _isDetail() {\n      // Button is in \"detail mode\" if there are both detail form and detail table visible and detail form _is_ hidden.\n      return !!(this.node.detailFormVisible && this.node.detailForm && this.node.detailTableVisible && this.node.detailTable && !this.node.detailFormVisibleByUi);\n    }\n  }, {\n    key: \"_toggleDetail\",\n    value: function _toggleDetail() {\n      return true;\n    }\n    /**\n     * Returns true when current node has either a parentNode or if current node is a\n     * top-level node without a parent and the outline has a default detail-form.\n     */\n\n  }, {\n    key: \"_buttonEnabled\",\n    value: function _buttonEnabled() {\n      var parentNode = this.node.parentNode;\n      return !!parentNode || !!this.outline.defaultDetailForm || !!this.outline.outlineOverview;\n    }\n  }, {\n    key: \"_drill\",\n    value: function _drill() {\n      var parentNode = this.node.parentNode;\n\n      if (parentNode) {\n        $.log.isDebugEnabled() && $.log.debug('drill up to node ' + parentNode);\n        this.outline.navigateUpInProgress = true;\n        this.outline.selectNodes(parentNode);\n        this.outline.collapseNode(parentNode, {\n          collapseChildNodes: true\n        });\n      } else {\n        $.log.isDebugEnabled() && $.log.debug('drill up to top');\n        this.outline.navigateToTop();\n      }\n    }\n  }]);\n\n  return NavigateUpButton;\n}(NavigateButton);\n\nexport { NavigateUpButton as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/desktop/outline/navigation/NavigateUpButton.js"],"names":["icons","NavigateButton","$","NavigateUpButton","_defaultIconId","ANGLE_UP","_defaultText","_additionalCssClass","iconId","keyStroke","$container","addClass","node","detailFormVisible","detailForm","detailTableVisible","detailTable","detailFormVisibleByUi","parentNode","outline","defaultDetailForm","outlineOverview","log","isDebugEnabled","debug","navigateUpInProgress","selectNodes","collapseNode","collapseChildNodes","navigateToTop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,KAAR,EAAeC,cAAf,QAAoC,gBAApC;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEqBC,gB;;;;;AAEnB,8BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,cAAL,GAAsBJ,KAAK,CAACK,QAA5B;AACA,UAAKC,YAAL,GAAoB,OAApB;AACA,UAAKC,mBAAL,GAA2B,WAA3B;AACA,UAAKC,MAAL,GAAc,MAAKJ,cAAnB;AACA,UAAKK,SAAL,GAAiB,WAAjB;AANY;AAOb;;;;8BAES;AACR;;AACA,WAAKC,UAAL,CAAgBC,QAAhB,CAAyB,IAAzB;AACD;;;gCAEW;AACV;AACA,aAAO,CAAC,EAAE,KAAKC,IAAL,CAAUC,iBAAV,IAA+B,KAAKD,IAAL,CAAUE,UAAzC,IACR,KAAKF,IAAL,CAAUG,kBADF,IACwB,KAAKH,IAAL,CAAUI,WADlC,IACiD,CAAC,KAAKJ,IAAL,CAAUK,qBAD9D,CAAR;AAED;;;oCAEe;AACd,aAAO,IAAP;AACD;AAED;AACF;AACA;AACA;;;;qCACmB;AACf,UAAIC,UAAU,GAAG,KAAKN,IAAL,CAAUM,UAA3B;AACA,aAAO,CAAC,CAACA,UAAF,IAAgB,CAAC,CAAC,KAAKC,OAAL,CAAaC,iBAA/B,IAAoD,CAAC,CAAC,KAAKD,OAAL,CAAaE,eAA1E;AACD;;;6BAEQ;AACP,UAAIH,UAAU,GAAG,KAAKN,IAAL,CAAUM,UAA3B;;AACA,UAAIA,UAAJ,EAAgB;AACdhB,QAAAA,CAAC,CAACoB,GAAF,CAAMC,cAAN,MAA0BrB,CAAC,CAACoB,GAAF,CAAME,KAAN,CAAY,sBAAsBN,UAAlC,CAA1B;AACA,aAAKC,OAAL,CAAaM,oBAAb,GAAoC,IAApC;AACA,aAAKN,OAAL,CAAaO,WAAb,CAAyBR,UAAzB;AACA,aAAKC,OAAL,CAAaQ,YAAb,CAA0BT,UAA1B,EAAsC;AACpCU,UAAAA,kBAAkB,EAAE;AADgB,SAAtC;AAGD,OAPD,MAOO;AACL1B,QAAAA,CAAC,CAACoB,GAAF,CAAMC,cAAN,MAA0BrB,CAAC,CAACoB,GAAF,CAAME,KAAN,CAAY,iBAAZ,CAA1B;AACA,aAAKL,OAAL,CAAaU,aAAb;AACD;AACF;;;;EAhD2C5B,c;;SAAzBE,gB","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {icons, NavigateButton} from '../../../index';\nimport $ from 'jquery';\n\nexport default class NavigateUpButton extends NavigateButton {\n\n  constructor() {\n    super();\n    this._defaultIconId = icons.ANGLE_UP;\n    this._defaultText = 'ui.Up';\n    this._additionalCssClass = 'small-gap';\n    this.iconId = this._defaultIconId;\n    this.keyStroke = 'backspace';\n  }\n\n  _render() {\n    super._render();\n    this.$container.addClass('up');\n  }\n\n  _isDetail() {\n    // Button is in \"detail mode\" if there are both detail form and detail table visible and detail form _is_ hidden.\n    return !!(this.node.detailFormVisible && this.node.detailForm &&\n      this.node.detailTableVisible && this.node.detailTable && !this.node.detailFormVisibleByUi);\n  }\n\n  _toggleDetail() {\n    return true;\n  }\n\n  /**\n   * Returns true when current node has either a parentNode or if current node is a\n   * top-level node without a parent and the outline has a default detail-form.\n   */\n  _buttonEnabled() {\n    var parentNode = this.node.parentNode;\n    return !!parentNode || !!this.outline.defaultDetailForm || !!this.outline.outlineOverview;\n  }\n\n  _drill() {\n    var parentNode = this.node.parentNode;\n    if (parentNode) {\n      $.log.isDebugEnabled() && $.log.debug('drill up to node ' + parentNode);\n      this.outline.navigateUpInProgress = true;\n      this.outline.selectNodes(parentNode);\n      this.outline.collapseNode(parentNode, {\n        collapseChildNodes: true\n      });\n    } else {\n      $.log.isDebugEnabled() && $.log.debug('drill up to top');\n      this.outline.navigateToTop();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}