{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport $ from 'jquery';\n\nvar FlexboxLayoutData = /*#__PURE__*/function () {\n  function FlexboxLayoutData(model) {\n    _classCallCheck(this, FlexboxLayoutData);\n\n    this._prepare(); // inital\n\n\n    this.relative = true;\n    this.grow = 1;\n    this.shrink = 1;\n    this.initial = 1;\n    this.order = 0;\n    $.extend(this, model); // ui properties\n\n    this.sizePx; // current display size in pixel\n\n    this.initialPx; // initial in pixel\n\n    this.delta;\n  }\n\n  _createClass(FlexboxLayoutData, [{\n    key: \"_prepare\",\n    value: function _prepare() {// nop. may be overridden by sub classes\n    }\n  }, {\n    key: \"withOrder\",\n    value: function withOrder(order) {\n      this.order = order;\n      return this;\n    }\n  }, {\n    key: \"acceptDelta\",\n    value: function acceptDelta(delta, apply) {\n      if (delta > 0) {\n        return this._grow(delta, apply);\n      }\n\n      return this._shrink(delta, apply);\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(size) {\n      if (this.grow === 0) {\n        size = Math.min(this.initialPx, size);\n      }\n\n      if (this.shrink === 0) {\n        size = Math.max(this.initialPx, size);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"_grow\",\n    value: function _grow(delta, apply) {\n      var maxDelta = 0,\n          consumedDelta = 0;\n\n      if (this.grow > 0) {\n        maxDelta = delta;\n      } else if (this.initialPx > this.sizePx) {\n        maxDelta = this.initialPx - this.sizePx;\n      }\n\n      consumedDelta = Math.min(delta, maxDelta);\n\n      if (apply) {\n        this.sizePx = this.sizePx + consumedDelta;\n      }\n\n      return delta - consumedDelta;\n    }\n  }, {\n    key: \"_shrink\",\n    value: function _shrink(delta, apply) {\n      var maxDelta = 0,\n          consumedDelta = 0;\n\n      if (this.shrink > 0) {\n        maxDelta = -this.sizePx + 20;\n      } else if (this.initialPx < this.sizePx) {\n        maxDelta = this.initialPx - this.sizePx;\n      }\n\n      consumedDelta = Math.max(delta, maxDelta);\n\n      if (apply) {\n        this.sizePx = this.sizePx + consumedDelta;\n      }\n\n      return delta - consumedDelta;\n    }\n    /* Static functions */\n\n  }], [{\n    key: \"fixed\",\n    value: function fixed(size) {\n      var layoutData = new FlexboxLayoutData();\n      layoutData.relative = false;\n      layoutData.initial = size || -1;\n      layoutData.grow = 0;\n      layoutData.shrink = 0;\n      return layoutData;\n    }\n  }]);\n\n  return FlexboxLayoutData;\n}();\n\nexport { FlexboxLayoutData as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/layout/flexbox/FlexboxLayoutData.js"],"names":["$","FlexboxLayoutData","model","_prepare","relative","grow","shrink","initial","order","extend","sizePx","initialPx","delta","apply","_grow","_shrink","size","Math","min","max","maxDelta","consumedDelta","layoutData"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport $ from 'jquery';\n\nexport default class FlexboxLayoutData {\n\n  constructor(model) {\n    this._prepare();\n    // inital\n    this.relative = true;\n    this.grow = 1;\n    this.shrink = 1;\n    this.initial = 1;\n    this.order = 0;\n    $.extend(this, model);\n    // ui properties\n    this.sizePx; // current display size in pixel\n    this.initialPx; // initial in pixel\n    this.delta;\n  }\n\n  _prepare() {\n    // nop. may be overridden by sub classes\n  }\n\n  withOrder(order) {\n    this.order = order;\n    return this;\n  }\n\n  acceptDelta(delta, apply) {\n    if (delta > 0) {\n      return this._grow(delta, apply);\n    }\n    return this._shrink(delta, apply);\n\n  }\n\n  validate(size) {\n    if (this.grow === 0) {\n      size = Math.min(this.initialPx, size);\n    }\n    if (this.shrink === 0) {\n      size = Math.max(this.initialPx, size);\n    }\n    return size;\n  }\n\n  _grow(delta, apply) {\n    var maxDelta = 0,\n      consumedDelta = 0;\n    if (this.grow > 0) {\n      maxDelta = delta;\n    } else if (this.initialPx > this.sizePx) {\n      maxDelta = this.initialPx - this.sizePx;\n    }\n    consumedDelta = Math.min(delta, maxDelta);\n    if (apply) {\n      this.sizePx = this.sizePx + consumedDelta;\n    }\n    return delta - consumedDelta;\n  }\n\n  _shrink(delta, apply) {\n    var maxDelta = 0,\n      consumedDelta = 0;\n    if (this.shrink > 0) {\n      maxDelta = -this.sizePx + 20;\n\n    } else if (this.initialPx < this.sizePx) {\n      maxDelta = this.initialPx - this.sizePx;\n    }\n    consumedDelta = Math.max(delta, maxDelta);\n    if (apply) {\n      this.sizePx = this.sizePx + consumedDelta;\n    }\n    return delta - consumedDelta;\n  }\n\n  /* Static functions */\n  static fixed(size) {\n    var layoutData = new FlexboxLayoutData();\n    layoutData.relative = false;\n    layoutData.initial = size || -1;\n    layoutData.grow = 0;\n    layoutData.shrink = 0;\n    return layoutData;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}