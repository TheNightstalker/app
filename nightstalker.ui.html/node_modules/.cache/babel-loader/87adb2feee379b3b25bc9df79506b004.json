{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { icons, NavigateButton, Page } from '../../../index';\nimport $ from 'jquery';\n\nvar NavigateDownButton = /*#__PURE__*/function (_NavigateButton) {\n  _inherits(NavigateDownButton, _NavigateButton);\n\n  var _super = _createSuper(NavigateDownButton);\n\n  function NavigateDownButton() {\n    var _this;\n\n    _classCallCheck(this, NavigateDownButton);\n\n    _this = _super.call(this);\n    _this._defaultIconId = icons.ANGLE_DOWN;\n    _this._defaultText = 'ui.Continue';\n    _this.iconId = _this._defaultIconId;\n    _this.keyStroke = 'enter';\n    _this._detailTableRowsSelectedHandler = _this._onDetailTableRowsSelected.bind(_assertThisInitialized(_this));\n    _this._outlinePageRowLinkHandler = _this._onOutlinePageRowLink.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NavigateDownButton, [{\n    key: \"_init\",\n    value: function _init(options) {\n      _get(_getPrototypeOf(NavigateDownButton.prototype), \"_init\", this).call(this, options);\n\n      if (this.node.detailTable) {\n        this.node.detailTable.on('rowsSelected', this._detailTableRowsSelectedHandler);\n      }\n\n      this.outline.on('pageRowLink', this._outlinePageRowLinkHandler);\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      if (this.node.detailTable) {\n        this.node.detailTable.off('rowsSelected', this._detailTableRowsSelectedHandler);\n      }\n\n      this.outline.off('pageRowLink', this._outlinePageRowLinkHandler);\n\n      _get(_getPrototypeOf(NavigateDownButton.prototype), \"_destroy\", this).call(this);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      _get(_getPrototypeOf(NavigateDownButton.prototype), \"_render\", this).call(this);\n\n      this.$container.addClass('down');\n    }\n  }, {\n    key: \"_isDetail\",\n    value: function _isDetail() {\n      // Button is in \"detail mode\" if there are both detail form and detail table visible and detail form is _not_ hidden.\n      return !!(this.node.detailFormVisible && this.node.detailForm && this.node.detailTableVisible && this.node.detailTable && this.node.detailFormVisibleByUi);\n    }\n  }, {\n    key: \"_toggleDetail\",\n    value: function _toggleDetail() {\n      return false;\n    }\n  }, {\n    key: \"_buttonEnabled\",\n    value: function _buttonEnabled() {\n      if (this._isDetail()) {\n        return true;\n      }\n\n      if (this.node.leaf) {\n        return false;\n      } // when it's not a leaf and not a detail - the button is only enabled when a single row is selected and that row is linked to a page\n\n\n      var table = this.node.detailTable;\n\n      if (table) {\n        return table.selectedRows.length === 1 && !!table.selectedRows[0].page;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_drill\",\n    value: function _drill() {\n      var drillNode;\n\n      if (this.node.detailTable) {\n        var row = this.node.detailTable.selectedRow();\n        drillNode = this.node.pageForTableRow(row);\n      } else {\n        drillNode = this.node.childNodes[0];\n      }\n\n      if (drillNode) {\n        $.log.isDebugEnabled() && $.log.debug('drill down to node ' + drillNode); // Collapse other expanded child nodes\n\n        var parentNode = drillNode.parentNode;\n\n        if (parentNode) {\n          parentNode.childNodes.forEach(function (childNode) {\n            if (childNode.expanded && childNode !== drillNode) {\n              this.outline.collapseNode(childNode, {\n                animateExpansion: false\n              });\n            }\n          }.bind(this));\n        } // Select the target node\n\n\n        this.outline.selectNodes(drillNode); // this also expands the parent node, if required\n        // If the parent node is a table page node, expand the drillNode\n        // --> Same logic as in OutlineMediator.mediateTableRowAction()\n\n        if (parentNode && parentNode.nodeType === Page.NodeType.TABLE) {\n          this.outline.expandNode(drillNode);\n        }\n      }\n    }\n  }, {\n    key: \"_onDetailTableRowsSelected\",\n    value: function _onDetailTableRowsSelected(event) {\n      this.updateEnabled();\n    }\n  }, {\n    key: \"_onOutlinePageRowLink\",\n    value: function _onOutlinePageRowLink(event) {\n      var table = this.node.detailTable;\n\n      if (table && table.selectedRows.length === 1 && table.selectedRows[0].page === event.page) {\n        this.updateEnabled();\n      }\n    }\n  }]);\n\n  return NavigateDownButton;\n}(NavigateButton);\n\nexport { NavigateDownButton as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/desktop/outline/navigation/NavigateDownButton.js"],"names":["icons","NavigateButton","Page","$","NavigateDownButton","_defaultIconId","ANGLE_DOWN","_defaultText","iconId","keyStroke","_detailTableRowsSelectedHandler","_onDetailTableRowsSelected","bind","_outlinePageRowLinkHandler","_onOutlinePageRowLink","options","node","detailTable","on","outline","off","$container","addClass","detailFormVisible","detailForm","detailTableVisible","detailFormVisibleByUi","_isDetail","leaf","table","selectedRows","length","page","drillNode","row","selectedRow","pageForTableRow","childNodes","log","isDebugEnabled","debug","parentNode","forEach","childNode","expanded","collapseNode","animateExpansion","selectNodes","nodeType","NodeType","TABLE","expandNode","event","updateEnabled"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {icons, NavigateButton, Page} from '../../../index';\nimport $ from 'jquery';\n\nexport default class NavigateDownButton extends NavigateButton {\n\n  constructor() {\n    super();\n    this._defaultIconId = icons.ANGLE_DOWN;\n    this._defaultText = 'ui.Continue';\n    this.iconId = this._defaultIconId;\n    this.keyStroke = 'enter';\n    this._detailTableRowsSelectedHandler = this._onDetailTableRowsSelected.bind(this);\n    this._outlinePageRowLinkHandler = this._onOutlinePageRowLink.bind(this);\n  }\n\n  _init(options) {\n    super._init(options);\n\n    if (this.node.detailTable) {\n      this.node.detailTable.on('rowsSelected', this._detailTableRowsSelectedHandler);\n    }\n    this.outline.on('pageRowLink', this._outlinePageRowLinkHandler);\n  }\n\n  _destroy() {\n    if (this.node.detailTable) {\n      this.node.detailTable.off('rowsSelected', this._detailTableRowsSelectedHandler);\n    }\n    this.outline.off('pageRowLink', this._outlinePageRowLinkHandler);\n\n    super._destroy();\n  }\n\n  _render() {\n    super._render();\n    this.$container.addClass('down');\n  }\n\n  _isDetail() {\n    // Button is in \"detail mode\" if there are both detail form and detail table visible and detail form is _not_ hidden.\n    return !!(this.node.detailFormVisible && this.node.detailForm &&\n      this.node.detailTableVisible && this.node.detailTable && this.node.detailFormVisibleByUi);\n  }\n\n  _toggleDetail() {\n    return false;\n  }\n\n  _buttonEnabled() {\n    if (this._isDetail()) {\n      return true;\n    }\n    if (this.node.leaf) {\n      return false;\n    }\n\n    // when it's not a leaf and not a detail - the button is only enabled when a single row is selected and that row is linked to a page\n    var table = this.node.detailTable;\n    if (table) {\n      return table.selectedRows.length === 1 && !!table.selectedRows[0].page;\n    }\n    return true;\n  }\n\n  _drill() {\n    var drillNode;\n\n    if (this.node.detailTable) {\n      var row = this.node.detailTable.selectedRow();\n      drillNode = this.node.pageForTableRow(row);\n    } else {\n      drillNode = this.node.childNodes[0];\n    }\n\n    if (drillNode) {\n      $.log.isDebugEnabled() && $.log.debug('drill down to node ' + drillNode);\n      // Collapse other expanded child nodes\n      var parentNode = drillNode.parentNode;\n      if (parentNode) {\n        parentNode.childNodes.forEach(function(childNode) {\n          if (childNode.expanded && childNode !== drillNode) {\n            this.outline.collapseNode(childNode, {\n              animateExpansion: false\n            });\n          }\n        }.bind(this));\n      }\n\n      // Select the target node\n      this.outline.selectNodes(drillNode); // this also expands the parent node, if required\n\n      // If the parent node is a table page node, expand the drillNode\n      // --> Same logic as in OutlineMediator.mediateTableRowAction()\n      if (parentNode && parentNode.nodeType === Page.NodeType.TABLE) {\n        this.outline.expandNode(drillNode);\n      }\n    }\n  }\n\n  _onDetailTableRowsSelected(event) {\n    this.updateEnabled();\n  }\n\n  _onOutlinePageRowLink(event) {\n    var table = this.node.detailTable;\n    if (table && table.selectedRows.length === 1 && table.selectedRows[0].page === event.page) {\n      this.updateEnabled();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}