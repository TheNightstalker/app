{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { icons } from '../index';\nexport function sumStart() {\n  return null;\n}\nexport function sumStep(currentState, newVal) {\n  if (typeof newVal === 'number') {\n    currentState = (currentState || 0) + newVal;\n  }\n\n  return currentState;\n}\nexport function sumFinish(currentState) {\n  return currentState;\n}\nvar sumSymbol = icons.SUM_BOLD;\nexport function avgStart() {\n  return {\n    sum: 0,\n    count: 0\n  };\n}\nexport function avgStep(currentState, newVal) {\n  if (typeof newVal === 'number') {\n    currentState.sum += newVal;\n    currentState.count += 1;\n  }\n\n  return currentState;\n}\nexport function avgFinish(currentState) {\n  if (currentState.count && currentState.count > 0) {\n    return currentState.sum * 1.0 / currentState.count;\n  }\n}\nvar avgSymbol = icons.AVG_BOLD;\nexport function minStart() {\n  return null;\n}\nexport function minStep(currentState, newVal) {\n  if (typeof newVal === 'number') {\n    if (typeof currentState === 'number') {\n      if (newVal < currentState) {\n        currentState = newVal;\n      }\n    } else {\n      currentState = newVal;\n    }\n  }\n\n  return currentState;\n}\nexport function minFinish(currentState) {\n  return currentState;\n}\nvar minSymbol = icons.MIN_BOLD;\nexport function maxStart() {\n  return null;\n}\nexport function maxStep(currentState, newVal) {\n  if (typeof newVal === 'number') {\n    if (typeof currentState === 'number') {\n      if (newVal > currentState) {\n        currentState = newVal;\n      }\n    } else {\n      currentState = newVal;\n    }\n  }\n\n  return currentState;\n}\nexport function maxFinish(currentState) {\n  return currentState;\n}\nvar maxSymbol = icons.MAX_BOLD;\nexport default {\n  avgFinish: avgFinish,\n  avgStart: avgStart,\n  avgStep: avgStep,\n  avgSymbol: avgSymbol,\n  maxFinish: maxFinish,\n  maxStart: maxStart,\n  maxStep: maxStep,\n  maxSymbol: maxSymbol,\n  minFinish: minFinish,\n  minStart: minStart,\n  minStep: minStep,\n  minSymbol: minSymbol,\n  sumFinish: sumFinish,\n  sumStart: sumStart,\n  sumStep: sumStep,\n  sumSymbol: sumSymbol\n};","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/util/aggregation.js"],"names":["icons","sumStart","sumStep","currentState","newVal","sumFinish","sumSymbol","SUM_BOLD","avgStart","sum","count","avgStep","avgFinish","avgSymbol","AVG_BOLD","minStart","minStep","minFinish","minSymbol","MIN_BOLD","maxStart","maxStep","maxFinish","maxSymbol","MAX_BOLD"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {icons} from '../index';\n\nexport function sumStart() {\n  return null;\n}\n\nexport function sumStep(currentState, newVal) {\n  if (typeof newVal === 'number') {\n    currentState = (currentState || 0) + newVal;\n  }\n  return currentState;\n}\n\nexport function sumFinish(currentState) {\n  return currentState;\n}\n\nlet sumSymbol = icons.SUM_BOLD;\n\nexport function avgStart() {\n  return {\n    sum: 0,\n    count: 0\n  };\n}\n\nexport function avgStep(currentState, newVal) {\n  if (typeof newVal === 'number') {\n    currentState.sum += newVal;\n    currentState.count += 1;\n  }\n  return currentState;\n}\n\nexport function avgFinish(currentState) {\n  if (currentState.count && currentState.count > 0) {\n    return (currentState.sum * 1.0) / currentState.count;\n  }\n}\n\nlet avgSymbol = icons.AVG_BOLD;\n\nexport function minStart() {\n  return null;\n}\n\nexport function minStep(currentState, newVal) {\n  if (typeof newVal === 'number') {\n    if (typeof currentState === 'number') {\n      if (newVal < currentState) {\n        currentState = newVal;\n      }\n    } else {\n      currentState = newVal;\n    }\n  }\n  return currentState;\n}\n\nexport function minFinish(currentState) {\n  return currentState;\n}\n\nlet minSymbol = icons.MIN_BOLD;\n\nexport function maxStart() {\n  return null;\n}\n\nexport function maxStep(currentState, newVal) {\n  if (typeof newVal === 'number') {\n    if (typeof currentState === 'number') {\n      if (newVal > currentState) {\n        currentState = newVal;\n      }\n    } else {\n      currentState = newVal;\n    }\n  }\n  return currentState;\n}\n\nexport function maxFinish(currentState) {\n  return currentState;\n}\n\nlet maxSymbol = icons.MAX_BOLD;\n\nexport default {\n  avgFinish,\n  avgStart,\n  avgStep,\n  avgSymbol,\n  maxFinish,\n  maxStart,\n  maxStep,\n  maxSymbol,\n  minFinish,\n  minStart,\n  minStep,\n  minSymbol,\n  sumFinish,\n  sumStart,\n  sumStep,\n  sumSymbol\n};\n"]},"metadata":{},"sourceType":"module"}