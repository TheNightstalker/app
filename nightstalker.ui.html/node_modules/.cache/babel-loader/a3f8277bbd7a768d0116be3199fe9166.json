{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nvar Route = /*#__PURE__*/function () {\n  function Route() {\n    _classCallCheck(this, Route);\n\n    this.location = null;\n  }\n  /**\n   * @returns {boolean} Whether or not this instance can handle the given location.\n   *\n   * @param {string} location\n   */\n\n\n  _createClass(Route, [{\n    key: \"matches\",\n    value: function matches(location) {\n      return false;\n    }\n    /**\n     * Called when the route is activated, stores the given location as instance variable.\n     * This is useful for the case where a single instance of Route handles multiple locations.\n     *\n     * @param {string} location\n     */\n\n  }, {\n    key: \"activate\",\n    value: function activate(location) {\n      this.location = location;\n    }\n    /**\n     * Called when route is deactivated because another route is activated. This is the place\n     * to perform clean-up operations.\n     */\n\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {}\n  }]);\n\n  return Route;\n}();\n\nexport { Route as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/router/Route.js"],"names":["Route","location"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACqBA,K;AAEnB,mBAAc;AAAA;;AACZ,SAAKC,QAAL,GAAgB,IAAhB;AACD;AAED;AACF;AACA;AACA;AACA;;;;;4BACUA,Q,EAAU;AAChB,aAAO,KAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;;6BACWA,Q,EAAU;AACjB,WAAKA,QAAL,GAAgBA,QAAhB;AACD;AAED;AACF;AACA;AACA;;;;iCACe,CAEZ;;;;;;SA/BkBD,K","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class Route {\n\n  constructor() {\n    this.location = null;\n  }\n\n  /**\n   * @returns {boolean} Whether or not this instance can handle the given location.\n   *\n   * @param {string} location\n   */\n  matches(location) {\n    return false;\n  }\n\n  /**\n   * Called when the route is activated, stores the given location as instance variable.\n   * This is useful for the case where a single instance of Route handles multiple locations.\n   *\n   * @param {string} location\n   */\n  activate(location) {\n    this.location = location;\n  }\n\n  /**\n   * Called when route is deactivated because another route is activated. This is the place\n   * to perform clean-up operations.\n   */\n  deactivate() {\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}