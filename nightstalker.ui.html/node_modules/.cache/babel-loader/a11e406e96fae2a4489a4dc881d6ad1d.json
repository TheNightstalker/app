{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, objects, strings } from '../index';\nimport $ from 'jquery';\n\nvar Status = /*#__PURE__*/function () {\n  function Status(model) {\n    _classCallCheck(this, Status);\n\n    this.message = null;\n    this.severity = Status.Severity.ERROR;\n    this.code = 0;\n    $.extend(this, model); // severity may be a string (e.g. if set in a model json file) -> convert to real severity\n\n    if (typeof this.severity === 'string') {\n      this.severity = Status.Severity[this.severity.toUpperCase()];\n    } // children\n\n\n    if (model && model.children && Array.isArray(model.children)) {\n      this.children = model.children.map(function (child) {\n        return Status.ensure(child);\n      });\n    }\n  }\n\n  _createClass(Status, [{\n    key: \"cssClass\",\n    value: function cssClass() {\n      return Status.cssClassForSeverity(this.severity);\n    }\n    /**\n     * @returns {boolean} true if severity is OK or INFO, false if severity is WARNING or ERROR.\n     */\n\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      return this.severity === Status.Severity.OK || this.severity === Status.Severity.INFO;\n    }\n  }, {\n    key: \"isError\",\n    value: function isError() {\n      return this.severity === Status.Severity.ERROR;\n    }\n  }, {\n    key: \"isWarning\",\n    value: function isWarning() {\n      return this.severity === Status.Severity.WARNING;\n    }\n  }, {\n    key: \"isInfo\",\n    value: function isInfo() {\n      return this.severity === Status.Severity.INFO;\n    }\n  }, {\n    key: \"isOk\",\n    value: function isOk() {\n      return this.severity === Status.Severity.OK;\n    }\n    /**\n     * @returns {Status[]} status including children as flat list.\n     */\n\n  }, {\n    key: \"asFlatList\",\n    value: function asFlatList() {\n      return Status.asFlatList(this);\n    }\n    /**\n     * @return {Status} a clone of this Status instance.\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var modelClone = $.extend({}, this);\n      return new Status(modelClone);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(o) {\n      if (!(o instanceof Status)) {\n        return false;\n      }\n\n      return objects.propertiesEquals(this, o, ['severity', 'message', 'invalidDate', 'invalidTime']);\n    }\n    /* --- STATIC HELPERS ------------------------------------------------------------- */\n\n    /**\n     * Null-safe static clone method.\n     */\n\n  }], [{\n    key: \"clone\",\n    value: function clone(original) {\n      return original ? original.clone() : null;\n    }\n    /**\n     * @param {number} severity\n     * @returns {string}\n     * @static\n     */\n\n  }, {\n    key: \"cssClassForSeverity\",\n    value: function cssClassForSeverity(severity) {\n      var cssSeverity,\n          Severity = Status.Severity;\n\n      switch (severity) {\n        case Severity.OK:\n          cssSeverity = 'ok';\n          break;\n\n        case Severity.INFO:\n          cssSeverity = 'info';\n          break;\n\n        case Severity.WARNING:\n          cssSeverity = 'warning';\n          break;\n\n        case Severity.ERROR:\n          cssSeverity = 'error';\n          break;\n      }\n\n      return cssSeverity;\n    }\n  }, {\n    key: \"animateStatusMessage\",\n    value: function animateStatusMessage($status, message) {\n      if (strings.endsWith(message, '...')) {\n        var $ellipsis = $status.makeSpan('ellipsis');\n\n        for (var i = 0; i < 3; i++) {\n          $ellipsis.append($status.makeSpan('animate-dot delay-' + i, '.'));\n        }\n\n        message = message.substring(0, message.length - 3);\n        $status.empty().text(message).append($ellipsis);\n      } else {\n        $status.text(message);\n      }\n    }\n  }, {\n    key: \"ensure\",\n    value: function ensure(status) {\n      if (!status) {\n        return status;\n      }\n\n      if (status instanceof Status) {\n        return status;\n      }\n\n      return new Status(status);\n    }\n    /**\n     * @returns {Status} a Status object with severity OK.\n     */\n\n  }, {\n    key: \"ok\",\n    value: function ok(model) {\n      return Status._create(model, Status.Severity.OK);\n    }\n    /**\n     * @returns {Status} a Status object with severity INFO.\n     */\n\n  }, {\n    key: \"info\",\n    value: function info(model) {\n      return Status._create(model, Status.Severity.INFO);\n    }\n    /**\n     * @returns {Status} a Status object with severity WARNING.\n     * @deprecated do not use this legacy function, use Status.warning() instead!\n     */\n\n  }, {\n    key: \"warn\",\n    value: function warn(model) {\n      if (!Status._warnDeprecationLogged && window.console && (window.console.warn || window.console.log)) {\n        (window.console.warn || window.console.log)('scout.Status.warn() is deprecated and will be removed in a future release. Please use Status.warning() instead.');\n        Status._warnDeprecationLogged = true; // only warn once\n      }\n\n      return Status.warning(model);\n    }\n    /**\n     * @returns {Status} a Status object with severity WARNING.\n     */\n\n  }, {\n    key: \"warning\",\n    value: function warning(model) {\n      return Status._create(model, Status.Severity.WARNING);\n    }\n    /**\n     * @returns {Status} a Status object with severity ERROR.\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(model) {\n      return Status._create(model, Status.Severity.ERROR);\n    }\n  }, {\n    key: \"_create\",\n    value: function _create(model, severity) {\n      if (typeof model === 'string') {\n        model = {\n          message: model\n        };\n      } else {\n        model = model || {};\n      }\n\n      model = $.extend({}, model, {\n        severity: severity\n      });\n      return new Status(model);\n    }\n    /**\n     * @returns {Status[]} all Status objects as flat list (goes through the status hierarchy)\n     */\n\n  }, {\n    key: \"asFlatList\",\n    value: function asFlatList(status) {\n      if (!status) {\n        return [];\n      }\n\n      var list = [];\n\n      if (status.children) {\n        status.children.forEach(function (childStatus) {\n          arrays.pushAll(list, Status.asFlatList(childStatus));\n        });\n      }\n\n      list.push(status);\n      return list;\n    }\n  }]);\n\n  return Status;\n}();\n\n_defineProperty(Status, \"Severity\", {\n  OK: 0x01,\n  INFO: 0x100,\n  WARNING: 0x10000,\n  ERROR: 0x1000000\n});\n\n_defineProperty(Status, \"SEVERITY_CSS_CLASSES\", 'error warning info ok');\n\n_defineProperty(Status, \"_warnDeprecationLogged\", false);\n\nexport { Status as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/util/Status.js"],"names":["arrays","objects","strings","$","Status","model","message","severity","Severity","ERROR","code","extend","toUpperCase","children","Array","isArray","map","child","ensure","cssClassForSeverity","OK","INFO","WARNING","asFlatList","modelClone","o","propertiesEquals","original","clone","cssSeverity","$status","endsWith","$ellipsis","makeSpan","i","append","substring","length","empty","text","status","_create","_warnDeprecationLogged","window","console","warn","log","warning","list","forEach","childStatus","pushAll","push"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, objects, strings} from '../index';\nimport $ from 'jquery';\n\nexport default class Status {\n\n  constructor(model) {\n    this.message = null;\n    this.severity = Status.Severity.ERROR;\n    this.code = 0;\n    $.extend(this, model);\n\n    // severity may be a string (e.g. if set in a model json file) -> convert to real severity\n    if (typeof this.severity === 'string') {\n      this.severity = Status.Severity[this.severity.toUpperCase()];\n    }\n    // children\n    if (model && model.children && Array.isArray(model.children)) {\n      this.children = model.children.map(function(child) {\n        return Status.ensure(child);\n      });\n    }\n  }\n\n  static Severity = {\n    OK: 0x01,\n    INFO: 0x100,\n    WARNING: 0x10000,\n    ERROR: 0x1000000\n  };\n\n  static SEVERITY_CSS_CLASSES = 'error warning info ok';\n\n  cssClass() {\n    return Status.cssClassForSeverity(this.severity);\n  }\n\n  /**\n   * @returns {boolean} true if severity is OK or INFO, false if severity is WARNING or ERROR.\n   */\n  isValid() {\n    return this.severity === Status.Severity.OK ||\n      this.severity === Status.Severity.INFO;\n  }\n\n  isError() {\n    return this.severity === Status.Severity.ERROR;\n  }\n\n  isWarning() {\n    return this.severity === Status.Severity.WARNING;\n  }\n\n  isInfo() {\n    return this.severity === Status.Severity.INFO;\n  }\n\n  isOk() {\n    return this.severity === Status.Severity.OK;\n  }\n\n  /**\n   * @returns {Status[]} status including children as flat list.\n   */\n  asFlatList() {\n    return Status.asFlatList(this);\n  }\n\n  /**\n   * @return {Status} a clone of this Status instance.\n   */\n  clone() {\n    var modelClone = $.extend({}, this);\n    return new Status(modelClone);\n  }\n\n  equals(o) {\n    if (!(o instanceof Status)) {\n      return false;\n    }\n    return objects.propertiesEquals(this, o, ['severity', 'message', 'invalidDate', 'invalidTime']);\n  }\n\n  /* --- STATIC HELPERS ------------------------------------------------------------- */\n\n  /**\n   * Null-safe static clone method.\n   */\n  static clone(original) {\n    return original ? original.clone() : null;\n  }\n\n  /**\n   * @param {number} severity\n   * @returns {string}\n   * @static\n   */\n  static cssClassForSeverity(severity) {\n    var cssSeverity,\n      Severity = Status.Severity;\n\n    switch (severity) {\n      case Severity.OK:\n        cssSeverity = 'ok';\n        break;\n      case Severity.INFO:\n        cssSeverity = 'info';\n        break;\n      case Severity.WARNING:\n        cssSeverity = 'warning';\n        break;\n      case Severity.ERROR:\n        cssSeverity = 'error';\n        break;\n    }\n    return cssSeverity;\n  }\n\n  static animateStatusMessage($status, message) {\n    if (strings.endsWith(message, '...')) {\n      var $ellipsis = $status.makeSpan('ellipsis');\n      for (var i = 0; i < 3; i++) {\n        $ellipsis.append($status.makeSpan('animate-dot delay-' + i, '.'));\n      }\n      message = message.substring(0, message.length - 3);\n      $status.empty().text(message).append($ellipsis);\n    } else {\n      $status.text(message);\n    }\n  }\n\n  static ensure(status) {\n    if (!status) {\n      return status;\n    }\n    if (status instanceof Status) {\n      return status;\n    }\n    return new Status(status);\n  }\n\n  /**\n   * @returns {Status} a Status object with severity OK.\n   */\n  static ok(model) {\n    return Status._create(model, Status.Severity.OK);\n  }\n\n  /**\n   * @returns {Status} a Status object with severity INFO.\n   */\n  static info(model) {\n    return Status._create(model, Status.Severity.INFO);\n  }\n\n  /**\n   * @returns {Status} a Status object with severity WARNING.\n   * @deprecated do not use this legacy function, use Status.warning() instead!\n   */\n  static _warnDeprecationLogged = false;\n\n  static warn(model) {\n    if (!Status._warnDeprecationLogged && window.console && (window.console.warn || window.console.log)) {\n      (window.console.warn || window.console.log)('scout.Status.warn() is deprecated and will be removed in a future release. Please use Status.warning() instead.');\n      Status._warnDeprecationLogged = true; // only warn once\n    }\n    return Status.warning(model);\n  }\n\n  /**\n   * @returns {Status} a Status object with severity WARNING.\n   */\n  static warning(model) {\n    return Status._create(model, Status.Severity.WARNING);\n  }\n\n  /**\n   * @returns {Status} a Status object with severity ERROR.\n   */\n  static error(model) {\n    return Status._create(model, Status.Severity.ERROR);\n  }\n\n  static _create(model, severity) {\n    if (typeof model === 'string') {\n      model = {\n        message: model\n      };\n    } else {\n      model = model || {};\n    }\n    model = $.extend({}, model, {\n      severity: severity\n    });\n    return new Status(model);\n  }\n\n  /**\n   * @returns {Status[]} all Status objects as flat list (goes through the status hierarchy)\n   */\n  static asFlatList(status) {\n    if (!status) {\n      return [];\n    }\n    var list = [];\n    if (status.children) {\n      status.children.forEach(function(childStatus) {\n        arrays.pushAll(list, Status.asFlatList(childStatus));\n      });\n    }\n    list.push(status);\n    return list;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}