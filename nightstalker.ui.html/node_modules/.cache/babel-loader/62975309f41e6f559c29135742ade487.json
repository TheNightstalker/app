{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, HierarchicalLookupResultBuilder, LookupCall, LookupRow, objects, QueryBy, scout, strings } from '../index';\nimport $ from 'jquery';\n/**\n * Base class for lookup calls with static or local data. Implement the _data() and _dataToLookupRow()\n * functions to provide data for lookup calls. Results are resolved as a Promise, the delay\n * property controls how long it takes until the promise is resolved. By default that value is 0.\n * You can set it to a higher value for testing purposes.\n *\n * By default we assume that the data array uses the following indices:\n * 0: key\n * 1: text\n * 2: parentKey (optional)\n */\n\nvar StaticLookupCall = /*#__PURE__*/function (_LookupCall) {\n  _inherits(StaticLookupCall, _LookupCall);\n\n  var _super = _createSuper(StaticLookupCall);\n\n  function StaticLookupCall() {\n    var _this;\n\n    _classCallCheck(this, StaticLookupCall);\n\n    _this = _super.call(this);\n    _this.delay = 0; // delay in [ms]\n\n    _this.data = null;\n    _this.active = true;\n    return _this;\n  }\n\n  _createClass(StaticLookupCall, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(StaticLookupCall.prototype), \"_init\", this).call(this, model);\n\n      if (!this.data) {\n        // data may either be provided by the model or by implementing the _data function\n        this.data = this._data();\n      }\n    }\n  }, {\n    key: \"refreshData\",\n    value: function refreshData(data) {\n      if (data === undefined) {\n        this.data = this._data();\n      } else {\n        this.data = data;\n      }\n    }\n  }, {\n    key: \"_getAll\",\n    value: function _getAll() {\n      var deferred = $.Deferred();\n      setTimeout(this._queryByAll.bind(this, deferred), this.delay);\n      return deferred.promise();\n    }\n  }, {\n    key: \"_queryByAll\",\n    value: function _queryByAll(deferred) {\n      deferred.resolve({\n        queryBy: QueryBy.ALL,\n        lookupRows: this._lookupRowsByAll()\n      });\n    }\n  }, {\n    key: \"_lookupRowsByAll\",\n    value: function _lookupRowsByAll() {\n      var datas = this.data.slice(0, StaticLookupCall.MAX_ROW_COUNT + 1);\n      return datas.map(this._dataToLookupRow, this).filter(this._filterActiveLookupRow, this);\n    }\n  }, {\n    key: \"_filterActiveLookupRow\",\n    value: function _filterActiveLookupRow(dataRow) {\n      if (objects.isNullOrUndefined(this.active)) {\n        return true;\n      }\n\n      return this.active === scout.nvl(dataRow.active, true);\n    }\n  }, {\n    key: \"_getByText\",\n    value: function _getByText(text) {\n      var deferred = $.Deferred();\n      setTimeout(this._queryByText.bind(this, deferred, text), this.delay);\n      return deferred.promise();\n    }\n  }, {\n    key: \"_queryByText\",\n    value: function _queryByText(deferred, text) {\n      var lookupRows = this._lookupRowsByText(text); // resolve non-hierarchical results immediately\n\n\n      if (!this.hierarchical) {\n        deferred.resolve({\n          queryBy: QueryBy.TEXT,\n          text: text,\n          lookupRows: lookupRows\n        });\n      } // if loadIncremental=false we must also load children\n\n\n      var promise,\n          builder = new HierarchicalLookupResultBuilder(this);\n\n      if (this.loadIncremental) {\n        promise = $.resolvedPromise(lookupRows);\n      } else {\n        promise = builder.addChildLookupRows(lookupRows);\n      } // hierarchical lookups must first load their parent nodes\n      // before we can resolve the results\n\n\n      promise.then(function (lookupRows) {\n        return builder.addParentLookupRows(lookupRows);\n      }).done(function (lookupRows) {\n        deferred.resolve({\n          queryBy: QueryBy.TEXT,\n          text: text,\n          lookupRows: lookupRows\n        });\n      }).fail(function (error) {\n        throw error;\n      });\n    }\n  }, {\n    key: \"_lookupRowsByText\",\n    value: function _lookupRowsByText(text) {\n      var datas = this.data.filter(function (data) {\n        return strings.startsWith(data[1].toLowerCase(), text.toLowerCase());\n      });\n      return datas.map(this._dataToLookupRow, this).filter(this._filterActiveLookupRow, this);\n    }\n  }, {\n    key: \"_getByKey\",\n    value: function _getByKey(key) {\n      var deferred = $.Deferred();\n      setTimeout(this._queryByKey.bind(this, deferred, key), this.delay);\n      return deferred.promise();\n    }\n  }, {\n    key: \"_queryByKey\",\n    value: function _queryByKey(deferred, key) {\n      var lookupRow = this._lookupRowByKey(key);\n\n      if (lookupRow) {\n        deferred.resolve({\n          queryBy: QueryBy.KEY,\n          lookupRows: [lookupRow]\n        });\n      } else {\n        deferred.reject();\n      }\n    }\n  }, {\n    key: \"_lookupRowByKey\",\n    value: function _lookupRowByKey(key) {\n      var data = arrays.find(this.data, function (data) {\n        return data[0] === key;\n      });\n\n      if (!data) {\n        return null;\n      }\n\n      return this._dataToLookupRow(data);\n    }\n  }, {\n    key: \"_getByRec\",\n    value: function _getByRec(rec) {\n      var deferred = $.Deferred();\n      setTimeout(this._queryByRec.bind(this, deferred, rec), this.delay);\n      return deferred.promise();\n    }\n  }, {\n    key: \"_queryByRec\",\n    value: function _queryByRec(deferred, rec) {\n      deferred.resolve({\n        queryBy: QueryBy.REC,\n        rec: rec,\n        lookupRows: this._lookupRowsByRec(rec)\n      });\n    }\n  }, {\n    key: \"_lookupRowsByRec\",\n    value: function _lookupRowsByRec(rec) {\n      return this.data.reduce(function (aggr, data) {\n        if (data[2] === rec) {\n          aggr.push(this._dataToLookupRow(data));\n        }\n\n        return aggr;\n      }.bind(this), []).filter(this._filterActiveLookupRow, this);\n    }\n  }, {\n    key: \"setDelay\",\n    value: function setDelay(delay) {\n      this.delay = delay;\n    }\n    /**\n     * Implement this function to convert a single data array into an instance of LookupRow.\n     */\n\n  }, {\n    key: \"_dataToLookupRow\",\n    value: function _dataToLookupRow(data) {\n      var lookupRow = scout.create('LookupRow', {\n        key: data[0],\n        text: data[1],\n        parentKey: data[2]\n      });\n      return lookupRow;\n    }\n    /**\n     * Implement this function to provide static data. The data should be an array of arrays,\n     * where the inner array contains the values required to create a LookupRow. By\n     * default the first two elements of the array are mandatory, the others are optional:\n     *\n     *   0: Key\n     *   1: Text\n     *   2: ParentKey (optional)\n     *\n     * When your data contains more elements you must also implement the _dataToLookupRow() function.\n     */\n\n  }, {\n    key: \"_data\",\n    value: function _data() {\n      return [];\n    }\n  }]);\n\n  return StaticLookupCall;\n}(LookupCall);\n\n_defineProperty(StaticLookupCall, \"MAX_ROW_COUNT\", 100);\n\nexport { StaticLookupCall as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/lookup/StaticLookupCall.js"],"names":["arrays","HierarchicalLookupResultBuilder","LookupCall","LookupRow","objects","QueryBy","scout","strings","$","StaticLookupCall","delay","data","active","model","_data","undefined","deferred","Deferred","setTimeout","_queryByAll","bind","promise","resolve","queryBy","ALL","lookupRows","_lookupRowsByAll","datas","slice","MAX_ROW_COUNT","map","_dataToLookupRow","filter","_filterActiveLookupRow","dataRow","isNullOrUndefined","nvl","text","_queryByText","_lookupRowsByText","hierarchical","TEXT","builder","loadIncremental","resolvedPromise","addChildLookupRows","then","addParentLookupRows","done","fail","error","startsWith","toLowerCase","key","_queryByKey","lookupRow","_lookupRowByKey","KEY","reject","find","rec","_queryByRec","REC","_lookupRowsByRec","reduce","aggr","push","create","parentKey"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, HierarchicalLookupResultBuilder, LookupCall, LookupRow, objects, QueryBy, scout, strings} from '../index';\nimport $ from 'jquery';\n\n/**\n * Base class for lookup calls with static or local data. Implement the _data() and _dataToLookupRow()\n * functions to provide data for lookup calls. Results are resolved as a Promise, the delay\n * property controls how long it takes until the promise is resolved. By default that value is 0.\n * You can set it to a higher value for testing purposes.\n *\n * By default we assume that the data array uses the following indices:\n * 0: key\n * 1: text\n * 2: parentKey (optional)\n */\nexport default class StaticLookupCall extends LookupCall {\n\n  constructor() {\n    super();\n\n    this.delay = 0; // delay in [ms]\n    this.data = null;\n    this.active = true;\n  }\n\n  static MAX_ROW_COUNT = 100;\n\n  _init(model) {\n    super._init(model);\n    if (!this.data) {\n      // data may either be provided by the model or by implementing the _data function\n      this.data = this._data();\n    }\n  }\n\n  refreshData(data) {\n    if (data === undefined) {\n      this.data = this._data();\n    } else {\n      this.data = data;\n    }\n  }\n\n  _getAll() {\n    var deferred = $.Deferred();\n    setTimeout(this._queryByAll.bind(this, deferred), this.delay);\n    return deferred.promise();\n  }\n\n  _queryByAll(deferred) {\n    deferred.resolve({\n      queryBy: QueryBy.ALL,\n      lookupRows: this._lookupRowsByAll()\n    });\n  }\n\n  _lookupRowsByAll() {\n    var datas = this.data.slice(0, StaticLookupCall.MAX_ROW_COUNT + 1);\n    return datas\n      .map(this._dataToLookupRow, this)\n      .filter(this._filterActiveLookupRow, this);\n  }\n\n  _filterActiveLookupRow(dataRow) {\n    if (objects.isNullOrUndefined(this.active)) {\n      return true;\n    }\n    return this.active === scout.nvl(dataRow.active, true);\n  }\n\n  _getByText(text) {\n    var deferred = $.Deferred();\n    setTimeout(this._queryByText.bind(this, deferred, text), this.delay);\n    return deferred.promise();\n  }\n\n  _queryByText(deferred, text) {\n    var lookupRows = this._lookupRowsByText(text);\n\n    // resolve non-hierarchical results immediately\n    if (!this.hierarchical) {\n      deferred.resolve({\n        queryBy: QueryBy.TEXT,\n        text: text,\n        lookupRows: lookupRows\n      });\n    }\n\n    // if loadIncremental=false we must also load children\n    var promise, builder = new HierarchicalLookupResultBuilder(this);\n    if (this.loadIncremental) {\n      promise = $.resolvedPromise(lookupRows);\n    } else {\n      promise = builder.addChildLookupRows(lookupRows);\n    }\n\n    // hierarchical lookups must first load their parent nodes\n    // before we can resolve the results\n    promise\n      .then(function(lookupRows) {\n        return builder.addParentLookupRows(lookupRows);\n      })\n      .done(function(lookupRows) {\n        deferred.resolve({\n          queryBy: QueryBy.TEXT,\n          text: text,\n          lookupRows: lookupRows\n        });\n      })\n      .fail(function(error) {\n        throw error;\n      });\n  }\n\n  _lookupRowsByText(text) {\n    var datas = this.data.filter(function(data) {\n      return strings.startsWith(data[1].toLowerCase(), text.toLowerCase());\n    });\n    return datas\n      .map(this._dataToLookupRow, this)\n      .filter(this._filterActiveLookupRow, this);\n  }\n\n  _getByKey(key) {\n    var deferred = $.Deferred();\n    setTimeout(this._queryByKey.bind(this, deferred, key), this.delay);\n    return deferred.promise();\n  }\n\n  _queryByKey(deferred, key) {\n    var lookupRow = this._lookupRowByKey(key);\n    if (lookupRow) {\n      deferred.resolve({\n        queryBy: QueryBy.KEY,\n        lookupRows: [lookupRow]\n      });\n    } else {\n      deferred.reject();\n    }\n  }\n\n  _lookupRowByKey(key) {\n    var data = arrays.find(this.data, function(data) {\n      return data[0] === key;\n    });\n    if (!data) {\n      return null;\n    }\n    return this._dataToLookupRow(data);\n  }\n\n  _getByRec(rec) {\n    var deferred = $.Deferred();\n    setTimeout(this._queryByRec.bind(this, deferred, rec), this.delay);\n    return deferred.promise();\n  }\n\n  _queryByRec(deferred, rec) {\n    deferred.resolve({\n      queryBy: QueryBy.REC,\n      rec: rec,\n      lookupRows: this._lookupRowsByRec(rec)\n    });\n  }\n\n  _lookupRowsByRec(rec) {\n    return this.data.reduce(function(aggr, data) {\n      if (data[2] === rec) {\n        aggr.push(this._dataToLookupRow(data));\n      }\n      return aggr;\n    }.bind(this), [])\n      .filter(this._filterActiveLookupRow, this);\n  }\n\n  setDelay(delay) {\n    this.delay = delay;\n  }\n\n  /**\n   * Implement this function to convert a single data array into an instance of LookupRow.\n   */\n  _dataToLookupRow(data) {\n    var lookupRow = scout.create('LookupRow', {\n      key: data[0],\n      text: data[1],\n      parentKey: data[2]\n    });\n    return lookupRow;\n  }\n\n  /**\n   * Implement this function to provide static data. The data should be an array of arrays,\n   * where the inner array contains the values required to create a LookupRow. By\n   * default the first two elements of the array are mandatory, the others are optional:\n   *\n   *   0: Key\n   *   1: Text\n   *   2: ParentKey (optional)\n   *\n   * When your data contains more elements you must also implement the _dataToLookupRow() function.\n   */\n  _data() {\n    return [];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}