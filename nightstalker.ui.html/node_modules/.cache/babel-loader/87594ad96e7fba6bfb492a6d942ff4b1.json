{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { FormMenu } from '../../index';\n\nvar TableControlAdapterMenu = /*#__PURE__*/function (_FormMenu) {\n  _inherits(TableControlAdapterMenu, _FormMenu);\n\n  var _super = _createSuper(TableControlAdapterMenu);\n\n  function TableControlAdapterMenu() {\n    var _this;\n\n    _classCallCheck(this, TableControlAdapterMenu);\n\n    _this = _super.call(this);\n    _this._tableControlPropertyChangeHandler = _this._onTableControlPropertyChange.bind(_assertThisInitialized(_this));\n    _this._tableControlDestroyHandler = _this._onTableControlDestroy.bind(_assertThisInitialized(_this));\n\n    _this._addCloneProperties(['tableControl']);\n\n    return _this;\n  }\n  /**\n   * @override Action.js\n   */\n\n\n  _createClass(TableControlAdapterMenu, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(TableControlAdapterMenu.prototype), \"_init\", this).call(this, model);\n\n      if (!this.tableControl) {\n        throw new Error('Cannot adapt to undefined tableControl');\n      }\n\n      this._installListeners();\n    }\n  }, {\n    key: \"_installListeners\",\n    value: function _installListeners() {\n      this.tableControl.on('propertyChange', this._tableControlPropertyChangeHandler);\n      this.tableControl.on('destroy', this._tableControlDestroyHandler);\n    }\n  }, {\n    key: \"_uninstallListeners\",\n    value: function _uninstallListeners() {\n      this.tableControl.off('propertyChange', this._tableControlPropertyChangeHandler);\n      this.tableControl.off('destroy', this._tableControlDestroyHandler);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      _get(_getPrototypeOf(TableControlAdapterMenu.prototype), \"_render\", this).call(this); // Convenience: Add ID of original tableControl to DOM for debugging purposes\n\n\n      this.$container.attr('data-tableControlAdapter', this.tableControl.id);\n    }\n  }, {\n    key: \"_onTableControlPropertyChange\",\n    value: function _onTableControlPropertyChange(event) {\n      // Whenever a tableControl property changes, apply the changes to the menu\n      var changedProperties = {};\n      changedProperties[event.propertyName] = event.newValue;\n      changedProperties = TableControlAdapterMenu.adaptTableControlProperties(changedProperties);\n\n      for (var prop in changedProperties) {\n        // NOSONAR\n        // Set the property (don't use callSetter because this may delegate to the table control)\n        this.setProperty(prop, changedProperties[prop]);\n      }\n    }\n  }, {\n    key: \"_onTableControlDestroy\",\n    value: function _onTableControlDestroy(event) {\n      this.destroy();\n\n      this._uninstallListeners();\n    }\n    /**\n     * @override Action.js\n     */\n\n  }, {\n    key: \"doAction\",\n    value: function doAction() {\n      return this.tableControl.doAction();\n    }\n    /**\n     * @override Action.js\n     */\n\n  }, {\n    key: \"setSelected\",\n    value: function setSelected(selected) {\n      this.tableControl.setSelected(selected);\n    }\n    /* --- STATIC HELPERS ------------------------------------------------------------- */\n\n    /**\n     * @memberOf TableControlAdapterMenu\n     */\n\n  }], [{\n    key: \"adaptTableControlProperties\",\n    value: function adaptTableControlProperties(tableControlProperties, menuProperties) {\n      menuProperties = menuProperties || {}; // Plain properties: simply copy, no translation required\n\n      ['text', 'iconId', 'enabled', 'visible', 'selected', 'tooltipText', 'keyStroke', 'keyStrokes', 'modelClass', 'classId', 'form'].forEach(function (prop) {\n        menuProperties[prop] = tableControlProperties[prop];\n      }); // Cleanup: Remove all properties that have value 'undefined' from the result object,\n      // otherwise, they would be applied to the model adapter.\n\n      for (var prop in menuProperties) {\n        if (menuProperties[prop] === undefined) {\n          delete menuProperties[prop];\n        }\n      }\n\n      return menuProperties;\n    }\n  }]);\n\n  return TableControlAdapterMenu;\n}(FormMenu);\n\nexport { TableControlAdapterMenu as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/table/controls/TableControlAdapterMenu.js"],"names":["FormMenu","TableControlAdapterMenu","_tableControlPropertyChangeHandler","_onTableControlPropertyChange","bind","_tableControlDestroyHandler","_onTableControlDestroy","_addCloneProperties","model","tableControl","Error","_installListeners","on","off","$container","attr","id","event","changedProperties","propertyName","newValue","adaptTableControlProperties","prop","setProperty","destroy","_uninstallListeners","doAction","selected","setSelected","tableControlProperties","menuProperties","forEach","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,QAAR,QAAuB,aAAvB;;IAEqBC,uB;;;;;AAEnB,qCAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,kCAAL,GAA0C,MAAKC,6BAAL,CAAmCC,IAAnC,+BAA1C;AACA,UAAKC,2BAAL,GAAmC,MAAKC,sBAAL,CAA4BF,IAA5B,+BAAnC;;AAEA,UAAKG,mBAAL,CAAyB,CAAC,cAAD,CAAzB;;AANY;AAOb;AAED;AACF;AACA;;;;;0BACQC,K,EAAO;AACX,yFAAYA,KAAZ;;AACA,UAAI,CAAC,KAAKC,YAAV,EAAwB;AACtB,cAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACD;;AACD,WAAKC,iBAAL;AACD;;;wCAEmB;AAClB,WAAKF,YAAL,CAAkBG,EAAlB,CAAqB,gBAArB,EAAuC,KAAKV,kCAA5C;AACA,WAAKO,YAAL,CAAkBG,EAAlB,CAAqB,SAArB,EAAgC,KAAKP,2BAArC;AACD;;;0CAEqB;AACpB,WAAKI,YAAL,CAAkBI,GAAlB,CAAsB,gBAAtB,EAAwC,KAAKX,kCAA7C;AACA,WAAKO,YAAL,CAAkBI,GAAlB,CAAsB,SAAtB,EAAiC,KAAKR,2BAAtC;AACD;;;8BAES;AACR,2FADQ,CAER;;;AACA,WAAKS,UAAL,CAAgBC,IAAhB,CAAqB,0BAArB,EAAiD,KAAKN,YAAL,CAAkBO,EAAnE;AACD;;;kDAE6BC,K,EAAO;AACnC;AACA,UAAIC,iBAAiB,GAAG,EAAxB;AACAA,MAAAA,iBAAiB,CAACD,KAAK,CAACE,YAAP,CAAjB,GAAwCF,KAAK,CAACG,QAA9C;AACAF,MAAAA,iBAAiB,GAAGjB,uBAAuB,CAACoB,2BAAxB,CAAoDH,iBAApD,CAApB;;AACA,WAAK,IAAII,IAAT,IAAiBJ,iBAAjB,EAAoC;AAAE;AACpC;AACA,aAAKK,WAAL,CAAiBD,IAAjB,EAAuBJ,iBAAiB,CAACI,IAAD,CAAxC;AACD;AACF;;;2CAEsBL,K,EAAO;AAC5B,WAAKO,OAAL;;AACA,WAAKC,mBAAL;AACD;AAED;AACF;AACA;;;;+BACa;AACT,aAAO,KAAKhB,YAAL,CAAkBiB,QAAlB,EAAP;AACD;AAED;AACF;AACA;;;;gCACcC,Q,EAAU;AACpB,WAAKlB,YAAL,CAAkBmB,WAAlB,CAA8BD,QAA9B;AACD;AAED;;AAEA;AACF;AACA;;;;gDACqCE,sB,EAAwBC,c,EAAgB;AACzEA,MAAAA,cAAc,GAAGA,cAAc,IAAI,EAAnC,CADyE,CAGzE;;AACA,OAAC,MAAD,EAAS,QAAT,EAAmB,SAAnB,EAA8B,SAA9B,EAAyC,UAAzC,EAAqD,aAArD,EAAoE,WAApE,EAAiF,YAAjF,EAA+F,YAA/F,EAA6G,SAA7G,EAAwH,MAAxH,EAAgIC,OAAhI,CAAwI,UAAST,IAAT,EAAe;AACrJQ,QAAAA,cAAc,CAACR,IAAD,CAAd,GAAuBO,sBAAsB,CAACP,IAAD,CAA7C;AACD,OAFD,EAJyE,CAQzE;AACA;;AACA,WAAK,IAAIA,IAAT,IAAiBQ,cAAjB,EAAiC;AAC/B,YAAIA,cAAc,CAACR,IAAD,CAAd,KAAyBU,SAA7B,EAAwC;AACtC,iBAAOF,cAAc,CAACR,IAAD,CAArB;AACD;AACF;;AACD,aAAOQ,cAAP;AACD;;;;EAzFkD9B,Q;;SAAhCC,uB","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {FormMenu} from '../../index';\n\nexport default class TableControlAdapterMenu extends FormMenu {\n\n  constructor() {\n    super();\n\n    this._tableControlPropertyChangeHandler = this._onTableControlPropertyChange.bind(this);\n    this._tableControlDestroyHandler = this._onTableControlDestroy.bind(this);\n\n    this._addCloneProperties(['tableControl']);\n  }\n\n  /**\n   * @override Action.js\n   */\n  _init(model) {\n    super._init(model);\n    if (!this.tableControl) {\n      throw new Error('Cannot adapt to undefined tableControl');\n    }\n    this._installListeners();\n  }\n\n  _installListeners() {\n    this.tableControl.on('propertyChange', this._tableControlPropertyChangeHandler);\n    this.tableControl.on('destroy', this._tableControlDestroyHandler);\n  }\n\n  _uninstallListeners() {\n    this.tableControl.off('propertyChange', this._tableControlPropertyChangeHandler);\n    this.tableControl.off('destroy', this._tableControlDestroyHandler);\n  }\n\n  _render() {\n    super._render();\n    // Convenience: Add ID of original tableControl to DOM for debugging purposes\n    this.$container.attr('data-tableControlAdapter', this.tableControl.id);\n  }\n\n  _onTableControlPropertyChange(event) {\n    // Whenever a tableControl property changes, apply the changes to the menu\n    var changedProperties = {};\n    changedProperties[event.propertyName] = event.newValue;\n    changedProperties = TableControlAdapterMenu.adaptTableControlProperties(changedProperties);\n    for (var prop in changedProperties) { // NOSONAR\n      // Set the property (don't use callSetter because this may delegate to the table control)\n      this.setProperty(prop, changedProperties[prop]);\n    }\n  }\n\n  _onTableControlDestroy(event) {\n    this.destroy();\n    this._uninstallListeners();\n  }\n\n  /**\n   * @override Action.js\n   */\n  doAction() {\n    return this.tableControl.doAction();\n  }\n\n  /**\n   * @override Action.js\n   */\n  setSelected(selected) {\n    this.tableControl.setSelected(selected);\n  }\n\n  /* --- STATIC HELPERS ------------------------------------------------------------- */\n\n  /**\n   * @memberOf TableControlAdapterMenu\n   */\n  static adaptTableControlProperties(tableControlProperties, menuProperties) {\n    menuProperties = menuProperties || {};\n\n    // Plain properties: simply copy, no translation required\n    ['text', 'iconId', 'enabled', 'visible', 'selected', 'tooltipText', 'keyStroke', 'keyStrokes', 'modelClass', 'classId', 'form'].forEach(function(prop) {\n      menuProperties[prop] = tableControlProperties[prop];\n    });\n\n    // Cleanup: Remove all properties that have value 'undefined' from the result object,\n    // otherwise, they would be applied to the model adapter.\n    for (var prop in menuProperties) {\n      if (menuProperties[prop] === undefined) {\n        delete menuProperties[prop];\n      }\n    }\n    return menuProperties;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}