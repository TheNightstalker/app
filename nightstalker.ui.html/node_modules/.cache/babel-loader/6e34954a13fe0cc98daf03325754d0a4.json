{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, graphics, HtmlComponent, HtmlEnvironment, Insets } from '../../../index';\n\nvar DateTimeCompositeLayout = /*#__PURE__*/function (_AbstractLayout) {\n  _inherits(DateTimeCompositeLayout, _AbstractLayout);\n\n  var _super = _createSuper(DateTimeCompositeLayout);\n\n  function DateTimeCompositeLayout(dateField) {\n    var _this;\n\n    _classCallCheck(this, DateTimeCompositeLayout);\n\n    _this = _super.call(this);\n    _this._dateField = dateField; // Minimum field with to normal state, for smaller widths the \"compact\" style is applied.\n\n    _this.MIN_DATE_FIELD_WIDTH = 90;\n    _this.PREF_DATE_FIELD_WIDTH = 110;\n    _this.MIN_TIME_FIELD_WIDTH = 60;\n    _this.PREF_TIME_FIELD_WIDTH = 90;\n\n    _this._initDefaults();\n\n    _this.htmlPropertyChangeHandler = _this._onHtmlEnvironmenPropertyChange.bind(_assertThisInitialized(_this));\n    HtmlEnvironment.get().on('propertyChange', _this.htmlPropertyChangeHandler);\n\n    _this._dateField.one('remove', function () {\n      HtmlEnvironment.get().off('propertyChange', this.htmlPropertyChangeHandler);\n    }.bind(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(DateTimeCompositeLayout, [{\n    key: \"_initDefaults\",\n    value: function _initDefaults() {\n      this.hgap = HtmlEnvironment.get().smallColumnGap;\n    }\n  }, {\n    key: \"_onHtmlEnvironmenPropertyChange\",\n    value: function _onHtmlEnvironmenPropertyChange() {\n      this._initDefaults();\n\n      this._dateField.invalidateLayoutTree();\n    }\n  }, {\n    key: \"layout\",\n    value: function layout($container) {\n      var htmlContainer = HtmlComponent.get($container),\n          $dateField = this._dateField.$dateField,\n          $timeField = this._dateField.$timeField,\n          $dateFieldIcon = this._dateField.$dateFieldIcon,\n          $timeFieldIcon = this._dateField.$timeFieldIcon,\n          $dateClearIcon = this._dateField.$dateClearIcon,\n          $timeClearIcon = this._dateField.$timeClearIcon,\n          $predictDateField = this._dateField._$predictDateField,\n          $predictTimeField = this._dateField._$predictTimeField,\n          htmlDateField = $dateField ? HtmlComponent.get($dateField) : null,\n          htmlTimeField = $timeField ? HtmlComponent.get($timeField) : null,\n          hasDate = $dateField ? !$dateField.isDisplayNone() : false,\n          hasTime = $timeField ? !$timeField.isDisplayNone() : false;\n      var availableSize = htmlContainer.availableSize({\n        exact: true\n      }).subtract(htmlContainer.insets());\n      var dateFieldSize, timeFieldSize; // --- Date and time ---\n\n      if (hasDate && hasTime) {\n        // Field size\n        var dateFieldMargins = htmlDateField.margins();\n        var timeFieldMargins = htmlTimeField.margins();\n        var compositeMargins = new Insets(Math.max(dateFieldMargins.top, timeFieldMargins.top), Math.max(dateFieldMargins.right, timeFieldMargins.right), Math.max(dateFieldMargins.bottom, timeFieldMargins.bottom), Math.max(dateFieldMargins.left, timeFieldMargins.left));\n        var compositeSize = availableSize.subtract(compositeMargins);\n\n        var hgap = this._hgap();\n\n        var totalWidth = compositeSize.width - hgap; // Date field 60%, time field 40%\n\n        var dateFieldWidth = totalWidth * 0.6;\n        var timeFieldWidth = totalWidth - dateFieldWidth;\n        dateFieldSize = new Dimension(dateFieldWidth, compositeSize.height);\n        timeFieldSize = new Dimension(timeFieldWidth, compositeSize.height);\n        htmlDateField.setSize(dateFieldSize);\n        htmlTimeField.setSize(timeFieldSize);\n        $timeField.cssRight(0); // Icons\n\n        $dateFieldIcon.cssTop($dateField.cssBorderTopWidth()).cssRight(timeFieldWidth + hgap).cssHeight(dateFieldSize.height - $dateField.cssBorderWidthY()).cssLineHeight(dateFieldSize.height - $dateField.cssBorderWidthY());\n\n        if ($dateClearIcon) {\n          $dateClearIcon.cssTop($dateField.cssBorderTopWidth()).cssRight(timeFieldWidth + hgap).cssHeight(dateFieldSize.height - $dateField.cssBorderWidthY()).cssLineHeight(dateFieldSize.height - $dateField.cssBorderWidthY());\n        }\n\n        $timeFieldIcon.cssTop($timeField.cssBorderTopWidth()).cssRight(0).cssHeight(timeFieldSize.height - $timeField.cssBorderWidthY()).cssLineHeight(timeFieldSize.height - $timeField.cssBorderWidthY());\n\n        if ($timeClearIcon) {\n          $timeClearIcon.cssTop($timeField.cssBorderTopWidth()).cssRight(0).cssHeight(timeFieldSize.height - $timeField.cssBorderWidthY()).cssLineHeight(timeFieldSize.height - $timeField.cssBorderWidthY());\n        } // Compact style\n\n\n        $dateField.toggleClass('compact', dateFieldSize.width < this.MIN_DATE_FIELD_WIDTH);\n        $timeField.toggleClass('compact', timeFieldSize.width < this.MIN_TIME_FIELD_WIDTH);\n\n        this._dateField.$container.toggleClass('compact-date', dateFieldSize.width < this.MIN_DATE_FIELD_WIDTH);\n\n        this._dateField.$container.toggleClass('compact-time', timeFieldSize.width < this.MIN_TIME_FIELD_WIDTH); // Prediction\n\n\n        if ($predictDateField) {\n          graphics.setSize($predictDateField, dateFieldSize);\n        }\n\n        if ($predictTimeField) {\n          graphics.setSize($predictTimeField, timeFieldSize);\n          $predictTimeField.cssRight(0);\n        }\n      } else if (hasDate) {\n        // --- Date only ---\n        // Field size\n        dateFieldSize = availableSize.subtract(htmlDateField.margins());\n        htmlDateField.setSize(dateFieldSize); // Icons\n\n        $dateFieldIcon.cssTop($dateField.cssBorderTopWidth()).cssRight(0).cssHeight(dateFieldSize.height - $dateField.cssBorderWidthY()).cssLineHeight(dateFieldSize.height - $dateField.cssBorderWidthY());\n\n        if ($dateClearIcon) {\n          $dateClearIcon.cssTop($dateField.cssBorderTopWidth()).cssRight(0).cssHeight(dateFieldSize.height - $dateField.cssBorderWidthY()).cssLineHeight(dateFieldSize.height - $dateField.cssBorderWidthY());\n        } // Compact style\n\n\n        $dateField.toggleClass('compact', dateFieldSize.width < this.MIN_DATE_FIELD_WIDTH);\n\n        this._dateField.$container.toggleClass('compact-date', dateFieldSize.width < this.MIN_DATE_FIELD_WIDTH); // Prediction\n\n\n        if ($predictDateField) {\n          graphics.setSize($predictDateField, dateFieldSize);\n        }\n      } else if (hasTime) {\n        // --- Time only ---\n        // Field size\n        timeFieldSize = availableSize.subtract(htmlTimeField.margins());\n        htmlTimeField.setSize(timeFieldSize); // Icons\n\n        $timeFieldIcon.cssTop($timeField.cssBorderTopWidth()).cssRight(0).cssHeight(timeFieldSize.height - $timeField.cssBorderWidthY()).cssLineHeight(timeFieldSize.height - $timeField.cssBorderWidthY());\n\n        if ($timeClearIcon) {\n          $timeClearIcon.cssTop($timeField.cssBorderTopWidth()).cssRight(0).cssHeight(timeFieldSize.height - $timeField.cssBorderWidthY()).cssLineHeight(timeFieldSize.height - $timeField.cssBorderWidthY());\n        } // Compact style\n\n\n        $timeField.toggleClass('compact', timeFieldSize.width < this.MIN_TIME_FIELD_WIDTH);\n\n        this._dateField.$container.toggleClass('compact-time', timeFieldSize.width < this.MIN_TIME_FIELD_WIDTH); // Prediction\n\n\n        if ($predictTimeField) {\n          graphics.setSize($predictTimeField, timeFieldSize);\n        }\n      }\n\n      var popup = this._dateField.popup;\n\n      if (popup && popup.rendered) {\n        // Make sure the popup is correctly positioned (especially necessary for cell editor)\n        popup.position();\n      }\n    }\n  }, {\n    key: \"_hgap\",\n    value: function _hgap() {\n      if (this._dateField.cellEditor) {\n        return 0;\n      }\n\n      return this.hgap;\n    }\n  }, {\n    key: \"preferredLayoutSize\",\n    value: function preferredLayoutSize($container) {\n      var prefSize = new Dimension(),\n          $dateField = this._dateField.$dateField,\n          $timeField = this._dateField.$timeField,\n          hasDate = $dateField ? !$dateField.isDisplayNone() : false,\n          hasTime = $timeField ? !$timeField.isDisplayNone() : false; // --- Date and time ---\n\n      if (hasDate && hasTime) {\n        prefSize = graphics.prefSize(this._dateField.$dateField);\n        prefSize.width = this.PREF_DATE_FIELD_WIDTH + this._hgap() + this.PREF_TIME_FIELD_WIDTH;\n      } else if (hasDate) {\n        // --- Date only ---\n        prefSize = graphics.prefSize(this._dateField.$dateField);\n        prefSize.width = this.PREF_DATE_FIELD_WIDTH;\n      } else if (hasTime) {\n        // --- Time only ---\n        prefSize = graphics.prefSize(this._dateField.$timeField);\n        prefSize.width = this.PREF_TIME_FIELD_WIDTH;\n      }\n\n      return prefSize;\n    }\n  }]);\n\n  return DateTimeCompositeLayout;\n}(AbstractLayout);\n\nexport { DateTimeCompositeLayout as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/datefield/DateTimeCompositeLayout.js"],"names":["AbstractLayout","Dimension","graphics","HtmlComponent","HtmlEnvironment","Insets","DateTimeCompositeLayout","dateField","_dateField","MIN_DATE_FIELD_WIDTH","PREF_DATE_FIELD_WIDTH","MIN_TIME_FIELD_WIDTH","PREF_TIME_FIELD_WIDTH","_initDefaults","htmlPropertyChangeHandler","_onHtmlEnvironmenPropertyChange","bind","get","on","one","off","hgap","smallColumnGap","invalidateLayoutTree","$container","htmlContainer","$dateField","$timeField","$dateFieldIcon","$timeFieldIcon","$dateClearIcon","$timeClearIcon","$predictDateField","_$predictDateField","$predictTimeField","_$predictTimeField","htmlDateField","htmlTimeField","hasDate","isDisplayNone","hasTime","availableSize","exact","subtract","insets","dateFieldSize","timeFieldSize","dateFieldMargins","margins","timeFieldMargins","compositeMargins","Math","max","top","right","bottom","left","compositeSize","_hgap","totalWidth","width","dateFieldWidth","timeFieldWidth","height","setSize","cssRight","cssTop","cssBorderTopWidth","cssHeight","cssBorderWidthY","cssLineHeight","toggleClass","popup","rendered","position","cellEditor","prefSize"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, graphics, HtmlComponent, HtmlEnvironment, Insets} from '../../../index';\n\nexport default class DateTimeCompositeLayout extends AbstractLayout {\n\n  constructor(dateField) {\n    super();\n    this._dateField = dateField;\n\n    // Minimum field with to normal state, for smaller widths the \"compact\" style is applied.\n    this.MIN_DATE_FIELD_WIDTH = 90;\n    this.PREF_DATE_FIELD_WIDTH = 110;\n    this.MIN_TIME_FIELD_WIDTH = 60;\n    this.PREF_TIME_FIELD_WIDTH = 90;\n\n    this._initDefaults();\n\n    this.htmlPropertyChangeHandler = this._onHtmlEnvironmenPropertyChange.bind(this);\n    HtmlEnvironment.get().on('propertyChange', this.htmlPropertyChangeHandler);\n    this._dateField.one('remove', function() {\n      HtmlEnvironment.get().off('propertyChange', this.htmlPropertyChangeHandler);\n    }.bind(this));\n  }\n\n  _initDefaults() {\n    this.hgap = HtmlEnvironment.get().smallColumnGap;\n  }\n\n  _onHtmlEnvironmenPropertyChange() {\n    this._initDefaults();\n    this._dateField.invalidateLayoutTree();\n  }\n\n  layout($container) {\n    var htmlContainer = HtmlComponent.get($container),\n      $dateField = this._dateField.$dateField,\n      $timeField = this._dateField.$timeField,\n      $dateFieldIcon = this._dateField.$dateFieldIcon,\n      $timeFieldIcon = this._dateField.$timeFieldIcon,\n      $dateClearIcon = this._dateField.$dateClearIcon,\n      $timeClearIcon = this._dateField.$timeClearIcon,\n      $predictDateField = this._dateField._$predictDateField,\n      $predictTimeField = this._dateField._$predictTimeField,\n      htmlDateField = ($dateField ? HtmlComponent.get($dateField) : null),\n      htmlTimeField = ($timeField ? HtmlComponent.get($timeField) : null),\n      hasDate = ($dateField ? !$dateField.isDisplayNone() : false),\n      hasTime = ($timeField ? !$timeField.isDisplayNone() : false);\n\n    var availableSize = htmlContainer.availableSize({\n      exact: true\n    })\n      .subtract(htmlContainer.insets());\n\n    var dateFieldSize, timeFieldSize;\n    // --- Date and time ---\n    if (hasDate && hasTime) {\n      // Field size\n      var dateFieldMargins = htmlDateField.margins();\n      var timeFieldMargins = htmlTimeField.margins();\n      var compositeMargins = new Insets(\n        Math.max(dateFieldMargins.top, timeFieldMargins.top),\n        Math.max(dateFieldMargins.right, timeFieldMargins.right),\n        Math.max(dateFieldMargins.bottom, timeFieldMargins.bottom),\n        Math.max(dateFieldMargins.left, timeFieldMargins.left)\n      );\n      var compositeSize = availableSize.subtract(compositeMargins);\n      var hgap = this._hgap();\n      var totalWidth = compositeSize.width - hgap;\n      // Date field 60%, time field 40%\n      var dateFieldWidth = (totalWidth * 0.6);\n      var timeFieldWidth = (totalWidth - dateFieldWidth);\n\n      dateFieldSize = new Dimension(dateFieldWidth, compositeSize.height);\n      timeFieldSize = new Dimension(timeFieldWidth, compositeSize.height);\n      htmlDateField.setSize(dateFieldSize);\n      htmlTimeField.setSize(timeFieldSize);\n      $timeField.cssRight(0);\n\n      // Icons\n      $dateFieldIcon.cssTop($dateField.cssBorderTopWidth())\n        .cssRight(timeFieldWidth + hgap)\n        .cssHeight(dateFieldSize.height - $dateField.cssBorderWidthY())\n        .cssLineHeight(dateFieldSize.height - $dateField.cssBorderWidthY());\n      if ($dateClearIcon) {\n        $dateClearIcon.cssTop($dateField.cssBorderTopWidth())\n          .cssRight(timeFieldWidth + hgap)\n          .cssHeight(dateFieldSize.height - $dateField.cssBorderWidthY())\n          .cssLineHeight(dateFieldSize.height - $dateField.cssBorderWidthY());\n      }\n      $timeFieldIcon.cssTop($timeField.cssBorderTopWidth())\n        .cssRight(0)\n        .cssHeight(timeFieldSize.height - $timeField.cssBorderWidthY())\n        .cssLineHeight(timeFieldSize.height - $timeField.cssBorderWidthY());\n      if ($timeClearIcon) {\n        $timeClearIcon.cssTop($timeField.cssBorderTopWidth())\n          .cssRight(0)\n          .cssHeight(timeFieldSize.height - $timeField.cssBorderWidthY())\n          .cssLineHeight(timeFieldSize.height - $timeField.cssBorderWidthY());\n      }\n\n      // Compact style\n      $dateField.toggleClass('compact', dateFieldSize.width < this.MIN_DATE_FIELD_WIDTH);\n      $timeField.toggleClass('compact', timeFieldSize.width < this.MIN_TIME_FIELD_WIDTH);\n      this._dateField.$container.toggleClass('compact-date', dateFieldSize.width < this.MIN_DATE_FIELD_WIDTH);\n      this._dateField.$container.toggleClass('compact-time', timeFieldSize.width < this.MIN_TIME_FIELD_WIDTH);\n\n      // Prediction\n      if ($predictDateField) {\n        graphics.setSize($predictDateField, dateFieldSize);\n      }\n      if ($predictTimeField) {\n        graphics.setSize($predictTimeField, timeFieldSize);\n        $predictTimeField.cssRight(0);\n      }\n    } else if (hasDate) { // --- Date only ---\n      // Field size\n      dateFieldSize = availableSize.subtract(htmlDateField.margins());\n      htmlDateField.setSize(dateFieldSize);\n\n      // Icons\n      $dateFieldIcon.cssTop($dateField.cssBorderTopWidth())\n        .cssRight(0)\n        .cssHeight(dateFieldSize.height - $dateField.cssBorderWidthY())\n        .cssLineHeight(dateFieldSize.height - $dateField.cssBorderWidthY());\n\n      if ($dateClearIcon) {\n        $dateClearIcon.cssTop($dateField.cssBorderTopWidth())\n          .cssRight(0)\n          .cssHeight(dateFieldSize.height - $dateField.cssBorderWidthY())\n          .cssLineHeight(dateFieldSize.height - $dateField.cssBorderWidthY());\n      }\n      // Compact style\n      $dateField.toggleClass('compact', dateFieldSize.width < this.MIN_DATE_FIELD_WIDTH);\n      this._dateField.$container.toggleClass('compact-date', dateFieldSize.width < this.MIN_DATE_FIELD_WIDTH);\n\n      // Prediction\n      if ($predictDateField) {\n        graphics.setSize($predictDateField, dateFieldSize);\n      }\n    } else if (hasTime) { // --- Time only ---\n      // Field size\n      timeFieldSize = availableSize.subtract(htmlTimeField.margins());\n      htmlTimeField.setSize(timeFieldSize);\n\n      // Icons\n      $timeFieldIcon.cssTop($timeField.cssBorderTopWidth())\n        .cssRight(0)\n        .cssHeight(timeFieldSize.height - $timeField.cssBorderWidthY())\n        .cssLineHeight(timeFieldSize.height - $timeField.cssBorderWidthY());\n      if ($timeClearIcon) {\n        $timeClearIcon.cssTop($timeField.cssBorderTopWidth())\n          .cssRight(0)\n          .cssHeight(timeFieldSize.height - $timeField.cssBorderWidthY())\n          .cssLineHeight(timeFieldSize.height - $timeField.cssBorderWidthY());\n      }\n      // Compact style\n      $timeField.toggleClass('compact', timeFieldSize.width < this.MIN_TIME_FIELD_WIDTH);\n      this._dateField.$container.toggleClass('compact-time', timeFieldSize.width < this.MIN_TIME_FIELD_WIDTH);\n\n      // Prediction\n      if ($predictTimeField) {\n        graphics.setSize($predictTimeField, timeFieldSize);\n      }\n    }\n    var popup = this._dateField.popup;\n    if (popup && popup.rendered) {\n      // Make sure the popup is correctly positioned (especially necessary for cell editor)\n      popup.position();\n    }\n  }\n\n  _hgap() {\n    if (this._dateField.cellEditor) {\n      return 0;\n    }\n    return this.hgap;\n  }\n\n  preferredLayoutSize($container) {\n    var prefSize = new Dimension(),\n      $dateField = this._dateField.$dateField,\n      $timeField = this._dateField.$timeField,\n      hasDate = ($dateField ? !$dateField.isDisplayNone() : false),\n      hasTime = ($timeField ? !$timeField.isDisplayNone() : false);\n\n    // --- Date and time ---\n    if (hasDate && hasTime) {\n      prefSize = graphics.prefSize(this._dateField.$dateField);\n      prefSize.width = this.PREF_DATE_FIELD_WIDTH + this._hgap() + this.PREF_TIME_FIELD_WIDTH;\n    } else if (hasDate) {\n      // --- Date only ---\n      prefSize = graphics.prefSize(this._dateField.$dateField);\n      prefSize.width = this.PREF_DATE_FIELD_WIDTH;\n    } else if (hasTime) {\n      // --- Time only ---\n      prefSize = graphics.prefSize(this._dateField.$timeField);\n      prefSize.width = this.PREF_TIME_FIELD_WIDTH;\n    }\n    return prefSize;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}