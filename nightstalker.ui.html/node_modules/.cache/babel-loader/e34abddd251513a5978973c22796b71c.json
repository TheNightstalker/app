{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, EventDelegator, FormField, objects, scout, TableRow } from '../../../index';\n\nvar TableField = /*#__PURE__*/function (_FormField) {\n  _inherits(TableField, _FormField);\n\n  var _super = _createSuper(TableField);\n\n  function TableField() {\n    var _this;\n\n    _classCallCheck(this, TableField);\n\n    _this = _super.call(this);\n    _this.gridDataHints.weightY = 1.0;\n    _this.gridDataHints.h = 3;\n    _this.eventDelegator = null;\n    _this._tableChangedHandler = _this._onTableChanged.bind(_assertThisInitialized(_this));\n    _this._deletedRows = objects.createMap();\n    _this._insertedRows = objects.createMap();\n    _this._updatedRows = objects.createMap();\n    _this._checkedRows = objects.createMap();\n\n    _this._addWidgetProperties(['table']);\n\n    return _this;\n  }\n\n  _createClass(TableField, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(TableField.prototype), \"_init\", this).call(this, model);\n\n      this._setTable(this.table);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.addContainer(this.$parent, 'table-field');\n      this.addLabel();\n      this.addMandatoryIndicator();\n      this.addStatus();\n\n      this._renderTable();\n    }\n  }, {\n    key: \"setTable\",\n    value: function setTable(table) {\n      this.setProperty('table', table);\n    }\n  }, {\n    key: \"_setTable\",\n    value: function _setTable(table) {\n      if (this.table) {\n        this.table.off(TableField.TABLE_CHANGE_EVENTS, this._tableChangedHandler);\n\n        if (this.eventDelegator) {\n          this.eventDelegator.destroy();\n          this.eventDelegator = null;\n        }\n      }\n\n      this._setProperty('table', table);\n\n      if (table) {\n        table.on(TableField.TABLE_CHANGE_EVENTS, this._tableChangedHandler);\n        this.eventDelegator = EventDelegator.create(this, table, {\n          delegateProperties: ['enabled', 'disabledStyle', 'loading']\n        });\n        table.setDisabledStyle(this.disabledStyle);\n        table.setLoading(this.loading);\n        table.setScrollTop(this.scrollTop);\n      }\n    }\n  }, {\n    key: \"_renderTable\",\n    value: function _renderTable() {\n      if (!this.table) {\n        return;\n      }\n\n      this.table.render();\n      this.addField(this.table.$container);\n      this.$field.addDeviceClass();\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"_removeTable\",\n    value: function _removeTable() {\n      if (!this.table) {\n        return;\n      }\n\n      this.table.remove();\n\n      this._removeField();\n\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"computeRequiresSave\",\n    value: function computeRequiresSave() {\n      return Object.keys(this._deletedRows).length > 0 || Object.keys(this._insertedRows).length > 0 || Object.keys(this._updatedRows).length > 0 || Object.keys(this._checkedRows).length > 0;\n    }\n  }, {\n    key: \"_onTableChanged\",\n    value: function _onTableChanged(event) {\n      if (scout.isOneOf(event.type, 'rowsDeleted', 'allRowsDeleted')) {\n        this._updateDeletedRows(event.rows);\n      } else if (event.type === 'rowsInserted') {\n        this._updateInsertedRows(event.rows);\n      } else if (event.type === 'rowsUpdated') {\n        this._updateUpdatedRows(event.rows);\n      } else if (event.type === 'rowsChecked') {\n        this._updateCheckedRows(event.rows);\n      }\n    }\n  }, {\n    key: \"_updateDeletedRows\",\n    value: function _updateDeletedRows(rows) {\n      rows.forEach(function (row) {\n        if (row.id in this._insertedRows) {\n          // If a row is contained in _insertedRows an inserted row has been deleted again.\n          // In that case we can remove that row from the maps and don't have to add it to deletedRows as well.\n          delete this._insertedRows[row.id];\n          delete this._updatedRows[row.id];\n          delete this._checkedRows[row.id];\n          return;\n        }\n\n        this._deletedRows[row.id] = row;\n      }, this);\n    }\n  }, {\n    key: \"_updateInsertedRows\",\n    value: function _updateInsertedRows(rows) {\n      rows.forEach(function (row) {\n        this._insertedRows[row.id] = row;\n      }, this);\n    }\n  }, {\n    key: \"_updateUpdatedRows\",\n    value: function _updateUpdatedRows(rows) {\n      rows.forEach(function (row) {\n        if (row.status === TableRow.Status.NON_CHANGED) {\n          return;\n        }\n\n        this._updatedRows[row.id] = row;\n      }, this);\n    }\n    /**\n     * If a row already exists in the _checkedRows array, remove it (row was checked/unchecked again, which\n     * means it is no longer changed). Add it to the array otherwise.\n     */\n\n  }, {\n    key: \"_updateCheckedRows\",\n    value: function _updateCheckedRows(rows) {\n      rows.forEach(function (row) {\n        if (row.id in this._checkedRows) {\n          delete this._checkedRows[row.id];\n        } else {\n          this._checkedRows[row.id] = row;\n        }\n      }, this);\n    }\n  }, {\n    key: \"markAsSaved\",\n    value: function markAsSaved() {\n      _get(_getPrototypeOf(TableField.prototype), \"markAsSaved\", this).call(this);\n\n      this._deletedRows = objects.createMap();\n      this._insertedRows = objects.createMap();\n      this._updatedRows = objects.createMap();\n      this._checkedRows = objects.createMap();\n      this.table.markRowsAsNonChanged();\n    }\n  }, {\n    key: \"getValidationResult\",\n    value: function getValidationResult() {\n      var desc = _get(_getPrototypeOf(TableField.prototype), \"getValidationResult\", this).call(this);\n\n      if (desc && !desc.valid) {\n        return desc;\n      }\n\n      var validByErrorStatus = !this.errorStatus;\n      var validByMandatory = !this.mandatory || !this.empty; // check cells\n\n      var rows = arrays.ensure(this.table.rows);\n      var columns = arrays.ensure(this.table.columns);\n      rows.some(function (row) {\n        return columns.some(function (column) {\n          var ret = column.isContentValid(row);\n\n          if (!ret.valid) {\n            validByErrorStatus = validByErrorStatus && ret.validByErrorStatus;\n            validByMandatory = validByMandatory && ret.validByMandatory;\n            return !(validByErrorStatus || validByMandatory);\n          }\n\n          return false;\n        }, this);\n      }, this);\n      return {\n        valid: validByErrorStatus && validByMandatory,\n        validByErrorStatus: validByErrorStatus,\n        validByMandatory: validByMandatory\n      };\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"getDelegateScrollable\",\n    value: function getDelegateScrollable() {\n      return this.table;\n    }\n  }]);\n\n  return TableField;\n}(FormField);\n\n_defineProperty(TableField, \"TABLE_CHANGE_EVENTS\", 'rowsInserted rowsDeleted allRowsDeleted rowsUpdated rowsChecked');\n\nexport { TableField as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/tablefield/TableField.js"],"names":["arrays","EventDelegator","FormField","objects","scout","TableRow","TableField","gridDataHints","weightY","h","eventDelegator","_tableChangedHandler","_onTableChanged","bind","_deletedRows","createMap","_insertedRows","_updatedRows","_checkedRows","_addWidgetProperties","model","_setTable","table","addContainer","$parent","addLabel","addMandatoryIndicator","addStatus","_renderTable","setProperty","off","TABLE_CHANGE_EVENTS","destroy","_setProperty","on","create","delegateProperties","setDisabledStyle","disabledStyle","setLoading","loading","setScrollTop","scrollTop","render","addField","$container","$field","addDeviceClass","invalidateLayoutTree","remove","_removeField","Object","keys","length","event","isOneOf","type","_updateDeletedRows","rows","_updateInsertedRows","_updateUpdatedRows","_updateCheckedRows","forEach","row","id","status","Status","NON_CHANGED","markRowsAsNonChanged","desc","valid","validByErrorStatus","errorStatus","validByMandatory","mandatory","empty","ensure","columns","some","column","ret","isContentValid"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, EventDelegator, FormField, objects, scout, TableRow} from '../../../index';\n\nexport default class TableField extends FormField {\n\n  constructor() {\n    super();\n\n    this.gridDataHints.weightY = 1.0;\n    this.gridDataHints.h = 3;\n    this.eventDelegator = null;\n    this._tableChangedHandler = this._onTableChanged.bind(this);\n    this._deletedRows = objects.createMap();\n    this._insertedRows = objects.createMap();\n    this._updatedRows = objects.createMap();\n    this._checkedRows = objects.createMap();\n    this._addWidgetProperties(['table']);\n  }\n\n  static TABLE_CHANGE_EVENTS = 'rowsInserted rowsDeleted allRowsDeleted rowsUpdated rowsChecked';\n\n  _init(model) {\n    super._init(model);\n\n    this._setTable(this.table);\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'table-field');\n    this.addLabel();\n    this.addMandatoryIndicator();\n    this.addStatus();\n    this._renderTable();\n  }\n\n  setTable(table) {\n    this.setProperty('table', table);\n  }\n\n  _setTable(table) {\n    if (this.table) {\n      this.table.off(TableField.TABLE_CHANGE_EVENTS, this._tableChangedHandler);\n      if (this.eventDelegator) {\n        this.eventDelegator.destroy();\n        this.eventDelegator = null;\n      }\n    }\n    this._setProperty('table', table);\n    if (table) {\n      table.on(TableField.TABLE_CHANGE_EVENTS, this._tableChangedHandler);\n      this.eventDelegator = EventDelegator.create(this, table, {\n        delegateProperties: ['enabled', 'disabledStyle', 'loading']\n      });\n      table.setDisabledStyle(this.disabledStyle);\n      table.setLoading(this.loading);\n      table.setScrollTop(this.scrollTop);\n    }\n  }\n\n  _renderTable() {\n    if (!this.table) {\n      return;\n    }\n    this.table.render();\n    this.addField(this.table.$container);\n    this.$field.addDeviceClass();\n    this.invalidateLayoutTree();\n  }\n\n  _removeTable() {\n    if (!this.table) {\n      return;\n    }\n    this.table.remove();\n    this._removeField();\n    this.invalidateLayoutTree();\n  }\n\n  computeRequiresSave() {\n    return Object.keys(this._deletedRows).length > 0 ||\n      Object.keys(this._insertedRows).length > 0 ||\n      Object.keys(this._updatedRows).length > 0 ||\n      Object.keys(this._checkedRows).length > 0;\n  }\n\n  _onTableChanged(event) {\n    if (scout.isOneOf(event.type, 'rowsDeleted', 'allRowsDeleted')) {\n      this._updateDeletedRows(event.rows);\n    } else if (event.type === 'rowsInserted') {\n      this._updateInsertedRows(event.rows);\n    } else if (event.type === 'rowsUpdated') {\n      this._updateUpdatedRows(event.rows);\n    } else if (event.type === 'rowsChecked') {\n      this._updateCheckedRows(event.rows);\n    }\n  }\n\n  _updateDeletedRows(rows) {\n    rows.forEach(function(row) {\n      if (row.id in this._insertedRows) {\n        // If a row is contained in _insertedRows an inserted row has been deleted again.\n        // In that case we can remove that row from the maps and don't have to add it to deletedRows as well.\n        delete this._insertedRows[row.id];\n        delete this._updatedRows[row.id];\n        delete this._checkedRows[row.id];\n        return;\n      }\n      this._deletedRows[row.id] = row;\n    }, this);\n  }\n\n  _updateInsertedRows(rows) {\n    rows.forEach(function(row) {\n      this._insertedRows[row.id] = row;\n    }, this);\n  }\n\n  _updateUpdatedRows(rows) {\n    rows.forEach(function(row) {\n      if (row.status === TableRow.Status.NON_CHANGED) {\n        return;\n      }\n      this._updatedRows[row.id] = row;\n    }, this);\n  }\n\n  /**\n   * If a row already exists in the _checkedRows array, remove it (row was checked/unchecked again, which\n   * means it is no longer changed). Add it to the array otherwise.\n   */\n  _updateCheckedRows(rows) {\n    rows.forEach(function(row) {\n      if (row.id in this._checkedRows) {\n        delete this._checkedRows[row.id];\n      } else {\n        this._checkedRows[row.id] = row;\n      }\n    }, this);\n  }\n\n  markAsSaved() {\n    super.markAsSaved();\n    this._deletedRows = objects.createMap();\n    this._insertedRows = objects.createMap();\n    this._updatedRows = objects.createMap();\n    this._checkedRows = objects.createMap();\n    this.table.markRowsAsNonChanged();\n  }\n\n  getValidationResult() {\n    var desc = super.getValidationResult();\n    if (desc && !desc.valid) {\n      return desc;\n    }\n\n    var validByErrorStatus = !this.errorStatus;\n    var validByMandatory = !this.mandatory || !this.empty;\n\n    // check cells\n    var rows = arrays.ensure(this.table.rows);\n    var columns = arrays.ensure(this.table.columns);\n\n    rows.some(function(row) {\n      return columns.some(function(column) {\n        var ret = column.isContentValid(row);\n        if (!ret.valid) {\n          validByErrorStatus = validByErrorStatus && ret.validByErrorStatus;\n          validByMandatory = validByMandatory && ret.validByMandatory;\n          return !(validByErrorStatus || validByMandatory);\n        }\n        return false;\n      }, this);\n    }, this);\n\n    return {\n      valid: validByErrorStatus && validByMandatory,\n      validByErrorStatus: validByErrorStatus,\n      validByMandatory: validByMandatory\n    };\n  }\n\n  /**\n   * @override\n   */\n  getDelegateScrollable() {\n    return this.table;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}