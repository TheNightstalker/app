{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { strings, texts, ValueField } from '../../../index';\n\nvar LabelField = /*#__PURE__*/function (_ValueField) {\n  _inherits(LabelField, _ValueField);\n\n  var _super = _createSuper(LabelField);\n\n  function LabelField() {\n    var _this;\n\n    _classCallCheck(this, LabelField);\n\n    _this = _super.call(this);\n    _this.htmlEnabled = false;\n    _this.selectable = true;\n    _this.wrapText = false;\n    return _this;\n  }\n  /**\n   * Resolves the text key if value contains one.\n   * This cannot be done in _init because the value field would call _setValue first\n   */\n\n\n  _createClass(LabelField, [{\n    key: \"_initValue\",\n    value: function _initValue(value) {\n      value = texts.resolveText(value, this.session.locale.languageTag);\n\n      _get(_getPrototypeOf(LabelField.prototype), \"_initValue\", this).call(this, value);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.addContainer(this.$parent, 'label-field');\n      this.addLabel();\n      this.addField(this.$parent.makeDiv());\n      this.addStatus();\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(LabelField.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderWrapText(); // TODO [7.0] cgu: render selectable\n\n    }\n    /**\n     * Since a LabelField cannot be changed by a user, acceptInput does nothing.\n     * Otherwise LabelFields could 'become' touched, because value and displayText\n     * of the LabelField don't match.\n     */\n\n  }, {\n    key: \"acceptInput\",\n    value: function acceptInput() {// NOP\n    }\n  }, {\n    key: \"setHtmlEnabled\",\n    value: function setHtmlEnabled(htmlEnabled) {\n      this.setProperty('htmlEnabled', htmlEnabled);\n    }\n  }, {\n    key: \"_renderHtmlEnabled\",\n    value: function _renderHtmlEnabled() {\n      // Render the display text again when html enabled changes dynamically\n      this._renderDisplayText();\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_renderDisplayText\",\n    value: function _renderDisplayText() {\n      var displayText = this.displayText || '';\n\n      if (this.htmlEnabled) {\n        this.$field.html(displayText); // Add action to app-links\n\n        this.$field.find('.app-link').on('click', this._onAppLinkAction.bind(this));\n      } else {\n        this.$field.html(strings.nl2br(displayText));\n      }\n\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"setWrapText\",\n    value: function setWrapText(wrapText) {\n      this.setProperty('wrapText', wrapText);\n    }\n  }, {\n    key: \"_renderWrapText\",\n    value: function _renderWrapText() {\n      this.$field.toggleClass('white-space-nowrap', !this.wrapText);\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"_renderGridData\",\n    value: function _renderGridData() {\n      _get(_getPrototypeOf(LabelField.prototype), \"_renderGridData\", this).call(this);\n\n      this.updateInnerAlignment({\n        useHorizontalAlignment: true\n      });\n    }\n  }, {\n    key: \"_renderGridDataHints\",\n    value: function _renderGridDataHints() {\n      _get(_getPrototypeOf(LabelField.prototype), \"_renderGridDataHints\", this).call(this);\n\n      this.updateInnerAlignment({\n        useHorizontalAlignment: true\n      });\n    }\n  }, {\n    key: \"_onAppLinkAction\",\n    value: function _onAppLinkAction(event) {\n      var $target = $(event.delegateTarget);\n      var ref = $target.data('ref');\n      this.triggerAppLinkAction(ref);\n    }\n  }, {\n    key: \"triggerAppLinkAction\",\n    value: function triggerAppLinkAction(ref) {\n      this.trigger('appLinkAction', {\n        ref: ref\n      });\n    }\n  }]);\n\n  return LabelField;\n}(ValueField);\n\nexport { LabelField as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/labelfield/LabelField.js"],"names":["strings","texts","ValueField","LabelField","htmlEnabled","selectable","wrapText","value","resolveText","session","locale","languageTag","addContainer","$parent","addLabel","addField","makeDiv","addStatus","_renderWrapText","setProperty","_renderDisplayText","displayText","$field","html","find","on","_onAppLinkAction","bind","nl2br","invalidateLayoutTree","toggleClass","updateInnerAlignment","useHorizontalAlignment","event","$target","$","delegateTarget","ref","data","triggerAppLinkAction","trigger"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,OAAR,EAAiBC,KAAjB,EAAwBC,UAAxB,QAAyC,gBAAzC;;IAEqBC,U;;;;;AAEnB,wBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,WAAL,GAAmB,KAAnB;AACA,UAAKC,UAAL,GAAkB,IAAlB;AACA,UAAKC,QAAL,GAAgB,KAAhB;AAJY;AAKb;AAED;AACF;AACA;AACA;;;;;+BACaC,K,EAAO;AAChBA,MAAAA,KAAK,GAAGN,KAAK,CAACO,WAAN,CAAkBD,KAAlB,EAAyB,KAAKE,OAAL,CAAaC,MAAb,CAAoBC,WAA7C,CAAR;;AACA,iFAAiBJ,KAAjB;AACD;;;8BAES;AACR,WAAKK,YAAL,CAAkB,KAAKC,OAAvB,EAAgC,aAAhC;AACA,WAAKC,QAAL;AACA,WAAKC,QAAL,CAAc,KAAKF,OAAL,CAAaG,OAAb,EAAd;AACA,WAAKC,SAAL;AACD;;;wCAEmB;AAClB;;AACA,WAAKC,eAAL,GAFkB,CAGlB;;AACD;AAED;AACF;AACA;AACA;AACA;;;;kCACgB,CACZ;AACD;;;mCAEcd,W,EAAa;AAC1B,WAAKe,WAAL,CAAiB,aAAjB,EAAgCf,WAAhC;AACD;;;yCAEoB;AACnB;AACA,WAAKgB,kBAAL;AACD;AAED;AACF;AACA;;;;yCACuB;AACnB,UAAIC,WAAW,GAAG,KAAKA,WAAL,IAAoB,EAAtC;;AACA,UAAI,KAAKjB,WAAT,EAAsB;AACpB,aAAKkB,MAAL,CAAYC,IAAZ,CAAiBF,WAAjB,EADoB,CAGpB;;AACA,aAAKC,MAAL,CAAYE,IAAZ,CAAiB,WAAjB,EACGC,EADH,CACM,OADN,EACe,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CADf;AAED,OAND,MAMO;AACL,aAAKL,MAAL,CAAYC,IAAZ,CAAiBvB,OAAO,CAAC4B,KAAR,CAAcP,WAAd,CAAjB;AACD;;AAED,WAAKQ,oBAAL;AACD;;;gCAEWvB,Q,EAAU;AACpB,WAAKa,WAAL,CAAiB,UAAjB,EAA6Bb,QAA7B;AACD;;;sCAEiB;AAChB,WAAKgB,MAAL,CAAYQ,WAAZ,CAAwB,oBAAxB,EAA8C,CAAC,KAAKxB,QAApD;AACA,WAAKuB,oBAAL;AACD;;;sCAEiB;AAChB;;AACA,WAAKE,oBAAL,CAA0B;AACxBC,QAAAA,sBAAsB,EAAE;AADA,OAA1B;AAGD;;;2CAEsB;AACrB;;AACA,WAAKD,oBAAL,CAA0B;AACxBC,QAAAA,sBAAsB,EAAE;AADA,OAA1B;AAGD;;;qCAEgBC,K,EAAO;AACtB,UAAIC,OAAO,GAAGC,CAAC,CAACF,KAAK,CAACG,cAAP,CAAf;AACA,UAAIC,GAAG,GAAGH,OAAO,CAACI,IAAR,CAAa,KAAb,CAAV;AACA,WAAKC,oBAAL,CAA0BF,GAA1B;AACD;;;yCAEoBA,G,EAAK;AACxB,WAAKG,OAAL,CAAa,eAAb,EAA8B;AAC5BH,QAAAA,GAAG,EAAEA;AADuB,OAA9B;AAGD;;;;EApGqCnC,U;;SAAnBC,U","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {strings, texts, ValueField} from '../../../index';\n\nexport default class LabelField extends ValueField {\n\n  constructor() {\n    super();\n    this.htmlEnabled = false;\n    this.selectable = true;\n    this.wrapText = false;\n  }\n\n  /**\n   * Resolves the text key if value contains one.\n   * This cannot be done in _init because the value field would call _setValue first\n   */\n  _initValue(value) {\n    value = texts.resolveText(value, this.session.locale.languageTag);\n    super._initValue(value);\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'label-field');\n    this.addLabel();\n    this.addField(this.$parent.makeDiv());\n    this.addStatus();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderWrapText();\n    // TODO [7.0] cgu: render selectable\n  }\n\n  /**\n   * Since a LabelField cannot be changed by a user, acceptInput does nothing.\n   * Otherwise LabelFields could 'become' touched, because value and displayText\n   * of the LabelField don't match.\n   */\n  acceptInput() {\n    // NOP\n  }\n\n  setHtmlEnabled(htmlEnabled) {\n    this.setProperty('htmlEnabled', htmlEnabled);\n  }\n\n  _renderHtmlEnabled() {\n    // Render the display text again when html enabled changes dynamically\n    this._renderDisplayText();\n  }\n\n  /**\n   * @override\n   */\n  _renderDisplayText() {\n    var displayText = this.displayText || '';\n    if (this.htmlEnabled) {\n      this.$field.html(displayText);\n\n      // Add action to app-links\n      this.$field.find('.app-link')\n        .on('click', this._onAppLinkAction.bind(this));\n    } else {\n      this.$field.html(strings.nl2br(displayText));\n    }\n\n    this.invalidateLayoutTree();\n  }\n\n  setWrapText(wrapText) {\n    this.setProperty('wrapText', wrapText);\n  }\n\n  _renderWrapText() {\n    this.$field.toggleClass('white-space-nowrap', !this.wrapText);\n    this.invalidateLayoutTree();\n  }\n\n  _renderGridData() {\n    super._renderGridData();\n    this.updateInnerAlignment({\n      useHorizontalAlignment: true\n    });\n  }\n\n  _renderGridDataHints() {\n    super._renderGridDataHints();\n    this.updateInnerAlignment({\n      useHorizontalAlignment: true\n    });\n  }\n\n  _onAppLinkAction(event) {\n    var $target = $(event.delegateTarget);\n    var ref = $target.data('ref');\n    this.triggerAppLinkAction(ref);\n  }\n\n  triggerAppLinkAction(ref) {\n    this.trigger('appLinkAction', {\n      ref: ref\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}