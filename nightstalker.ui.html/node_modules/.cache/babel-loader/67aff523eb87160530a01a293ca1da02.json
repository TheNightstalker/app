{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, HtmlComponent, scout, SimpleTabBoxController, SimpleTabBoxLayout, SimpleTabViewContentLayout, Widget } from '../index';\n\nvar SimpleTabBox = /*#__PURE__*/function (_Widget) {\n  _inherits(SimpleTabBox, _Widget);\n\n  var _super = _createSuper(SimpleTabBox);\n\n  function SimpleTabBox() {\n    var _this;\n\n    _classCallCheck(this, SimpleTabBox);\n\n    _this = _super.call(this);\n\n    _this._addWidgetProperties(['tabArea']);\n\n    _this.tabArea = null;\n    _this.viewStack = [];\n    _this.currentView = null;\n    _this.controller = null;\n    _this._removeViewInProgress = 0;\n    return _this;\n  }\n\n  _createClass(SimpleTabBox, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(SimpleTabBox.prototype), \"_init\", this).call(this, model);\n\n      this.cssClass = model.cssClass;\n\n      if (!this.tabArea) {\n        // default tab area\n        this.tabArea = scout.create('SimpleTabArea', {\n          parent: this\n        });\n      }\n\n      if (!this.controller) {\n        // default controller\n        this.controller = scout.create('SimpleTabBoxController');\n      } // link\n\n\n      this.controller.install(this, this.tabArea);\n      this._viewDestroyedHandler = this._onViewDestroyed.bind(this);\n    }\n    /**\n     * Returns a $container used as a bind target for the key-stroke context of the group-box.\n     * By default this function returns the container of the form, or when group-box is has no\n     * form as a parent the container of the group-box.\n     */\n\n  }, {\n    key: \"_keyStrokeBindTarget\",\n    value: function _keyStrokeBindTarget() {\n      return this.$container;\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent.appendDiv('simple-tab-box');\n\n      if (this.cssClass) {\n        this.$container.addClass(this.cssClass);\n      }\n\n      this.htmlComp = HtmlComponent.install(this.$container, this.session);\n      this.htmlComp.setLayout(new SimpleTabBoxLayout(this));\n      this.htmlComp.layoutData = this.layoutData; // render content\n\n      this.$viewContent = this.$container.appendDiv('tab-content');\n      this.viewContent = HtmlComponent.install(this.$viewContent, this.session);\n      this.viewContent.setLayout(new SimpleTabViewContentLayout(this));\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(SimpleTabBox.prototype), \"_renderProperties\", this).call(this); // render tabArea\n\n\n      this._renderTabArea();\n\n      this._renderView(this.currentView);\n    }\n  }, {\n    key: \"_renderTabArea\",\n    value: function _renderTabArea() {\n      this.tabArea.render();\n      this.$tabArea = this.tabArea.$container;\n\n      if (this.tabArea.attached) {\n        this.$tabArea.insertBefore(this.$viewContent);\n      }\n    }\n  }, {\n    key: \"_renderView\",\n    value: function _renderView(view) {\n      if (!view) {\n        return;\n      }\n\n      if (view.rendered) {\n        return;\n      }\n\n      view.render(this.$viewContent);\n      view.$container.addClass('view');\n      view.validateRoot = true;\n    }\n  }, {\n    key: \"postRender\",\n    value: function postRender() {\n      if (this.viewStack.length > 0 && !this.currentView) {\n        this.activateView(this.viewStack[this.viewStack.length - 1]);\n      }\n    }\n  }, {\n    key: \"activateView\",\n    value: function activateView(view) {\n      if (view === this.currentView) {\n        return;\n      }\n\n      if (this.currentView) {\n        this.currentView.detach();\n        this.trigger('viewDeactivate', {\n          view: this.currentView\n        });\n        this.currentView = null;\n      } // ensure rendered\n\n\n      if (this.rendered) {\n        this._renderView(view);\n      }\n\n      if (!view.attached) {\n        view.attach();\n      }\n\n      this.currentView = view;\n      this.trigger('viewActivate', {\n        view: view\n      });\n      this.revalidateLayout();\n    }\n  }, {\n    key: \"setLayoutData\",\n    value: function setLayoutData(layoutData) {\n      _get(_getPrototypeOf(SimpleTabBox.prototype), \"setLayoutData\", this).call(this, layoutData);\n\n      this.layoutData = layoutData;\n    }\n  }, {\n    key: \"getLayoutData\",\n    value: function getLayoutData() {\n      return this.layoutData;\n    }\n  }, {\n    key: \"revalidateLayout\",\n    value: function revalidateLayout() {\n      if (this.rendered) {\n        this.viewContent.invalidateLayoutTree(); // Layout immediate to prevent 'laggy' form visualization,\n        // but not initially while desktop gets rendered because it will be done at the end anyway\n\n        this.viewContent.validateLayoutTree();\n      }\n    }\n    /**\n     *\n     * @param view\n     * @param bringToTop whether the view should be placed on top of the view stack. the view tab will be selected.\n     */\n\n  }, {\n    key: \"addView\",\n    value: function addView(view, bringToTop) {\n      var activate = scout.nvl(bringToTop, true); // add to view stack\n\n      var siblingView = this._addToViewStack(view, activate); // track focus when a view gets removed ond rerendered.\n\n\n      view.setTrackFocus(true);\n      view.setParent(this);\n      this.trigger('viewAdd', {\n        view: view,\n        siblingView: siblingView\n      });\n\n      if (activate) {\n        this.activateView(view);\n      }\n    }\n    /**\n     * @param view\n     * @return the view which is gonna be the sibling to insert the new view tab after.\n     */\n\n  }, {\n    key: \"_addToViewStack\",\n    value: function _addToViewStack(view, bringToTop) {\n      var sibling;\n      var index = this.viewStack.indexOf(view);\n\n      if (index > -1) {\n        return this.viewStack[index - 1];\n      }\n\n      if (!SimpleTabBoxController.hasViewTab(view)) {\n        // first\n        this.viewStack.unshift(view);\n\n        this._addDestroyListener(view);\n\n        return sibling;\n      }\n\n      if (!this.currentView || !bringToTop) {\n        // end\n        sibling = this.viewStack[this.viewStack.length - 1];\n        this.viewStack.push(view);\n\n        this._addDestroyListener(view);\n\n        return sibling;\n      }\n\n      var currentIndex = this.viewStack.indexOf(this.currentView);\n      sibling = this.viewStack[currentIndex]; // it does not matter when index is -1 will be inserted at first position\n\n      this.viewStack.splice(currentIndex + 1, 0, view);\n      return sibling;\n    }\n  }, {\n    key: \"_addDestroyListener\",\n    value: function _addDestroyListener(view) {\n      view.one('destroy', this._viewDestroyedHandler);\n    }\n  }, {\n    key: \"_removeDestroyListener\",\n    value: function _removeDestroyListener(view) {\n      view.off('destroy', this._viewDestroyedHandler);\n    }\n  }, {\n    key: \"_onViewDestroyed\",\n    value: function _onViewDestroyed(event) {\n      var view = event.source;\n      arrays.remove(this.viewStack, view);\n\n      if (this.currentView === view) {\n        if (this.rendered) {\n          view.remove();\n        }\n\n        this.currentView = null;\n      }\n    }\n  }, {\n    key: \"removeView\",\n    value: function removeView(view, showSiblingView) {\n      if (!view) {\n        return;\n      } // track focus when a view gets removed ond rerendered.\n\n\n      view.setTrackFocus(false);\n      showSiblingView = scout.nvl(showSiblingView, true);\n      var index = this.viewStack.indexOf(view);\n      var viewToActivate; // if current view is the view to remove reset current view\n\n      if (this.currentView === view) {\n        this.currentView = null;\n      }\n\n      if (index > -1) {\n        // activate previous\n        if (showSiblingView) {\n          if (index - 1 >= 0) {\n            viewToActivate = this.viewStack[index - 1];\n          } else if (index + 1 < this.viewStack.length) {\n            viewToActivate = this.viewStack[index + 1];\n          }\n        } // remove\n\n\n        this.viewStack.splice(index, 1);\n\n        if (view.rendered) {\n          this._removeViewInProgress++;\n          view.remove();\n          this._removeViewInProgress--;\n        }\n\n        this.trigger('viewRemove', {\n          view: view\n        });\n\n        if (this._removeViewInProgress === 0) {\n          if (viewToActivate) {\n            this.activateView(viewToActivate);\n          }\n\n          if (this.rendered) {\n            this.viewContent.invalidateLayoutTree();\n            this.viewContent.validateLayoutTree();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getController\",\n    value: function getController() {\n      return this.controller;\n    }\n  }, {\n    key: \"viewCount\",\n    value: function viewCount() {\n      return this.viewStack.length;\n    }\n  }, {\n    key: \"hasViews\",\n    value: function hasViews() {\n      return this.viewStack.length > 0;\n    }\n  }, {\n    key: \"hasView\",\n    value: function hasView(view) {\n      return this.viewStack.filter(function (v) {\n        return v === view;\n      }).length > 0;\n    }\n  }, {\n    key: \"getViews\",\n    value: function getViews(displayViewId) {\n      return this.viewStack.filter(function (view) {\n        if (!displayViewId) {\n          return true;\n        }\n\n        return displayViewId === view.displayViewId;\n      });\n    }\n  }]);\n\n  return SimpleTabBox;\n}(Widget);\n\nexport { SimpleTabBox as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/tabbox/SimpleTabBox.js"],"names":["arrays","HtmlComponent","scout","SimpleTabBoxController","SimpleTabBoxLayout","SimpleTabViewContentLayout","Widget","SimpleTabBox","_addWidgetProperties","tabArea","viewStack","currentView","controller","_removeViewInProgress","model","cssClass","create","parent","install","_viewDestroyedHandler","_onViewDestroyed","bind","$container","$parent","appendDiv","addClass","htmlComp","session","setLayout","layoutData","$viewContent","viewContent","_renderTabArea","_renderView","render","$tabArea","attached","insertBefore","view","rendered","validateRoot","length","activateView","detach","trigger","attach","revalidateLayout","invalidateLayoutTree","validateLayoutTree","bringToTop","activate","nvl","siblingView","_addToViewStack","setTrackFocus","setParent","sibling","index","indexOf","hasViewTab","unshift","_addDestroyListener","push","currentIndex","splice","one","off","event","source","remove","showSiblingView","viewToActivate","filter","v","displayViewId"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,MAAR,EAAgBC,aAAhB,EAA+BC,KAA/B,EAAsCC,sBAAtC,EAA8DC,kBAA9D,EAAkFC,0BAAlF,EAA8GC,MAA9G,QAA2H,UAA3H;;IAEqBC,Y;;;;;AAEnB,0BAAc;AAAA;;AAAA;;AACZ;;AACA,UAAKC,oBAAL,CAA0B,CAAC,SAAD,CAA1B;;AAEA,UAAKC,OAAL,GAAe,IAAf;AACA,UAAKC,SAAL,GAAiB,EAAjB;AACA,UAAKC,WAAL,GAAmB,IAAnB;AACA,UAAKC,UAAL,GAAkB,IAAlB;AACA,UAAKC,qBAAL,GAA6B,CAA7B;AARY;AASb;;;;0BAEKC,K,EAAO;AACX,8EAAYA,KAAZ;;AACA,WAAKC,QAAL,GAAgBD,KAAK,CAACC,QAAtB;;AAEA,UAAI,CAAC,KAAKN,OAAV,EAAmB;AACjB;AACA,aAAKA,OAAL,GAAeP,KAAK,CAACc,MAAN,CAAa,eAAb,EAA8B;AAC3CC,UAAAA,MAAM,EAAE;AADmC,SAA9B,CAAf;AAGD;;AACD,UAAI,CAAC,KAAKL,UAAV,EAAsB;AACpB;AACA,aAAKA,UAAL,GAAkBV,KAAK,CAACc,MAAN,CAAa,wBAAb,CAAlB;AACD,OAbU,CAcX;;;AACA,WAAKJ,UAAL,CAAgBM,OAAhB,CAAwB,IAAxB,EAA8B,KAAKT,OAAnC;AAEA,WAAKU,qBAAL,GAA6B,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAA7B;AACD;AAED;AACF;AACA;AACA;AACA;;;;2CACyB;AACrB,aAAO,KAAKC,UAAZ;AACD;;;8BAES;AACR,WAAKA,UAAL,GAAkB,KAAKC,OAAL,CAAaC,SAAb,CAAuB,gBAAvB,CAAlB;;AACA,UAAI,KAAKT,QAAT,EAAmB;AACjB,aAAKO,UAAL,CAAgBG,QAAhB,CAAyB,KAAKV,QAA9B;AACD;;AACD,WAAKW,QAAL,GAAgBzB,aAAa,CAACiB,OAAd,CAAsB,KAAKI,UAA3B,EAAuC,KAAKK,OAA5C,CAAhB;AACA,WAAKD,QAAL,CAAcE,SAAd,CAAwB,IAAIxB,kBAAJ,CAAuB,IAAvB,CAAxB;AACA,WAAKsB,QAAL,CAAcG,UAAd,GAA2B,KAAKA,UAAhC,CAPQ,CASR;;AACA,WAAKC,YAAL,GAAoB,KAAKR,UAAL,CAAgBE,SAAhB,CAA0B,aAA1B,CAApB;AACA,WAAKO,WAAL,GAAmB9B,aAAa,CAACiB,OAAd,CAAsB,KAAKY,YAA3B,EAAyC,KAAKH,OAA9C,CAAnB;AACA,WAAKI,WAAL,CAAiBH,SAAjB,CAA2B,IAAIvB,0BAAJ,CAA+B,IAA/B,CAA3B;AACD;;;wCAEmB;AAClB,0FADkB,CAElB;;;AACA,WAAK2B,cAAL;;AACA,WAAKC,WAAL,CAAiB,KAAKtB,WAAtB;AACD;;;qCAEgB;AACf,WAAKF,OAAL,CAAayB,MAAb;AACA,WAAKC,QAAL,GAAgB,KAAK1B,OAAL,CAAaa,UAA7B;;AACA,UAAI,KAAKb,OAAL,CAAa2B,QAAjB,EAA2B;AACzB,aAAKD,QAAL,CAAcE,YAAd,CAA2B,KAAKP,YAAhC;AACD;AACF;;;gCAEWQ,I,EAAM;AAChB,UAAI,CAACA,IAAL,EAAW;AACT;AACD;;AACD,UAAIA,IAAI,CAACC,QAAT,EAAmB;AACjB;AACD;;AACDD,MAAAA,IAAI,CAACJ,MAAL,CAAY,KAAKJ,YAAjB;AACAQ,MAAAA,IAAI,CAAChB,UAAL,CAAgBG,QAAhB,CAAyB,MAAzB;AACAa,MAAAA,IAAI,CAACE,YAAL,GAAoB,IAApB;AACD;;;iCAEY;AACX,UAAI,KAAK9B,SAAL,CAAe+B,MAAf,GAAwB,CAAxB,IAA6B,CAAC,KAAK9B,WAAvC,EAAoD;AAClD,aAAK+B,YAAL,CAAkB,KAAKhC,SAAL,CAAe,KAAKA,SAAL,CAAe+B,MAAf,GAAwB,CAAvC,CAAlB;AACD;AACF;;;iCAEYH,I,EAAM;AACjB,UAAIA,IAAI,KAAK,KAAK3B,WAAlB,EAA+B;AAC7B;AACD;;AAED,UAAI,KAAKA,WAAT,EAAsB;AACpB,aAAKA,WAAL,CAAiBgC,MAAjB;AACA,aAAKC,OAAL,CAAa,gBAAb,EAA+B;AAC7BN,UAAAA,IAAI,EAAE,KAAK3B;AADkB,SAA/B;AAGA,aAAKA,WAAL,GAAmB,IAAnB;AACD,OAXgB,CAYjB;;;AACA,UAAI,KAAK4B,QAAT,EAAmB;AACjB,aAAKN,WAAL,CAAiBK,IAAjB;AACD;;AACD,UAAI,CAACA,IAAI,CAACF,QAAV,EAAoB;AAClBE,QAAAA,IAAI,CAACO,MAAL;AACD;;AAED,WAAKlC,WAAL,GAAmB2B,IAAnB;AAEA,WAAKM,OAAL,CAAa,cAAb,EAA6B;AAC3BN,QAAAA,IAAI,EAAEA;AADqB,OAA7B;AAIA,WAAKQ,gBAAL;AACD;;;kCAEajB,U,EAAY;AACxB,sFAAoBA,UAApB;;AACA,WAAKA,UAAL,GAAkBA,UAAlB;AACD;;;oCAEe;AACd,aAAO,KAAKA,UAAZ;AACD;;;uCAEkB;AACjB,UAAI,KAAKU,QAAT,EAAmB;AACjB,aAAKR,WAAL,CAAiBgB,oBAAjB,GADiB,CAEjB;AACA;;AACA,aAAKhB,WAAL,CAAiBiB,kBAAjB;AACD;AACF;AAED;AACF;AACA;AACA;AACA;;;;4BACUV,I,EAAMW,U,EAAY;AACxB,UAAIC,QAAQ,GAAGhD,KAAK,CAACiD,GAAN,CAAUF,UAAV,EAAsB,IAAtB,CAAf,CADwB,CAExB;;AACA,UAAIG,WAAW,GAAG,KAAKC,eAAL,CAAqBf,IAArB,EAA2BY,QAA3B,CAAlB,CAHwB,CAIxB;;;AACAZ,MAAAA,IAAI,CAACgB,aAAL,CAAmB,IAAnB;AACAhB,MAAAA,IAAI,CAACiB,SAAL,CAAe,IAAf;AACA,WAAKX,OAAL,CAAa,SAAb,EAAwB;AACtBN,QAAAA,IAAI,EAAEA,IADgB;AAEtBc,QAAAA,WAAW,EAAEA;AAFS,OAAxB;;AAKA,UAAIF,QAAJ,EAAc;AACZ,aAAKR,YAAL,CAAkBJ,IAAlB;AACD;AACF;AAED;AACF;AACA;AACA;;;;oCACkBA,I,EAAMW,U,EAAY;AAChC,UAAIO,OAAJ;AACA,UAAIC,KAAK,GAAG,KAAK/C,SAAL,CAAegD,OAAf,CAAuBpB,IAAvB,CAAZ;;AACA,UAAImB,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,eAAO,KAAK/C,SAAL,CAAe+C,KAAK,GAAG,CAAvB,CAAP;AACD;;AAED,UAAI,CAACtD,sBAAsB,CAACwD,UAAvB,CAAkCrB,IAAlC,CAAL,EAA8C;AAC5C;AACA,aAAK5B,SAAL,CAAekD,OAAf,CAAuBtB,IAAvB;;AACA,aAAKuB,mBAAL,CAAyBvB,IAAzB;;AACA,eAAOkB,OAAP;AACD;;AACD,UAAI,CAAC,KAAK7C,WAAN,IAAqB,CAACsC,UAA1B,EAAsC;AACpC;AACAO,QAAAA,OAAO,GAAG,KAAK9C,SAAL,CAAe,KAAKA,SAAL,CAAe+B,MAAf,GAAwB,CAAvC,CAAV;AACA,aAAK/B,SAAL,CAAeoD,IAAf,CAAoBxB,IAApB;;AACA,aAAKuB,mBAAL,CAAyBvB,IAAzB;;AACA,eAAOkB,OAAP;AACD;;AACD,UAAIO,YAAY,GAAG,KAAKrD,SAAL,CAAegD,OAAf,CAAuB,KAAK/C,WAA5B,CAAnB;AACA6C,MAAAA,OAAO,GAAG,KAAK9C,SAAL,CAAeqD,YAAf,CAAV,CArBgC,CAsBhC;;AACA,WAAKrD,SAAL,CAAesD,MAAf,CAAsBD,YAAY,GAAG,CAArC,EAAwC,CAAxC,EAA2CzB,IAA3C;AACA,aAAOkB,OAAP;AACD;;;wCAEmBlB,I,EAAM;AACxBA,MAAAA,IAAI,CAAC2B,GAAL,CAAS,SAAT,EAAoB,KAAK9C,qBAAzB;AACD;;;2CAEsBmB,I,EAAM;AAC3BA,MAAAA,IAAI,CAAC4B,GAAL,CAAS,SAAT,EAAoB,KAAK/C,qBAAzB;AACD;;;qCAEgBgD,K,EAAO;AACtB,UAAI7B,IAAI,GAAG6B,KAAK,CAACC,MAAjB;AACApE,MAAAA,MAAM,CAACqE,MAAP,CAAc,KAAK3D,SAAnB,EAA8B4B,IAA9B;;AACA,UAAI,KAAK3B,WAAL,KAAqB2B,IAAzB,EAA+B;AAC7B,YAAI,KAAKC,QAAT,EAAmB;AACjBD,UAAAA,IAAI,CAAC+B,MAAL;AACD;;AACD,aAAK1D,WAAL,GAAmB,IAAnB;AACD;AACF;;;+BAEU2B,I,EAAMgC,e,EAAiB;AAChC,UAAI,CAAChC,IAAL,EAAW;AACT;AACD,OAH+B,CAIhC;;;AACAA,MAAAA,IAAI,CAACgB,aAAL,CAAmB,KAAnB;AACAgB,MAAAA,eAAe,GAAGpE,KAAK,CAACiD,GAAN,CAAUmB,eAAV,EAA2B,IAA3B,CAAlB;AACA,UAAIb,KAAK,GAAG,KAAK/C,SAAL,CAAegD,OAAf,CAAuBpB,IAAvB,CAAZ;AACA,UAAIiC,cAAJ,CARgC,CAShC;;AACA,UAAI,KAAK5D,WAAL,KAAqB2B,IAAzB,EAA+B;AAC7B,aAAK3B,WAAL,GAAmB,IAAnB;AACD;;AAED,UAAI8C,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd;AACA,YAAIa,eAAJ,EAAqB;AACnB,cAAIb,KAAK,GAAG,CAAR,IAAa,CAAjB,EAAoB;AAClBc,YAAAA,cAAc,GAAG,KAAK7D,SAAL,CAAe+C,KAAK,GAAG,CAAvB,CAAjB;AACD,WAFD,MAEO,IAAIA,KAAK,GAAG,CAAR,GAAY,KAAK/C,SAAL,CAAe+B,MAA/B,EAAuC;AAC5C8B,YAAAA,cAAc,GAAG,KAAK7D,SAAL,CAAe+C,KAAK,GAAG,CAAvB,CAAjB;AACD;AACF,SARa,CAUd;;;AACA,aAAK/C,SAAL,CAAesD,MAAf,CAAsBP,KAAtB,EAA6B,CAA7B;;AACA,YAAInB,IAAI,CAACC,QAAT,EAAmB;AACjB,eAAK1B,qBAAL;AACAyB,UAAAA,IAAI,CAAC+B,MAAL;AACA,eAAKxD,qBAAL;AACD;;AACD,aAAK+B,OAAL,CAAa,YAAb,EAA2B;AACzBN,UAAAA,IAAI,EAAEA;AADmB,SAA3B;;AAIA,YAAI,KAAKzB,qBAAL,KAA+B,CAAnC,EAAsC;AACpC,cAAI0D,cAAJ,EAAoB;AAClB,iBAAK7B,YAAL,CAAkB6B,cAAlB;AACD;;AACD,cAAI,KAAKhC,QAAT,EAAmB;AACjB,iBAAKR,WAAL,CAAiBgB,oBAAjB;AACA,iBAAKhB,WAAL,CAAiBiB,kBAAjB;AACD;AACF;AACF;AACF;;;oCAEe;AACd,aAAO,KAAKpC,UAAZ;AACD;;;gCAEW;AACV,aAAO,KAAKF,SAAL,CAAe+B,MAAtB;AACD;;;+BAEU;AACT,aAAO,KAAK/B,SAAL,CAAe+B,MAAf,GAAwB,CAA/B;AACD;;;4BAEOH,I,EAAM;AACZ,aAAO,KAAK5B,SAAL,CAAe8D,MAAf,CAAsB,UAASC,CAAT,EAAY;AACvC,eAAOA,CAAC,KAAKnC,IAAb;AACD,OAFM,EAEJG,MAFI,GAEK,CAFZ;AAGD;;;6BAEQiC,a,EAAe;AACtB,aAAO,KAAKhE,SAAL,CAAe8D,MAAf,CAAsB,UAASlC,IAAT,EAAe;AAC1C,YAAI,CAACoC,aAAL,EAAoB;AAClB,iBAAO,IAAP;AACD;;AACD,eAAOA,aAAa,KAAKpC,IAAI,CAACoC,aAA9B;AACD,OALM,CAAP;AAMD;;;;EAzRuCpE,M;;SAArBC,Y","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, HtmlComponent, scout, SimpleTabBoxController, SimpleTabBoxLayout, SimpleTabViewContentLayout, Widget} from '../index';\n\nexport default class SimpleTabBox extends Widget {\n\n  constructor() {\n    super();\n    this._addWidgetProperties(['tabArea']);\n\n    this.tabArea = null;\n    this.viewStack = [];\n    this.currentView = null;\n    this.controller = null;\n    this._removeViewInProgress = 0;\n  }\n\n  _init(model) {\n    super._init(model);\n    this.cssClass = model.cssClass;\n\n    if (!this.tabArea) {\n      // default tab area\n      this.tabArea = scout.create('SimpleTabArea', {\n        parent: this\n      });\n    }\n    if (!this.controller) {\n      // default controller\n      this.controller = scout.create('SimpleTabBoxController');\n    }\n    // link\n    this.controller.install(this, this.tabArea);\n\n    this._viewDestroyedHandler = this._onViewDestroyed.bind(this);\n  }\n\n  /**\n   * Returns a $container used as a bind target for the key-stroke context of the group-box.\n   * By default this function returns the container of the form, or when group-box is has no\n   * form as a parent the container of the group-box.\n   */\n  _keyStrokeBindTarget() {\n    return this.$container;\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('simple-tab-box');\n    if (this.cssClass) {\n      this.$container.addClass(this.cssClass);\n    }\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new SimpleTabBoxLayout(this));\n    this.htmlComp.layoutData = this.layoutData;\n\n    // render content\n    this.$viewContent = this.$container.appendDiv('tab-content');\n    this.viewContent = HtmlComponent.install(this.$viewContent, this.session);\n    this.viewContent.setLayout(new SimpleTabViewContentLayout(this));\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    // render tabArea\n    this._renderTabArea();\n    this._renderView(this.currentView);\n  }\n\n  _renderTabArea() {\n    this.tabArea.render();\n    this.$tabArea = this.tabArea.$container;\n    if (this.tabArea.attached) {\n      this.$tabArea.insertBefore(this.$viewContent);\n    }\n  }\n\n  _renderView(view) {\n    if (!view) {\n      return;\n    }\n    if (view.rendered) {\n      return;\n    }\n    view.render(this.$viewContent);\n    view.$container.addClass('view');\n    view.validateRoot = true;\n  }\n\n  postRender() {\n    if (this.viewStack.length > 0 && !this.currentView) {\n      this.activateView(this.viewStack[this.viewStack.length - 1]);\n    }\n  }\n\n  activateView(view) {\n    if (view === this.currentView) {\n      return;\n    }\n\n    if (this.currentView) {\n      this.currentView.detach();\n      this.trigger('viewDeactivate', {\n        view: this.currentView\n      });\n      this.currentView = null;\n    }\n    // ensure rendered\n    if (this.rendered) {\n      this._renderView(view);\n    }\n    if (!view.attached) {\n      view.attach();\n    }\n\n    this.currentView = view;\n\n    this.trigger('viewActivate', {\n      view: view\n    });\n\n    this.revalidateLayout();\n  }\n\n  setLayoutData(layoutData) {\n    super.setLayoutData(layoutData);\n    this.layoutData = layoutData;\n  }\n\n  getLayoutData() {\n    return this.layoutData;\n  }\n\n  revalidateLayout() {\n    if (this.rendered) {\n      this.viewContent.invalidateLayoutTree();\n      // Layout immediate to prevent 'laggy' form visualization,\n      // but not initially while desktop gets rendered because it will be done at the end anyway\n      this.viewContent.validateLayoutTree();\n    }\n  }\n\n  /**\n   *\n   * @param view\n   * @param bringToTop whether the view should be placed on top of the view stack. the view tab will be selected.\n   */\n  addView(view, bringToTop) {\n    var activate = scout.nvl(bringToTop, true);\n    // add to view stack\n    var siblingView = this._addToViewStack(view, activate);\n    // track focus when a view gets removed ond rerendered.\n    view.setTrackFocus(true);\n    view.setParent(this);\n    this.trigger('viewAdd', {\n      view: view,\n      siblingView: siblingView\n    });\n\n    if (activate) {\n      this.activateView(view);\n    }\n  }\n\n  /**\n   * @param view\n   * @return the view which is gonna be the sibling to insert the new view tab after.\n   */\n  _addToViewStack(view, bringToTop) {\n    var sibling;\n    var index = this.viewStack.indexOf(view);\n    if (index > -1) {\n      return this.viewStack[index - 1];\n    }\n\n    if (!SimpleTabBoxController.hasViewTab(view)) {\n      // first\n      this.viewStack.unshift(view);\n      this._addDestroyListener(view);\n      return sibling;\n    }\n    if (!this.currentView || !bringToTop) {\n      // end\n      sibling = this.viewStack[this.viewStack.length - 1];\n      this.viewStack.push(view);\n      this._addDestroyListener(view);\n      return sibling;\n    }\n    var currentIndex = this.viewStack.indexOf(this.currentView);\n    sibling = this.viewStack[currentIndex];\n    // it does not matter when index is -1 will be inserted at first position\n    this.viewStack.splice(currentIndex + 1, 0, view);\n    return sibling;\n  }\n\n  _addDestroyListener(view) {\n    view.one('destroy', this._viewDestroyedHandler);\n  }\n\n  _removeDestroyListener(view) {\n    view.off('destroy', this._viewDestroyedHandler);\n  }\n\n  _onViewDestroyed(event) {\n    var view = event.source;\n    arrays.remove(this.viewStack, view);\n    if (this.currentView === view) {\n      if (this.rendered) {\n        view.remove();\n      }\n      this.currentView = null;\n    }\n  }\n\n  removeView(view, showSiblingView) {\n    if (!view) {\n      return;\n    }\n    // track focus when a view gets removed ond rerendered.\n    view.setTrackFocus(false);\n    showSiblingView = scout.nvl(showSiblingView, true);\n    var index = this.viewStack.indexOf(view);\n    var viewToActivate;\n    // if current view is the view to remove reset current view\n    if (this.currentView === view) {\n      this.currentView = null;\n    }\n\n    if (index > -1) {\n      // activate previous\n      if (showSiblingView) {\n        if (index - 1 >= 0) {\n          viewToActivate = this.viewStack[index - 1];\n        } else if (index + 1 < this.viewStack.length) {\n          viewToActivate = this.viewStack[index + 1];\n        }\n      }\n\n      // remove\n      this.viewStack.splice(index, 1);\n      if (view.rendered) {\n        this._removeViewInProgress++;\n        view.remove();\n        this._removeViewInProgress--;\n      }\n      this.trigger('viewRemove', {\n        view: view\n      });\n\n      if (this._removeViewInProgress === 0) {\n        if (viewToActivate) {\n          this.activateView(viewToActivate);\n        }\n        if (this.rendered) {\n          this.viewContent.invalidateLayoutTree();\n          this.viewContent.validateLayoutTree();\n        }\n      }\n    }\n  }\n\n  getController() {\n    return this.controller;\n  }\n\n  viewCount() {\n    return this.viewStack.length;\n  }\n\n  hasViews() {\n    return this.viewStack.length > 0;\n  }\n\n  hasView(view) {\n    return this.viewStack.filter(function(v) {\n      return v === view;\n    }).length > 0;\n  }\n\n  getViews(displayViewId) {\n    return this.viewStack.filter(function(view) {\n      if (!displayViewId) {\n        return true;\n      }\n      return displayViewId === view.displayViewId;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}