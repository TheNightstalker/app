{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nvar OutlineMediator = /*#__PURE__*/function () {\n  function OutlineMediator() {\n    _classCallCheck(this, OutlineMediator);\n  }\n\n  _createClass(OutlineMediator, [{\n    key: \"init\",\n    value: function init(model) {}\n  }, {\n    key: \"_skipEvent\",\n    value: function _skipEvent(page) {\n      return page === null || page.getOutline() === null || page.leaf;\n    }\n  }, {\n    key: \"onTableRowsInserted\",\n    value: function onTableRowsInserted(rows, childPages, pageWithTable) {\n      if (this._skipEvent(pageWithTable)) {\n        return;\n      }\n\n      pageWithTable.getTree().insertNodes(childPages, pageWithTable);\n    }\n  }, {\n    key: \"onTableRowsDeleted\",\n    value: function onTableRowsDeleted(rows, childPages, pageWithTable) {\n      if (this._skipEvent(pageWithTable)) {\n        return;\n      }\n\n      pageWithTable.getTree().deleteNodes(childPages, pageWithTable);\n    }\n  }, {\n    key: \"onTableRowsUpdated\",\n    value: function onTableRowsUpdated(event, pageWithTable) {\n      if (this._skipEvent(pageWithTable)) {\n        return;\n      }\n\n      var pages = pageWithTable.updatePagesFromTableRows(event.rows);\n      pageWithTable.getTree().updateNodes(pages);\n    }\n  }, {\n    key: \"onTableRowAction\",\n    value: function onTableRowAction(event, page) {\n      var childPage = event.row.page;\n\n      if (!childPage) {\n        return;\n      }\n\n      var outline = childPage.getOutline();\n\n      if (!outline) {\n        return;\n      }\n\n      outline.selectNode(childPage);\n      outline.setNodeExpanded(childPage, true);\n    }\n  }, {\n    key: \"onTableRowOrderChanged\",\n    value: function onTableRowOrderChanged(event, pageWithTable) {\n      if (this._skipEvent(pageWithTable)) {\n        return;\n      }\n\n      var table = event.source;\n      var childPages = pageWithTable.pagesForTableRows(table.rows);\n      pageWithTable.getOutline().updateNodeOrder(childPages, pageWithTable);\n    }\n  }, {\n    key: \"onTableFilter\",\n    value: function onTableFilter(event, page) {\n      page.getOutline().filter();\n    }\n  }]);\n\n  return OutlineMediator;\n}();\n\nexport { OutlineMediator as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/desktop/outline/OutlineMediator.js"],"names":["OutlineMediator","model","page","getOutline","leaf","rows","childPages","pageWithTable","_skipEvent","getTree","insertNodes","deleteNodes","event","pages","updatePagesFromTableRows","updateNodes","childPage","row","outline","selectNode","setNodeExpanded","table","source","pagesForTableRows","updateNodeOrder","filter"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACqBA,e;;;;;;;yBAEdC,K,EAAO,CACX;;;+BAEUC,I,EAAM;AACf,aAAOA,IAAI,KAAK,IAAT,IAAiBA,IAAI,CAACC,UAAL,OAAsB,IAAvC,IAA+CD,IAAI,CAACE,IAA3D;AACD;;;wCAEmBC,I,EAAMC,U,EAAYC,a,EAAe;AACnD,UAAI,KAAKC,UAAL,CAAgBD,aAAhB,CAAJ,EAAoC;AAClC;AACD;;AACDA,MAAAA,aAAa,CAACE,OAAd,GAAwBC,WAAxB,CAAoCJ,UAApC,EAAgDC,aAAhD;AACD;;;uCAEkBF,I,EAAMC,U,EAAYC,a,EAAe;AAClD,UAAI,KAAKC,UAAL,CAAgBD,aAAhB,CAAJ,EAAoC;AAClC;AACD;;AACDA,MAAAA,aAAa,CAACE,OAAd,GAAwBE,WAAxB,CAAoCL,UAApC,EAAgDC,aAAhD;AACD;;;uCAEkBK,K,EAAOL,a,EAAe;AACvC,UAAI,KAAKC,UAAL,CAAgBD,aAAhB,CAAJ,EAAoC;AAClC;AACD;;AAED,UAAIM,KAAK,GAAGN,aAAa,CAACO,wBAAd,CAAuCF,KAAK,CAACP,IAA7C,CAAZ;AACAE,MAAAA,aAAa,CAACE,OAAd,GAAwBM,WAAxB,CAAoCF,KAApC;AACD;;;qCAEgBD,K,EAAOV,I,EAAM;AAC5B,UAAIc,SAAS,GAAGJ,KAAK,CAACK,GAAN,CAAUf,IAA1B;;AACA,UAAI,CAACc,SAAL,EAAgB;AACd;AACD;;AAED,UAAIE,OAAO,GAAGF,SAAS,CAACb,UAAV,EAAd;;AACA,UAAI,CAACe,OAAL,EAAc;AACZ;AACD;;AAEDA,MAAAA,OAAO,CAACC,UAAR,CAAmBH,SAAnB;AACAE,MAAAA,OAAO,CAACE,eAAR,CAAwBJ,SAAxB,EAAmC,IAAnC;AACD;;;2CAEsBJ,K,EAAOL,a,EAAe;AAC3C,UAAI,KAAKC,UAAL,CAAgBD,aAAhB,CAAJ,EAAoC;AAClC;AACD;;AAED,UAAIc,KAAK,GAAGT,KAAK,CAACU,MAAlB;AACA,UAAIhB,UAAU,GAAGC,aAAa,CAACgB,iBAAd,CAAgCF,KAAK,CAAChB,IAAtC,CAAjB;AACAE,MAAAA,aAAa,CAACJ,UAAd,GAA2BqB,eAA3B,CAA2ClB,UAA3C,EAAuDC,aAAvD;AACD;;;kCAEaK,K,EAAOV,I,EAAM;AACzBA,MAAAA,IAAI,CAACC,UAAL,GAAkBsB,MAAlB;AACD;;;;;;SA3DkBzB,e","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class OutlineMediator {\n\n  init(model) {\n  }\n\n  _skipEvent(page) {\n    return page === null || page.getOutline() === null || page.leaf;\n  }\n\n  onTableRowsInserted(rows, childPages, pageWithTable) {\n    if (this._skipEvent(pageWithTable)) {\n      return;\n    }\n    pageWithTable.getTree().insertNodes(childPages, pageWithTable);\n  }\n\n  onTableRowsDeleted(rows, childPages, pageWithTable) {\n    if (this._skipEvent(pageWithTable)) {\n      return;\n    }\n    pageWithTable.getTree().deleteNodes(childPages, pageWithTable);\n  }\n\n  onTableRowsUpdated(event, pageWithTable) {\n    if (this._skipEvent(pageWithTable)) {\n      return;\n    }\n\n    var pages = pageWithTable.updatePagesFromTableRows(event.rows);\n    pageWithTable.getTree().updateNodes(pages);\n  }\n\n  onTableRowAction(event, page) {\n    var childPage = event.row.page;\n    if (!childPage) {\n      return;\n    }\n\n    var outline = childPage.getOutline();\n    if (!outline) {\n      return;\n    }\n\n    outline.selectNode(childPage);\n    outline.setNodeExpanded(childPage, true);\n  }\n\n  onTableRowOrderChanged(event, pageWithTable) {\n    if (this._skipEvent(pageWithTable)) {\n      return;\n    }\n\n    var table = event.source;\n    var childPages = pageWithTable.pagesForTableRows(table.rows);\n    pageWithTable.getOutline().updateNodeOrder(childPages, pageWithTable);\n  }\n\n  onTableFilter(event, page) {\n    page.getOutline().filter();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}