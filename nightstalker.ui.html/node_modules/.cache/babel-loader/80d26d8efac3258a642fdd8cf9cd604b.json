{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { ActionKeyStroke, Device, DoubleClickSupport, HtmlComponent, Icon, KeyStrokeContext, NullLayout, scout, tooltips, Widget } from '../index';\nimport $ from 'jquery';\n\nvar Action = /*#__PURE__*/function (_Widget) {\n  _inherits(Action, _Widget);\n\n  var _super = _createSuper(Action);\n\n  // noinspection DuplicatedCode\n  function Action() {\n    var _this;\n\n    _classCallCheck(this, Action);\n\n    _this = _super.call(this);\n    _this.actionStyle = Action.ActionStyle.DEFAULT;\n    _this.compact = false;\n    _this.iconId = null;\n    _this.horizontalAlignment = -1;\n    _this.keyStroke = null;\n    _this.keyStrokeFirePolicy = Action.KeyStrokeFirePolicy.ACCESSIBLE_ONLY;\n    _this.selected = false;\n    _this.preventDoubleClick = false;\n    /**\n     * This property decides whether or not the tabindex attribute is set in the DOM.\n     */\n\n    _this.tabbable = false;\n    _this.text = null;\n    /**\n     * Supported action styles are:\n     * - default: regular menu-look, also used in overflow menus\n     * - button: menu looks like a button\n     */\n\n    _this.textVisible = true;\n    _this.toggleAction = false;\n    _this.tooltipText = null;\n    _this.showTooltipWhenSelected = true;\n    _this._doubleClickSupport = new DoubleClickSupport();\n\n    _this._addCloneProperties(['actionStyle', 'horizontalAlignment', 'iconId', 'selected', 'preventDoubleClick', 'tabbable', 'text', 'tooltipText', 'toggleAction']);\n\n    return _this;\n  }\n\n  _createClass(Action, [{\n    key: \"_createKeyStrokeContext\",\n\n    /**\n     * @override\n     */\n    value: function _createKeyStrokeContext() {\n      return new KeyStrokeContext();\n    }\n  }, {\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(Action.prototype), \"_init\", this).call(this, model);\n\n      this.actionKeyStroke = this._createActionKeyStroke();\n      this.resolveConsts([{\n        property: 'actionStyle',\n        constType: Action.ActionStyle\n      }, {\n        property: 'keyStrokeFirePolicy',\n        constType: Action.KeyStrokeFirePolicy\n      }]);\n      this.resolveTextKeys(['text', 'tooltipText']);\n      this.resolveIconIds(['iconId']);\n\n      this._setKeyStroke(this.keyStroke);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      var _this2 = this;\n\n      this.$container = this.$parent.appendDiv('action').on('mousedown', function (event) {\n        return _this2._doubleClickSupport.mousedown(event);\n      }).on('click', this._onClick.bind(this));\n      this.htmlComp = HtmlComponent.install(this.$container, this.session);\n      this.htmlComp.setLayout(this._createLayout());\n    }\n  }, {\n    key: \"_createLayout\",\n    value: function _createLayout() {\n      return new NullLayout();\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(Action.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderText();\n\n      this._renderIconId();\n\n      this._renderTooltipText();\n\n      this._renderKeyStroke();\n\n      this._renderSelected();\n\n      this._renderTabbable();\n\n      this._renderCompact();\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this._removeText();\n\n      this._removeIconId();\n\n      _get(_getPrototypeOf(Action.prototype), \"_remove\", this).call(this);\n    }\n  }, {\n    key: \"setText\",\n    value: function setText(text) {\n      this.setProperty('text', text);\n    }\n  }, {\n    key: \"_renderText\",\n    value: function _renderText() {\n      var text = this.text || '';\n\n      if (text && this.textVisible) {\n        if (!this.$text) {\n          // Create a separate text element to so that setting the text does not remove the icon\n          this.$text = this.$container.appendSpan('content text');\n          HtmlComponent.install(this.$text, this.session);\n        }\n\n        this.$text.text(text);\n      } else {\n        this._removeText();\n      }\n    }\n  }, {\n    key: \"_removeText\",\n    value: function _removeText() {\n      if (this.$text) {\n        this.$text.remove();\n        this.$text = null;\n      }\n    }\n  }, {\n    key: \"setIconId\",\n    value: function setIconId(iconId) {\n      this.setProperty('iconId', iconId);\n    }\n  }, {\n    key: \"_renderIconId\",\n    value: function _renderIconId() {\n      var iconId = this.iconId || ''; // If the icon is an image (and not a font icon), the Icon class will invalidate the layout when the image has loaded\n\n      if (!iconId) {\n        this._removeIconId();\n\n        return;\n      }\n\n      if (this.icon) {\n        this.icon.setIconDesc(iconId);\n        return;\n      }\n\n      this.icon = scout.create('Icon', {\n        parent: this,\n        iconDesc: iconId,\n        prepend: true\n      });\n      this.icon.one('destroy', function () {\n        this.icon = null;\n      }.bind(this));\n      this.icon.render();\n    }\n  }, {\n    key: \"get$Icon\",\n    value: function get$Icon() {\n      if (this.icon) {\n        return this.icon.$container;\n      }\n\n      return $();\n    }\n  }, {\n    key: \"_removeIconId\",\n    value: function _removeIconId() {\n      if (this.icon) {\n        this.icon.destroy();\n      }\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_renderEnabled\",\n    value: function _renderEnabled() {\n      _get(_getPrototypeOf(Action.prototype), \"_renderEnabled\", this).call(this);\n\n      if (this.rendered) {\n        // No need to do this during initial rendering\n        this._updateTooltip();\n\n        this._renderTabbable();\n      }\n    }\n  }, {\n    key: \"setTooltipText\",\n    value: function setTooltipText(tooltipText) {\n      this.setProperty('tooltipText', tooltipText);\n    }\n  }, {\n    key: \"_renderTooltipText\",\n    value: function _renderTooltipText() {\n      this._updateTooltip();\n    }\n    /**\n     * Installs or uninstalls tooltip based on tooltipText, selected and enabledComputed.\n     */\n\n  }, {\n    key: \"_updateTooltip\",\n    value: function _updateTooltip() {\n      if (this._shouldInstallTooltip()) {\n        tooltips.install(this.$container, this._configureTooltip());\n      } else {\n        tooltips.uninstall(this.$container);\n      }\n    }\n  }, {\n    key: \"_shouldInstallTooltip\",\n    value: function _shouldInstallTooltip() {\n      var show = this.tooltipText && this.enabledComputed;\n\n      if (!this.showTooltipWhenSelected && this.selected) {\n        show = false;\n      }\n\n      return show;\n    }\n  }, {\n    key: \"_renderTabbable\",\n    value: function _renderTabbable() {\n      this.$container.setTabbable(this.tabbable && this.enabledComputed && !Device.get().supportsOnlyTouch());\n    }\n  }, {\n    key: \"_renderCompact\",\n    value: function _renderCompact() {\n      this.$container.toggleClass('compact', this.compact);\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"setTooltipPosition\",\n    value: function setTooltipPosition(position) {\n      this.setProperty('tooltipPosition', position);\n    }\n  }, {\n    key: \"_configureTooltip\",\n    value: function _configureTooltip() {\n      return {\n        parent: this,\n        text: this.tooltipText,\n        $anchor: this.$container,\n        arrowPosition: 50,\n        arrowPositionUnit: '%',\n        tooltipPosition: this.tooltipPosition\n      };\n    }\n    /**\n     * @return {Boolean}\n     *          <code>true</code> if the action has been performed or <code>false</code> if it\n     *          has not been performed (e.g. when the button is not enabledComputed).\n     */\n\n  }, {\n    key: \"doAction\",\n    value: function doAction() {\n      if (!this.prepareDoAction()) {\n        return false;\n      }\n\n      if (this.isToggleAction()) {\n        this.setSelected(!this.selected);\n      }\n\n      this._doAction();\n\n      return true;\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.isToggleAction()) {\n        this.setSelected(!this.selected);\n      }\n    }\n  }, {\n    key: \"setToggleAction\",\n    value: function setToggleAction(toggleAction) {\n      this.setProperty('toggleAction', toggleAction);\n    }\n  }, {\n    key: \"isToggleAction\",\n    value: function isToggleAction() {\n      return this.toggleAction;\n    }\n    /**\n     * @returns {Boolean} <code>true</code> if the action may be executed, <code>false</code> if it should be ignored.\n     */\n\n  }, {\n    key: \"prepareDoAction\",\n    value: function prepareDoAction() {\n      if (!this.enabledComputed || !this.visible) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_doAction\",\n    value: function _doAction() {\n      this.trigger('action');\n    }\n  }, {\n    key: \"setSelected\",\n    value: function setSelected(selected) {\n      this.setProperty('selected', selected);\n    }\n  }, {\n    key: \"_renderSelected\",\n    value: function _renderSelected() {\n      this.$container.toggleClass('selected', this.selected);\n\n      if (this.rendered) {\n        // prevent unnecessary tooltip updates during initial rendering\n        this._updateTooltip();\n      }\n    }\n  }, {\n    key: \"setKeyStroke\",\n    value: function setKeyStroke(keyStroke) {\n      this.setProperty('keyStroke', keyStroke);\n    }\n  }, {\n    key: \"_setKeyStroke\",\n    value: function _setKeyStroke(keyStroke) {\n      this.actionKeyStroke.parseAndSetKeyStroke(keyStroke);\n\n      this._setProperty('keyStroke', keyStroke);\n    }\n  }, {\n    key: \"_renderKeyStroke\",\n    value: function _renderKeyStroke() {\n      var keyStroke = this.keyStroke;\n\n      if (keyStroke === undefined) {\n        this.$container.removeAttr('data-shortcut');\n      } else {\n        this.$container.attr('data-shortcut', keyStroke);\n      }\n    }\n  }, {\n    key: \"setTabbable\",\n    value: function setTabbable(tabbable) {\n      this.setProperty('tabbable', tabbable);\n    }\n  }, {\n    key: \"setTextVisible\",\n    value: function setTextVisible(textVisible) {\n      if (this.textVisible === textVisible) {\n        return;\n      }\n\n      this._setProperty('textVisible', textVisible);\n\n      if (this.rendered) {\n        this._renderText();\n      }\n    }\n  }, {\n    key: \"setActionStyle\",\n    value: function setActionStyle(actionStyle) {\n      this.setProperty('actionStyle', actionStyle);\n    }\n  }, {\n    key: \"setCompact\",\n    value: function setCompact(compact) {\n      if (this.compact === compact) {\n        return;\n      }\n\n      this.compact = compact;\n\n      if (this.rendered) {\n        this._renderCompact();\n      }\n    }\n  }, {\n    key: \"setHorizontalAlignment\",\n    value: function setHorizontalAlignment(horizontalAlignment) {\n      this.setProperty('horizontalAlignment', horizontalAlignment);\n    }\n  }, {\n    key: \"_createActionKeyStroke\",\n    value: function _createActionKeyStroke() {\n      return new ActionKeyStroke(this);\n    }\n  }, {\n    key: \"setPreventDoubleClick\",\n    value: function setPreventDoubleClick(preventDoubleClick) {\n      this.setProperty('preventDoubleClick', preventDoubleClick);\n    }\n  }, {\n    key: \"_allowMouseEvent\",\n    value: function _allowMouseEvent(event) {\n      if (event.which !== 1) {\n        return false; // Other button than left mouse button --> nop\n      }\n\n      if (event.type === 'click' && this.preventDoubleClick && this._doubleClickSupport.doubleClicked()) {\n        return false; // More than one consecutive click --> nop\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_onClick\",\n    value: function _onClick(event) {\n      if (!this._allowMouseEvent(event)) {\n        return;\n      } // When the action is clicked the user wants to execute the action and not see the tooltip -> cancel the task\n      // If it is already displayed it will stay\n\n\n      tooltips.cancel(this.$container);\n      this.doAction();\n    }\n  }]);\n\n  return Action;\n}(Widget);\n\n_defineProperty(Action, \"ActionStyle\", {\n  DEFAULT: 0,\n  BUTTON: 1\n});\n\n_defineProperty(Action, \"KeyStrokeFirePolicy\", {\n  ACCESSIBLE_ONLY: 0,\n  ALWAYS: 1\n});\n\nexport { Action as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/action/Action.js"],"names":["ActionKeyStroke","Device","DoubleClickSupport","HtmlComponent","Icon","KeyStrokeContext","NullLayout","scout","tooltips","Widget","$","Action","actionStyle","ActionStyle","DEFAULT","compact","iconId","horizontalAlignment","keyStroke","keyStrokeFirePolicy","KeyStrokeFirePolicy","ACCESSIBLE_ONLY","selected","preventDoubleClick","tabbable","text","textVisible","toggleAction","tooltipText","showTooltipWhenSelected","_doubleClickSupport","_addCloneProperties","model","actionKeyStroke","_createActionKeyStroke","resolveConsts","property","constType","resolveTextKeys","resolveIconIds","_setKeyStroke","$container","$parent","appendDiv","on","event","mousedown","_onClick","bind","htmlComp","install","session","setLayout","_createLayout","_renderText","_renderIconId","_renderTooltipText","_renderKeyStroke","_renderSelected","_renderTabbable","_renderCompact","_removeText","_removeIconId","setProperty","$text","appendSpan","remove","icon","setIconDesc","create","parent","iconDesc","prepend","one","render","destroy","rendered","_updateTooltip","_shouldInstallTooltip","_configureTooltip","uninstall","show","enabledComputed","setTabbable","get","supportsOnlyTouch","toggleClass","invalidateLayoutTree","position","$anchor","arrowPosition","arrowPositionUnit","tooltipPosition","prepareDoAction","isToggleAction","setSelected","_doAction","visible","trigger","parseAndSetKeyStroke","_setProperty","undefined","removeAttr","attr","which","type","doubleClicked","_allowMouseEvent","cancel","doAction","BUTTON","ALWAYS"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {ActionKeyStroke, Device, DoubleClickSupport, HtmlComponent, Icon, KeyStrokeContext, NullLayout, scout, tooltips, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class Action extends Widget {\n\n  // noinspection DuplicatedCode\n  constructor() {\n    super();\n\n    this.actionStyle = Action.ActionStyle.DEFAULT;\n    this.compact = false;\n    this.iconId = null;\n    this.horizontalAlignment = -1;\n    this.keyStroke = null;\n    this.keyStrokeFirePolicy = Action.KeyStrokeFirePolicy.ACCESSIBLE_ONLY;\n    this.selected = false;\n    this.preventDoubleClick = false;\n    /**\n     * This property decides whether or not the tabindex attribute is set in the DOM.\n     */\n    this.tabbable = false;\n    this.text = null;\n    /**\n     * Supported action styles are:\n     * - default: regular menu-look, also used in overflow menus\n     * - button: menu looks like a button\n     */\n    this.textVisible = true;\n    this.toggleAction = false;\n    this.tooltipText = null;\n    this.showTooltipWhenSelected = true;\n\n    this._doubleClickSupport = new DoubleClickSupport();\n    this._addCloneProperties(['actionStyle', 'horizontalAlignment', 'iconId', 'selected', 'preventDoubleClick', 'tabbable', 'text', 'tooltipText', 'toggleAction']);\n  }\n\n  static ActionStyle = {\n    DEFAULT: 0,\n    BUTTON: 1\n  };\n\n  static KeyStrokeFirePolicy = {\n    ACCESSIBLE_ONLY: 0,\n    ALWAYS: 1\n  };\n\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n\n  _init(model) {\n    super._init(model);\n    this.actionKeyStroke = this._createActionKeyStroke();\n    this.resolveConsts([{\n      property: 'actionStyle',\n      constType: Action.ActionStyle\n    }, {\n      property: 'keyStrokeFirePolicy',\n      constType: Action.KeyStrokeFirePolicy\n    }]);\n    this.resolveTextKeys(['text', 'tooltipText']);\n    this.resolveIconIds(['iconId']);\n    this._setKeyStroke(this.keyStroke);\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('action')\n      .on('mousedown', event => this._doubleClickSupport.mousedown(event))\n      .on('click', this._onClick.bind(this));\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(this._createLayout());\n  }\n\n  _createLayout() {\n    return new NullLayout();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n\n    this._renderText();\n    this._renderIconId();\n    this._renderTooltipText();\n    this._renderKeyStroke();\n    this._renderSelected();\n    this._renderTabbable();\n    this._renderCompact();\n  }\n\n  _remove() {\n    this._removeText();\n    this._removeIconId();\n    super._remove();\n  }\n\n  setText(text) {\n    this.setProperty('text', text);\n  }\n\n  _renderText() {\n    var text = this.text || '';\n    if (text && this.textVisible) {\n      if (!this.$text) {\n        // Create a separate text element to so that setting the text does not remove the icon\n        this.$text = this.$container.appendSpan('content text');\n        HtmlComponent.install(this.$text, this.session);\n      }\n      this.$text.text(text);\n    } else {\n      this._removeText();\n    }\n  }\n\n  _removeText() {\n    if (this.$text) {\n      this.$text.remove();\n      this.$text = null;\n    }\n  }\n\n  setIconId(iconId) {\n    this.setProperty('iconId', iconId);\n  }\n\n  _renderIconId() {\n    var iconId = this.iconId || '';\n    // If the icon is an image (and not a font icon), the Icon class will invalidate the layout when the image has loaded\n    if (!iconId) {\n      this._removeIconId();\n      return;\n    }\n    if (this.icon) {\n      this.icon.setIconDesc(iconId);\n      return;\n    }\n    this.icon = scout.create('Icon', {\n      parent: this,\n      iconDesc: iconId,\n      prepend: true\n    });\n    this.icon.one('destroy', function() {\n      this.icon = null;\n    }.bind(this));\n    this.icon.render();\n  }\n\n  get$Icon() {\n    if (this.icon) {\n      return this.icon.$container;\n    }\n    return $();\n  }\n\n  _removeIconId() {\n    if (this.icon) {\n      this.icon.destroy();\n    }\n  }\n\n  /**\n   * @override\n   */\n  _renderEnabled() {\n    super._renderEnabled();\n    if (this.rendered) { // No need to do this during initial rendering\n      this._updateTooltip();\n      this._renderTabbable();\n    }\n  }\n\n  setTooltipText(tooltipText) {\n    this.setProperty('tooltipText', tooltipText);\n  }\n\n  _renderTooltipText() {\n    this._updateTooltip();\n  }\n\n  /**\n   * Installs or uninstalls tooltip based on tooltipText, selected and enabledComputed.\n   */\n  _updateTooltip() {\n    if (this._shouldInstallTooltip()) {\n      tooltips.install(this.$container, this._configureTooltip());\n    } else {\n      tooltips.uninstall(this.$container);\n    }\n  }\n\n  _shouldInstallTooltip() {\n    var show = this.tooltipText && this.enabledComputed;\n    if (!this.showTooltipWhenSelected && this.selected) {\n      show = false;\n    }\n    return show;\n  }\n\n  _renderTabbable() {\n    this.$container.setTabbable(this.tabbable && this.enabledComputed && !Device.get().supportsOnlyTouch());\n  }\n\n  _renderCompact() {\n    this.$container.toggleClass('compact', this.compact);\n    this.invalidateLayoutTree();\n  }\n\n  setTooltipPosition(position) {\n    this.setProperty('tooltipPosition', position);\n  }\n\n  _configureTooltip() {\n    return {\n      parent: this,\n      text: this.tooltipText,\n      $anchor: this.$container,\n      arrowPosition: 50,\n      arrowPositionUnit: '%',\n      tooltipPosition: this.tooltipPosition\n    };\n  }\n\n  /**\n   * @return {Boolean}\n   *          <code>true</code> if the action has been performed or <code>false</code> if it\n   *          has not been performed (e.g. when the button is not enabledComputed).\n   */\n  doAction() {\n    if (!this.prepareDoAction()) {\n      return false;\n    }\n\n    if (this.isToggleAction()) {\n      this.setSelected(!this.selected);\n    }\n    this._doAction();\n    return true;\n  }\n\n  toggle() {\n    if (this.isToggleAction()) {\n      this.setSelected(!this.selected);\n    }\n  }\n\n  setToggleAction(toggleAction) {\n    this.setProperty('toggleAction', toggleAction);\n  }\n\n  isToggleAction() {\n    return this.toggleAction;\n  }\n\n  /**\n   * @returns {Boolean} <code>true</code> if the action may be executed, <code>false</code> if it should be ignored.\n   */\n  prepareDoAction() {\n    if (!this.enabledComputed || !this.visible) {\n      return false;\n    }\n\n    return true;\n  }\n\n  _doAction() {\n    this.trigger('action');\n  }\n\n  setSelected(selected) {\n    this.setProperty('selected', selected);\n  }\n\n  _renderSelected() {\n    this.$container.toggleClass('selected', this.selected);\n    if (this.rendered) { // prevent unnecessary tooltip updates during initial rendering\n      this._updateTooltip();\n    }\n  }\n\n  setKeyStroke(keyStroke) {\n    this.setProperty('keyStroke', keyStroke);\n  }\n\n  _setKeyStroke(keyStroke) {\n    this.actionKeyStroke.parseAndSetKeyStroke(keyStroke);\n    this._setProperty('keyStroke', keyStroke);\n  }\n\n  _renderKeyStroke() {\n    var keyStroke = this.keyStroke;\n    if (keyStroke === undefined) {\n      this.$container.removeAttr('data-shortcut');\n    } else {\n      this.$container.attr('data-shortcut', keyStroke);\n    }\n  }\n\n  setTabbable(tabbable) {\n    this.setProperty('tabbable', tabbable);\n  }\n\n  setTextVisible(textVisible) {\n    if (this.textVisible === textVisible) {\n      return;\n    }\n    this._setProperty('textVisible', textVisible);\n    if (this.rendered) {\n      this._renderText();\n    }\n  }\n\n  setActionStyle(actionStyle) {\n    this.setProperty('actionStyle', actionStyle);\n  }\n\n  setCompact(compact) {\n    if (this.compact === compact) {\n      return;\n    }\n    this.compact = compact;\n    if (this.rendered) {\n      this._renderCompact();\n    }\n  }\n\n  setHorizontalAlignment(horizontalAlignment) {\n    this.setProperty('horizontalAlignment', horizontalAlignment);\n  }\n\n  _createActionKeyStroke() {\n    return new ActionKeyStroke(this);\n  }\n\n  setPreventDoubleClick(preventDoubleClick) {\n    this.setProperty('preventDoubleClick', preventDoubleClick);\n  }\n\n  _allowMouseEvent(event) {\n    if (event.which !== 1) {\n      return false; // Other button than left mouse button --> nop\n    }\n    if (event.type === 'click' && this.preventDoubleClick && this._doubleClickSupport.doubleClicked()) {\n      return false; // More than one consecutive click --> nop\n    }\n    return true;\n  }\n\n  _onClick(event) {\n    if (!this._allowMouseEvent(event)) {\n      return;\n    }\n\n    // When the action is clicked the user wants to execute the action and not see the tooltip -> cancel the task\n    // If it is already displayed it will stay\n    tooltips.cancel(this.$container);\n\n    this.doAction();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}