{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, ListBoxLayout, LookupBox, scout, Table, ValueField } from '../../../index';\n\nvar ListBox = /*#__PURE__*/function (_LookupBox) {\n  _inherits(ListBox, _LookupBox);\n\n  var _super = _createSuper(ListBox);\n\n  function ListBox() {\n    var _this;\n\n    _classCallCheck(this, ListBox);\n\n    _this = _super.call(this);\n    _this.table = null;\n    _this.lookupStatus = null;\n    _this.clearable = ValueField.Clearable.NEVER;\n\n    _this._addWidgetProperties(['table', 'filterBox']);\n\n    return _this;\n  }\n\n  _createClass(ListBox, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(ListBox.prototype), \"_init\", this).call(this, model);\n\n      this.table.on('rowsChecked', this._onTableRowsChecked.bind(this));\n      this.table.setScrollTop(this.scrollTop);\n    }\n  }, {\n    key: \"_initStructure\",\n    value: function _initStructure(value) {\n      if (!this.table) {\n        this.table = this._createDefaultListBoxTable();\n      }\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      _get(_getPrototypeOf(ListBox.prototype), \"_render\", this).call(this);\n\n      this.$container.addClass('list-box');\n    }\n  }, {\n    key: \"_createFieldContainerLayout\",\n    value: function _createFieldContainerLayout() {\n      return new ListBoxLayout(this, this.table, this.filterBox);\n    }\n  }, {\n    key: \"_renderStructure\",\n    value: function _renderStructure() {\n      this.table.render(this.$fieldContainer);\n      this.addField(this.table.$container);\n    }\n  }, {\n    key: \"_onTableRowsChecked\",\n    value: function _onTableRowsChecked(event) {\n      this._syncTableToValue();\n    }\n  }, {\n    key: \"_syncTableToValue\",\n    value: function _syncTableToValue() {\n      if (!this.lookupCall || this._valueSyncing) {\n        return;\n      }\n\n      this._valueSyncing = true;\n      var valueArray = [];\n      this.table.rows.forEach(function (row) {\n        if (row.checked) {\n          valueArray.push(row.lookupRow.key);\n        }\n      }, this);\n      this.setValue(valueArray);\n      this._valueSyncing = false;\n    }\n  }, {\n    key: \"_valueChanged\",\n    value: function _valueChanged() {\n      _get(_getPrototypeOf(ListBox.prototype), \"_valueChanged\", this).call(this);\n\n      this._syncValueToTable(this.value);\n    }\n  }, {\n    key: \"_syncValueToTable\",\n    value: function _syncValueToTable(newValue) {\n      if (!this.lookupCall || this._valueSyncing || !this.initialized) {\n        return;\n      }\n\n      this._valueSyncing = true;\n      var opts = {\n        checkOnlyEnabled: false\n      };\n\n      try {\n        if (arrays.empty(newValue)) {\n          this.table.uncheckRows(this.table.rows, opts);\n        } else {\n          // if lookup was not executed yet: do it now.\n          var lookupScheduled = this._ensureLookupCallExecuted();\n\n          if (lookupScheduled) {\n            return; // was the first lookup: table has no rows yet. cancel sync. Will be executed again after lookup execution.\n          }\n\n          var rowsToCheck = [];\n          this.table.uncheckRows(this.table.rows, opts);\n          this.table.rows.forEach(function (row) {\n            if (arrays.containsAny(newValue, row.lookupRow.key)) {\n              rowsToCheck.push(row);\n            }\n          }, this);\n          this.table.checkRows(rowsToCheck, opts);\n        }\n\n        this._updateDisplayText();\n      } finally {\n        this._valueSyncing = false;\n      }\n    }\n  }, {\n    key: \"_lookupByAllDone\",\n    value: function _lookupByAllDone(result) {\n      if (_get(_getPrototypeOf(ListBox.prototype), \"_lookupByAllDone\", this).call(this, result)) {\n        this._populateTable(result);\n      }\n    }\n  }, {\n    key: \"_populateTable\",\n    value: function _populateTable(result) {\n      var tableRows = [],\n          lookupRows = result.lookupRows;\n      lookupRows.forEach(function (lookupRow) {\n        tableRows.push(this._createTableRow(lookupRow));\n      }, this);\n      this.table.deleteAllRows();\n      this.table.insertRows(tableRows);\n\n      this._syncValueToTable(this.value);\n    }\n    /**\n     * Returns a lookup row for each value currently checked.\n     */\n\n  }, {\n    key: \"getCheckedLookupRows\",\n    value: function getCheckedLookupRows() {\n      if (this.value === null || arrays.empty(this.value) || this.table.rows.length === 0) {\n        return [];\n      }\n\n      return this.table.rows.filter(function (row) {\n        return row.checked;\n      }).map(function (row) {\n        return row.lookupRow;\n      });\n    }\n  }, {\n    key: \"_createTableRow\",\n    value: function _createTableRow(lookupRow) {\n      var cell = scout.create('Cell', {\n        text: lookupRow.text\n      }),\n          cells = [cell],\n          row = {\n        cells: cells,\n        lookupRow: lookupRow\n      };\n\n      if (lookupRow.iconId) {\n        cell.iconId = lookupRow.iconId;\n      }\n\n      if (lookupRow.tooltipText) {\n        cell.tooltipText = lookupRow.tooltipText;\n      }\n\n      if (lookupRow.backgroundColor) {\n        cell.backgroundColor = lookupRow.backgroundColor;\n      }\n\n      if (lookupRow.foregroundColor) {\n        cell.foregroundColor = lookupRow.foregroundColor;\n      }\n\n      if (lookupRow.font) {\n        cell.font = lookupRow.font;\n      }\n\n      if (lookupRow.enabled === false) {\n        row.enabled = false;\n      }\n\n      if (lookupRow.active === false) {\n        row.active = false;\n      }\n\n      if (lookupRow.cssClass) {\n        row.cssClass = lookupRow.cssClass;\n      }\n\n      return row;\n    }\n  }, {\n    key: \"_createDefaultListBoxTable\",\n    value: function _createDefaultListBoxTable() {\n      return scout.create('Table', {\n        parent: this,\n        autoResizeColumns: true,\n        checkable: true,\n        checkableStyle: Table.CheckableStyle.CHECKBOX_TABLE_ROW,\n        headerVisible: false,\n        footerVisible: false,\n        columns: [{\n          objectType: 'Column'\n        }]\n      });\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"getDelegateScrollable\",\n    value: function getDelegateScrollable() {\n      return this.table;\n    }\n  }]);\n\n  return ListBox;\n}(LookupBox);\n\nexport { ListBox as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/listbox/ListBox.js"],"names":["arrays","ListBoxLayout","LookupBox","scout","Table","ValueField","ListBox","table","lookupStatus","clearable","Clearable","NEVER","_addWidgetProperties","model","on","_onTableRowsChecked","bind","setScrollTop","scrollTop","value","_createDefaultListBoxTable","$container","addClass","filterBox","render","$fieldContainer","addField","event","_syncTableToValue","lookupCall","_valueSyncing","valueArray","rows","forEach","row","checked","push","lookupRow","key","setValue","_syncValueToTable","newValue","initialized","opts","checkOnlyEnabled","empty","uncheckRows","lookupScheduled","_ensureLookupCallExecuted","rowsToCheck","containsAny","checkRows","_updateDisplayText","result","_populateTable","tableRows","lookupRows","_createTableRow","deleteAllRows","insertRows","length","filter","map","cell","create","text","cells","iconId","tooltipText","backgroundColor","foregroundColor","font","enabled","active","cssClass","parent","autoResizeColumns","checkable","checkableStyle","CheckableStyle","CHECKBOX_TABLE_ROW","headerVisible","footerVisible","columns","objectType"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, ListBoxLayout, LookupBox, scout, Table, ValueField} from '../../../index';\n\nexport default class ListBox extends LookupBox {\n\n  constructor() {\n    super();\n\n    this.table = null;\n    this.lookupStatus = null;\n    this.clearable = ValueField.Clearable.NEVER;\n\n    this._addWidgetProperties(['table', 'filterBox']);\n  }\n\n  _init(model) {\n    super._init(model);\n    this.table.on('rowsChecked', this._onTableRowsChecked.bind(this));\n    this.table.setScrollTop(this.scrollTop);\n  }\n\n  _initStructure(value) {\n    if (!this.table) {\n      this.table = this._createDefaultListBoxTable();\n    }\n  }\n\n  _render() {\n    super._render();\n    this.$container.addClass('list-box');\n  }\n\n  _createFieldContainerLayout() {\n    return new ListBoxLayout(this, this.table, this.filterBox);\n  }\n\n  _renderStructure() {\n    this.table.render(this.$fieldContainer);\n    this.addField(this.table.$container);\n  }\n\n  _onTableRowsChecked(event) {\n    this._syncTableToValue();\n  }\n\n  _syncTableToValue() {\n    if (!this.lookupCall || this._valueSyncing) {\n      return;\n    }\n    this._valueSyncing = true;\n    var valueArray = [];\n    this.table.rows.forEach(function(row) {\n      if (row.checked) {\n        valueArray.push(row.lookupRow.key);\n      }\n    }, this);\n\n    this.setValue(valueArray);\n    this._valueSyncing = false;\n  }\n\n  _valueChanged() {\n    super._valueChanged();\n    this._syncValueToTable(this.value);\n  }\n\n  _syncValueToTable(newValue) {\n    if (!this.lookupCall || this._valueSyncing || !this.initialized) {\n      return;\n    }\n\n    this._valueSyncing = true;\n    var opts = {\n      checkOnlyEnabled: false\n    };\n    try {\n      if (arrays.empty(newValue)) {\n        this.table.uncheckRows(this.table.rows, opts);\n      } else {\n        // if lookup was not executed yet: do it now.\n        var lookupScheduled = this._ensureLookupCallExecuted();\n        if (lookupScheduled) {\n          return; // was the first lookup: table has no rows yet. cancel sync. Will be executed again after lookup execution.\n        }\n\n        var rowsToCheck = [];\n\n        this.table.uncheckRows(this.table.rows, opts);\n        this.table.rows.forEach(function(row) {\n          if (arrays.containsAny(newValue, row.lookupRow.key)) {\n            rowsToCheck.push(row);\n          }\n        }, this);\n        this.table.checkRows(rowsToCheck, opts);\n      }\n\n      this._updateDisplayText();\n    } finally {\n      this._valueSyncing = false;\n    }\n  }\n\n  _lookupByAllDone(result) {\n    if (super._lookupByAllDone(result)) {\n      this._populateTable(result);\n    }\n  }\n\n  _populateTable(result) {\n    var\n      tableRows = [],\n      lookupRows = result.lookupRows;\n\n    lookupRows.forEach(function(lookupRow) {\n      tableRows.push(this._createTableRow(lookupRow));\n    }, this);\n\n    this.table.deleteAllRows();\n    this.table.insertRows(tableRows);\n\n    this._syncValueToTable(this.value);\n  }\n\n  /**\n   * Returns a lookup row for each value currently checked.\n   */\n  getCheckedLookupRows() {\n    if (this.value === null || arrays.empty(this.value) || this.table.rows.length === 0) {\n      return [];\n    }\n\n    return this.table.rows.filter(function(row) {\n      return row.checked;\n    }).map(function(row) {\n      return row.lookupRow;\n    });\n  }\n\n  _createTableRow(lookupRow) {\n    var\n      cell = scout.create('Cell', {\n        text: lookupRow.text\n      }),\n      cells = [cell],\n      row = {\n        cells: cells,\n        lookupRow: lookupRow\n      };\n\n    if (lookupRow.iconId) {\n      cell.iconId = lookupRow.iconId;\n    }\n    if (lookupRow.tooltipText) {\n      cell.tooltipText = lookupRow.tooltipText;\n    }\n    if (lookupRow.backgroundColor) {\n      cell.backgroundColor = lookupRow.backgroundColor;\n    }\n    if (lookupRow.foregroundColor) {\n      cell.foregroundColor = lookupRow.foregroundColor;\n    }\n    if (lookupRow.font) {\n      cell.font = lookupRow.font;\n    }\n    if (lookupRow.enabled === false) {\n      row.enabled = false;\n    }\n    if (lookupRow.active === false) {\n      row.active = false;\n    }\n    if (lookupRow.cssClass) {\n      row.cssClass = lookupRow.cssClass;\n    }\n\n    return row;\n  }\n\n  _createDefaultListBoxTable() {\n    return scout.create('Table', {\n      parent: this,\n      autoResizeColumns: true,\n      checkable: true,\n      checkableStyle: Table.CheckableStyle.CHECKBOX_TABLE_ROW,\n      headerVisible: false,\n      footerVisible: false,\n      columns: [{\n        objectType: 'Column'\n      }]\n    });\n  }\n\n  /**\n   * @override\n   */\n  getDelegateScrollable() {\n    return this.table;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}