{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { NumberField, objects } from '../../../index';\n\nvar IntegerField = /*#__PURE__*/function (_NumberField) {\n  _inherits(IntegerField, _NumberField);\n\n  var _super = _createSuper(IntegerField);\n\n  function IntegerField() {\n    var _this;\n\n    _classCallCheck(this, IntegerField);\n\n    _this = _super.call(this);\n    _this.minValue = IntegerField.MIN_VALUE;\n    _this.maxValue = IntegerField.MAX_VALUE;\n    return _this;\n  }\n\n  _createClass(IntegerField, [{\n    key: \"_getDefaultFormat\",\n    value: function _getDefaultFormat(locale) {\n      return '#,##0';\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_parseValue\",\n    value: function _parseValue(displayText) {\n      var result = _get(_getPrototypeOf(IntegerField.prototype), \"_parseValue\", this).call(this, displayText);\n\n      if (objects.isNullOrUndefined(result)) {\n        return null;\n      }\n\n      return this.decimalFormat.round(result, false);\n    }\n  }]);\n\n  return IntegerField;\n}(NumberField);\n\n_defineProperty(IntegerField, \"MIN_VALUE\", Number.MIN_SAFE_INTEGER);\n\n_defineProperty(IntegerField, \"MAX_VALUE\", Number.MAX_SAFE_INTEGER);\n\nexport { IntegerField as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/integerfield/IntegerField.js"],"names":["NumberField","objects","IntegerField","minValue","MIN_VALUE","maxValue","MAX_VALUE","locale","displayText","result","isNullOrUndefined","decimalFormat","round","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,WAAR,EAAqBC,OAArB,QAAmC,gBAAnC;;IAEqBC,Y;;;;;AAKnB,0BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,QAAL,GAAgBD,YAAY,CAACE,SAA7B;AACA,UAAKC,QAAL,GAAgBH,YAAY,CAACI,SAA7B;AAHY;AAIb;;;;sCAEiBC,M,EAAQ;AACxB,aAAO,OAAP;AACD;AAED;AACF;AACA;;;;gCACcC,W,EAAa;AACvB,UAAIC,MAAM,iFAAqBD,WAArB,CAAV;;AACA,UAAIP,OAAO,CAACS,iBAAR,CAA0BD,MAA1B,CAAJ,EAAuC;AACrC,eAAO,IAAP;AACD;;AACD,aAAO,KAAKE,aAAL,CAAmBC,KAAnB,CAAyBH,MAAzB,EAAiC,KAAjC,CAAP;AACD;;;;EAxBuCT,W;;gBAArBE,Y,eAEAW,MAAM,CAACC,gB;;gBAFPZ,Y,eAGAW,MAAM,CAACE,gB;;SAHPb,Y","sourcesContent":["/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {NumberField, objects} from '../../../index';\n\nexport default class IntegerField extends NumberField {\n\n  static MIN_VALUE = Number.MIN_SAFE_INTEGER;\n  static MAX_VALUE = Number.MAX_SAFE_INTEGER;\n\n  constructor() {\n    super();\n    this.minValue = IntegerField.MIN_VALUE;\n    this.maxValue = IntegerField.MAX_VALUE;\n  }\n\n  _getDefaultFormat(locale) {\n    return '#,##0';\n  }\n\n  /**\n   * @override\n   */\n  _parseValue(displayText) {\n    var result = super._parseValue(displayText);\n    if (objects.isNullOrUndefined(result)) {\n      return null;\n    }\n    return this.decimalFormat.round(result, false);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}