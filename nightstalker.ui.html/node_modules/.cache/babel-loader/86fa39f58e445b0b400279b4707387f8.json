{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Widget } from '../index';\nimport $ from 'jquery';\nvar uniqueIdSeqNo = 0;\n/**\n * @param {(HTMLElement|$)} a HTML or jQuery element to find the corresponding widget for\n * @returns {Widget} the widget for the given element. If the element is not linked with a widget directly, it searches its ancestors for the widget.\n */\n\nexport function get($elem) {\n  $elem = $.ensure($elem);\n\n  while ($elem && $elem.length > 0) {\n    var widget = $elem.data('widget');\n\n    if (widget) {\n      return widget;\n    }\n\n    $elem = $elem.parent();\n  }\n\n  return null;\n}\n/**\n * Creates a \"unique\" id which may be used in the id attribute of a HTML element.\n * <p>\n * It actually just increases a sequence number prefixed by 'sc' or the given prefix.\n * 'sc' (short for Scout) is added to reduce the possibility of a duplication\n * if scout widgets are embedded into a foreign web site which already uses numbers in its id attributes.\n * So it is not really unique but should be good enough when you know what you are doing.\n */\n\nexport function createUniqueId(prefix) {\n  prefix = prefix || 'sc';\n  return prefix + uniqueIdSeqNo++;\n}\n/**\n * Iterates through the given widgets and toggles the 'first' and 'last' classes on the corresponding widgets if the widgets are visible and rendered.\n */\n\nexport function updateFirstLastMarker(widgets) {\n  widgets.filter(function (widget, i, widgets) {\n    return widget.rendered && widget.isVisible();\n  }).forEach(function (widget, i, widgets) {\n    widget.$container.toggleClass('first', i === 0);\n    widget.$container.toggleClass('last', i === widgets.length - 1);\n  });\n}\n/**\n * @param {Widget[]} widgets the widgets to check.\n * @param {Widget} [container] if specified, the function returns false if the container is not visible or not rendered. This allows for an early return without the need to check every given widget.\n * @returns {boolean} the first widget of the given list which is focusable.\n */\n\nexport function findFirstFocusableWidget(widgets, container) {\n  if (container && (!container.rendered || !container.visible)) {\n    return false;\n  }\n\n  return arrays.find(widgets, function (widget) {\n    return widget.isFocusable();\n  });\n}\nexport default {\n  createUniqueId: createUniqueId,\n  findFirstFocusableWidget: findFirstFocusableWidget,\n  get: get,\n  uniqueIdSeqNo: uniqueIdSeqNo,\n  updateFirstLastMarker: updateFirstLastMarker\n};","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/widget/widgets.js"],"names":["arrays","Widget","$","uniqueIdSeqNo","get","$elem","ensure","length","widget","data","parent","createUniqueId","prefix","updateFirstLastMarker","widgets","filter","i","rendered","isVisible","forEach","$container","toggleClass","findFirstFocusableWidget","container","visible","find","isFocusable"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,MAAR,EAAgBC,MAAhB,QAA6B,UAA7B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,IAAIC,aAAa,GAAG,CAApB;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,GAAT,CAAaC,KAAb,EAAoB;AACzBA,EAAAA,KAAK,GAAGH,CAAC,CAACI,MAAF,CAASD,KAAT,CAAR;;AACA,SAAOA,KAAK,IAAIA,KAAK,CAACE,MAAN,GAAe,CAA/B,EAAkC;AAChC,QAAIC,MAAM,GAAGH,KAAK,CAACI,IAAN,CAAW,QAAX,CAAb;;AACA,QAAID,MAAJ,EAAY;AACV,aAAOA,MAAP;AACD;;AACDH,IAAAA,KAAK,GAAGA,KAAK,CAACK,MAAN,EAAR;AACD;;AACD,SAAO,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AACrCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,IAAnB;AACA,SAAOA,MAAM,GAAGT,aAAa,EAA7B;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASU,qBAAT,CAA+BC,OAA/B,EAAwC;AAC7CA,EAAAA,OAAO,CAACC,MAAR,CAAe,UAASP,MAAT,EAAiBQ,CAAjB,EAAoBF,OAApB,EAA6B;AAC1C,WAAON,MAAM,CAACS,QAAP,IAAmBT,MAAM,CAACU,SAAP,EAA1B;AACD,GAFD,EAEGC,OAFH,CAEW,UAASX,MAAT,EAAiBQ,CAAjB,EAAoBF,OAApB,EAA6B;AACtCN,IAAAA,MAAM,CAACY,UAAP,CAAkBC,WAAlB,CAA8B,OAA9B,EAAuCL,CAAC,KAAK,CAA7C;AACAR,IAAAA,MAAM,CAACY,UAAP,CAAkBC,WAAlB,CAA8B,MAA9B,EAAsCL,CAAC,KAAKF,OAAO,CAACP,MAAR,GAAiB,CAA7D;AACD,GALD;AAMD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASe,wBAAT,CAAkCR,OAAlC,EAA2CS,SAA3C,EAAsD;AAC3D,MAAIA,SAAS,KAAK,CAACA,SAAS,CAACN,QAAX,IAAuB,CAACM,SAAS,CAACC,OAAvC,CAAb,EAA8D;AAC5D,WAAO,KAAP;AACD;;AACD,SAAOxB,MAAM,CAACyB,IAAP,CAAYX,OAAZ,EAAqB,UAASN,MAAT,EAAiB;AAC3C,WAAOA,MAAM,CAACkB,WAAP,EAAP;AACD,GAFM,CAAP;AAGD;AAED,eAAe;AACbf,EAAAA,cAAc,EAAdA,cADa;AAEbW,EAAAA,wBAAwB,EAAxBA,wBAFa;AAGblB,EAAAA,GAAG,EAAHA,GAHa;AAIbD,EAAAA,aAAa,EAAbA,aAJa;AAKbU,EAAAA,qBAAqB,EAArBA;AALa,CAAf","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Widget} from '../index';\nimport $ from 'jquery';\n\nlet uniqueIdSeqNo = 0;\n\n/**\n * @param {(HTMLElement|$)} a HTML or jQuery element to find the corresponding widget for\n * @returns {Widget} the widget for the given element. If the element is not linked with a widget directly, it searches its ancestors for the widget.\n */\nexport function get($elem) {\n  $elem = $.ensure($elem);\n  while ($elem && $elem.length > 0) {\n    var widget = $elem.data('widget');\n    if (widget) {\n      return widget;\n    }\n    $elem = $elem.parent();\n  }\n  return null;\n}\n\n/**\n * Creates a \"unique\" id which may be used in the id attribute of a HTML element.\n * <p>\n * It actually just increases a sequence number prefixed by 'sc' or the given prefix.\n * 'sc' (short for Scout) is added to reduce the possibility of a duplication\n * if scout widgets are embedded into a foreign web site which already uses numbers in its id attributes.\n * So it is not really unique but should be good enough when you know what you are doing.\n */\nexport function createUniqueId(prefix) {\n  prefix = prefix || 'sc';\n  return prefix + uniqueIdSeqNo++;\n}\n\n/**\n * Iterates through the given widgets and toggles the 'first' and 'last' classes on the corresponding widgets if the widgets are visible and rendered.\n */\nexport function updateFirstLastMarker(widgets) {\n  widgets.filter(function(widget, i, widgets) {\n    return widget.rendered && widget.isVisible();\n  }).forEach(function(widget, i, widgets) {\n    widget.$container.toggleClass('first', i === 0);\n    widget.$container.toggleClass('last', i === widgets.length - 1);\n  });\n}\n\n/**\n * @param {Widget[]} widgets the widgets to check.\n * @param {Widget} [container] if specified, the function returns false if the container is not visible or not rendered. This allows for an early return without the need to check every given widget.\n * @returns {boolean} the first widget of the given list which is focusable.\n */\nexport function findFirstFocusableWidget(widgets, container) {\n  if (container && (!container.rendered || !container.visible)) {\n    return false;\n  }\n  return arrays.find(widgets, function(widget) {\n    return widget.isFocusable();\n  });\n}\n\nexport default {\n  createUniqueId,\n  findFirstFocusableWidget,\n  get,\n  uniqueIdSeqNo,\n  updateFirstLastMarker\n};\n"]},"metadata":{},"sourceType":"module"}