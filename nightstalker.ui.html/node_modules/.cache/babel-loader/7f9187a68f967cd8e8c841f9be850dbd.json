{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, defaultValues, ModelAdapter, objects, Tree } from '../index';\n\nvar TreeAdapter = /*#__PURE__*/function (_ModelAdapter) {\n  _inherits(TreeAdapter, _ModelAdapter);\n\n  var _super = _createSuper(TreeAdapter);\n\n  function TreeAdapter() {\n    var _this;\n\n    _classCallCheck(this, TreeAdapter);\n\n    _this = _super.call(this);\n\n    _this._addRemoteProperties(['displayStyle']);\n\n    return _this;\n  }\n\n  _createClass(TreeAdapter, [{\n    key: \"_sendNodesSelected\",\n    value: function _sendNodesSelected(nodeIds, debounceSend) {\n      var eventData = {\n        nodeIds: nodeIds\n      }; // send delayed to avoid a lot of requests while selecting\n      // coalesce: only send the latest selection changed event for a field\n\n      this._send('nodesSelected', eventData, {\n        delay: debounceSend ? 250 : 0,\n        coalesce: function coalesce(previous) {\n          return this.target === previous.target && this.type === previous.type;\n        }\n      });\n    }\n  }, {\n    key: \"_onWidgetNodeClick\",\n    value: function _onWidgetNodeClick(event) {\n      this._send('nodeClick', {\n        nodeId: event.node.id\n      });\n    }\n  }, {\n    key: \"_onWidgetNodeAction\",\n    value: function _onWidgetNodeAction(event) {\n      this._send('nodeAction', {\n        nodeId: event.node.id\n      });\n    }\n  }, {\n    key: \"_onWidgetNodesSelected\",\n    value: function _onWidgetNodesSelected(event) {\n      var nodeIds = this.widget._nodesToIds(this.widget.selectedNodes);\n\n      this._sendNodesSelected(nodeIds, event.debounce);\n    }\n  }, {\n    key: \"_onWidgetNodeExpanded\",\n    value: function _onWidgetNodeExpanded(event) {\n      this._send('nodeExpanded', {\n        nodeId: event.node.id,\n        expanded: event.expanded,\n        expandedLazy: event.expandedLazy\n      });\n    }\n  }, {\n    key: \"_onWidgetNodesChecked\",\n    value: function _onWidgetNodesChecked(event) {\n      this._sendNodesChecked(event.nodes);\n    }\n  }, {\n    key: \"_sendNodesChecked\",\n    value: function _sendNodesChecked(nodes) {\n      var data = {\n        nodes: []\n      };\n\n      for (var i = 0; i < nodes.length; i++) {\n        data.nodes.push({\n          nodeId: nodes[i].id,\n          checked: nodes[i].checked\n        });\n      }\n\n      this._send('nodesChecked', data);\n    }\n  }, {\n    key: \"_onWidgetEvent\",\n    value: function _onWidgetEvent(event) {\n      if (event.type === 'nodesSelected') {\n        this._onWidgetNodesSelected(event);\n      } else if (event.type === 'nodeClick') {\n        this._onWidgetNodeClick(event);\n      } else if (event.type === 'nodeAction') {\n        this._onWidgetNodeAction(event);\n      } else if (event.type === 'nodeExpanded') {\n        this._onWidgetNodeExpanded(event);\n      } else if (event.type === 'nodesChecked') {\n        this._onWidgetNodesChecked(event);\n      } else {\n        _get(_getPrototypeOf(TreeAdapter.prototype), \"_onWidgetEvent\", this).call(this, event);\n      }\n    }\n  }, {\n    key: \"onModelAction\",\n    value: function onModelAction(event) {\n      if (event.type === 'nodesInserted') {\n        this._onNodesInserted(event.nodes, event.commonParentNodeId);\n      } else if (event.type === 'nodesUpdated') {\n        this._onNodesUpdated(event.nodes);\n      } else if (event.type === 'nodesDeleted') {\n        this._onNodesDeleted(event.nodeIds, event.commonParentNodeId);\n      } else if (event.type === 'allChildNodesDeleted') {\n        this._onAllChildNodesDeleted(event.commonParentNodeId);\n      } else if (event.type === 'nodesSelected') {\n        this._onNodesSelected(event.nodeIds);\n      } else if (event.type === 'nodeExpanded') {\n        this._onNodeExpanded(event.nodeId, event);\n      } else if (event.type === 'nodeChanged') {\n        this._onNodeChanged(event.nodeId, event);\n      } else if (event.type === 'nodesChecked') {\n        this._onNodesChecked(event.nodes);\n      } else if (event.type === 'childNodeOrderChanged') {\n        this._onChildNodeOrderChanged(event.childNodeIds, event.parentNodeId);\n      } else if (event.type === 'requestFocus') {\n        this._onRequestFocus();\n      } else if (event.type === 'scrollToSelection') {\n        this._onScrollToSelection();\n      } else {\n        _get(_getPrototypeOf(TreeAdapter.prototype), \"onModelAction\", this).call(this, event);\n      }\n    }\n  }, {\n    key: \"_onNodesInserted\",\n    value: function _onNodesInserted(nodes, parentNodeId) {\n      var parentNode;\n\n      if (parentNodeId !== null && parentNodeId !== undefined) {\n        parentNode = this.widget.nodesMap[parentNodeId];\n\n        if (!parentNode) {\n          throw new Error('Parent node could not be found. Id: ' + parentNodeId);\n        }\n      }\n\n      this.widget.insertNodes(nodes, parentNode);\n    }\n  }, {\n    key: \"_onNodesUpdated\",\n    value: function _onNodesUpdated(nodes) {\n      this.widget.updateNodes(nodes);\n    }\n  }, {\n    key: \"_onNodesDeleted\",\n    value: function _onNodesDeleted(nodeIds, parentNodeId) {\n      var parentNode;\n\n      if (parentNodeId !== null && parentNodeId !== undefined) {\n        parentNode = this.widget.nodesMap[parentNodeId];\n\n        if (!parentNode) {\n          throw new Error('Parent node could not be found. Id: ' + parentNodeId);\n        }\n      }\n\n      this.addFilterForWidgetEventType('nodesSelected');\n      this.addFilterForWidgetEventType('nodesChecked');\n\n      var nodes = this.widget._nodesByIds(nodeIds);\n\n      this.widget.deleteNodes(nodes, parentNode);\n    }\n  }, {\n    key: \"_onAllChildNodesDeleted\",\n    value: function _onAllChildNodesDeleted(parentNodeId) {\n      var parentNode;\n\n      if (parentNodeId !== null && parentNodeId !== undefined) {\n        parentNode = this.widget.nodesMap[parentNodeId];\n\n        if (!parentNode) {\n          throw new Error('Parent node could not be found. Id: ' + parentNodeId);\n        }\n      }\n\n      this.addFilterForWidgetEventType('nodesSelected');\n      this.addFilterForWidgetEventType('nodesChecked');\n      this.widget.deleteAllChildNodes(parentNode);\n    }\n  }, {\n    key: \"_onNodesSelected\",\n    value: function _onNodesSelected(nodeIds) {\n      this.addFilterForWidgetEvent(function (widgetEvent) {\n        return widgetEvent.type === 'nodesSelected' && arrays.equals(nodeIds, this.widget._nodesToIds(this.widget.selectedNodes));\n      }.bind(this));\n\n      var nodes = this.widget._nodesByIds(nodeIds);\n\n      this.widget.selectNodes(nodes);\n    }\n    /**\n     * @parem event.expanded true, to expand the node\n     * @param event.expandedLazy true, to expand the nodes lazily\n     * @param event.recursive true, to expand the descendant nodes as well\n     */\n\n  }, {\n    key: \"_onNodeExpanded\",\n    value: function _onNodeExpanded(nodeId, event) {\n      var node = this.widget.nodesMap[nodeId],\n          options = {\n        lazy: event.expandedLazy\n      };\n      var affectedNodesMap = objects.createMap();\n      affectedNodesMap[nodeId] = true;\n\n      if (event.recursive) {\n        Tree.visitNodes(function (n) {\n          affectedNodesMap[n.id] = true;\n        }, node.childNodes);\n      }\n\n      this.addFilterForWidgetEvent(function (widgetEvent) {\n        return widgetEvent.type === 'nodeExpanded' && affectedNodesMap[widgetEvent.node.id] && event.expanded === widgetEvent.expanded && event.expandedLazy === widgetEvent.expandedLazy;\n      });\n      this.widget.setNodeExpanded(node, event.expanded, options);\n\n      if (event.recursive) {\n        this.widget.setNodeExpandedRecursive(node.childNodes, event.expanded, options);\n      }\n    } // noinspection DuplicatedCode\n\n  }, {\n    key: \"_onNodeChanged\",\n    value: function _onNodeChanged(nodeId, cell) {\n      var node = this.widget.nodesMap[nodeId];\n      defaultValues.applyTo(cell, 'TreeNode');\n      node.text = cell.text;\n      node.cssClass = cell.cssClass;\n      node.iconId = cell.iconId;\n      node.tooltipText = cell.tooltipText;\n      node.foregroundColor = cell.foregroundColor;\n      node.backgroundColor = cell.backgroundColor;\n      node.font = cell.font;\n      node.htmlEnabled = cell.htmlEnabled;\n      this.widget.changeNode(node);\n    }\n  }, {\n    key: \"_onNodesChecked\",\n    value: function _onNodesChecked(nodes) {\n      var checkedNodes = [],\n          uncheckedNodes = [];\n      nodes.forEach(function (nodeData) {\n        var node = this.widget._nodeById(nodeData.id);\n\n        if (nodeData.checked) {\n          checkedNodes.push(node);\n        } else {\n          uncheckedNodes.push(node);\n        }\n      }, this);\n      this.addFilterForWidgetEventType('nodesChecked');\n      this.widget.checkNodes(checkedNodes, {\n        checked: true,\n        checkChildren: false,\n        checkOnlyEnabled: false\n      });\n      this.widget.uncheckNodes(uncheckedNodes, {\n        checkChildren: false,\n        checkOnlyEnabled: false\n      });\n    }\n  }, {\n    key: \"_onChildNodeOrderChanged\",\n    value: function _onChildNodeOrderChanged(childNodeIds, parentNodeId) {\n      var parentNode = this.widget._nodeById([parentNodeId]);\n\n      var nodes = this.widget._nodesByIds(childNodeIds);\n\n      this.widget.updateNodeOrder(nodes, parentNode);\n    }\n  }, {\n    key: \"_onRequestFocus\",\n    value: function _onRequestFocus() {\n      this.widget.focus();\n    }\n  }, {\n    key: \"_onScrollToSelection\",\n    value: function _onScrollToSelection() {\n      this.widget.revealSelection();\n    }\n  }]);\n\n  return TreeAdapter;\n}(ModelAdapter);\n\nexport { TreeAdapter as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/tree/TreeAdapter.js"],"names":["arrays","defaultValues","ModelAdapter","objects","Tree","TreeAdapter","_addRemoteProperties","nodeIds","debounceSend","eventData","_send","delay","coalesce","previous","target","type","event","nodeId","node","id","widget","_nodesToIds","selectedNodes","_sendNodesSelected","debounce","expanded","expandedLazy","_sendNodesChecked","nodes","data","i","length","push","checked","_onWidgetNodesSelected","_onWidgetNodeClick","_onWidgetNodeAction","_onWidgetNodeExpanded","_onWidgetNodesChecked","_onNodesInserted","commonParentNodeId","_onNodesUpdated","_onNodesDeleted","_onAllChildNodesDeleted","_onNodesSelected","_onNodeExpanded","_onNodeChanged","_onNodesChecked","_onChildNodeOrderChanged","childNodeIds","parentNodeId","_onRequestFocus","_onScrollToSelection","parentNode","undefined","nodesMap","Error","insertNodes","updateNodes","addFilterForWidgetEventType","_nodesByIds","deleteNodes","deleteAllChildNodes","addFilterForWidgetEvent","widgetEvent","equals","bind","selectNodes","options","lazy","affectedNodesMap","createMap","recursive","visitNodes","n","childNodes","setNodeExpanded","setNodeExpandedRecursive","cell","applyTo","text","cssClass","iconId","tooltipText","foregroundColor","backgroundColor","font","htmlEnabled","changeNode","checkedNodes","uncheckedNodes","forEach","nodeData","_nodeById","checkNodes","checkChildren","checkOnlyEnabled","uncheckNodes","updateNodeOrder","focus","revealSelection"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, defaultValues, ModelAdapter, objects, Tree} from '../index';\n\nexport default class TreeAdapter extends ModelAdapter {\n\n  constructor() {\n    super();\n    this._addRemoteProperties(['displayStyle']);\n  }\n\n  _sendNodesSelected(nodeIds, debounceSend) {\n    var eventData = {\n      nodeIds: nodeIds\n    };\n\n    // send delayed to avoid a lot of requests while selecting\n    // coalesce: only send the latest selection changed event for a field\n    this._send('nodesSelected', eventData, {\n      delay: (debounceSend ? 250 : 0),\n      coalesce: function(previous) {\n        return this.target === previous.target && this.type === previous.type;\n      }\n    });\n  }\n\n  _onWidgetNodeClick(event) {\n    this._send('nodeClick', {\n      nodeId: event.node.id\n    });\n  }\n\n  _onWidgetNodeAction(event) {\n    this._send('nodeAction', {\n      nodeId: event.node.id\n    });\n  }\n\n  _onWidgetNodesSelected(event) {\n    var nodeIds = this.widget._nodesToIds(this.widget.selectedNodes);\n    this._sendNodesSelected(nodeIds, event.debounce);\n  }\n\n  _onWidgetNodeExpanded(event) {\n    this._send('nodeExpanded', {\n      nodeId: event.node.id,\n      expanded: event.expanded,\n      expandedLazy: event.expandedLazy\n    });\n  }\n\n  _onWidgetNodesChecked(event) {\n    this._sendNodesChecked(event.nodes);\n  }\n\n  _sendNodesChecked(nodes) {\n    var data = {\n      nodes: []\n    };\n\n    for (var i = 0; i < nodes.length; i++) {\n      data.nodes.push({\n        nodeId: nodes[i].id,\n        checked: nodes[i].checked\n      });\n    }\n\n    this._send('nodesChecked', data);\n  }\n\n  _onWidgetEvent(event) {\n    if (event.type === 'nodesSelected') {\n      this._onWidgetNodesSelected(event);\n    } else if (event.type === 'nodeClick') {\n      this._onWidgetNodeClick(event);\n    } else if (event.type === 'nodeAction') {\n      this._onWidgetNodeAction(event);\n    } else if (event.type === 'nodeExpanded') {\n      this._onWidgetNodeExpanded(event);\n    } else if (event.type === 'nodesChecked') {\n      this._onWidgetNodesChecked(event);\n    } else {\n      super._onWidgetEvent(event);\n    }\n  }\n\n  onModelAction(event) {\n    if (event.type === 'nodesInserted') {\n      this._onNodesInserted(event.nodes, event.commonParentNodeId);\n    } else if (event.type === 'nodesUpdated') {\n      this._onNodesUpdated(event.nodes);\n    } else if (event.type === 'nodesDeleted') {\n      this._onNodesDeleted(event.nodeIds, event.commonParentNodeId);\n    } else if (event.type === 'allChildNodesDeleted') {\n      this._onAllChildNodesDeleted(event.commonParentNodeId);\n    } else if (event.type === 'nodesSelected') {\n      this._onNodesSelected(event.nodeIds);\n    } else if (event.type === 'nodeExpanded') {\n      this._onNodeExpanded(event.nodeId, event);\n    } else if (event.type === 'nodeChanged') {\n      this._onNodeChanged(event.nodeId, event);\n    } else if (event.type === 'nodesChecked') {\n      this._onNodesChecked(event.nodes);\n    } else if (event.type === 'childNodeOrderChanged') {\n      this._onChildNodeOrderChanged(event.childNodeIds, event.parentNodeId);\n    } else if (event.type === 'requestFocus') {\n      this._onRequestFocus();\n    } else if (event.type === 'scrollToSelection') {\n      this._onScrollToSelection();\n    } else {\n      super.onModelAction(event);\n    }\n  }\n\n  _onNodesInserted(nodes, parentNodeId) {\n    var parentNode;\n    if (parentNodeId !== null && parentNodeId !== undefined) {\n      parentNode = this.widget.nodesMap[parentNodeId];\n      if (!parentNode) {\n        throw new Error('Parent node could not be found. Id: ' + parentNodeId);\n      }\n    }\n    this.widget.insertNodes(nodes, parentNode);\n  }\n\n  _onNodesUpdated(nodes) {\n    this.widget.updateNodes(nodes);\n  }\n\n  _onNodesDeleted(nodeIds, parentNodeId) {\n    var parentNode;\n    if (parentNodeId !== null && parentNodeId !== undefined) {\n      parentNode = this.widget.nodesMap[parentNodeId];\n      if (!parentNode) {\n        throw new Error('Parent node could not be found. Id: ' + parentNodeId);\n      }\n    }\n    this.addFilterForWidgetEventType('nodesSelected');\n    this.addFilterForWidgetEventType('nodesChecked');\n    var nodes = this.widget._nodesByIds(nodeIds);\n    this.widget.deleteNodes(nodes, parentNode);\n  }\n\n  _onAllChildNodesDeleted(parentNodeId) {\n    var parentNode;\n    if (parentNodeId !== null && parentNodeId !== undefined) {\n      parentNode = this.widget.nodesMap[parentNodeId];\n      if (!parentNode) {\n        throw new Error('Parent node could not be found. Id: ' + parentNodeId);\n      }\n    }\n    this.addFilterForWidgetEventType('nodesSelected');\n    this.addFilterForWidgetEventType('nodesChecked');\n    this.widget.deleteAllChildNodes(parentNode);\n  }\n\n  _onNodesSelected(nodeIds) {\n    this.addFilterForWidgetEvent(function(widgetEvent) {\n      return widgetEvent.type === 'nodesSelected' &&\n        arrays.equals(nodeIds, this.widget._nodesToIds(this.widget.selectedNodes));\n    }.bind(this));\n    var nodes = this.widget._nodesByIds(nodeIds);\n    this.widget.selectNodes(nodes);\n  }\n\n  /**\n   * @parem event.expanded true, to expand the node\n   * @param event.expandedLazy true, to expand the nodes lazily\n   * @param event.recursive true, to expand the descendant nodes as well\n   */\n  _onNodeExpanded(nodeId, event) {\n    var node = this.widget.nodesMap[nodeId],\n      options = {\n        lazy: event.expandedLazy\n      };\n\n    var affectedNodesMap = objects.createMap();\n    affectedNodesMap[nodeId] = true;\n    if (event.recursive) {\n      Tree.visitNodes(function(n) {\n        affectedNodesMap[n.id] = true;\n      }, node.childNodes);\n    }\n    this.addFilterForWidgetEvent(function(widgetEvent) {\n      return widgetEvent.type === 'nodeExpanded' &&\n        affectedNodesMap[widgetEvent.node.id] &&\n        event.expanded === widgetEvent.expanded &&\n        event.expandedLazy === widgetEvent.expandedLazy;\n    });\n\n    this.widget.setNodeExpanded(node, event.expanded, options);\n    if (event.recursive) {\n      this.widget.setNodeExpandedRecursive(node.childNodes, event.expanded, options);\n    }\n  }\n\n  // noinspection DuplicatedCode\n  _onNodeChanged(nodeId, cell) {\n    var node = this.widget.nodesMap[nodeId];\n\n    defaultValues.applyTo(cell, 'TreeNode');\n    node.text = cell.text;\n    node.cssClass = cell.cssClass;\n    node.iconId = cell.iconId;\n    node.tooltipText = cell.tooltipText;\n    node.foregroundColor = cell.foregroundColor;\n    node.backgroundColor = cell.backgroundColor;\n    node.font = cell.font;\n    node.htmlEnabled = cell.htmlEnabled;\n\n    this.widget.changeNode(node);\n  }\n\n  _onNodesChecked(nodes) {\n    var checkedNodes = [],\n      uncheckedNodes = [];\n\n    nodes.forEach(function(nodeData) {\n      var node = this.widget._nodeById(nodeData.id);\n      if (nodeData.checked) {\n        checkedNodes.push(node);\n      } else {\n        uncheckedNodes.push(node);\n      }\n    }, this);\n\n    this.addFilterForWidgetEventType('nodesChecked');\n\n    this.widget.checkNodes(checkedNodes, {\n      checked: true,\n      checkChildren: false,\n      checkOnlyEnabled: false\n    });\n    this.widget.uncheckNodes(uncheckedNodes, {\n      checkChildren: false,\n      checkOnlyEnabled: false\n    });\n  }\n\n  _onChildNodeOrderChanged(childNodeIds, parentNodeId) {\n    var parentNode = this.widget._nodeById([parentNodeId]);\n    var nodes = this.widget._nodesByIds(childNodeIds);\n    this.widget.updateNodeOrder(nodes, parentNode);\n  }\n\n  _onRequestFocus() {\n    this.widget.focus();\n  }\n\n  _onScrollToSelection() {\n    this.widget.revealSelection();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}