{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { scout } from '../../../index';\n/**\n * Creates a table-row for the given lookup-row.\n *\n * @returns {object} table-row model\n */\n\nexport function createTableRow(lookupRow, multipleColumns) {\n  multipleColumns = scout.nvl(multipleColumns, false);\n  var cells = [],\n      row = {\n    cells: cells,\n    lookupRow: lookupRow\n  };\n\n  if (lookupRow.enabled === false) {\n    row.enabled = false;\n  }\n\n  if (lookupRow.active === false) {\n    row.active = false;\n  }\n\n  if (lookupRow.cssClass) {\n    row.cssClass = lookupRow.cssClass;\n  }\n\n  if (!multipleColumns) {\n    cells.push(createTableCell(lookupRow, null, null));\n  }\n\n  return row;\n}\n/**\n * Creates a table cell for a descriptor. If no descriptor is provided, the default lookupRow cell is created.\n */\n\nexport function createTableCell(lookupRow, desc, tableRowData) {\n  var cell = scout.create('Cell'); // default column descriptor (first column) has propertyName null\n\n  if (!(desc && desc.propertyName)) {\n    cell.text = lookupRow.text;\n\n    if (lookupRow.iconId) {\n      cell.iconId = lookupRow.iconId;\n    }\n\n    if (lookupRow.tooltipText) {\n      cell.tooltipText = lookupRow.tooltipText;\n    }\n\n    if (lookupRow.backgroundColor) {\n      cell.backgroundColor = lookupRow.backgroundColor;\n    }\n\n    if (lookupRow.foregroundColor) {\n      cell.foregroundColor = lookupRow.foregroundColor;\n    }\n\n    if (lookupRow.font) {\n      cell.font = lookupRow.font;\n    }\n  } else {\n    cell.text = tableRowData[desc.propertyName];\n  }\n\n  return cell;\n}\nexport default {\n  createTableCell: createTableCell,\n  createTableRow: createTableRow\n};","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/lookupfield/lookupField.js"],"names":["scout","createTableRow","lookupRow","multipleColumns","nvl","cells","row","enabled","active","cssClass","push","createTableCell","desc","tableRowData","cell","create","propertyName","text","iconId","tooltipText","backgroundColor","foregroundColor","font"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,KAAR,QAAoB,gBAApB;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CAAwBC,SAAxB,EAAmCC,eAAnC,EAAoD;AACzDA,EAAAA,eAAe,GAAGH,KAAK,CAACI,GAAN,CAAUD,eAAV,EAA2B,KAA3B,CAAlB;AACA,MAAIE,KAAK,GAAG,EAAZ;AAAA,MACEC,GAAG,GAAG;AACJD,IAAAA,KAAK,EAAEA,KADH;AAEJH,IAAAA,SAAS,EAAEA;AAFP,GADR;;AAKA,MAAIA,SAAS,CAACK,OAAV,KAAsB,KAA1B,EAAiC;AAC/BD,IAAAA,GAAG,CAACC,OAAJ,GAAc,KAAd;AACD;;AACD,MAAIL,SAAS,CAACM,MAAV,KAAqB,KAAzB,EAAgC;AAC9BF,IAAAA,GAAG,CAACE,MAAJ,GAAa,KAAb;AACD;;AACD,MAAIN,SAAS,CAACO,QAAd,EAAwB;AACtBH,IAAAA,GAAG,CAACG,QAAJ,GAAeP,SAAS,CAACO,QAAzB;AACD;;AAED,MAAI,CAACN,eAAL,EAAsB;AACpBE,IAAAA,KAAK,CAACK,IAAN,CAAWC,eAAe,CAACT,SAAD,EAAY,IAAZ,EAAkB,IAAlB,CAA1B;AACD;;AAED,SAAOI,GAAP;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASK,eAAT,CAAyBT,SAAzB,EAAoCU,IAApC,EAA0CC,YAA1C,EAAwD;AAC7D,MAAIC,IAAI,GAAGd,KAAK,CAACe,MAAN,CAAa,MAAb,CAAX,CAD6D,CAG7D;;AACA,MAAI,EAAEH,IAAI,IAAIA,IAAI,CAACI,YAAf,CAAJ,EAAkC;AAChCF,IAAAA,IAAI,CAACG,IAAL,GAAYf,SAAS,CAACe,IAAtB;;AACA,QAAIf,SAAS,CAACgB,MAAd,EAAsB;AACpBJ,MAAAA,IAAI,CAACI,MAAL,GAAchB,SAAS,CAACgB,MAAxB;AACD;;AACD,QAAIhB,SAAS,CAACiB,WAAd,EAA2B;AACzBL,MAAAA,IAAI,CAACK,WAAL,GAAmBjB,SAAS,CAACiB,WAA7B;AACD;;AACD,QAAIjB,SAAS,CAACkB,eAAd,EAA+B;AAC7BN,MAAAA,IAAI,CAACM,eAAL,GAAuBlB,SAAS,CAACkB,eAAjC;AACD;;AACD,QAAIlB,SAAS,CAACmB,eAAd,EAA+B;AAC7BP,MAAAA,IAAI,CAACO,eAAL,GAAuBnB,SAAS,CAACmB,eAAjC;AACD;;AACD,QAAInB,SAAS,CAACoB,IAAd,EAAoB;AAClBR,MAAAA,IAAI,CAACQ,IAAL,GAAYpB,SAAS,CAACoB,IAAtB;AACD;AACF,GAjBD,MAiBO;AACLR,IAAAA,IAAI,CAACG,IAAL,GAAYJ,YAAY,CAACD,IAAI,CAACI,YAAN,CAAxB;AACD;;AAED,SAAOF,IAAP;AACD;AAED,eAAe;AACbH,EAAAA,eAAe,EAAfA,eADa;AAEbV,EAAAA,cAAc,EAAdA;AAFa,CAAf","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {scout} from '../../../index';\n\n/**\n * Creates a table-row for the given lookup-row.\n *\n * @returns {object} table-row model\n */\nexport function createTableRow(lookupRow, multipleColumns) {\n  multipleColumns = scout.nvl(multipleColumns, false);\n  var cells = [],\n    row = {\n      cells: cells,\n      lookupRow: lookupRow\n    };\n  if (lookupRow.enabled === false) {\n    row.enabled = false;\n  }\n  if (lookupRow.active === false) {\n    row.active = false;\n  }\n  if (lookupRow.cssClass) {\n    row.cssClass = lookupRow.cssClass;\n  }\n\n  if (!multipleColumns) {\n    cells.push(createTableCell(lookupRow, null, null));\n  }\n\n  return row;\n}\n\n/**\n * Creates a table cell for a descriptor. If no descriptor is provided, the default lookupRow cell is created.\n */\nexport function createTableCell(lookupRow, desc, tableRowData) {\n  var cell = scout.create('Cell');\n\n  // default column descriptor (first column) has propertyName null\n  if (!(desc && desc.propertyName)) {\n    cell.text = lookupRow.text;\n    if (lookupRow.iconId) {\n      cell.iconId = lookupRow.iconId;\n    }\n    if (lookupRow.tooltipText) {\n      cell.tooltipText = lookupRow.tooltipText;\n    }\n    if (lookupRow.backgroundColor) {\n      cell.backgroundColor = lookupRow.backgroundColor;\n    }\n    if (lookupRow.foregroundColor) {\n      cell.foregroundColor = lookupRow.foregroundColor;\n    }\n    if (lookupRow.font) {\n      cell.font = lookupRow.font;\n    }\n  } else {\n    cell.text = tableRowData[desc.propertyName];\n  }\n\n  return cell;\n}\n\nexport default {\n  createTableCell,\n  createTableRow\n};\n"]},"metadata":{},"sourceType":"module"}