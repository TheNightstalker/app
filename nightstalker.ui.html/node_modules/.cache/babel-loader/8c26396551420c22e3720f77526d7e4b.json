{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2020 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, graphics, HtmlComponent } from '../index';\n\nvar TileOverviewLayout = /*#__PURE__*/function (_AbstractLayout) {\n  _inherits(TileOverviewLayout, _AbstractLayout);\n\n  var _super = _createSuper(TileOverviewLayout);\n\n  function TileOverviewLayout(tileOverview) {\n    var _this;\n\n    _classCallCheck(this, TileOverviewLayout);\n\n    _this = _super.call(this);\n    _this.tileOverview = tileOverview;\n    return _this;\n  }\n\n  _createClass(TileOverviewLayout, [{\n    key: \"layout\",\n    value: function layout($container) {\n      var htmlContainer = this.tileOverview.htmlComp;\n      var pageTileGrid = this.tileOverview.pageTileGrid;\n      var $content = this.tileOverview.$content;\n      var containerSize = htmlContainer.availableSize().subtract(htmlContainer.insets());\n      var contentSize = containerSize.subtract(graphics.insets($content, {\n        includeMargin: true\n      })); // layout group-box and menu-bar (optional)\n\n      var htmlRootGb = this._htmlRootGroupBox();\n\n      if (htmlRootGb) {\n        var rootGbSize = containerSize.subtract(htmlRootGb.margins());\n        var rootGbPrefSize = htmlRootGb.prefSize();\n        htmlRootGb.setSize(new Dimension(rootGbSize.width, rootGbPrefSize.height));\n      } // layout tile-grid\n\n\n      var htmlTileGrid = pageTileGrid.htmlComp;\n      var tilesPrefSize = pageTileGrid.htmlComp.prefSize({\n        widthHint: contentSize.width\n      });\n      htmlTileGrid.setSize(tilesPrefSize);\n    }\n    /**\n     * May return null when there is no root group box, which is the case when this layout is used by OutlineOverview.js.\n     * TileOverviewForm.js has always a group-box and this group-box needs to be layouted.\n     * @returns {*}\n     */\n\n  }, {\n    key: \"_htmlRootGroupBox\",\n    value: function _htmlRootGroupBox() {\n      var $rootGroupBox = this.tileOverview.$container.children('.root-group-box');\n\n      if ($rootGroupBox.length) {\n        return HtmlComponent.get($rootGroupBox);\n      }\n\n      return null;\n    }\n  }]);\n\n  return TileOverviewLayout;\n}(AbstractLayout);\n\nexport { TileOverviewLayout as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/tile/TileOverviewLayout.js"],"names":["AbstractLayout","Dimension","graphics","HtmlComponent","TileOverviewLayout","tileOverview","$container","htmlContainer","htmlComp","pageTileGrid","$content","containerSize","availableSize","subtract","insets","contentSize","includeMargin","htmlRootGb","_htmlRootGroupBox","rootGbSize","margins","rootGbPrefSize","prefSize","setSize","width","height","htmlTileGrid","tilesPrefSize","widthHint","$rootGroupBox","children","length","get"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,cAAR,EAAwBC,SAAxB,EAAmCC,QAAnC,EAA6CC,aAA7C,QAAiE,UAAjE;;IAEqBC,kB;;;;;AAEnB,8BAAYC,YAAZ,EAA0B;AAAA;;AAAA;;AACxB;AACA,UAAKA,YAAL,GAAoBA,YAApB;AAFwB;AAGzB;;;;2BAEMC,U,EAAY;AACjB,UAAIC,aAAa,GAAG,KAAKF,YAAL,CAAkBG,QAAtC;AACA,UAAIC,YAAY,GAAG,KAAKJ,YAAL,CAAkBI,YAArC;AACA,UAAIC,QAAQ,GAAG,KAAKL,YAAL,CAAkBK,QAAjC;AAEA,UAAIC,aAAa,GAAGJ,aAAa,CAACK,aAAd,GACjBC,QADiB,CACRN,aAAa,CAACO,MAAd,EADQ,CAApB;AAEA,UAAIC,WAAW,GAAGJ,aAAa,CAACE,QAAd,CAAuBX,QAAQ,CAACY,MAAT,CAAgBJ,QAAhB,EAA0B;AACjEM,QAAAA,aAAa,EAAE;AADkD,OAA1B,CAAvB,CAAlB,CAPiB,CAWjB;;AACA,UAAIC,UAAU,GAAG,KAAKC,iBAAL,EAAjB;;AACA,UAAID,UAAJ,EAAgB;AACd,YAAIE,UAAU,GAAGR,aAAa,CAACE,QAAd,CAAuBI,UAAU,CAACG,OAAX,EAAvB,CAAjB;AACA,YAAIC,cAAc,GAAGJ,UAAU,CAACK,QAAX,EAArB;AACAL,QAAAA,UAAU,CAACM,OAAX,CAAmB,IAAItB,SAAJ,CAAckB,UAAU,CAACK,KAAzB,EAAgCH,cAAc,CAACI,MAA/C,CAAnB;AACD,OAjBgB,CAmBjB;;;AACA,UAAIC,YAAY,GAAGjB,YAAY,CAACD,QAAhC;AACA,UAAImB,aAAa,GAAGlB,YAAY,CAACD,QAAb,CAAsBc,QAAtB,CAA+B;AACjDM,QAAAA,SAAS,EAAEb,WAAW,CAACS;AAD0B,OAA/B,CAApB;AAGAE,MAAAA,YAAY,CAACH,OAAb,CAAqBI,aAArB;AACD;AAED;AACF;AACA;AACA;AACA;;;;wCACsB;AAClB,UAAIE,aAAa,GAAG,KAAKxB,YAAL,CAAkBC,UAAlB,CAA6BwB,QAA7B,CAAsC,iBAAtC,CAApB;;AACA,UAAID,aAAa,CAACE,MAAlB,EAA0B;AACxB,eAAO5B,aAAa,CAAC6B,GAAd,CAAkBH,aAAlB,CAAP;AACD;;AACD,aAAO,IAAP;AACD;;;;EA7C6C7B,c;;SAA3BI,kB","sourcesContent":["/*\n * Copyright (c) 2014-2020 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, graphics, HtmlComponent} from '../index';\n\nexport default class TileOverviewLayout extends AbstractLayout {\n\n  constructor(tileOverview) {\n    super();\n    this.tileOverview = tileOverview;\n  }\n\n  layout($container) {\n    var htmlContainer = this.tileOverview.htmlComp;\n    var pageTileGrid = this.tileOverview.pageTileGrid;\n    var $content = this.tileOverview.$content;\n\n    var containerSize = htmlContainer.availableSize()\n      .subtract(htmlContainer.insets());\n    var contentSize = containerSize.subtract(graphics.insets($content, {\n      includeMargin: true\n    }));\n\n    // layout group-box and menu-bar (optional)\n    var htmlRootGb = this._htmlRootGroupBox();\n    if (htmlRootGb) {\n      var rootGbSize = containerSize.subtract(htmlRootGb.margins());\n      var rootGbPrefSize = htmlRootGb.prefSize();\n      htmlRootGb.setSize(new Dimension(rootGbSize.width, rootGbPrefSize.height));\n    }\n\n    // layout tile-grid\n    var htmlTileGrid = pageTileGrid.htmlComp;\n    var tilesPrefSize = pageTileGrid.htmlComp.prefSize({\n      widthHint: contentSize.width\n    });\n    htmlTileGrid.setSize(tilesPrefSize);\n  }\n\n  /**\n   * May return null when there is no root group box, which is the case when this layout is used by OutlineOverview.js.\n   * TileOverviewForm.js has always a group-box and this group-box needs to be layouted.\n   * @returns {*}\n   */\n  _htmlRootGroupBox() {\n    var $rootGroupBox = this.tileOverview.$container.children('.root-group-box');\n    if ($rootGroupBox.length) {\n      return HtmlComponent.get($rootGroupBox);\n    }\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}