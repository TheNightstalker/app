{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, HtmlComponent } from '../index';\n\nvar SimpleTabBoxLayout = /*#__PURE__*/function (_AbstractLayout) {\n  _inherits(SimpleTabBoxLayout, _AbstractLayout);\n\n  var _super = _createSuper(SimpleTabBoxLayout);\n\n  function SimpleTabBoxLayout(tabBox) {\n    var _this;\n\n    _classCallCheck(this, SimpleTabBoxLayout);\n\n    _this = _super.call(this);\n    _this.tabBox = tabBox;\n    return _this;\n  }\n\n  _createClass(SimpleTabBoxLayout, [{\n    key: \"layout\",\n    value: function layout($container) {\n      var containerSize,\n          viewContentSize,\n          htmlContainer = HtmlComponent.get($container),\n          htmlViewContent = HtmlComponent.get(this.tabBox.$viewContent),\n          tabAreaSize;\n      containerSize = htmlContainer.availableSize({\n        exact: true\n      }).subtract(htmlContainer.insets());\n      tabAreaSize = this._layoutTabArea(containerSize);\n      viewContentSize = containerSize.subtract(htmlViewContent.margins());\n      viewContentSize.height -= tabAreaSize.height;\n      htmlViewContent.setSize(viewContentSize);\n    }\n    /**\n     * @param containerSize\n     * @returns {Dimension} used of the tab area\n     */\n\n  }, {\n    key: \"_layoutTabArea\",\n    value: function _layoutTabArea(containerSize) {\n      if (!this.tabBox.rendered) {\n        return new Dimension(0, 0);\n      } // exprected the tab area is layouted dynamically only\n\n\n      var htmlViewTabs = HtmlComponent.get(this.tabBox.$tabArea),\n          prefSize = htmlViewTabs.prefSize(),\n          margins = htmlViewTabs.margins();\n      var size = new Dimension(containerSize.width, prefSize.height + margins.top + margins.bottom);\n      htmlViewTabs.setSize(size);\n      return size;\n    }\n    /**\n     * Preferred size of the tab-box aligns every tab-item in a single line, so that each item is visible.\n     */\n\n  }, {\n    key: \"preferredLayoutSize\",\n    value: function preferredLayoutSize($container, options) {\n      options = options || {};\n      var htmlContainer = HtmlComponent.get($container),\n          htmlViewContent = HtmlComponent.get(this.tabBox.$viewContent),\n          htmlViewTabs = HtmlComponent.get(this.tabBox.$tabArea),\n          viewTabsSize = new Dimension(),\n          viewContentSize = new Dimension(); // HeightHint not supported\n\n      options.heightHint = null;\n\n      if (htmlViewTabs.isVisible()) {\n        viewTabsSize = htmlViewTabs.prefSize().add(htmlViewTabs.margins());\n      }\n\n      viewContentSize = htmlViewContent.prefSize(options).add(htmlContainer.insets()).add(htmlViewContent.margins());\n      return new Dimension(Math.max(viewTabsSize.width, viewContentSize.width), viewContentSize.height + viewTabsSize.height);\n    }\n  }]);\n\n  return SimpleTabBoxLayout;\n}(AbstractLayout);\n\nexport { SimpleTabBoxLayout as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/tabbox/SimpleTabBoxLayout.js"],"names":["AbstractLayout","Dimension","HtmlComponent","SimpleTabBoxLayout","tabBox","$container","containerSize","viewContentSize","htmlContainer","get","htmlViewContent","$viewContent","tabAreaSize","availableSize","exact","subtract","insets","_layoutTabArea","margins","height","setSize","rendered","htmlViewTabs","$tabArea","prefSize","size","width","top","bottom","options","viewTabsSize","heightHint","isVisible","add","Math","max"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, HtmlComponent} from '../index';\n\nexport default class SimpleTabBoxLayout extends AbstractLayout {\n\n  constructor(tabBox) {\n    super();\n    this.tabBox = tabBox;\n  }\n\n  layout($container) {\n    var containerSize, viewContentSize,\n      htmlContainer = HtmlComponent.get($container),\n      htmlViewContent = HtmlComponent.get(this.tabBox.$viewContent),\n      tabAreaSize;\n\n    containerSize = htmlContainer.availableSize({\n      exact: true\n    })\n      .subtract(htmlContainer.insets());\n\n    tabAreaSize = this._layoutTabArea(containerSize);\n\n    viewContentSize = containerSize.subtract(htmlViewContent.margins());\n    viewContentSize.height -= tabAreaSize.height;\n    htmlViewContent.setSize(viewContentSize);\n  }\n\n  /**\n   * @param containerSize\n   * @returns {Dimension} used of the tab area\n   */\n  _layoutTabArea(containerSize) {\n    if (!this.tabBox.rendered) {\n      return new Dimension(0, 0);\n    }\n    // exprected the tab area is layouted dynamically only\n    var htmlViewTabs = HtmlComponent.get(this.tabBox.$tabArea),\n      prefSize = htmlViewTabs.prefSize(),\n      margins = htmlViewTabs.margins();\n    var size = new Dimension(containerSize.width, prefSize.height + margins.top + margins.bottom);\n    htmlViewTabs.setSize(size);\n    return size;\n  }\n\n  /**\n   * Preferred size of the tab-box aligns every tab-item in a single line, so that each item is visible.\n   */\n  preferredLayoutSize($container, options) {\n    options = options || {};\n    var htmlContainer = HtmlComponent.get($container),\n      htmlViewContent = HtmlComponent.get(this.tabBox.$viewContent),\n      htmlViewTabs = HtmlComponent.get(this.tabBox.$tabArea),\n      viewTabsSize = new Dimension(),\n      viewContentSize = new Dimension();\n\n    // HeightHint not supported\n    options.heightHint = null;\n\n    if (htmlViewTabs.isVisible()) {\n      viewTabsSize = htmlViewTabs.prefSize()\n        .add(htmlViewTabs.margins());\n    }\n\n    viewContentSize = htmlViewContent.prefSize(options)\n      .add(htmlContainer.insets())\n      .add(htmlViewContent.margins());\n\n    return new Dimension(\n      Math.max(viewTabsSize.width, viewContentSize.width),\n      viewContentSize.height + viewTabsSize.height);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}