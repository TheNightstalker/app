{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { FormFieldLayout, graphics } from '../../../index';\n\nvar ButtonLayout = /*#__PURE__*/function (_FormFieldLayout) {\n  _inherits(ButtonLayout, _FormFieldLayout);\n\n  var _super = _createSuper(ButtonLayout);\n\n  function ButtonLayout(button) {\n    var _this;\n\n    _classCallCheck(this, ButtonLayout);\n\n    _this = _super.call(this, button);\n    _this.button = button;\n    return _this;\n  }\n\n  _createClass(ButtonLayout, [{\n    key: \"layout\",\n    value: function layout($container) {\n      _get(_getPrototypeOf(ButtonLayout.prototype), \"layout\", this).call(this, $container);\n\n      var $icon = this.button.get$Icon(),\n          $submenuIcon = this.button.$submenuIcon,\n          $label = this.button.$buttonLabel,\n          $fieldContainer = this.button.$fieldContainer; // Set max width to make it possible to set text-overflow: ellipsis using CSS\n\n      $label.css('max-width', ''); // reset required because .size() operations below might return wrong results when label contains complex HTML\n\n      var submenuIconWidth = $submenuIcon ? graphics.size($submenuIcon, {\n        includeMargin: true,\n        exact: true\n      }).width : 0;\n      var iconWidth = $icon.length ? graphics.size($icon, {\n        includeMargin: true,\n        exact: true\n      }).width : 0; // Round up to make sure ellipsis are not shown unnecessarily when having rounding issues (e.g. in IE 11)\n\n      var labelMaxWidth = Math.ceil($fieldContainer.width() - (submenuIconWidth + iconWidth));\n      $label.css('max-width', labelMaxWidth);\n    }\n  }, {\n    key: \"preferredLayoutSize\",\n    value: function preferredLayoutSize($container, options) {\n      var $label = this.button.$buttonLabel; // Reset max width before calculating pref size\n\n      var maxWidth = $label.css('max-width');\n      $label.css('max-width', '');\n\n      var prefSize = _get(_getPrototypeOf(ButtonLayout.prototype), \"preferredLayoutSize\", this).call(this, $container, options);\n\n      $label.css('max-width', maxWidth);\n      return prefSize;\n    }\n  }]);\n\n  return ButtonLayout;\n}(FormFieldLayout);\n\nexport { ButtonLayout as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/button/ButtonLayout.js"],"names":["FormFieldLayout","graphics","ButtonLayout","button","$container","$icon","get$Icon","$submenuIcon","$label","$buttonLabel","$fieldContainer","css","submenuIconWidth","size","includeMargin","exact","width","iconWidth","length","labelMaxWidth","Math","ceil","options","maxWidth","prefSize"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,eAAR,EAAyBC,QAAzB,QAAwC,gBAAxC;;IAEqBC,Y;;;;;AAEnB,wBAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,MAAN;AACA,UAAKA,MAAL,GAAcA,MAAd;AAFkB;AAGnB;;;;2BAEMC,U,EAAY;AACjB,+EAAaA,UAAb;;AAEA,UAAIC,KAAK,GAAG,KAAKF,MAAL,CAAYG,QAAZ,EAAZ;AAAA,UACEC,YAAY,GAAG,KAAKJ,MAAL,CAAYI,YAD7B;AAAA,UAEEC,MAAM,GAAG,KAAKL,MAAL,CAAYM,YAFvB;AAAA,UAGEC,eAAe,GAAG,KAAKP,MAAL,CAAYO,eAHhC,CAHiB,CAQjB;;AACAF,MAAAA,MAAM,CAACG,GAAP,CAAW,WAAX,EAAwB,EAAxB,EATiB,CASY;;AAC7B,UAAIC,gBAAgB,GAAGL,YAAY,GAAGN,QAAQ,CAACY,IAAT,CAAcN,YAAd,EAA4B;AAChEO,QAAAA,aAAa,EAAE,IADiD;AAEhEC,QAAAA,KAAK,EAAE;AAFyD,OAA5B,EAGnCC,KAHgC,GAGxB,CAHX;AAIA,UAAIC,SAAS,GAAGZ,KAAK,CAACa,MAAN,GAAejB,QAAQ,CAACY,IAAT,CAAcR,KAAd,EAAqB;AAClDS,QAAAA,aAAa,EAAE,IADmC;AAElDC,QAAAA,KAAK,EAAE;AAF2C,OAArB,EAG5BC,KAHa,GAGL,CAHX,CAdiB,CAkBjB;;AACA,UAAIG,aAAa,GAAGC,IAAI,CAACC,IAAL,CAAUX,eAAe,CAACM,KAAhB,MAA2BJ,gBAAgB,GAAGK,SAA9C,CAAV,CAApB;AACAT,MAAAA,MAAM,CAACG,GAAP,CAAW,WAAX,EAAwBQ,aAAxB;AACD;;;wCAEmBf,U,EAAYkB,O,EAAS;AACvC,UAAId,MAAM,GAAG,KAAKL,MAAL,CAAYM,YAAzB,CADuC,CAGvC;;AACA,UAAIc,QAAQ,GAAGf,MAAM,CAACG,GAAP,CAAW,WAAX,CAAf;AACAH,MAAAA,MAAM,CAACG,GAAP,CAAW,WAAX,EAAwB,EAAxB;;AAEA,UAAIa,QAAQ,yFAA6BpB,UAA7B,EAAyCkB,OAAzC,CAAZ;;AACAd,MAAAA,MAAM,CAACG,GAAP,CAAW,WAAX,EAAwBY,QAAxB;AAEA,aAAOC,QAAP;AACD;;;;EAzCuCxB,e;;SAArBE,Y","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {FormFieldLayout, graphics} from '../../../index';\n\nexport default class ButtonLayout extends FormFieldLayout {\n\n  constructor(button) {\n    super(button);\n    this.button = button;\n  }\n\n  layout($container) {\n    super.layout($container);\n\n    var $icon = this.button.get$Icon(),\n      $submenuIcon = this.button.$submenuIcon,\n      $label = this.button.$buttonLabel,\n      $fieldContainer = this.button.$fieldContainer;\n\n    // Set max width to make it possible to set text-overflow: ellipsis using CSS\n    $label.css('max-width', ''); // reset required because .size() operations below might return wrong results when label contains complex HTML\n    var submenuIconWidth = $submenuIcon ? graphics.size($submenuIcon, {\n      includeMargin: true,\n      exact: true\n    }).width : 0;\n    var iconWidth = $icon.length ? graphics.size($icon, {\n      includeMargin: true,\n      exact: true\n    }).width : 0;\n    // Round up to make sure ellipsis are not shown unnecessarily when having rounding issues (e.g. in IE 11)\n    var labelMaxWidth = Math.ceil($fieldContainer.width() - (submenuIconWidth + iconWidth));\n    $label.css('max-width', labelMaxWidth);\n  }\n\n  preferredLayoutSize($container, options) {\n    var $label = this.button.$buttonLabel;\n\n    // Reset max width before calculating pref size\n    var maxWidth = $label.css('max-width');\n    $label.css('max-width', '');\n\n    var prefSize = super.preferredLayoutSize($container, options);\n    $label.css('max-width', maxWidth);\n\n    return prefSize;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}