{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { LookupFieldAdapter, scout, strings } from '../../../index';\n\nvar SmartFieldAdapter = /*#__PURE__*/function (_LookupFieldAdapter) {\n  _inherits(SmartFieldAdapter, _LookupFieldAdapter);\n\n  var _super = _createSuper(SmartFieldAdapter);\n\n  function SmartFieldAdapter() {\n    var _this;\n\n    _classCallCheck(this, SmartFieldAdapter);\n\n    _this = _super.call(this);\n\n    _this._addRemoteProperties(['activeFilter']);\n\n    return _this;\n  }\n  /**\n   * Property lookup-row must be handled before value, since the smart-field has either a lookup-row\n   * or a value but never both (when we only have a value, the smart-field must perform a lookup by key\n   * in order to resolve the display name for that value).\n   */\n\n\n  _createClass(SmartFieldAdapter, [{\n    key: \"_postCreateWidget\",\n    value: function _postCreateWidget() {\n      _get(_getPrototypeOf(SmartFieldAdapter.prototype), \"_postCreateWidget\", this).call(this);\n\n      this.widget.lookupCall = scout.create('RemoteLookupCall', this);\n    }\n  }, {\n    key: \"_syncResult\",\n    value: function _syncResult(result) {\n      var executedLookupCall = this.widget._currentLookupCall;\n\n      if (!executedLookupCall && this.widget.touchMode && this.widget.popup && this.widget.popup._field) {\n        // in case lookupCall is executed from within the popup (touch):\n        executedLookupCall = this.widget.popup._field._currentLookupCall;\n      }\n\n      if (executedLookupCall) {\n        executedLookupCall.resolveLookup(result);\n      }\n    } // When displayText comes from the server we must not call parseAndSetValue here.\n\n  }, {\n    key: \"_syncDisplayText\",\n    value: function _syncDisplayText(displayText) {\n      this.widget.setDisplayText(displayText);\n    }\n  }, {\n    key: \"_orderPropertyNamesOnSync\",\n    value: function _orderPropertyNamesOnSync(newProperties) {\n      return Object.keys(newProperties).sort(this._createPropertySortFunc(SmartFieldAdapter.PROPERTIES_ORDER));\n    }\n  }, {\n    key: \"_onWidgetEvent\",\n    value: function _onWidgetEvent(event) {\n      if (event.type === 'acceptByText') {\n        this._onWidgetAcceptByText(event);\n      } else {\n        _get(_getPrototypeOf(SmartFieldAdapter.prototype), \"_onWidgetEvent\", this).call(this, event);\n      }\n    }\n  }, {\n    key: \"_onWidgetAcceptByText\",\n    value: function _onWidgetAcceptByText(event) {\n      this._sendProperty('errorStatus', event.errorStatus);\n    }\n  }, {\n    key: \"_onWidgetAcceptInput\",\n    value: function _onWidgetAcceptInput(event) {\n      var eventData = {\n        displayText: event.displayText,\n        errorStatus: event.errorStatus\n      };\n\n      if (event.errorStatus) {\n        // 'clear' case\n        if (strings.empty(event.displayText)) {\n          eventData.value = null;\n        }\n      } else {\n        eventData.value = event.value;\n\n        if (event.acceptByLookupRow) {\n          eventData.lookupRow = event.lookupRow;\n        }\n      }\n\n      this._send('acceptInput', eventData, {\n        showBusyIndicator: !event.whileTyping,\n        coalesce: function coalesce(previous) {\n          return this.target === previous.target && this.type === previous.type && this.whileTyping === previous.whileTyping;\n        }\n      });\n    }\n  }]);\n\n  return SmartFieldAdapter;\n}(LookupFieldAdapter);\n\n_defineProperty(SmartFieldAdapter, \"PROPERTIES_ORDER\", ['lookupRow', 'value', 'errorStatus', 'displayText']);\n\nexport { SmartFieldAdapter as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/smartfield/SmartFieldAdapter.js"],"names":["LookupFieldAdapter","scout","strings","SmartFieldAdapter","_addRemoteProperties","widget","lookupCall","create","result","executedLookupCall","_currentLookupCall","touchMode","popup","_field","resolveLookup","displayText","setDisplayText","newProperties","Object","keys","sort","_createPropertySortFunc","PROPERTIES_ORDER","event","type","_onWidgetAcceptByText","_sendProperty","errorStatus","eventData","empty","value","acceptByLookupRow","lookupRow","_send","showBusyIndicator","whileTyping","coalesce","previous","target"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,kBAAR,EAA4BC,KAA5B,EAAmCC,OAAnC,QAAiD,gBAAjD;;IAEqBC,iB;;;;;AAEnB,+BAAc;AAAA;;AAAA;;AACZ;;AAEA,UAAKC,oBAAL,CAA0B,CAAC,cAAD,CAA1B;;AAHY;AAIb;AAED;AACF;AACA;AACA;AACA;;;;;wCAGsB;AAClB;;AACA,WAAKC,MAAL,CAAYC,UAAZ,GAAyBL,KAAK,CAACM,MAAN,CAAa,kBAAb,EAAiC,IAAjC,CAAzB;AACD;;;gCAEWC,M,EAAQ;AAClB,UAAIC,kBAAkB,GAAG,KAAKJ,MAAL,CAAYK,kBAArC;;AACA,UAAI,CAACD,kBAAD,IAAuB,KAAKJ,MAAL,CAAYM,SAAnC,IAAgD,KAAKN,MAAL,CAAYO,KAA5D,IAAqE,KAAKP,MAAL,CAAYO,KAAZ,CAAkBC,MAA3F,EAAmG;AACjG;AACAJ,QAAAA,kBAAkB,GAAG,KAAKJ,MAAL,CAAYO,KAAZ,CAAkBC,MAAlB,CAAyBH,kBAA9C;AACD;;AACD,UAAID,kBAAJ,EAAwB;AACtBA,QAAAA,kBAAkB,CAACK,aAAnB,CAAiCN,MAAjC;AACD;AACF,K,CAED;;;;qCACiBO,W,EAAa;AAC5B,WAAKV,MAAL,CAAYW,cAAZ,CAA2BD,WAA3B;AACD;;;8CAEyBE,a,EAAe;AACvC,aAAOC,MAAM,CAACC,IAAP,CAAYF,aAAZ,EAA2BG,IAA3B,CAAgC,KAAKC,uBAAL,CAA6BlB,iBAAiB,CAACmB,gBAA/C,CAAhC,CAAP;AACD;;;mCAEcC,K,EAAO;AACpB,UAAIA,KAAK,CAACC,IAAN,KAAe,cAAnB,EAAmC;AACjC,aAAKC,qBAAL,CAA2BF,KAA3B;AACD,OAFD,MAEO;AACL,8FAAqBA,KAArB;AACD;AACF;;;0CAEqBA,K,EAAO;AAC3B,WAAKG,aAAL,CAAmB,aAAnB,EAAkCH,KAAK,CAACI,WAAxC;AACD;;;yCAEoBJ,K,EAAO;AAC1B,UAAIK,SAAS,GAAG;AACdb,QAAAA,WAAW,EAAEQ,KAAK,CAACR,WADL;AAEdY,QAAAA,WAAW,EAAEJ,KAAK,CAACI;AAFL,OAAhB;;AAKA,UAAIJ,KAAK,CAACI,WAAV,EAAuB;AACrB;AACA,YAAIzB,OAAO,CAAC2B,KAAR,CAAcN,KAAK,CAACR,WAApB,CAAJ,EAAsC;AACpCa,UAAAA,SAAS,CAACE,KAAV,GAAkB,IAAlB;AACD;AACF,OALD,MAKO;AACLF,QAAAA,SAAS,CAACE,KAAV,GAAkBP,KAAK,CAACO,KAAxB;;AACA,YAAIP,KAAK,CAACQ,iBAAV,EAA6B;AAC3BH,UAAAA,SAAS,CAACI,SAAV,GAAsBT,KAAK,CAACS,SAA5B;AACD;AACF;;AAED,WAAKC,KAAL,CAAW,aAAX,EAA0BL,SAA1B,EAAqC;AACnCM,QAAAA,iBAAiB,EAAE,CAACX,KAAK,CAACY,WADS;AAEnCC,QAAAA,QAAQ,EAAE,kBAASC,QAAT,EAAmB;AAC3B,iBAAO,KAAKC,MAAL,KAAgBD,QAAQ,CAACC,MAAzB,IAAmC,KAAKd,IAAL,KAAca,QAAQ,CAACb,IAA1D,IAAkE,KAAKW,WAAL,KAAqBE,QAAQ,CAACF,WAAvG;AACD;AAJkC,OAArC;AAMD;;;;EA5E4CnC,kB;;gBAA1BG,iB,sBAaO,CAAC,WAAD,EAAc,OAAd,EAAuB,aAAvB,EAAsC,aAAtC,C;;SAbPA,iB","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {LookupFieldAdapter, scout, strings} from '../../../index';\n\nexport default class SmartFieldAdapter extends LookupFieldAdapter {\n\n  constructor() {\n    super();\n\n    this._addRemoteProperties(['activeFilter']);\n  }\n\n  /**\n   * Property lookup-row must be handled before value, since the smart-field has either a lookup-row\n   * or a value but never both (when we only have a value, the smart-field must perform a lookup by key\n   * in order to resolve the display name for that value).\n   */\n  static PROPERTIES_ORDER = ['lookupRow', 'value', 'errorStatus', 'displayText'];\n\n  _postCreateWidget() {\n    super._postCreateWidget();\n    this.widget.lookupCall = scout.create('RemoteLookupCall', this);\n  }\n\n  _syncResult(result) {\n    var executedLookupCall = this.widget._currentLookupCall;\n    if (!executedLookupCall && this.widget.touchMode && this.widget.popup && this.widget.popup._field) {\n      // in case lookupCall is executed from within the popup (touch):\n      executedLookupCall = this.widget.popup._field._currentLookupCall;\n    }\n    if (executedLookupCall) {\n      executedLookupCall.resolveLookup(result);\n    }\n  }\n\n  // When displayText comes from the server we must not call parseAndSetValue here.\n  _syncDisplayText(displayText) {\n    this.widget.setDisplayText(displayText);\n  }\n\n  _orderPropertyNamesOnSync(newProperties) {\n    return Object.keys(newProperties).sort(this._createPropertySortFunc(SmartFieldAdapter.PROPERTIES_ORDER));\n  }\n\n  _onWidgetEvent(event) {\n    if (event.type === 'acceptByText') {\n      this._onWidgetAcceptByText(event);\n    } else {\n      super._onWidgetEvent(event);\n    }\n  }\n\n  _onWidgetAcceptByText(event) {\n    this._sendProperty('errorStatus', event.errorStatus);\n  }\n\n  _onWidgetAcceptInput(event) {\n    var eventData = {\n      displayText: event.displayText,\n      errorStatus: event.errorStatus\n    };\n\n    if (event.errorStatus) {\n      // 'clear' case\n      if (strings.empty(event.displayText)) {\n        eventData.value = null;\n      }\n    } else {\n      eventData.value = event.value;\n      if (event.acceptByLookupRow) {\n        eventData.lookupRow = event.lookupRow;\n      }\n    }\n\n    this._send('acceptInput', eventData, {\n      showBusyIndicator: !event.whileTyping,\n      coalesce: function(previous) {\n        return this.target === previous.target && this.type === previous.type && this.whileTyping === previous.whileTyping;\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}