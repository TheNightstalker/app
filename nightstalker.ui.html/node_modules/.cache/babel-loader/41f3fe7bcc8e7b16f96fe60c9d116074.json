{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { keys, RangeKeyStroke } from '../../index';\n/**\n * KeyStroke to prevent the browser from switching between browser tabs.\n *\n * See DisableBrowserTabSwitchingKeyStroke.js where switching between views is implemented, but only up to the current number of open views.\n * That means, that if 3 views are open, ctrl-4 is prevented by this keystroke.\n */\n\nvar DisableBrowserTabSwitchingKeyStroke = /*#__PURE__*/function (_RangeKeyStroke) {\n  _inherits(DisableBrowserTabSwitchingKeyStroke, _RangeKeyStroke);\n\n  var _super = _createSuper(DisableBrowserTabSwitchingKeyStroke);\n\n  function DisableBrowserTabSwitchingKeyStroke(desktop) {\n    var _this;\n\n    _classCallCheck(this, DisableBrowserTabSwitchingKeyStroke);\n\n    _this = _super.call(this);\n    _this.field = desktop; // modifier\n\n    _this.parseAndSetKeyStroke(desktop.selectViewTabsKeyStrokeModifier); // range [1..9]\n\n\n    _this.registerRange(keys['1'], // range from\n    keys['9'] // range to\n    ); // rendering hints\n\n\n    _this.renderingHints.render = false;\n    _this.preventDefault = true;\n    return _this;\n  }\n  /**\n   * @override KeyStroke.js\n   */\n\n\n  _createClass(DisableBrowserTabSwitchingKeyStroke, [{\n    key: \"_isEnabled\",\n    value: function _isEnabled() {\n      var enabled = _get(_getPrototypeOf(DisableBrowserTabSwitchingKeyStroke.prototype), \"_isEnabled\", this).call(this);\n\n      return enabled && this.field.selectViewTabsKeyStrokesEnabled;\n    }\n    /**\n     * @override KeyStroke.js\n     */\n\n  }, {\n    key: \"handle\",\n    value: function handle(event) {// NOOP\n    }\n  }]);\n\n  return DisableBrowserTabSwitchingKeyStroke;\n}(RangeKeyStroke);\n\nexport { DisableBrowserTabSwitchingKeyStroke as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/desktop/desktoptab/DisableBrowserTabSwitchingKeyStroke.js"],"names":["keys","RangeKeyStroke","DisableBrowserTabSwitchingKeyStroke","desktop","field","parseAndSetKeyStroke","selectViewTabsKeyStrokeModifier","registerRange","renderingHints","render","preventDefault","enabled","selectViewTabsKeyStrokesEnabled","event"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,IAAR,EAAcC,cAAd,QAAmC,aAAnC;AAEA;AACA;AACA;AACA;AACA;AACA;;IACqBC,mC;;;;;AAEnB,+CAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB;AACA,UAAKC,KAAL,GAAaD,OAAb,CAFmB,CAInB;;AACA,UAAKE,oBAAL,CAA0BF,OAAO,CAACG,+BAAlC,EALmB,CAOnB;;;AACA,UAAKC,aAAL,CACEP,IAAI,CAAC,GAAD,CADN,EACa;AACXA,IAAAA,IAAI,CAAC,GAAD,CAFN,CAEY;AAFZ,MARmB,CAanB;;;AACA,UAAKQ,cAAL,CAAoBC,MAApB,GAA6B,KAA7B;AAEA,UAAKC,cAAL,GAAsB,IAAtB;AAhBmB;AAiBpB;AAED;AACF;AACA;;;;;iCACe;AACX,UAAIC,OAAO,sGAAX;;AACA,aAAOA,OAAO,IAAI,KAAKP,KAAL,CAAWQ,+BAA7B;AACD;AAED;AACF;AACA;;;;2BACSC,K,EAAO,CACZ;AACD;;;;EAlC8DZ,c;;SAA5CC,mC","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {keys, RangeKeyStroke} from '../../index';\n\n/**\n * KeyStroke to prevent the browser from switching between browser tabs.\n *\n * See DisableBrowserTabSwitchingKeyStroke.js where switching between views is implemented, but only up to the current number of open views.\n * That means, that if 3 views are open, ctrl-4 is prevented by this keystroke.\n */\nexport default class DisableBrowserTabSwitchingKeyStroke extends RangeKeyStroke {\n\n  constructor(desktop) {\n    super();\n    this.field = desktop;\n\n    // modifier\n    this.parseAndSetKeyStroke(desktop.selectViewTabsKeyStrokeModifier);\n\n    // range [1..9]\n    this.registerRange(\n      keys['1'], // range from\n      keys['9'] // range to\n    );\n\n    // rendering hints\n    this.renderingHints.render = false;\n\n    this.preventDefault = true;\n  }\n\n  /**\n   * @override KeyStroke.js\n   */\n  _isEnabled() {\n    var enabled = super._isEnabled();\n    return enabled && this.field.selectViewTabsKeyStrokesEnabled;\n  }\n\n  /**\n   * @override KeyStroke.js\n   */\n  handle(event) {\n    // NOOP\n  }\n}\n"]},"metadata":{},"sourceType":"module"}