{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { objects, QueryBy } from '../index';\n/**\n * This class is used to remember what lookup is called (=request) and to compare that\n * request with the result. Each result from the Scout server contains the lookup parameters\n * stored in this class so we can easily compare the parameters from the latest request\n * with the parameters from the result. If the parameters don't match, we simply ignore the\n * result, because it is out-dated.\n *\n * @param {QueryBy} requestType\n * @param {object} requestData\n */\n\nvar RemoteLookupRequest = /*#__PURE__*/function () {\n  function RemoteLookupRequest(requestType, requestData) {\n    _classCallCheck(this, RemoteLookupRequest);\n\n    if (!QueryBy.hasOwnProperty(requestType)) {\n      throw new Error('Invalid enum value');\n    }\n\n    this.requestType = requestType;\n    this.requestData = requestData;\n  }\n\n  _createClass(RemoteLookupRequest, [{\n    key: \"equals\",\n    value: function equals(o) {\n      if (!o || !(o instanceof RemoteLookupRequest)) {\n        return false;\n      }\n\n      return objects.propertiesEquals(this, o, ['requestType', 'requestData']);\n    }\n  }]);\n\n  return RemoteLookupRequest;\n}();\n\nexport { RemoteLookupRequest as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/lookup/RemoteLookupRequest.js"],"names":["objects","QueryBy","RemoteLookupRequest","requestType","requestData","hasOwnProperty","Error","o","propertiesEquals"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,OAAR,EAAiBC,OAAjB,QAA+B,UAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqBC,mB;AAEnB,+BAAYC,WAAZ,EAAyBC,WAAzB,EAAsC;AAAA;;AACpC,QAAI,CAACH,OAAO,CAACI,cAAR,CAAuBF,WAAvB,CAAL,EAA0C;AACxC,YAAM,IAAIG,KAAJ,CAAU,oBAAV,CAAN;AACD;;AACD,SAAKH,WAAL,GAAmBA,WAAnB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACD;;;;2BAEMG,C,EAAG;AACR,UAAI,CAACA,CAAD,IAAM,EAAEA,CAAC,YAAYL,mBAAf,CAAV,EAA+C;AAC7C,eAAO,KAAP;AACD;;AACD,aAAOF,OAAO,CAACQ,gBAAR,CAAyB,IAAzB,EAA+BD,CAA/B,EAAkC,CAAC,aAAD,EAAgB,aAAhB,CAAlC,CAAP;AACD;;;;;;SAfkBL,mB","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {objects, QueryBy} from '../index';\n\n/**\n * This class is used to remember what lookup is called (=request) and to compare that\n * request with the result. Each result from the Scout server contains the lookup parameters\n * stored in this class so we can easily compare the parameters from the latest request\n * with the parameters from the result. If the parameters don't match, we simply ignore the\n * result, because it is out-dated.\n *\n * @param {QueryBy} requestType\n * @param {object} requestData\n */\nexport default class RemoteLookupRequest {\n\n  constructor(requestType, requestData) {\n    if (!QueryBy.hasOwnProperty(requestType)) {\n      throw new Error('Invalid enum value');\n    }\n    this.requestType = requestType;\n    this.requestData = requestData;\n  }\n\n  equals(o) {\n    if (!o || !(o instanceof RemoteLookupRequest)) {\n      return false;\n    }\n    return objects.propertiesEquals(this, o, ['requestType', 'requestData']);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}