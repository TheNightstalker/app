{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { keys } from '../index';\n\nvar Key = /*#__PURE__*/function () {\n  function Key(keyStroke, which) {\n    _classCallCheck(this, Key);\n\n    this.keyStroke = keyStroke;\n    this.which = which;\n    this.ctrl = keyStroke.ctrl;\n    this.alt = keyStroke.alt;\n    this.shift = keyStroke.shift;\n    this.keyStrokeMode = keyStroke.keyStrokeMode;\n  }\n\n  _createClass(Key, [{\n    key: \"render\",\n    value: function render($drawingArea, event) {\n      this.$drawingArea = this.keyStroke.renderKeyBox($drawingArea, event);\n      return !!this.$drawingArea;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      this.keyStroke.removeKeyBox(this.$drawingArea);\n      this.$drawingArea = null;\n    }\n  }, {\n    key: \"toKeyStrokeString\",\n    value: function toKeyStrokeString() {\n      var keyStroke = '';\n\n      if (this.ctrl) {\n        keyStroke += 'Ctrl-';\n      }\n\n      if (this.alt) {\n        keyStroke += 'Alt-';\n      }\n\n      if (this.shift) {\n        keyStroke += 'Shift-';\n      }\n\n      var key = keys.codesToKeys[this.which];\n\n      if (key === undefined) {\n        key = this.which;\n      }\n\n      keyStroke += key;\n      return keyStroke;\n    }\n  }]);\n\n  return Key;\n}();\n\nexport { Key as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/keystroke/Key.js"],"names":["keys","Key","keyStroke","which","ctrl","alt","shift","keyStrokeMode","$drawingArea","event","renderKeyBox","removeKeyBox","key","codesToKeys","undefined"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,IAAR,QAAmB,UAAnB;;IAEqBC,G;AAEnB,eAAYC,SAAZ,EAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,KAAL,GAAaA,KAAb;AAEA,SAAKC,IAAL,GAAYF,SAAS,CAACE,IAAtB;AACA,SAAKC,GAAL,GAAWH,SAAS,CAACG,GAArB;AACA,SAAKC,KAAL,GAAaJ,SAAS,CAACI,KAAvB;AAEA,SAAKC,aAAL,GAAqBL,SAAS,CAACK,aAA/B;AACD;;;;2BAEMC,Y,EAAcC,K,EAAO;AAC1B,WAAKD,YAAL,GAAoB,KAAKN,SAAL,CAAeQ,YAAf,CAA4BF,YAA5B,EAA0CC,KAA1C,CAApB;AACA,aAAO,CAAC,CAAC,KAAKD,YAAd;AACD;;;6BAEQ;AACP,WAAKN,SAAL,CAAeS,YAAf,CAA4B,KAAKH,YAAjC;AACA,WAAKA,YAAL,GAAoB,IAApB;AACD;;;wCAEmB;AAClB,UAAIN,SAAS,GAAG,EAAhB;;AACA,UAAI,KAAKE,IAAT,EAAe;AACbF,QAAAA,SAAS,IAAI,OAAb;AACD;;AACD,UAAI,KAAKG,GAAT,EAAc;AACZH,QAAAA,SAAS,IAAI,MAAb;AACD;;AACD,UAAI,KAAKI,KAAT,EAAgB;AACdJ,QAAAA,SAAS,IAAI,QAAb;AACD;;AACD,UAAIU,GAAG,GAAGZ,IAAI,CAACa,WAAL,CAAiB,KAAKV,KAAtB,CAAV;;AACA,UAAIS,GAAG,KAAKE,SAAZ,EAAuB;AACrBF,QAAAA,GAAG,GAAG,KAAKT,KAAX;AACD;;AACDD,MAAAA,SAAS,IAAIU,GAAb;AACA,aAAOV,SAAP;AACD;;;;;;SAxCkBD,G","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {keys} from '../index';\n\nexport default class Key {\n\n  constructor(keyStroke, which) {\n    this.keyStroke = keyStroke;\n    this.which = which;\n\n    this.ctrl = keyStroke.ctrl;\n    this.alt = keyStroke.alt;\n    this.shift = keyStroke.shift;\n\n    this.keyStrokeMode = keyStroke.keyStrokeMode;\n  }\n\n  render($drawingArea, event) {\n    this.$drawingArea = this.keyStroke.renderKeyBox($drawingArea, event);\n    return !!this.$drawingArea;\n  }\n\n  remove() {\n    this.keyStroke.removeKeyBox(this.$drawingArea);\n    this.$drawingArea = null;\n  }\n\n  toKeyStrokeString() {\n    var keyStroke = '';\n    if (this.ctrl) {\n      keyStroke += 'Ctrl-';\n    }\n    if (this.alt) {\n      keyStroke += 'Alt-';\n    }\n    if (this.shift) {\n      keyStroke += 'Shift-';\n    }\n    var key = keys.codesToKeys[this.which];\n    if (key === undefined) {\n      key = this.which;\n    }\n    keyStroke += key;\n    return keyStroke;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}