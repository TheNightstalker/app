{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AggregateTableControl, App, objects, TableControlAdapter } from '../../index';\n\nvar AggregateTableControlAdapter = /*#__PURE__*/function (_TableControlAdapter) {\n  _inherits(AggregateTableControlAdapter, _TableControlAdapter);\n\n  var _super = _createSuper(AggregateTableControlAdapter);\n\n  function AggregateTableControlAdapter() {\n    _classCallCheck(this, AggregateTableControlAdapter);\n\n    return _super.call(this);\n  }\n\n  _createClass(AggregateTableControlAdapter, null, [{\n    key: \"modifyAggregateTableControlPrototype\",\n    value: function modifyAggregateTableControlPrototype() {\n      if (!App.get().remote) {\n        return;\n      } // _onTableColumnStructureChanged\n\n\n      objects.replacePrototypeFunction(AggregateTableControl, '_onTableColumnStructureChanged', function (vararg) {\n        if (this.modelAdapter) {\n          this._updateEnabledAndSelectedState();\n        } else {\n          this._onTableColumnStructureChangedOrig();\n        }\n      }, true);\n    }\n  }]);\n\n  return AggregateTableControlAdapter;\n}(TableControlAdapter);\n\nexport { AggregateTableControlAdapter as default };\nApp.addListener('bootstrap', AggregateTableControlAdapter.modifyAggregateTableControlPrototype);","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/table/controls/AggregateTableControlAdapter.js"],"names":["AggregateTableControl","App","objects","TableControlAdapter","AggregateTableControlAdapter","get","remote","replacePrototypeFunction","vararg","modelAdapter","_updateEnabledAndSelectedState","_onTableColumnStructureChangedOrig","addListener","modifyAggregateTableControlPrototype"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,qBAAR,EAA+BC,GAA/B,EAAoCC,OAApC,EAA6CC,mBAA7C,QAAuE,aAAvE;;IAEqBC,4B;;;;;AACnB,0CAAc;AAAA;;AAAA;AAEb;;;;2DAE6C;AAC5C,UAAI,CAACH,GAAG,CAACI,GAAJ,GAAUC,MAAf,EAAuB;AACrB;AACD,OAH2C,CAK5C;;;AACAJ,MAAAA,OAAO,CAACK,wBAAR,CAAiCP,qBAAjC,EAAwD,gCAAxD,EAA0F,UAASQ,MAAT,EAAiB;AACzG,YAAI,KAAKC,YAAT,EAAuB;AACrB,eAAKC,8BAAL;AACD,SAFD,MAEO;AACL,eAAKC,kCAAL;AACD;AACF,OAND,EAMG,IANH;AAOD;;;;EAlBuDR,mB;;SAArCC,4B;AAqBrBH,GAAG,CAACW,WAAJ,CAAgB,WAAhB,EAA6BR,4BAA4B,CAACS,oCAA1D","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AggregateTableControl, App, objects, TableControlAdapter} from '../../index';\n\nexport default class AggregateTableControlAdapter extends TableControlAdapter {\n  constructor() {\n    super();\n  }\n\n  static modifyAggregateTableControlPrototype() {\n    if (!App.get().remote) {\n      return;\n    }\n\n    // _onTableColumnStructureChanged\n    objects.replacePrototypeFunction(AggregateTableControl, '_onTableColumnStructureChanged', function(vararg) {\n      if (this.modelAdapter) {\n        this._updateEnabledAndSelectedState();\n      } else {\n        this._onTableColumnStructureChangedOrig();\n      }\n    }, true);\n  }\n}\n\nApp.addListener('bootstrap', AggregateTableControlAdapter.modifyAggregateTableControlPrototype);\n"]},"metadata":{},"sourceType":"module"}