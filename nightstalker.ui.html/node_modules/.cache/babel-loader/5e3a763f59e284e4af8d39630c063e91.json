{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, FileChooserFieldBrowseKeyStroke, FileChooserFieldDeleteKeyStroke, FileInput, objects, scout, ValueField } from '../../../index';\n\nvar FileChooserField = /*#__PURE__*/function (_ValueField) {\n  _inherits(FileChooserField, _ValueField);\n\n  var _super = _createSuper(FileChooserField);\n\n  function FileChooserField() {\n    var _this;\n\n    _classCallCheck(this, FileChooserField);\n\n    _this = _super.call(this);\n    _this.fileInput = null;\n    _this.acceptTypes = null;\n    _this.maximumUploadSize = FileInput.DEFAULT_MAXIMUM_UPLOAD_SIZE;\n    return _this;\n  }\n\n  _createClass(FileChooserField, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(FileChooserField.prototype), \"_init\", this).call(this, model);\n\n      this.fileInput.on('change', this._onFileChange.bind(this));\n      this.on('propertyChange', function (event) {\n        if (event.propertyName === 'enabledComputed') {\n          // Propagate \"enabledComputed\" to inner widget\n          this.fileInput.setEnabled(event.newValue);\n        }\n      }.bind(this));\n    }\n    /**\n     * Initializes the file input before calling set value.\n     * This cannot be done in _init because the value field would call _setValue first\n     */\n\n  }, {\n    key: \"_initValue\",\n    value: function _initValue(value) {\n      this.fileInput = scout.create('FileInput', {\n        parent: this,\n        acceptTypes: this.acceptTypes,\n        text: this.displayText,\n        enabled: this.enabledComputed,\n        maximumUploadSize: this.maximumUploadSize\n      });\n\n      _get(_getPrototypeOf(FileChooserField.prototype), \"_initValue\", this).call(this, value);\n    }\n  }, {\n    key: \"_initKeyStrokeContext\",\n    value: function _initKeyStrokeContext() {\n      _get(_getPrototypeOf(FileChooserField.prototype), \"_initKeyStrokeContext\", this).call(this);\n\n      if (!this.fileInput.legacy) {\n        this.keyStrokeContext.registerKeyStroke(new FileChooserFieldBrowseKeyStroke(this));\n        this.keyStrokeContext.registerKeyStroke(new FileChooserFieldDeleteKeyStroke(this));\n      }\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.addContainer(this.$parent, 'file-chooser-field has-icon');\n      this.addLabel();\n      this.addMandatoryIndicator();\n\n      this._renderFileInput();\n\n      this.addIcon();\n      this.addStatus();\n    }\n  }, {\n    key: \"_renderFileInput\",\n    value: function _renderFileInput() {\n      this.fileInput.render();\n      this.addField(this.fileInput.$container);\n    }\n  }, {\n    key: \"setDisplayText\",\n    value: function setDisplayText(text) {\n      _get(_getPrototypeOf(FileChooserField.prototype), \"setDisplayText\", this).call(this, text);\n\n      this.fileInput.setText(text);\n\n      if (!text) {\n        this.fileInput.clear();\n      }\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_readDisplayText\",\n    value: function _readDisplayText() {\n      return this.fileInput.text;\n    }\n  }, {\n    key: \"setAcceptTypes\",\n    value: function setAcceptTypes(acceptTypes) {\n      this.setProperty('acceptTypes', acceptTypes);\n      this.fileInput.setAcceptTypes(acceptTypes);\n    }\n  }, {\n    key: \"_renderEnabled\",\n    value: function _renderEnabled() {\n      _get(_getPrototypeOf(FileChooserField.prototype), \"_renderEnabled\", this).call(this);\n\n      this.$field.setTabbable(this.enabledComputed);\n    }\n  }, {\n    key: \"_renderPlaceholder\",\n    value: function _renderPlaceholder() {\n      var $field = this.fileInput.$text;\n\n      if ($field) {\n        $field.placeholder(this.label);\n      }\n    }\n  }, {\n    key: \"_removePlaceholder\",\n    value: function _removePlaceholder() {\n      var $field = this.fileInput.$text;\n\n      if ($field) {\n        $field.placeholder('');\n      }\n    }\n  }, {\n    key: \"setMaximumUploadSize\",\n    value: function setMaximumUploadSize(maximumUploadSize) {\n      this.setProperty('maximumUploadSize', maximumUploadSize);\n      this.fileInput.setMaximumUploadSize(maximumUploadSize);\n    }\n  }, {\n    key: \"_clear\",\n    value: function _clear() {\n      this.fileInput.clear();\n    }\n  }, {\n    key: \"_onIconMouseDown\",\n    value: function _onIconMouseDown(event) {\n      _get(_getPrototypeOf(FileChooserField.prototype), \"_onIconMouseDown\", this).call(this, event);\n\n      this.activate();\n    }\n  }, {\n    key: \"_onFileChange\",\n    value: function _onFileChange(event) {\n      var file = arrays.first(event.files);\n\n      if (objects.isNullOrUndefined(file)) {\n        this.acceptInput(false);\n      }\n\n      this.setValue(file);\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      if (!this.enabledComputed || !this.rendered) {\n        return;\n      }\n\n      this.$field.focus();\n      this.fileInput.browse();\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_validateValue\",\n    value: function _validateValue(value) {\n      this.fileInput.validateMaximumUploadSize(value);\n      return value;\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_formatValue\",\n    value: function _formatValue(value) {\n      return !value ? '' : value.name;\n    }\n  }]);\n\n  return FileChooserField;\n}(ValueField);\n\nexport { FileChooserField as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/filechooserfield/FileChooserField.js"],"names":["arrays","FileChooserFieldBrowseKeyStroke","FileChooserFieldDeleteKeyStroke","FileInput","objects","scout","ValueField","FileChooserField","fileInput","acceptTypes","maximumUploadSize","DEFAULT_MAXIMUM_UPLOAD_SIZE","model","on","_onFileChange","bind","event","propertyName","setEnabled","newValue","value","create","parent","text","displayText","enabled","enabledComputed","legacy","keyStrokeContext","registerKeyStroke","addContainer","$parent","addLabel","addMandatoryIndicator","_renderFileInput","addIcon","addStatus","render","addField","$container","setText","clear","setProperty","setAcceptTypes","$field","setTabbable","$text","placeholder","label","setMaximumUploadSize","activate","file","first","files","isNullOrUndefined","acceptInput","setValue","rendered","focus","browse","validateMaximumUploadSize","name"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, FileChooserFieldBrowseKeyStroke, FileChooserFieldDeleteKeyStroke, FileInput, objects, scout, ValueField} from '../../../index';\n\nexport default class FileChooserField extends ValueField {\n\n  constructor() {\n    super();\n\n    this.fileInput = null;\n\n    this.acceptTypes = null;\n    this.maximumUploadSize = FileInput.DEFAULT_MAXIMUM_UPLOAD_SIZE;\n  }\n\n  _init(model) {\n    super._init(model);\n\n    this.fileInput.on('change', this._onFileChange.bind(this));\n    this.on('propertyChange', function(event) {\n      if (event.propertyName === 'enabledComputed') {\n        // Propagate \"enabledComputed\" to inner widget\n        this.fileInput.setEnabled(event.newValue);\n      }\n    }.bind(this));\n  }\n\n  /**\n   * Initializes the file input before calling set value.\n   * This cannot be done in _init because the value field would call _setValue first\n   */\n  _initValue(value) {\n    this.fileInput = scout.create('FileInput', {\n      parent: this,\n      acceptTypes: this.acceptTypes,\n      text: this.displayText,\n      enabled: this.enabledComputed,\n      maximumUploadSize: this.maximumUploadSize\n    });\n\n    super._initValue(value);\n  }\n\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n    if (!this.fileInput.legacy) {\n      this.keyStrokeContext.registerKeyStroke(new FileChooserFieldBrowseKeyStroke(this));\n      this.keyStrokeContext.registerKeyStroke(new FileChooserFieldDeleteKeyStroke(this));\n    }\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'file-chooser-field has-icon');\n    this.addLabel();\n    this.addMandatoryIndicator();\n    this._renderFileInput();\n    this.addIcon();\n    this.addStatus();\n  }\n\n  _renderFileInput() {\n    this.fileInput.render();\n    this.addField(this.fileInput.$container);\n  }\n\n  setDisplayText(text) {\n    super.setDisplayText(text);\n    this.fileInput.setText(text);\n    if (!text) {\n      this.fileInput.clear();\n    }\n  }\n\n  /**\n   * @override\n   */\n  _readDisplayText() {\n    return this.fileInput.text;\n  }\n\n  setAcceptTypes(acceptTypes) {\n    this.setProperty('acceptTypes', acceptTypes);\n    this.fileInput.setAcceptTypes(acceptTypes);\n  }\n\n  _renderEnabled() {\n    super._renderEnabled();\n    this.$field.setTabbable(this.enabledComputed);\n  }\n\n  _renderPlaceholder() {\n    var $field = this.fileInput.$text;\n    if ($field) {\n      $field.placeholder(this.label);\n    }\n  }\n\n  _removePlaceholder() {\n    var $field = this.fileInput.$text;\n    if ($field) {\n      $field.placeholder('');\n    }\n  }\n\n  setMaximumUploadSize(maximumUploadSize) {\n    this.setProperty('maximumUploadSize', maximumUploadSize);\n    this.fileInput.setMaximumUploadSize(maximumUploadSize);\n  }\n\n  _clear() {\n    this.fileInput.clear();\n  }\n\n  _onIconMouseDown(event) {\n    super._onIconMouseDown(event);\n    this.activate();\n  }\n\n  _onFileChange(event) {\n    var file = arrays.first(event.files);\n    if (objects.isNullOrUndefined(file)) {\n      this.acceptInput(false);\n    }\n    this.setValue(file);\n  }\n\n  /**\n   * @override\n   */\n  activate() {\n    if (!this.enabledComputed || !this.rendered) {\n      return;\n    }\n    this.$field.focus();\n    this.fileInput.browse();\n  }\n\n  /**\n   * @override\n   */\n  _validateValue(value) {\n    this.fileInput.validateMaximumUploadSize(value);\n    return value;\n  }\n\n  /**\n   * @override\n   */\n  _formatValue(value) {\n    return !value ? '' : value.name;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}