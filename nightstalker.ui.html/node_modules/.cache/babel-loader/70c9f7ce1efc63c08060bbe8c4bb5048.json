{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { fields, FormField, TreeVisitResult, widgets } from '../../index';\n\nvar CompositeField = /*#__PURE__*/function (_FormField) {\n  _inherits(CompositeField, _FormField);\n\n  var _super = _createSuper(CompositeField);\n\n  function CompositeField() {\n    _classCallCheck(this, CompositeField);\n\n    return _super.call(this);\n  }\n  /**\n   * @returns {FormField[]} an array of child-fields.\n   */\n\n\n  _createClass(CompositeField, [{\n    key: \"getFields\",\n    value: function getFields() {\n      throw new Error('Not implemented');\n    }\n    /**\n     *\n     * @param {FormField[]} fields\n     */\n\n  }, {\n    key: \"setFields\",\n    value: function setFields(fields) {\n      throw new Error('Not implemented');\n    }\n    /**\n     * @override FormField.js\n     */\n\n  }, {\n    key: \"visitFields\",\n    value: function visitFields(visitor) {\n      var treeVisitResult = _get(_getPrototypeOf(CompositeField.prototype), \"visitFields\", this).call(this, visitor);\n\n      if (treeVisitResult === TreeVisitResult.TERMINATE) {\n        return TreeVisitResult.TERMINATE;\n      }\n\n      if (treeVisitResult === TreeVisitResult.SKIP_SUBTREE) {\n        return TreeVisitResult.CONTINUE;\n      }\n\n      var fields = this.getFields();\n\n      for (var i = 0; i < fields.length; i++) {\n        var field = fields[i];\n        treeVisitResult = field.visitFields(visitor);\n\n        if (treeVisitResult === TreeVisitResult.TERMINATE) {\n          return TreeVisitResult.TERMINATE;\n        }\n      }\n    }\n    /**\n     * Sets the given fieldStyle recursively on all fields of the composite field.\n     * @override FormField.js\n     */\n\n  }, {\n    key: \"setFieldStyle\",\n    value: function setFieldStyle(fieldStyle) {\n      this.getFields().forEach(function (field) {\n        field.setFieldStyle(fieldStyle);\n      });\n\n      _get(_getPrototypeOf(CompositeField.prototype), \"setFieldStyle\", this).call(this, fieldStyle);\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      fields.activateFirstField(this, this.getFields());\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"getFocusableElement\",\n    value: function getFocusableElement() {\n      var field = widgets.findFirstFocusableWidget(this.getFields(), this);\n\n      if (field) {\n        return field.getFocusableElement();\n      }\n\n      return null;\n    }\n  }]);\n\n  return CompositeField;\n}(FormField);\n\nexport { CompositeField as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/CompositeField.js"],"names":["fields","FormField","TreeVisitResult","widgets","CompositeField","Error","visitor","treeVisitResult","TERMINATE","SKIP_SUBTREE","CONTINUE","getFields","i","length","field","visitFields","fieldStyle","forEach","setFieldStyle","activateFirstField","findFirstFocusableWidget","getFocusableElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,MAAR,EAAgBC,SAAhB,EAA2BC,eAA3B,EAA4CC,OAA5C,QAA0D,aAA1D;;IAEqBC,c;;;;;AAEnB,4BAAc;AAAA;;AAAA;AAEb;AAED;AACF;AACA;;;;;gCACc;AACV,YAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;AAED;AACF;AACA;AACA;;;;8BACYL,M,EAAQ;AAChB,YAAM,IAAIK,KAAJ,CAAU,iBAAV,CAAN;AACD;AAED;AACF;AACA;;;;gCACcC,O,EAAS;AACnB,UAAIC,eAAe,mFAAqBD,OAArB,CAAnB;;AACA,UAAIC,eAAe,KAAKL,eAAe,CAACM,SAAxC,EAAmD;AACjD,eAAON,eAAe,CAACM,SAAvB;AACD;;AAED,UAAID,eAAe,KAAKL,eAAe,CAACO,YAAxC,EAAsD;AACpD,eAAOP,eAAe,CAACQ,QAAvB;AACD;;AAED,UAAIV,MAAM,GAAG,KAAKW,SAAL,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,MAAM,CAACa,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,YAAIE,KAAK,GAAGd,MAAM,CAACY,CAAD,CAAlB;AACAL,QAAAA,eAAe,GAAGO,KAAK,CAACC,WAAN,CAAkBT,OAAlB,CAAlB;;AACA,YAAIC,eAAe,KAAKL,eAAe,CAACM,SAAxC,EAAmD;AACjD,iBAAON,eAAe,CAACM,SAAvB;AACD;AACF;AACF;AAED;AACF;AACA;AACA;;;;kCACgBQ,U,EAAY;AACxB,WAAKL,SAAL,GAAiBM,OAAjB,CAAyB,UAASH,KAAT,EAAgB;AACvCA,QAAAA,KAAK,CAACI,aAAN,CAAoBF,UAApB;AACD,OAFD;;AAGA,wFAAoBA,UAApB;AACD;AAED;AACF;AACA;;;;+BACa;AACThB,MAAAA,MAAM,CAACmB,kBAAP,CAA0B,IAA1B,EAAgC,KAAKR,SAAL,EAAhC;AACD;AAED;AACF;AACA;;;;0CACwB;AACpB,UAAIG,KAAK,GAAGX,OAAO,CAACiB,wBAAR,CAAiC,KAAKT,SAAL,EAAjC,EAAmD,IAAnD,CAAZ;;AACA,UAAIG,KAAJ,EAAW;AACT,eAAOA,KAAK,CAACO,mBAAN,EAAP;AACD;;AACD,aAAO,IAAP;AACD;;;;EAvEyCpB,S;;SAAvBG,c","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {fields, FormField, TreeVisitResult, widgets} from '../../index';\n\nexport default class CompositeField extends FormField {\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @returns {FormField[]} an array of child-fields.\n   */\n  getFields() {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   *\n   * @param {FormField[]} fields\n   */\n  setFields(fields) {\n    throw new Error('Not implemented');\n  }\n\n  /**\n   * @override FormField.js\n   */\n  visitFields(visitor) {\n    var treeVisitResult = super.visitFields(visitor);\n    if (treeVisitResult === TreeVisitResult.TERMINATE) {\n      return TreeVisitResult.TERMINATE;\n    }\n\n    if (treeVisitResult === TreeVisitResult.SKIP_SUBTREE) {\n      return TreeVisitResult.CONTINUE;\n    }\n\n    var fields = this.getFields();\n    for (var i = 0; i < fields.length; i++) {\n      var field = fields[i];\n      treeVisitResult = field.visitFields(visitor);\n      if (treeVisitResult === TreeVisitResult.TERMINATE) {\n        return TreeVisitResult.TERMINATE;\n      }\n    }\n  }\n\n  /**\n   * Sets the given fieldStyle recursively on all fields of the composite field.\n   * @override FormField.js\n   */\n  setFieldStyle(fieldStyle) {\n    this.getFields().forEach(function(field) {\n      field.setFieldStyle(fieldStyle);\n    });\n    super.setFieldStyle(fieldStyle);\n  }\n\n  /**\n   * @override\n   */\n  activate() {\n    fields.activateFirstField(this, this.getFields());\n  }\n\n  /**\n   * @override\n   */\n  getFocusableElement() {\n    var field = widgets.findFirstFocusableWidget(this.getFields(), this);\n    if (field) {\n      return field.getFocusableElement();\n    }\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}