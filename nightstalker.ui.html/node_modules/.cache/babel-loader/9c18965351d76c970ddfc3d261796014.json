{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Action, Button, Menu } from '../index';\n\nvar ButtonAdapterMenu = /*#__PURE__*/function (_Menu) {\n  _inherits(ButtonAdapterMenu, _Menu);\n\n  var _super = _createSuper(ButtonAdapterMenu);\n\n  function ButtonAdapterMenu() {\n    var _this;\n\n    _classCallCheck(this, ButtonAdapterMenu);\n\n    _this = _super.call(this);\n\n    _this._removeWidgetProperties('childActions'); // managed by button\n\n\n    _this._buttonPropertyChangeHandler = _this._onButtonPropertyChange.bind(_assertThisInitialized(_this));\n    _this._buttonDestroyHandler = _this._onButtonDestroy.bind(_assertThisInitialized(_this));\n\n    _this._addCloneProperties(['button']);\n\n    _this.button = null;\n    _this.menubar = null;\n    return _this;\n  }\n  /**\n   * @override Action.js\n   */\n\n\n  _createClass(ButtonAdapterMenu, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(ButtonAdapterMenu.prototype), \"_init\", this).call(this, model);\n\n      if (!this.button) {\n        throw new Error('Cannot adapt to undefined button');\n      }\n\n      this.button.adaptedBy = this;\n\n      this._installListeners();\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      _get(_getPrototypeOf(ButtonAdapterMenu.prototype), \"_destroy\", this).call(this);\n\n      delete this.button.adaptedBy;\n    }\n  }, {\n    key: \"_installListeners\",\n    value: function _installListeners() {\n      this.button.on('propertyChange', this._buttonPropertyChangeHandler);\n      this.button.on('destroy', this._buttonDestroyHandler);\n    }\n  }, {\n    key: \"_uninstallListeners\",\n    value: function _uninstallListeners() {\n      this.button.off('propertyChange', this._buttonPropertyChangeHandler);\n      this.button.off('destroy', this._buttonDestroyHandler);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      _get(_getPrototypeOf(ButtonAdapterMenu.prototype), \"_render\", this).call(this); // Convenience: Add ID of original button to DOM for debugging purposes\n\n\n      this.$container.attr('data-buttonadapter', this.button.id);\n    }\n  }, {\n    key: \"_onButtonPropertyChange\",\n    value: function _onButtonPropertyChange(event) {\n      // Whenever a button property changes, apply the changes to the menu\n      var changedProperties = {};\n      changedProperties[event.propertyName] = event.newValue;\n      changedProperties = ButtonAdapterMenu.adaptButtonProperties(changedProperties);\n\n      for (var prop in changedProperties) {\n        // NOSONAR\n        // Set the property (don't use callSetter because this may delegate to the button)\n        this.setProperty(prop, changedProperties[prop]);\n      }\n    }\n  }, {\n    key: \"_onButtonDestroy\",\n    value: function _onButtonDestroy(event) {\n      this.destroy();\n\n      this._uninstallListeners();\n    }\n    /**\n     * @override Action.js\n     */\n\n  }, {\n    key: \"doAction\",\n    value: function doAction() {\n      if (this.childActions.length > 0) {\n        // Popup menu is handled by this menu itself\n        return _get(_getPrototypeOf(ButtonAdapterMenu.prototype), \"doAction\", this).call(this);\n      } // Everything else is delegated to the button\n\n\n      var actionExecuted = this.button.doAction();\n\n      if (actionExecuted) {\n        if (this.isToggleAction()) {\n          this.setSelected(!this.selected);\n        }\n\n        this._doAction();\n      }\n\n      return actionExecuted;\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (!this.rendered) {\n        this.session.layoutValidator.schedulePostValidateFunction(this.focus.bind(this));\n        return false;\n      }\n\n      this.menubar.setTabbableMenu(this);\n      return this.session.focusManager.requestFocus(this.getFocusableElement());\n    }\n    /* --- STATIC HELPERS ------------------------------------------------------------- */\n\n    /**\n     * @memberOf ButtonAdapterMenu\n     */\n\n  }], [{\n    key: \"adaptButtonProperties\",\n    value: function adaptButtonProperties(buttonProperties, menuProperties) {\n      menuProperties = menuProperties || {}; // Plain properties: simply copy, no translation required\n\n      ['visible', 'selected', 'tooltipText', 'keyStroke', 'keyStrokes', 'cssClass', 'modelClass', 'classId', 'iconId', 'preventDoubleClick', 'enabled', 'inheritAccessibility', 'stackable', 'shrinkable'].forEach(function (prop) {\n        menuProperties[prop] = buttonProperties[prop];\n      }); // Properties requiring special handling (non-trivial mapping)\n\n      menuProperties.text = buttonProperties.label;\n      menuProperties.horizontalAlignment = buttonProperties.gridData ? buttonProperties.gridData.horizontalAlignment : undefined;\n      menuProperties.actionStyle = buttonStyleToActionStyle(buttonProperties.displayStyle);\n      menuProperties.toggleAction = buttonProperties.displayStyle === Button.DisplayStyle.TOGGLE;\n      menuProperties.childActions = buttonProperties.menus;\n\n      if (menuProperties.defaultMenu === undefined) {\n        // buttonProperties.defaultButton property is only mapped if it is true, false should not be mapped as the default defaultMenu = null setting\n        // would be overridden if this default null setting is overridden MenuBar.prototype.updateDefaultMenu would not consider these entries anymore\n        // on actual property changes defaultMenu will always be undefined which always maps the defaultButton property to the defaultMenu property\n        menuProperties.defaultMenu = buttonProperties.defaultButton;\n      } // Cleanup: Remove all properties that have value 'undefined' from the result object,\n      // otherwise, they would be applied to the model adapter.\n\n\n      for (var prop in menuProperties) {\n        if (menuProperties[prop] === undefined) {\n          delete menuProperties[prop];\n        }\n      }\n\n      return menuProperties; // ----- Helper functions -----\n\n      function buttonStyleToActionStyle(buttonStyle) {\n        if (buttonStyle === undefined) {\n          return undefined;\n        }\n\n        if (buttonStyle === Button.DisplayStyle.LINK) {\n          return Action.ActionStyle.DEFAULT;\n        }\n\n        return Action.ActionStyle.BUTTON;\n      }\n    }\n  }]);\n\n  return ButtonAdapterMenu;\n}(Menu);\n\nexport { ButtonAdapterMenu as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/menu/ButtonAdapterMenu.js"],"names":["Action","Button","Menu","ButtonAdapterMenu","_removeWidgetProperties","_buttonPropertyChangeHandler","_onButtonPropertyChange","bind","_buttonDestroyHandler","_onButtonDestroy","_addCloneProperties","button","menubar","model","Error","adaptedBy","_installListeners","on","off","$container","attr","id","event","changedProperties","propertyName","newValue","adaptButtonProperties","prop","setProperty","destroy","_uninstallListeners","childActions","length","actionExecuted","doAction","isToggleAction","setSelected","selected","_doAction","rendered","session","layoutValidator","schedulePostValidateFunction","focus","setTabbableMenu","focusManager","requestFocus","getFocusableElement","buttonProperties","menuProperties","forEach","text","label","horizontalAlignment","gridData","undefined","actionStyle","buttonStyleToActionStyle","displayStyle","toggleAction","DisplayStyle","TOGGLE","menus","defaultMenu","defaultButton","buttonStyle","LINK","ActionStyle","DEFAULT","BUTTON"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Action, Button, Menu} from '../index';\n\nexport default class ButtonAdapterMenu extends Menu {\n  constructor() {\n    super();\n    this._removeWidgetProperties('childActions'); // managed by button\n\n    this._buttonPropertyChangeHandler = this._onButtonPropertyChange.bind(this);\n    this._buttonDestroyHandler = this._onButtonDestroy.bind(this);\n\n    this._addCloneProperties(['button']);\n    this.button = null;\n    this.menubar = null;\n  }\n\n  /**\n   * @override Action.js\n   */\n  _init(model) {\n    super._init(model);\n    if (!this.button) {\n      throw new Error('Cannot adapt to undefined button');\n    }\n    this.button.adaptedBy = this;\n    this._installListeners();\n  }\n\n  _destroy() {\n    super._destroy();\n    delete this.button.adaptedBy;\n  }\n\n  _installListeners() {\n    this.button.on('propertyChange', this._buttonPropertyChangeHandler);\n    this.button.on('destroy', this._buttonDestroyHandler);\n  }\n\n  _uninstallListeners() {\n    this.button.off('propertyChange', this._buttonPropertyChangeHandler);\n    this.button.off('destroy', this._buttonDestroyHandler);\n  }\n\n  _render() {\n    super._render();\n    // Convenience: Add ID of original button to DOM for debugging purposes\n    this.$container.attr('data-buttonadapter', this.button.id);\n  }\n\n  _onButtonPropertyChange(event) {\n    // Whenever a button property changes, apply the changes to the menu\n    var changedProperties = {};\n    changedProperties[event.propertyName] = event.newValue;\n    changedProperties = ButtonAdapterMenu.adaptButtonProperties(changedProperties);\n    for (var prop in changedProperties) { // NOSONAR\n      // Set the property (don't use callSetter because this may delegate to the button)\n      this.setProperty(prop, changedProperties[prop]);\n    }\n  }\n\n  _onButtonDestroy(event) {\n    this.destroy();\n    this._uninstallListeners();\n  }\n\n  /**\n   * @override Action.js\n   */\n  doAction() {\n    if (this.childActions.length > 0) {\n      // Popup menu is handled by this menu itself\n      return super.doAction();\n    }\n\n    // Everything else is delegated to the button\n    var actionExecuted = this.button.doAction();\n    if (actionExecuted) {\n      if (this.isToggleAction()) {\n        this.setSelected(!this.selected);\n      }\n      this._doAction();\n    }\n    return actionExecuted;\n  }\n\n  /**\n   * @override\n   */\n  focus() {\n    if (!this.rendered) {\n      this.session.layoutValidator.schedulePostValidateFunction(this.focus.bind(this));\n      return false;\n    }\n    this.menubar.setTabbableMenu(this);\n    return this.session.focusManager.requestFocus(this.getFocusableElement());\n  }\n\n  /* --- STATIC HELPERS ------------------------------------------------------------- */\n\n  /**\n   * @memberOf ButtonAdapterMenu\n   */\n  static adaptButtonProperties(buttonProperties, menuProperties) {\n    menuProperties = menuProperties || {};\n\n    // Plain properties: simply copy, no translation required\n    ['visible', 'selected', 'tooltipText', 'keyStroke', 'keyStrokes', 'cssClass', 'modelClass', 'classId', 'iconId', 'preventDoubleClick', 'enabled', 'inheritAccessibility', 'stackable', 'shrinkable'].forEach(function(prop) {\n      menuProperties[prop] = buttonProperties[prop];\n    });\n\n    // Properties requiring special handling (non-trivial mapping)\n    menuProperties.text = buttonProperties.label;\n    menuProperties.horizontalAlignment = buttonProperties.gridData ? buttonProperties.gridData.horizontalAlignment : undefined;\n    menuProperties.actionStyle = buttonStyleToActionStyle(buttonProperties.displayStyle);\n    menuProperties.toggleAction = buttonProperties.displayStyle === Button.DisplayStyle.TOGGLE;\n    menuProperties.childActions = buttonProperties.menus;\n    if (menuProperties.defaultMenu === undefined) {\n      // buttonProperties.defaultButton property is only mapped if it is true, false should not be mapped as the default defaultMenu = null setting\n      // would be overridden if this default null setting is overridden MenuBar.prototype.updateDefaultMenu would not consider these entries anymore\n      // on actual property changes defaultMenu will always be undefined which always maps the defaultButton property to the defaultMenu property\n      menuProperties.defaultMenu = buttonProperties.defaultButton;\n    }\n\n    // Cleanup: Remove all properties that have value 'undefined' from the result object,\n    // otherwise, they would be applied to the model adapter.\n    for (var prop in menuProperties) {\n      if (menuProperties[prop] === undefined) {\n        delete menuProperties[prop];\n      }\n    }\n    return menuProperties;\n\n    // ----- Helper functions -----\n\n    function buttonStyleToActionStyle(buttonStyle) {\n      if (buttonStyle === undefined) {\n        return undefined;\n      }\n      if (buttonStyle === Button.DisplayStyle.LINK) {\n        return Action.ActionStyle.DEFAULT;\n      }\n      return Action.ActionStyle.BUTTON;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}