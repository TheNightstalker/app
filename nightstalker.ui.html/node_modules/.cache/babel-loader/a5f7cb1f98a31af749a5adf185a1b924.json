{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, objects, scout } from '../index';\n/**\n * Helper to support clone property and event handling between original and clone.\n *\n * OPTION                   DEFAULT VALUE   DESCRIPTION\n * --------------------------------------------------------------------------------------------------------\n * delegateProperties       []              An array of all properties to be delegated from the source\n *                                          to the to the target when changed on the source.\n *\n * excludeProperties        []              An array of all properties to be excluded from delegating to the\n *                                          in all cases.\n *\n * delegateEvents           []              An array of all events to be delegated from the source to\n *                                          the target when fired on the source.\n *\n * delegateAllProperties    false           True to delegate all property changes from the source to\n *                                          the target.\n *\n * delegateAllEvents        false           True to delegate all events from the source to\n *                                          the target.\n *\n */\n\nvar EventDelegator = /*#__PURE__*/function () {\n  function EventDelegator(source, target, options) {\n    _classCallCheck(this, EventDelegator);\n\n    options = options || {};\n    this.source = source;\n    this.target = target;\n    this.callSetter = scout.nvl(options.callSetter, true);\n    this.delegateProperties = options.delegateProperties || [];\n    this.excludeProperties = options.excludeProperties || [];\n    this.delegateEvents = options.delegateEvents || [];\n    this.delegateAllProperties = !!options.delegateAllProperties;\n    this.delegateAllEvents = !!options.delegateAllEvents;\n    this._mirrorListener = null;\n    this._destroyHandler = null;\n\n    this._installSourceListener();\n  }\n\n  _createClass(EventDelegator, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this._uninstallSourceListener();\n    }\n  }, {\n    key: \"_installSourceListener\",\n    value: function _installSourceListener() {\n      if (this._mirrorListener) {\n        throw new Error('source listeners already installed.');\n      }\n\n      this._mirrorListener = {\n        func: this._onSourceEvent.bind(this)\n      };\n      this.source.events.addListener(this._mirrorListener);\n      this._destroyHandler = this._uninstallSourceListener.bind(this);\n      this.source.on('destroy', this._destroyHandler);\n      this.target.on('destroy', this._destroyHandler);\n    }\n  }, {\n    key: \"_uninstallSourceListener\",\n    value: function _uninstallSourceListener() {\n      if (this._mirrorListener) {\n        this.source.events.removeListener(this._mirrorListener);\n        this._mirrorListener = null;\n      }\n\n      if (this._destroyHandler) {\n        this.source.off('destroy', this._destroyHandler);\n        this.target.off('destroy', this._destroyHandler);\n        this._destroyHandler = null;\n      }\n    }\n  }, {\n    key: \"_onSourceEvent\",\n    value: function _onSourceEvent(event) {\n      if (event.type === 'propertyChange') {\n        this._onSourcePropertyChange(event);\n      } else if (this.delegateAllEvents || this.delegateEvents.indexOf(event.type) > -1) {\n        this.target.trigger(event.type, event);\n      }\n    }\n  }, {\n    key: \"_onSourcePropertyChange\",\n    value: function _onSourcePropertyChange(event) {\n      if (this.excludeProperties.indexOf(event.propertyName) > -1) {\n        return;\n      }\n\n      if (this.delegateAllProperties || this.delegateProperties.indexOf(event.propertyName) > -1) {\n        if (EventDelegator.equalsProperty(event.propertyName, this.target, event.newValue)) {\n          return;\n        }\n\n        if (this.callSetter) {\n          this.target.callSetter(event.propertyName, event.newValue);\n        } else {\n          this.target.trigger(event.type, event);\n        }\n      }\n    }\n  }], [{\n    key: \"equalsProperty\",\n    value: function equalsProperty(propName, obj, value) {\n      var propValue = obj[propName]; // Compare arrays using arrays.equals()\n\n      if (Array.isArray(value) && Array.isArray(propValue)) {\n        return arrays.equals(value, propValue);\n      }\n\n      return objects.equals(propValue, value);\n    }\n  }, {\n    key: \"create\",\n    value: function create(source, target, options) {\n      if (options.delegateProperties && options.delegateProperties.length > 0 || options.delegateEvents && options.delegateEvents.length > 0 || options.delegateAllProperties || options.delegateAllEvents) {\n        return new EventDelegator(source, target, options);\n      }\n\n      return null;\n    }\n  }]);\n\n  return EventDelegator;\n}();\n\nexport { EventDelegator as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/util/EventDelegator.js"],"names":["arrays","objects","scout","EventDelegator","source","target","options","callSetter","nvl","delegateProperties","excludeProperties","delegateEvents","delegateAllProperties","delegateAllEvents","_mirrorListener","_destroyHandler","_installSourceListener","_uninstallSourceListener","Error","func","_onSourceEvent","bind","events","addListener","on","removeListener","off","event","type","_onSourcePropertyChange","indexOf","trigger","propertyName","equalsProperty","newValue","propName","obj","value","propValue","Array","isArray","equals","length"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, objects, scout} from '../index';\n\n/**\n * Helper to support clone property and event handling between original and clone.\n *\n * OPTION                   DEFAULT VALUE   DESCRIPTION\n * --------------------------------------------------------------------------------------------------------\n * delegateProperties       []              An array of all properties to be delegated from the source\n *                                          to the to the target when changed on the source.\n *\n * excludeProperties        []              An array of all properties to be excluded from delegating to the\n *                                          in all cases.\n *\n * delegateEvents           []              An array of all events to be delegated from the source to\n *                                          the target when fired on the source.\n *\n * delegateAllProperties    false           True to delegate all property changes from the source to\n *                                          the target.\n *\n * delegateAllEvents        false           True to delegate all events from the source to\n *                                          the target.\n *\n */\nexport default class EventDelegator {\n\n  constructor(source, target, options) {\n    options = options || {};\n    this.source = source;\n    this.target = target;\n    this.callSetter = scout.nvl(options.callSetter, true);\n    this.delegateProperties = options.delegateProperties || [];\n    this.excludeProperties = options.excludeProperties || [];\n    this.delegateEvents = options.delegateEvents || [];\n    this.delegateAllProperties = !!options.delegateAllProperties;\n    this.delegateAllEvents = !!options.delegateAllEvents;\n    this._mirrorListener = null;\n    this._destroyHandler = null;\n\n    this._installSourceListener();\n  }\n\n  destroy() {\n    this._uninstallSourceListener();\n  }\n\n  _installSourceListener() {\n    if (this._mirrorListener) {\n      throw new Error('source listeners already installed.');\n    }\n    this._mirrorListener = {\n      func: this._onSourceEvent.bind(this)\n    };\n    this.source.events.addListener(this._mirrorListener);\n    this._destroyHandler = this._uninstallSourceListener.bind(this);\n    this.source.on('destroy', this._destroyHandler);\n    this.target.on('destroy', this._destroyHandler);\n  }\n\n  _uninstallSourceListener() {\n    if (this._mirrorListener) {\n      this.source.events.removeListener(this._mirrorListener);\n      this._mirrorListener = null;\n    }\n    if (this._destroyHandler) {\n      this.source.off('destroy', this._destroyHandler);\n      this.target.off('destroy', this._destroyHandler);\n      this._destroyHandler = null;\n    }\n  }\n\n  _onSourceEvent(event) {\n    if (event.type === 'propertyChange') {\n      this._onSourcePropertyChange(event);\n    } else if (this.delegateAllEvents || this.delegateEvents.indexOf(event.type) > -1) {\n      this.target.trigger(event.type, event);\n    }\n  }\n\n  _onSourcePropertyChange(event) {\n    if (this.excludeProperties.indexOf(event.propertyName) > -1) {\n      return;\n    }\n    if (this.delegateAllProperties || this.delegateProperties.indexOf(event.propertyName) > -1) {\n      if (EventDelegator.equalsProperty(event.propertyName, this.target, event.newValue)) {\n        return;\n      }\n      if (this.callSetter) {\n        this.target.callSetter(event.propertyName, event.newValue);\n      } else {\n        this.target.trigger(event.type, event);\n      }\n    }\n  }\n\n  static equalsProperty(propName, obj, value) {\n    var propValue = obj[propName];\n    // Compare arrays using arrays.equals()\n    if (Array.isArray(value) && Array.isArray(propValue)) {\n      return arrays.equals(value, propValue);\n    }\n    return objects.equals(propValue, value);\n  }\n\n  static create(source, target, options) {\n    if ((options.delegateProperties && options.delegateProperties.length > 0) ||\n      (options.delegateEvents && options.delegateEvents.length > 0) ||\n      options.delegateAllProperties ||\n      options.delegateAllEvents) {\n      return new EventDelegator(source, target, options);\n    }\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}