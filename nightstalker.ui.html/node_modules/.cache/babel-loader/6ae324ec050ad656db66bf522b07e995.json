{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { CachedElement, strings } from '../index';\n/**\n * Replaces character HTML entities (e.g. &amp;nbsp;, &amp;gt;, etc.).\n */\n\nvar PlainTextEncoder = /*#__PURE__*/function () {\n  function PlainTextEncoder() {\n    _classCallCheck(this, PlainTextEncoder);\n\n    this.cache = new CachedElement('textarea');\n  }\n\n  _createClass(PlainTextEncoder, [{\n    key: \"encode\",\n    value: function encode(text, options) {\n      options = options || {};\n\n      if (!text) {\n        return text;\n      }\n\n      text = strings.asString(text); // Regexp is used to replace the tags.\n      // It is not possible to use jquery's text() function or to create a html element and use textContent, because the new lines get omitted.\n      // Node.innerText would preserve the new lines but it is not supported by firefox\n      // Preserve new lines\n\n      text = text.replace(/<br>|<br\\/>|<\\/p>|<p\\/>|<\\/div>|<\\/li>|<\\/tr>/gi, '\\n'); // Separate td with ' '\n\n      text = text.replace(/<\\/td>/gi, ' '); // Replace remaining tags\n\n      text = text.replace(/<[^>]+>/gi, ''); // Remove spaces at the beginning and end of each line\n\n      text = text.replace(/^[ ]+/gm, '');\n      text = text.replace(/[ ]+$/gm, '');\n\n      if (options.compact) {\n        // Compact consecutive empty lines. One is enough\n        text = text.replace(/\\n{3,}/gm, '\\n\\n');\n      }\n\n      if (options.trim) {\n        text = text.trim();\n      }\n\n      var textarea = this.cache.get();\n      textarea.innerHTML = text;\n      return textarea.value;\n    }\n  }]);\n\n  return PlainTextEncoder;\n}();\n\nexport { PlainTextEncoder as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/encoder/PlainTextEncoder.js"],"names":["CachedElement","strings","PlainTextEncoder","cache","text","options","asString","replace","compact","trim","textarea","get","innerHTML","value"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,aAAR,EAAuBC,OAAvB,QAAqC,UAArC;AAEA;AACA;AACA;;IACqBC,gB;AACnB,8BAAc;AAAA;;AACZ,SAAKC,KAAL,GAAa,IAAIH,aAAJ,CAAkB,UAAlB,CAAb;AACD;;;;2BAEMI,I,EAAMC,O,EAAS;AACpBA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AACA,UAAI,CAACD,IAAL,EAAW;AACT,eAAOA,IAAP;AACD;;AACDA,MAAAA,IAAI,GAAGH,OAAO,CAACK,QAAR,CAAiBF,IAAjB,CAAP,CALoB,CAOpB;AACA;AACA;AAEA;;AACAA,MAAAA,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAa,iDAAb,EAAgE,IAAhE,CAAP,CAZoB,CAcpB;;AACAH,MAAAA,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAa,UAAb,EAAyB,GAAzB,CAAP,CAfoB,CAiBpB;;AACAH,MAAAA,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAa,WAAb,EAA0B,EAA1B,CAAP,CAlBoB,CAoBpB;;AACAH,MAAAA,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAa,SAAb,EAAwB,EAAxB,CAAP;AACAH,MAAAA,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAa,SAAb,EAAwB,EAAxB,CAAP;;AAEA,UAAIF,OAAO,CAACG,OAAZ,EAAqB;AACnB;AACAJ,QAAAA,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAa,UAAb,EAAyB,MAAzB,CAAP;AACD;;AACD,UAAIF,OAAO,CAACI,IAAZ,EAAkB;AAChBL,QAAAA,IAAI,GAAGA,IAAI,CAACK,IAAL,EAAP;AACD;;AAED,UAAIC,QAAQ,GAAG,KAAKP,KAAL,CAAWQ,GAAX,EAAf;AACAD,MAAAA,QAAQ,CAACE,SAAT,GAAqBR,IAArB;AACA,aAAOM,QAAQ,CAACG,KAAhB;AACD;;;;;;SAxCkBX,gB","sourcesContent":["/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n\nimport {CachedElement, strings} from '../index';\n\n/**\n * Replaces character HTML entities (e.g. &amp;nbsp;, &amp;gt;, etc.).\n */\nexport default class PlainTextEncoder {\n  constructor() {\n    this.cache = new CachedElement('textarea');\n  }\n\n  encode(text, options) {\n    options = options || {};\n    if (!text) {\n      return text;\n    }\n    text = strings.asString(text);\n\n    // Regexp is used to replace the tags.\n    // It is not possible to use jquery's text() function or to create a html element and use textContent, because the new lines get omitted.\n    // Node.innerText would preserve the new lines but it is not supported by firefox\n\n    // Preserve new lines\n    text = text.replace(/<br>|<br\\/>|<\\/p>|<p\\/>|<\\/div>|<\\/li>|<\\/tr>/gi, '\\n');\n\n    // Separate td with ' '\n    text = text.replace(/<\\/td>/gi, ' ');\n\n    // Replace remaining tags\n    text = text.replace(/<[^>]+>/gi, '');\n\n    // Remove spaces at the beginning and end of each line\n    text = text.replace(/^[ ]+/gm, '');\n    text = text.replace(/[ ]+$/gm, '');\n\n    if (options.compact) {\n      // Compact consecutive empty lines. One is enough\n      text = text.replace(/\\n{3,}/gm, '\\n\\n');\n    }\n    if (options.trim) {\n      text = text.trim();\n    }\n\n    var textarea = this.cache.get();\n    textarea.innerHTML = text;\n    return textarea.value;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}