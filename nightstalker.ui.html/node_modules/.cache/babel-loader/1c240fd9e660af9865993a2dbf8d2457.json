{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractTableNavigationKeyStroke, keys } from '../../index';\n\nvar TableNavigationExpandKeyStroke = /*#__PURE__*/function (_AbstractTableNavigat) {\n  _inherits(TableNavigationExpandKeyStroke, _AbstractTableNavigat);\n\n  var _super = _createSuper(TableNavigationExpandKeyStroke);\n\n  function TableNavigationExpandKeyStroke(table) {\n    var _this;\n\n    _classCallCheck(this, TableNavigationExpandKeyStroke);\n\n    _this = _super.call(this, table);\n    _this.field = table;\n    _this.which = [keys.ADD, keys.RIGHT];\n    _this.renderingHints.text = '+';\n\n    _this.renderingHints.$drawingArea = function ($drawingArea, event) {\n      var row = this.field.selectedRows[0];\n\n      if (row) {\n        return row.$row;\n      }\n    }.bind(_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(TableNavigationExpandKeyStroke, [{\n    key: \"_accept\",\n    value: function _accept(event) {\n      var accepted = _get(_getPrototypeOf(TableNavigationExpandKeyStroke.prototype), \"_accept\", this).call(this, event),\n          selectedRow = this.field.selectedRows[0];\n\n      if (!accepted) {\n        return false;\n      }\n\n      if (!selectedRow) {\n        return false;\n      }\n\n      return selectedRow._expandable;\n    }\n  }, {\n    key: \"handle\",\n    value: function handle(event) {\n      var table = this.field,\n          selectedRow = this.field.selectedRows[0],\n          visibleChildRows;\n\n      if (!selectedRow) {\n        return;\n      }\n\n      if (selectedRow._expandable) {\n        if (selectedRow.expanded) {\n          // select first child\n          visibleChildRows = this.field.visibleChildRows(selectedRow);\n          table.selectRow(visibleChildRows[0]);\n          table.selectionHandler.lastActionRow = visibleChildRows[0];\n        } else {\n          // expand\n          table.expandRow(selectedRow);\n        }\n      }\n    }\n  }]);\n\n  return TableNavigationExpandKeyStroke;\n}(AbstractTableNavigationKeyStroke);\n\nexport { TableNavigationExpandKeyStroke as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/table/keystrokes/TableNavigationExpandKeyStroke.js"],"names":["AbstractTableNavigationKeyStroke","keys","TableNavigationExpandKeyStroke","table","field","which","ADD","RIGHT","renderingHints","text","$drawingArea","event","row","selectedRows","$row","bind","accepted","selectedRow","_expandable","visibleChildRows","expanded","selectRow","selectionHandler","lastActionRow","expandRow"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,gCAAR,EAA0CC,IAA1C,QAAqD,aAArD;;IAEqBC,8B;;;;;AAEnB,0CAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAaD,KAAb;AACA,UAAKE,KAAL,GAAa,CAACJ,IAAI,CAACK,GAAN,EAAWL,IAAI,CAACM,KAAhB,CAAb;AACA,UAAKC,cAAL,CAAoBC,IAApB,GAA2B,GAA3B;;AACA,UAAKD,cAAL,CAAoBE,YAApB,GAAmC,UAASA,YAAT,EAAuBC,KAAvB,EAA8B;AAC/D,UAAIC,GAAG,GAAG,KAAKR,KAAL,CAAWS,YAAX,CAAwB,CAAxB,CAAV;;AACA,UAAID,GAAJ,EAAS;AACP,eAAOA,GAAG,CAACE,IAAX;AACD;AACF,KALkC,CAKjCC,IALiC,+BAAnC;;AALiB;AAWlB;;;;4BAEOJ,K,EAAO;AACb,UAAIK,QAAQ,+FAAiBL,KAAjB,CAAZ;AAAA,UACEM,WAAW,GAAG,KAAKb,KAAL,CAAWS,YAAX,CAAwB,CAAxB,CADhB;;AAEA,UAAI,CAACG,QAAL,EAAe;AACb,eAAO,KAAP;AACD;;AACD,UAAI,CAACC,WAAL,EAAkB;AAChB,eAAO,KAAP;AACD;;AACD,aAAOA,WAAW,CAACC,WAAnB;AACD;;;2BAEMP,K,EAAO;AACZ,UAAIR,KAAK,GAAG,KAAKC,KAAjB;AAAA,UACEa,WAAW,GAAG,KAAKb,KAAL,CAAWS,YAAX,CAAwB,CAAxB,CADhB;AAAA,UAEEM,gBAFF;;AAGA,UAAI,CAACF,WAAL,EAAkB;AAChB;AACD;;AACD,UAAIA,WAAW,CAACC,WAAhB,EAA6B;AAC3B,YAAID,WAAW,CAACG,QAAhB,EAA0B;AACxB;AACAD,UAAAA,gBAAgB,GAAG,KAAKf,KAAL,CAAWe,gBAAX,CAA4BF,WAA5B,CAAnB;AACAd,UAAAA,KAAK,CAACkB,SAAN,CAAgBF,gBAAgB,CAAC,CAAD,CAAhC;AACAhB,UAAAA,KAAK,CAACmB,gBAAN,CAAuBC,aAAvB,GAAuCJ,gBAAgB,CAAC,CAAD,CAAvD;AACD,SALD,MAKO;AACL;AACAhB,UAAAA,KAAK,CAACqB,SAAN,CAAgBP,WAAhB;AACD;AACF;AACF;;;;EA7CyDjB,gC;;SAAvCE,8B","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractTableNavigationKeyStroke, keys} from '../../index';\n\nexport default class TableNavigationExpandKeyStroke extends AbstractTableNavigationKeyStroke {\n\n  constructor(table) {\n    super(table);\n    this.field = table;\n    this.which = [keys.ADD, keys.RIGHT];\n    this.renderingHints.text = '+';\n    this.renderingHints.$drawingArea = function($drawingArea, event) {\n      var row = this.field.selectedRows[0];\n      if (row) {\n        return row.$row;\n      }\n    }.bind(this);\n  }\n\n  _accept(event) {\n    var accepted = super._accept(event),\n      selectedRow = this.field.selectedRows[0];\n    if (!accepted) {\n      return false;\n    }\n    if (!selectedRow) {\n      return false;\n    }\n    return selectedRow._expandable;\n  }\n\n  handle(event) {\n    var table = this.field,\n      selectedRow = this.field.selectedRows[0],\n      visibleChildRows;\n    if (!selectedRow) {\n      return;\n    }\n    if (selectedRow._expandable) {\n      if (selectedRow.expanded) {\n        // select first child\n        visibleChildRows = this.field.visibleChildRows(selectedRow);\n        table.selectRow(visibleChildRows[0]);\n        table.selectionHandler.lastActionRow = visibleChildRows[0];\n      } else {\n        // expand\n        table.expandRow(selectedRow);\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}