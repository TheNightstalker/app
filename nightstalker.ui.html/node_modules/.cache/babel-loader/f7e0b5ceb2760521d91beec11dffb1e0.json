{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { BrowserField, Tile, WidgetTile } from '../../index';\n\nvar FormFieldTile = /*#__PURE__*/function (_WidgetTile) {\n  _inherits(FormFieldTile, _WidgetTile);\n\n  var _super = _createSuper(FormFieldTile);\n\n  function FormFieldTile() {\n    var _this;\n\n    _classCallCheck(this, FormFieldTile);\n\n    _this = _super.call(this);\n    _this.displayStyle = FormFieldTile.DisplayStyle.DASHBOARD;\n    return _this;\n  }\n\n  _createClass(FormFieldTile, [{\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(FormFieldTile.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderFieldLabelVisible();\n    }\n  }, {\n    key: \"_renderDisplayStyle\",\n    value: function _renderDisplayStyle() {\n      _get(_getPrototypeOf(FormFieldTile.prototype), \"_renderDisplayStyle\", this).call(this);\n\n      this.$container.toggleClass('dashboard', this.displayStyle === FormFieldTile.DisplayStyle.DASHBOARD);\n    }\n  }, {\n    key: \"_renderFieldLabelVisible\",\n    value: function _renderFieldLabelVisible() {\n      if (this.displayStyle !== FormFieldTile.DisplayStyle.DASHBOARD) {\n        return;\n      } // Special handling for browser field (remove padding when label is invisible)\n\n\n      if (this.tileWidget instanceof BrowserField) {\n        this.tileWidget.$container.toggleClass('no-padding', !this.tileWidget.labelVisible && !this.tileWidget.errorStatus);\n      }\n    }\n  }, {\n    key: \"_onFieldPropertyChange\",\n    value: function _onFieldPropertyChange(event) {\n      if (event.propertyName === 'labelVisible' || event.propertyName === 'errorStatus') {\n        if (this.rendered) {\n          this._renderFieldLabelVisible();\n        }\n      }\n    }\n  }]);\n\n  return FormFieldTile;\n}(WidgetTile);\n\n_defineProperty(FormFieldTile, \"DisplayStyle\", {\n  DEFAULT: Tile.DisplayStyle.DEFAULT,\n  PLAIN: Tile.DisplayStyle.PLAIN,\n  DASHBOARD: 'dashboard'\n});\n\nexport { FormFieldTile as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/tile/fields/FormFieldTile.js"],"names":["BrowserField","Tile","WidgetTile","FormFieldTile","displayStyle","DisplayStyle","DASHBOARD","_renderFieldLabelVisible","$container","toggleClass","tileWidget","labelVisible","errorStatus","event","propertyName","rendered","DEFAULT","PLAIN"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,YAAR,EAAsBC,IAAtB,EAA4BC,UAA5B,QAA6C,aAA7C;;IAEqBC,a;;;;;AAEnB,2BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,YAAL,GAAoBD,aAAa,CAACE,YAAd,CAA2BC,SAA/C;AAFY;AAGb;;;;wCAQmB;AAClB;;AACA,WAAKC,wBAAL;AACD;;;0CAEqB;AACpB;;AACA,WAAKC,UAAL,CAAgBC,WAAhB,CAA4B,WAA5B,EAAyC,KAAKL,YAAL,KAAsBD,aAAa,CAACE,YAAd,CAA2BC,SAA1F;AACD;;;+CAE0B;AACzB,UAAI,KAAKF,YAAL,KAAsBD,aAAa,CAACE,YAAd,CAA2BC,SAArD,EAAgE;AAC9D;AACD,OAHwB,CAIzB;;;AACA,UAAI,KAAKI,UAAL,YAA2BV,YAA/B,EAA6C;AAC3C,aAAKU,UAAL,CAAgBF,UAAhB,CAA2BC,WAA3B,CAAuC,YAAvC,EAAqD,CAAC,KAAKC,UAAL,CAAgBC,YAAjB,IAAiC,CAAC,KAAKD,UAAL,CAAgBE,WAAvG;AACD;AACF;;;2CAEsBC,K,EAAO;AAC5B,UAAIA,KAAK,CAACC,YAAN,KAAuB,cAAvB,IAAyCD,KAAK,CAACC,YAAN,KAAuB,aAApE,EAAmF;AACjF,YAAI,KAAKC,QAAT,EAAmB;AACjB,eAAKR,wBAAL;AACD;AACF;AACF;;;;EAvCwCL,U;;gBAAtBC,a,kBAOG;AACpBa,EAAAA,OAAO,EAAEf,IAAI,CAACI,YAAL,CAAkBW,OADP;AAEpBC,EAAAA,KAAK,EAAEhB,IAAI,CAACI,YAAL,CAAkBY,KAFL;AAGpBX,EAAAA,SAAS,EAAE;AAHS,C;;SAPHH,a","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {BrowserField, Tile, WidgetTile} from '../../index';\n\nexport default class FormFieldTile extends WidgetTile {\n\n  constructor() {\n    super();\n    this.displayStyle = FormFieldTile.DisplayStyle.DASHBOARD;\n  }\n\n  static DisplayStyle = {\n    DEFAULT: Tile.DisplayStyle.DEFAULT,\n    PLAIN: Tile.DisplayStyle.PLAIN,\n    DASHBOARD: 'dashboard'\n  };\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderFieldLabelVisible();\n  }\n\n  _renderDisplayStyle() {\n    super._renderDisplayStyle();\n    this.$container.toggleClass('dashboard', this.displayStyle === FormFieldTile.DisplayStyle.DASHBOARD);\n  }\n\n  _renderFieldLabelVisible() {\n    if (this.displayStyle !== FormFieldTile.DisplayStyle.DASHBOARD) {\n      return;\n    }\n    // Special handling for browser field (remove padding when label is invisible)\n    if (this.tileWidget instanceof BrowserField) {\n      this.tileWidget.$container.toggleClass('no-padding', !this.tileWidget.labelVisible && !this.tileWidget.errorStatus);\n    }\n  }\n\n  _onFieldPropertyChange(event) {\n    if (event.propertyName === 'labelVisible' || event.propertyName === 'errorStatus') {\n      if (this.rendered) {\n        this._renderFieldLabelVisible();\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}