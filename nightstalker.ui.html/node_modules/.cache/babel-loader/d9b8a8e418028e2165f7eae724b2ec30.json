{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, HtmlComponent, HtmlEnvironment } from '../../index';\n\nvar LookupBoxLayout = /*#__PURE__*/function (_AbstractLayout) {\n  _inherits(LookupBoxLayout, _AbstractLayout);\n\n  var _super = _createSuper(LookupBoxLayout);\n\n  function LookupBoxLayout(box, structure, filterBox) {\n    var _this;\n\n    _classCallCheck(this, LookupBoxLayout);\n\n    _this = _super.call(this);\n    _this.box = box;\n    _this.structure = structure;\n    _this.filterBox = filterBox;\n    return _this;\n  }\n\n  _createClass(LookupBoxLayout, [{\n    key: \"layout\",\n    value: function layout($container) {\n      var htmlContainer = HtmlComponent.get($container),\n          size = htmlContainer.size(),\n          height = size.height,\n          filterBoxHeight;\n\n      if (this.filterBox && this.filterBox.rendered) {\n        filterBoxHeight = HtmlComponent.get(this.filterBox.$container).prefSize().height;\n        height -= filterBoxHeight;\n      }\n\n      height = Math.max(height, 20);\n      var htmlStructure = HtmlComponent.get(this.structure.$container);\n      htmlStructure.setSize(new Dimension(size.width, height));\n\n      if (this.filterBox && this.filterBox.rendered) {\n        var htmlFilterBox = HtmlComponent.get(this.filterBox.$container);\n        htmlFilterBox.setSize(new Dimension(size.width, filterBoxHeight));\n      }\n    }\n  }, {\n    key: \"preferredLayoutSize\",\n    value: function preferredLayoutSize($container, options) {\n      options = options || {};\n      var prefSizeStructure,\n          prefSizeFilterBox,\n          structureContainer,\n          filterContainer,\n          width = 0,\n          htmlContainer = HtmlComponent.get($container),\n          height = HtmlEnvironment.get().formRowHeight,\n          box = this.box; // HeightHint not supported\n\n      options.heightHint = null;\n\n      if (box.$label && box.labelVisible) {\n        width += HtmlEnvironment.get().fieldLabelWidth;\n      }\n\n      if (box.$mandatory && box.$mandatory.isVisible()) {\n        width += box.$mandatory.outerWidth(true);\n      }\n\n      if (box.$status && box.statusVisible) {\n        width += box.$status.outerWidth(true);\n      } // size of table and size of filterBox\n\n\n      structureContainer = HtmlComponent.optGet(this.structure.$container);\n\n      if (structureContainer) {\n        prefSizeStructure = structureContainer.prefSize(options).add(htmlContainer.insets()).add(structureContainer.margins());\n      } else {\n        prefSizeStructure = this.naturalSize(box);\n      }\n\n      prefSizeFilterBox = new Dimension(0, 0);\n\n      if (this.filterBox) {\n        filterContainer = HtmlComponent.optGet(this.filterBox.$container);\n\n        if (filterContainer) {\n          prefSizeFilterBox = filterContainer.prefSize(options).add(htmlContainer.insets()).add(filterContainer.margins());\n        }\n      }\n\n      width += Math.max(prefSizeStructure.width, prefSizeFilterBox.width);\n      height = Math.max(height, prefSizeStructure.height + prefSizeFilterBox.height);\n      return new Dimension(width, height);\n    }\n  }, {\n    key: \"naturalSize\",\n    value: function naturalSize(formField) {\n      return new Dimension(formField.$fieldContainer.width(), formField.$fieldContainer.height());\n    }\n  }]);\n\n  return LookupBoxLayout;\n}(AbstractLayout);\n\nexport { LookupBoxLayout as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/LookupBoxLayout.js"],"names":["AbstractLayout","Dimension","HtmlComponent","HtmlEnvironment","LookupBoxLayout","box","structure","filterBox","$container","htmlContainer","get","size","height","filterBoxHeight","rendered","prefSize","Math","max","htmlStructure","setSize","width","htmlFilterBox","options","prefSizeStructure","prefSizeFilterBox","structureContainer","filterContainer","formRowHeight","heightHint","$label","labelVisible","fieldLabelWidth","$mandatory","isVisible","outerWidth","$status","statusVisible","optGet","add","insets","margins","naturalSize","formField","$fieldContainer"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, HtmlComponent, HtmlEnvironment} from '../../index';\n\nexport default class LookupBoxLayout extends AbstractLayout {\n\n  constructor(box, structure, filterBox) {\n    super();\n    this.box = box;\n    this.structure = structure;\n    this.filterBox = filterBox;\n  }\n\n  layout($container) {\n    var htmlContainer = HtmlComponent.get($container),\n      size = htmlContainer.size(),\n      height = size.height,\n      filterBoxHeight;\n\n    if (this.filterBox && this.filterBox.rendered) {\n      filterBoxHeight = HtmlComponent.get(this.filterBox.$container).prefSize().height;\n      height -= filterBoxHeight;\n    }\n\n    height = Math.max(height, 20);\n    var htmlStructure = HtmlComponent.get(this.structure.$container);\n    htmlStructure.setSize(new Dimension(size.width, height));\n\n    if (this.filterBox && this.filterBox.rendered) {\n      var htmlFilterBox = HtmlComponent.get(this.filterBox.$container);\n      htmlFilterBox.setSize(new Dimension(size.width, filterBoxHeight));\n    }\n  }\n\n  preferredLayoutSize($container, options) {\n    options = options || {};\n    var prefSizeStructure, prefSizeFilterBox, structureContainer, filterContainer,\n      width = 0,\n      htmlContainer = HtmlComponent.get($container),\n      height = HtmlEnvironment.get().formRowHeight,\n      box = this.box;\n\n    // HeightHint not supported\n    options.heightHint = null;\n\n    if (box.$label && box.labelVisible) {\n      width += HtmlEnvironment.get().fieldLabelWidth;\n    }\n    if (box.$mandatory && box.$mandatory.isVisible()) {\n      width += box.$mandatory.outerWidth(true);\n    }\n    if (box.$status && box.statusVisible) {\n      width += box.$status.outerWidth(true);\n    }\n\n    // size of table and size of filterBox\n    structureContainer = HtmlComponent.optGet(this.structure.$container);\n    if (structureContainer) {\n      prefSizeStructure = structureContainer.prefSize(options)\n        .add(htmlContainer.insets())\n        .add(structureContainer.margins());\n    } else {\n      prefSizeStructure = this.naturalSize(box);\n    }\n\n    prefSizeFilterBox = new Dimension(0, 0);\n    if (this.filterBox) {\n      filterContainer = HtmlComponent.optGet(this.filterBox.$container);\n      if (filterContainer) {\n        prefSizeFilterBox = filterContainer.prefSize(options)\n          .add(htmlContainer.insets())\n          .add(filterContainer.margins());\n      }\n    }\n\n    width += Math.max(prefSizeStructure.width, prefSizeFilterBox.width);\n    height = Math.max(height, prefSizeStructure.height + prefSizeFilterBox.height);\n\n    return new Dimension(width, height);\n  }\n\n  naturalSize(formField) {\n    return new Dimension(formField.$fieldContainer.width(), formField.$fieldContainer.height());\n  }\n}\n"]},"metadata":{},"sourceType":"module"}