{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Button, Device, fields, RadioButtonKeyStroke, RadioButtonLayout, tooltips } from '../../../index';\n\nvar RadioButton = /*#__PURE__*/function (_Button) {\n  _inherits(RadioButton, _Button);\n\n  var _super = _createSuper(RadioButton);\n\n  function RadioButton() {\n    var _this;\n\n    _classCallCheck(this, RadioButton);\n\n    _this = _super.call(this);\n    _this.gridDataHints.fillHorizontal = true;\n    _this.focusWhenSelected = true;\n    _this.wrapText = false;\n    _this.buttonKeyStroke = new RadioButtonKeyStroke(_assertThisInitialized(_this), null);\n    _this.radioValue = null;\n    return _this;\n  }\n  /**\n   * @override Button.js\n   */\n\n\n  _createClass(RadioButton, [{\n    key: \"_initDefaultKeyStrokes\",\n    value: function _initDefaultKeyStrokes() {\n      this.keyStrokeContext.registerKeyStroke([new RadioButtonKeyStroke(this, 'ENTER'), new RadioButtonKeyStroke(this, 'SPACE')]);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.addContainer(this.$parent, 'radio-button', new RadioButtonLayout(this));\n      this.addFieldContainer(this.$parent.makeDiv());\n      this.$radioButton = this.$fieldContainer.appendDiv('radio-button-circle').data('radiobutton', this);\n      this.addField(this.$radioButton); // $buttonLabel is used by Button.js as well -> Button.js handles label\n\n      this.$buttonLabel = this.$fieldContainer.appendDiv('label');\n      fields.linkElementWithLabel(this.$radioButton, this.$buttonLabel);\n      this.$fieldContainer.on('mousedown', this._onMouseDown.bind(this));\n      tooltips.installForEllipsis(this.$buttonLabel, {\n        parent: this\n      });\n      this.addStatus();\n      this.session.keyStrokeManager.installKeyStrokeContext(this.formKeyStrokeContext);\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      tooltips.uninstall(this.$buttonLabel);\n      this.session.keyStrokeManager.uninstallKeyStrokeContext(this.formKeyStrokeContext);\n\n      _get(_getPrototypeOf(RadioButton.prototype), \"_remove\", this).call(this);\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(RadioButton.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderWrapText();\n\n      this._renderSelected();\n    }\n  }, {\n    key: \"setWrapText\",\n    value: function setWrapText(wrapText) {\n      this.setProperty('wrapText', wrapText);\n    }\n  }, {\n    key: \"_renderWrapText\",\n    value: function _renderWrapText() {\n      this.$buttonLabel.toggleClass('white-space-nowrap', !this.wrapText);\n      this.invalidateLayoutTree();\n    }\n    /**\n     * Convenience for {@link #setSelected(true)}\n     */\n\n  }, {\n    key: \"select\",\n    value: function select() {\n      this.setSelected(true);\n    }\n  }, {\n    key: \"setSelected\",\n    value: function setSelected(selected) {\n      this.setProperty('selected', selected);\n    }\n  }, {\n    key: \"_renderSelected\",\n    value: function _renderSelected() {\n      this.$fieldContainer.toggleClass('checked', this.selected);\n      this.$field.toggleClass('checked', this.selected);\n    }\n  }, {\n    key: \"setTabbable\",\n    value: function setTabbable(tabbable) {\n      if (this.rendered) {\n        this.$field.setTabbable(tabbable && !Device.get().supportsOnlyTouch());\n      }\n    }\n  }, {\n    key: \"isTabbable\",\n    value: function isTabbable() {\n      return this.rendered && this.$field.isTabbable();\n    }\n  }, {\n    key: \"_renderIconId\",\n    value: function _renderIconId() {\n      _get(_getPrototypeOf(RadioButton.prototype), \"_renderIconId\", this).call(this);\n\n      var $icon = this.get$Icon();\n\n      if ($icon.length > 0) {\n        $icon.insertAfter(this.$radioButton);\n      }\n    }\n    /**\n     * @override Button.js\n     */\n\n  }, {\n    key: \"doAction\",\n    value: function doAction() {\n      if (!this.enabledComputed || !this.visible) {\n        return false;\n      } // Since RadioButton extends Button, doAction should do something useful because it may be called (and actually is by ButtonKeyStroke)\n\n\n      this.select();\n      return true;\n    }\n  }, {\n    key: \"_onMouseDown\",\n    value: function _onMouseDown(event) {\n      if (!this.enabledComputed) {\n        return;\n      }\n\n      var onIcon = this.get$Icon().is(event.target),\n          onButton = this.$radioButton.is(event.target),\n          onLabel = this.$buttonLabel.isOrHas(event.target); // isOrHas is required for HTML enabled labels with nested elements\n\n      if (!onButton && !onLabel && !onIcon) {\n        return;\n      }\n\n      this.select();\n\n      if (this.focusWhenSelected && (onLabel || onIcon)) {\n        this.focusAndPreventDefault(event);\n      }\n    }\n  }]);\n\n  return RadioButton;\n}(Button);\n\nexport { RadioButton as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/radiobutton/RadioButton.js"],"names":["Button","Device","fields","RadioButtonKeyStroke","RadioButtonLayout","tooltips","RadioButton","gridDataHints","fillHorizontal","focusWhenSelected","wrapText","buttonKeyStroke","radioValue","keyStrokeContext","registerKeyStroke","addContainer","$parent","addFieldContainer","makeDiv","$radioButton","$fieldContainer","appendDiv","data","addField","$buttonLabel","linkElementWithLabel","on","_onMouseDown","bind","installForEllipsis","parent","addStatus","session","keyStrokeManager","installKeyStrokeContext","formKeyStrokeContext","uninstall","uninstallKeyStrokeContext","_renderWrapText","_renderSelected","setProperty","toggleClass","invalidateLayoutTree","setSelected","selected","$field","tabbable","rendered","setTabbable","get","supportsOnlyTouch","isTabbable","$icon","get$Icon","length","insertAfter","enabledComputed","visible","select","event","onIcon","is","target","onButton","onLabel","isOrHas","focusAndPreventDefault"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Button, Device, fields, RadioButtonKeyStroke, RadioButtonLayout, tooltips} from '../../../index';\n\nexport default class RadioButton extends Button {\n\n  constructor() {\n    super();\n\n    this.gridDataHints.fillHorizontal = true;\n    this.focusWhenSelected = true;\n    this.wrapText = false;\n    this.buttonKeyStroke = new RadioButtonKeyStroke(this, null);\n    this.radioValue = null;\n  }\n\n  /**\n   * @override Button.js\n   */\n  _initDefaultKeyStrokes() {\n    this.keyStrokeContext.registerKeyStroke([\n      new RadioButtonKeyStroke(this, 'ENTER'),\n      new RadioButtonKeyStroke(this, 'SPACE')\n    ]);\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'radio-button', new RadioButtonLayout(this));\n    this.addFieldContainer(this.$parent.makeDiv());\n    this.$radioButton = this.$fieldContainer\n      .appendDiv('radio-button-circle')\n      .data('radiobutton', this);\n    this.addField(this.$radioButton);\n\n    // $buttonLabel is used by Button.js as well -> Button.js handles label\n    this.$buttonLabel = this.$fieldContainer\n      .appendDiv('label');\n\n    fields.linkElementWithLabel(this.$radioButton, this.$buttonLabel);\n\n    this.$fieldContainer.on('mousedown', this._onMouseDown.bind(this));\n\n    tooltips.installForEllipsis(this.$buttonLabel, {\n      parent: this\n    });\n\n    this.addStatus();\n    this.session.keyStrokeManager.installKeyStrokeContext(this.formKeyStrokeContext);\n  }\n\n  _remove() {\n    tooltips.uninstall(this.$buttonLabel);\n    this.session.keyStrokeManager.uninstallKeyStrokeContext(this.formKeyStrokeContext);\n    super._remove();\n  }\n\n  /**\n   * @override\n   */\n  _renderProperties() {\n    super._renderProperties();\n    this._renderWrapText();\n    this._renderSelected();\n  }\n\n  setWrapText(wrapText) {\n    this.setProperty('wrapText', wrapText);\n  }\n\n  _renderWrapText() {\n    this.$buttonLabel.toggleClass('white-space-nowrap', !this.wrapText);\n    this.invalidateLayoutTree();\n  }\n\n  /**\n   * Convenience for {@link #setSelected(true)}\n   */\n  select() {\n    this.setSelected(true);\n  }\n\n  setSelected(selected) {\n    this.setProperty('selected', selected);\n  }\n\n  _renderSelected() {\n    this.$fieldContainer.toggleClass('checked', this.selected);\n    this.$field.toggleClass('checked', this.selected);\n  }\n\n  setTabbable(tabbable) {\n    if (this.rendered) {\n      this.$field.setTabbable(tabbable && !Device.get().supportsOnlyTouch());\n    }\n  }\n\n  isTabbable() {\n    return this.rendered && this.$field.isTabbable();\n  }\n\n  _renderIconId() {\n    super._renderIconId();\n    var $icon = this.get$Icon();\n    if ($icon.length > 0) {\n      $icon.insertAfter(this.$radioButton);\n    }\n  }\n\n  /**\n   * @override Button.js\n   */\n  doAction() {\n    if (!this.enabledComputed || !this.visible) {\n      return false;\n    }\n    // Since RadioButton extends Button, doAction should do something useful because it may be called (and actually is by ButtonKeyStroke)\n    this.select();\n    return true;\n  }\n\n  _onMouseDown(event) {\n    if (!this.enabledComputed) {\n      return;\n    }\n    var onIcon = this.get$Icon().is(event.target),\n      onButton = this.$radioButton.is(event.target),\n      onLabel = this.$buttonLabel.isOrHas(event.target); // isOrHas is required for HTML enabled labels with nested elements\n    if (!onButton && !onLabel && !onIcon) {\n      return;\n    }\n    this.select();\n    if (this.focusWhenSelected && (onLabel || onIcon)) {\n      this.focusAndPreventDefault(event);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}