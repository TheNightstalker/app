{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Button, FormFieldTile, NullLayout, strings, tooltips } from '../../../index';\n\nvar TileButton = /*#__PURE__*/function (_Button) {\n  _inherits(TileButton, _Button);\n\n  var _super = _createSuper(TileButton);\n\n  function TileButton() {\n    var _this;\n\n    _classCallCheck(this, TileButton);\n\n    _this = _super.call(this);\n    _this.processButton = false;\n    return _this;\n  }\n\n  _createClass(TileButton, [{\n    key: \"_render\",\n    value: function _render() {\n      if (this.parent.displayStyle !== FormFieldTile.DisplayStyle.DASHBOARD) {\n        _get(_getPrototypeOf(TileButton.prototype), \"_render\", this).call(this);\n\n        return;\n      }\n\n      var $button = this.$parent.makeDiv();\n      this.$buttonLabel = $button.appendSpan('label');\n      this.addContainer(this.$parent, 'tile-button');\n      this.addField($button); // Disable inner form field layout, because the tile button should always occupy\n      // the entire container area.\n\n      this.htmlComp.setLayout(new NullLayout());\n      this.$container.on('click', this._onClick.bind(this)).unfocusable();\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.$iconContainer = null;\n\n      _get(_getPrototypeOf(TileButton.prototype), \"_remove\", this).call(this);\n    }\n  }, {\n    key: \"_renderIconId\",\n    value: function _renderIconId() {\n      if (this.parent.displayStyle !== FormFieldTile.DisplayStyle.DASHBOARD) {\n        _get(_getPrototypeOf(TileButton.prototype), \"_renderIconId\", this).call(this);\n\n        return;\n      }\n\n      this.$field.removeClass('with-icon without-icon');\n\n      if (this.iconId) {\n        if (!this.$iconContainer) {\n          this.$iconContainer = this.$field.prependDiv('icon-container');\n        }\n\n        this.$iconContainer.icon(this.iconId);\n        this.$field.addClass('with-icon');\n      } else {\n        if (this.$iconContainer) {\n          this.$iconContainer.remove();\n          this.$iconContainer = null;\n        }\n\n        this.$field.addClass('without-icon');\n      } // Invalidate layout because button may now be longer or shorter\n\n\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"_renderTooltipText\",\n    value: function _renderTooltipText() {\n      // Because tile buttons don't have a visible status, display the tooltip text as normal \"hover\" tooltip\n      if (strings.hasText(this.tooltipText)) {\n        tooltips.install(this.$container, {\n          parent: this,\n          text: this.tooltipText\n        });\n      } else {\n        tooltips.uninstall(this.$container);\n      }\n    }\n  }]);\n\n  return TileButton;\n}(Button);\n\nexport { TileButton as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/tile/fields/button/TileButton.js"],"names":["Button","FormFieldTile","NullLayout","strings","tooltips","TileButton","processButton","parent","displayStyle","DisplayStyle","DASHBOARD","$button","$parent","makeDiv","$buttonLabel","appendSpan","addContainer","addField","htmlComp","setLayout","$container","on","_onClick","bind","unfocusable","$iconContainer","$field","removeClass","iconId","prependDiv","icon","addClass","remove","invalidateLayoutTree","hasText","tooltipText","install","text","uninstall"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,MAAR,EAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,OAA3C,EAAoDC,QAApD,QAAmE,gBAAnE;;IAEqBC,U;;;;;AAEnB,wBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,aAAL,GAAqB,KAArB;AAFY;AAGb;;;;8BAES;AACR,UAAI,KAAKC,MAAL,CAAYC,YAAZ,KAA6BP,aAAa,CAACQ,YAAd,CAA2BC,SAA5D,EAAuE;AACrE;;AACA;AACD;;AACD,UAAIC,OAAO,GAAG,KAAKC,OAAL,CAAaC,OAAb,EAAd;AACA,WAAKC,YAAL,GAAoBH,OAAO,CAACI,UAAR,CAAmB,OAAnB,CAApB;AAEA,WAAKC,YAAL,CAAkB,KAAKJ,OAAvB,EAAgC,aAAhC;AACA,WAAKK,QAAL,CAAcN,OAAd,EATQ,CAWR;AACA;;AACA,WAAKO,QAAL,CAAcC,SAAd,CAAwB,IAAIjB,UAAJ,EAAxB;AAEA,WAAKkB,UAAL,CACGC,EADH,CACM,OADN,EACe,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CADf,EAEGC,WAFH;AAGD;;;8BAES;AACR,WAAKC,cAAL,GAAsB,IAAtB;;AACA;AACD;;;oCAEe;AACd,UAAI,KAAKlB,MAAL,CAAYC,YAAZ,KAA6BP,aAAa,CAACQ,YAAd,CAA2BC,SAA5D,EAAuE;AACrE;;AACA;AACD;;AACD,WAAKgB,MAAL,CAAYC,WAAZ,CAAwB,wBAAxB;;AACA,UAAI,KAAKC,MAAT,EAAiB;AACf,YAAI,CAAC,KAAKH,cAAV,EAA0B;AACxB,eAAKA,cAAL,GAAsB,KAAKC,MAAL,CAAYG,UAAZ,CAAuB,gBAAvB,CAAtB;AACD;;AACD,aAAKJ,cAAL,CAAoBK,IAApB,CAAyB,KAAKF,MAA9B;AACA,aAAKF,MAAL,CAAYK,QAAZ,CAAqB,WAArB;AACD,OAND,MAMO;AACL,YAAI,KAAKN,cAAT,EAAyB;AACvB,eAAKA,cAAL,CAAoBO,MAApB;AACA,eAAKP,cAAL,GAAsB,IAAtB;AACD;;AACD,aAAKC,MAAL,CAAYK,QAAZ,CAAqB,cAArB;AACD,OAlBa,CAmBd;;;AACA,WAAKE,oBAAL;AACD;;;yCAEoB;AACnB;AACA,UAAI9B,OAAO,CAAC+B,OAAR,CAAgB,KAAKC,WAArB,CAAJ,EAAuC;AACrC/B,QAAAA,QAAQ,CAACgC,OAAT,CAAiB,KAAKhB,UAAtB,EAAkC;AAChCb,UAAAA,MAAM,EAAE,IADwB;AAEhC8B,UAAAA,IAAI,EAAE,KAAKF;AAFqB,SAAlC;AAID,OALD,MAKO;AACL/B,QAAAA,QAAQ,CAACkC,SAAT,CAAmB,KAAKlB,UAAxB;AACD;AACF;;;;EAjEqCpB,M;;SAAnBK,U","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Button, FormFieldTile, NullLayout, strings, tooltips} from '../../../index';\n\nexport default class TileButton extends Button {\n\n  constructor() {\n    super();\n    this.processButton = false;\n  }\n\n  _render() {\n    if (this.parent.displayStyle !== FormFieldTile.DisplayStyle.DASHBOARD) {\n      super._render();\n      return;\n    }\n    var $button = this.$parent.makeDiv();\n    this.$buttonLabel = $button.appendSpan('label');\n\n    this.addContainer(this.$parent, 'tile-button');\n    this.addField($button);\n\n    // Disable inner form field layout, because the tile button should always occupy\n    // the entire container area.\n    this.htmlComp.setLayout(new NullLayout());\n\n    this.$container\n      .on('click', this._onClick.bind(this))\n      .unfocusable();\n  }\n\n  _remove() {\n    this.$iconContainer = null;\n    super._remove();\n  }\n\n  _renderIconId() {\n    if (this.parent.displayStyle !== FormFieldTile.DisplayStyle.DASHBOARD) {\n      super._renderIconId();\n      return;\n    }\n    this.$field.removeClass('with-icon without-icon');\n    if (this.iconId) {\n      if (!this.$iconContainer) {\n        this.$iconContainer = this.$field.prependDiv('icon-container');\n      }\n      this.$iconContainer.icon(this.iconId);\n      this.$field.addClass('with-icon');\n    } else {\n      if (this.$iconContainer) {\n        this.$iconContainer.remove();\n        this.$iconContainer = null;\n      }\n      this.$field.addClass('without-icon');\n    }\n    // Invalidate layout because button may now be longer or shorter\n    this.invalidateLayoutTree();\n  }\n\n  _renderTooltipText() {\n    // Because tile buttons don't have a visible status, display the tooltip text as normal \"hover\" tooltip\n    if (strings.hasText(this.tooltipText)) {\n      tooltips.install(this.$container, {\n        parent: this,\n        text: this.tooltipText\n      });\n    } else {\n      tooltips.uninstall(this.$container);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}