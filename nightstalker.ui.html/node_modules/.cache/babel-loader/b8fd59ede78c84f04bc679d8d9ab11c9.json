{"ast":null,"code":"/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { scout } from '../index';\nexport function get(name, doc) {\n  doc = doc || document;\n  var prefix = name + '=';\n  var cookies = doc.cookie.split(';');\n\n  for (var i = 0; i < cookies.length; i++) {\n    var cookie = cookies[i].trim();\n\n    if (cookie.indexOf(prefix) === 0) {\n      return cookie.substring(prefix.length);\n    }\n  }\n\n  return null;\n}\n/**\n * Sets a cookie.\n *\n * @param maxAge If specified the cookie will be persistent, otherwise it will be a session cookie.\n */\n\nexport function set(name, value, maxAge, path) {\n  value = scout.nvl(value, '');\n  maxAge = scout.nvl(maxAge, -1);\n  var cookie = name + '=' + value;\n\n  if (maxAge > -1) {\n    var expires = new Date();\n    expires.setTime(expires.getTime() + maxAge * 1000);\n    cookie += ';max-age=' + maxAge + ';expires=' + expires;\n  }\n\n  if (path) {\n    cookie += ';path=' + path;\n  }\n\n  document.cookie = cookie; // Does not override existing cookies with a different name\n}\nexport default {\n  get: get,\n  set: set\n};","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/util/cookies.js"],"names":["scout","get","name","doc","document","prefix","cookies","cookie","split","i","length","trim","indexOf","substring","set","value","maxAge","path","nvl","expires","Date","setTime","getTime"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,KAAR,QAAoB,UAApB;AAEA,OAAO,SAASC,GAAT,CAAaC,IAAb,EAAmBC,GAAnB,EAAwB;AAC7BA,EAAAA,GAAG,GAAGA,GAAG,IAAIC,QAAb;AACA,MAAIC,MAAM,GAAGH,IAAI,GAAG,GAApB;AACA,MAAII,OAAO,GAAGH,GAAG,CAACI,MAAJ,CAAWC,KAAX,CAAiB,GAAjB,CAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAIF,MAAM,GAAGD,OAAO,CAACG,CAAD,CAAP,CAAWE,IAAX,EAAb;;AACA,QAAIJ,MAAM,CAACK,OAAP,CAAeP,MAAf,MAA2B,CAA/B,EAAkC;AAChC,aAAOE,MAAM,CAACM,SAAP,CAAiBR,MAAM,CAACK,MAAxB,CAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,GAAT,CAAaZ,IAAb,EAAmBa,KAAnB,EAA0BC,MAA1B,EAAkCC,IAAlC,EAAwC;AAC7CF,EAAAA,KAAK,GAAGf,KAAK,CAACkB,GAAN,CAAUH,KAAV,EAAiB,EAAjB,CAAR;AACAC,EAAAA,MAAM,GAAGhB,KAAK,CAACkB,GAAN,CAAUF,MAAV,EAAkB,CAAC,CAAnB,CAAT;AAEA,MAAIT,MAAM,GAAGL,IAAI,GAAG,GAAP,GAAaa,KAA1B;;AACA,MAAIC,MAAM,GAAG,CAAC,CAAd,EAAiB;AACf,QAAIG,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACAD,IAAAA,OAAO,CAACE,OAAR,CAAgBF,OAAO,CAACG,OAAR,KAAoBN,MAAM,GAAG,IAA7C;AACAT,IAAAA,MAAM,IAAI,cAAcS,MAAd,GAAuB,WAAvB,GAAqCG,OAA/C;AACD;;AACD,MAAIF,IAAJ,EAAU;AACRV,IAAAA,MAAM,IAAI,WAAWU,IAArB;AACD;;AACDb,EAAAA,QAAQ,CAACG,MAAT,GAAkBA,MAAlB,CAb6C,CAanB;AAC3B;AAED,eAAe;AACbN,EAAAA,GAAG,EAAHA,GADa;AAEba,EAAAA,GAAG,EAAHA;AAFa,CAAf","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {scout} from '../index';\n\nexport function get(name, doc) {\n  doc = doc || document;\n  var prefix = name + '=';\n  var cookies = doc.cookie.split(';');\n  for (var i = 0; i < cookies.length; i++) {\n    var cookie = cookies[i].trim();\n    if (cookie.indexOf(prefix) === 0) {\n      return cookie.substring(prefix.length);\n    }\n  }\n  return null;\n}\n\n/**\n * Sets a cookie.\n *\n * @param maxAge If specified the cookie will be persistent, otherwise it will be a session cookie.\n */\nexport function set(name, value, maxAge, path) {\n  value = scout.nvl(value, '');\n  maxAge = scout.nvl(maxAge, -1);\n\n  var cookie = name + '=' + value;\n  if (maxAge > -1) {\n    var expires = new Date();\n    expires.setTime(expires.getTime() + maxAge * 1000);\n    cookie += ';max-age=' + maxAge + ';expires=' + expires;\n  }\n  if (path) {\n    cookie += ';path=' + path;\n  }\n  document.cookie = cookie; // Does not override existing cookies with a different name\n}\n\nexport default {\n  get,\n  set\n};\n"]},"metadata":{},"sourceType":"module"}