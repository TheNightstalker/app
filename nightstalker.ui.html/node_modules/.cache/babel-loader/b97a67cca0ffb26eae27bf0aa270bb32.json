{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { codes, scout, texts, TreeVisitResult } from '../index';\n\nvar Code = /*#__PURE__*/function () {\n  function Code() {\n    _classCallCheck(this, Code);\n\n    this.active;\n    this.id;\n    this.parent;\n    this.children = [];\n    this.sortCode;\n  }\n\n  _createClass(Code, [{\n    key: \"init\",\n    value: function init(model) {\n      scout.assertParameter('id', model.id);\n      this.active = model.active;\n      this.id = model.id;\n      this.sortCode = model.sortCode;\n      this._text = model.text;\n      this.modelClass = model.modelClass; // If model contains a text map, generate a text key and add the texts to the text maps of the session\n\n      if (model.texts) {\n        if (this._text) {\n          throw new Error('Either set texts or text property, not both.');\n        }\n\n        var key = codes.registerTexts(this, model.texts); // Convert to ${textKey:key} so that text() may resolve it\n\n        this._text = texts.buildKey(key);\n      }\n    }\n    /**\n     * @param vararg the language tag or the locale (object with a property languageTag) to load the text for.\n     */\n\n  }, {\n    key: \"text\",\n    value: function text(vararg) {\n      var languageTag = vararg;\n\n      if (_typeof(vararg) === 'object') {\n        languageTag = vararg.languageTag;\n      }\n\n      return texts.resolveText(this._text, languageTag);\n    }\n  }, {\n    key: \"visitChildren\",\n    value: function visitChildren(visitor) {\n      for (var i = 0; i < this.children.length; i++) {\n        var child = this.children[i];\n        var visitResult = visitor(child);\n\n        if (visitResult === true || visitResult === TreeVisitResult.TERMINATE) {\n          return TreeVisitResult.TERMINATE;\n        }\n\n        if (visitResult !== TreeVisitResult.SKIP_SUBTREE) {\n          visitResult = child.visitChildren(visitor);\n\n          if (visitResult === true || visitResult === TreeVisitResult.TERMINATE) {\n            return TreeVisitResult.TERMINATE;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Code;\n}();\n\nexport { Code as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/code/Code.js"],"names":["codes","scout","texts","TreeVisitResult","Code","active","id","parent","children","sortCode","model","assertParameter","_text","text","modelClass","Error","key","registerTexts","buildKey","vararg","languageTag","resolveText","visitor","i","length","child","visitResult","TERMINATE","SKIP_SUBTREE","visitChildren"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,KAAR,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,eAA7B,QAAmD,UAAnD;;IAEqBC,I;AAEnB,kBAAc;AAAA;;AACZ,SAAKC,MAAL;AACA,SAAKC,EAAL;AACA,SAAKC,MAAL;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,QAAL;AACD;;;;yBAEIC,K,EAAO;AACVT,MAAAA,KAAK,CAACU,eAAN,CAAsB,IAAtB,EAA4BD,KAAK,CAACJ,EAAlC;AAEA,WAAKD,MAAL,GAAcK,KAAK,CAACL,MAApB;AACA,WAAKC,EAAL,GAAUI,KAAK,CAACJ,EAAhB;AACA,WAAKG,QAAL,GAAgBC,KAAK,CAACD,QAAtB;AACA,WAAKG,KAAL,GAAaF,KAAK,CAACG,IAAnB;AACA,WAAKC,UAAL,GAAkBJ,KAAK,CAACI,UAAxB,CAPU,CASV;;AACA,UAAIJ,KAAK,CAACR,KAAV,EAAiB;AACf,YAAI,KAAKU,KAAT,EAAgB;AACd,gBAAM,IAAIG,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACD,YAAIC,GAAG,GAAGhB,KAAK,CAACiB,aAAN,CAAoB,IAApB,EAA0BP,KAAK,CAACR,KAAhC,CAAV,CAJe,CAKf;;AACA,aAAKU,KAAL,GAAaV,KAAK,CAACgB,QAAN,CAAeF,GAAf,CAAb;AACD;AACF;AAED;AACF;AACA;;;;yBACOG,M,EAAQ;AACX,UAAIC,WAAW,GAAGD,MAAlB;;AACA,UAAI,QAAOA,MAAP,MAAkB,QAAtB,EAAgC;AAC9BC,QAAAA,WAAW,GAAGD,MAAM,CAACC,WAArB;AACD;;AACD,aAAOlB,KAAK,CAACmB,WAAN,CAAkB,KAAKT,KAAvB,EAA8BQ,WAA9B,CAAP;AACD;;;kCAEaE,O,EAAS;AACrB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKf,QAAL,CAAcgB,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,YAAIE,KAAK,GAAG,KAAKjB,QAAL,CAAce,CAAd,CAAZ;AACA,YAAIG,WAAW,GAAGJ,OAAO,CAACG,KAAD,CAAzB;;AACA,YAAIC,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAKvB,eAAe,CAACwB,SAA5D,EAAuE;AACrE,iBAAOxB,eAAe,CAACwB,SAAvB;AACD;;AACD,YAAID,WAAW,KAAKvB,eAAe,CAACyB,YAApC,EAAkD;AAChDF,UAAAA,WAAW,GAAGD,KAAK,CAACI,aAAN,CAAoBP,OAApB,CAAd;;AACA,cAAII,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAKvB,eAAe,CAACwB,SAA5D,EAAuE;AACrE,mBAAOxB,eAAe,CAACwB,SAAvB;AACD;AACF;AACF;AACF;;;;;;SAvDkBvB,I","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {codes, scout, texts, TreeVisitResult} from '../index';\n\nexport default class Code {\n\n  constructor() {\n    this.active;\n    this.id;\n    this.parent;\n    this.children = [];\n    this.sortCode;\n  }\n\n  init(model) {\n    scout.assertParameter('id', model.id);\n\n    this.active = model.active;\n    this.id = model.id;\n    this.sortCode = model.sortCode;\n    this._text = model.text;\n    this.modelClass = model.modelClass;\n\n    // If model contains a text map, generate a text key and add the texts to the text maps of the session\n    if (model.texts) {\n      if (this._text) {\n        throw new Error('Either set texts or text property, not both.');\n      }\n      var key = codes.registerTexts(this, model.texts);\n      // Convert to ${textKey:key} so that text() may resolve it\n      this._text = texts.buildKey(key);\n    }\n  }\n\n  /**\n   * @param vararg the language tag or the locale (object with a property languageTag) to load the text for.\n   */\n  text(vararg) {\n    var languageTag = vararg;\n    if (typeof vararg === 'object') {\n      languageTag = vararg.languageTag;\n    }\n    return texts.resolveText(this._text, languageTag);\n  }\n\n  visitChildren(visitor) {\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      var visitResult = visitor(child);\n      if (visitResult === true || visitResult === TreeVisitResult.TERMINATE) {\n        return TreeVisitResult.TERMINATE;\n      }\n      if (visitResult !== TreeVisitResult.SKIP_SUBTREE) {\n        visitResult = child.visitChildren(visitor);\n        if (visitResult === true || visitResult === TreeVisitResult.TERMINATE) {\n          return TreeVisitResult.TERMINATE;\n        }\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}