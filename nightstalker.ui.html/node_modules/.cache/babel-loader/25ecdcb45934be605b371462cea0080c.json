{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { GridData, LogicalGridMatrix, LogicalGridMatrixCell, LogicalGridMatrixCursor } from '../../../index';\n\nvar HorizontalGridMatrix = /*#__PURE__*/function (_LogicalGridMatrix) {\n  _inherits(HorizontalGridMatrix, _LogicalGridMatrix);\n\n  var _super = _createSuper(HorizontalGridMatrix);\n\n  function HorizontalGridMatrix(columnCount) {\n    var _this;\n\n    _classCallCheck(this, HorizontalGridMatrix);\n\n    _this = _super.call(this, new LogicalGridMatrixCursor(0, 0, columnCount, Number.MAX_SAFE_INTEGER, LogicalGridMatrixCursor.HORIZONTAL));\n    _this.rowCount = 0;\n    return _this;\n  }\n\n  _createClass(HorizontalGridMatrix, [{\n    key: \"computeGridData\",\n    value: function computeGridData(widgets) {\n      widgets.forEach(function (widget) {\n        var hints = GridData.createFromHints(widget, this.getColumnCount());\n        var gridData = new GridData(hints);\n        gridData.w = Math.min(hints.w, this.getColumnCount());\n\n        this._add(widget, hints, gridData);\n\n        widget.gridData = gridData;\n      }.bind(this));\n      this._cursor.rowCount = this.rowCount;\n      return true;\n    }\n  }, {\n    key: \"_add\",\n    value: function _add(widget, hints, data) {\n      this._nextFree(data.w, data.h);\n\n      var currentIndex = this._cursor.currentIndex();\n\n      if (data.w <= this.getColumnCount() - currentIndex.x) {\n        data.x = currentIndex.x;\n        data.y = currentIndex.y; // add widget\n\n        for (var xx = currentIndex.x; xx < currentIndex.x + data.w; xx++) {\n          for (var yy = currentIndex.y; yy < currentIndex.y + data.h; yy++) {\n            this._setAssignedCell({\n              x: xx,\n              y: yy\n            }, new LogicalGridMatrixCell(widget, data));\n          }\n        }\n\n        this.rowCount = currentIndex.y + data.h;\n      } else {\n        // add dummy cell\n        this._setAssignedCell(this._cursor.currentIndex(), new LogicalGridMatrixCell());\n\n        this._add(widget, hints, data);\n      }\n    }\n  }]);\n\n  return HorizontalGridMatrix;\n}(LogicalGridMatrix);\n\nexport { HorizontalGridMatrix as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/layout/logicalgrid/matrix/HorizontalGridMatrix.js"],"names":["GridData","LogicalGridMatrix","LogicalGridMatrixCell","LogicalGridMatrixCursor","HorizontalGridMatrix","columnCount","Number","MAX_SAFE_INTEGER","HORIZONTAL","rowCount","widgets","forEach","widget","hints","createFromHints","getColumnCount","gridData","w","Math","min","_add","bind","_cursor","data","_nextFree","h","currentIndex","x","y","xx","yy","_setAssignedCell"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,QAAR,EAAkBC,iBAAlB,EAAqCC,qBAArC,EAA4DC,uBAA5D,QAA0F,gBAA1F;;IAEqBC,oB;;;;;AAEnB,gCAAYC,WAAZ,EAAyB;AAAA;;AAAA;;AACvB,8BAAM,IAAIF,uBAAJ,CAA4B,CAA5B,EAA+B,CAA/B,EAAkCE,WAAlC,EAA+CC,MAAM,CAACC,gBAAtD,EAAwEJ,uBAAuB,CAACK,UAAhG,CAAN;AAEA,UAAKC,QAAL,GAAgB,CAAhB;AAHuB;AAIxB;;;;oCAEeC,O,EAAS;AACvBA,MAAAA,OAAO,CAACC,OAAR,CAAgB,UAASC,MAAT,EAAiB;AAC/B,YAAIC,KAAK,GAAGb,QAAQ,CAACc,eAAT,CAAyBF,MAAzB,EAAiC,KAAKG,cAAL,EAAjC,CAAZ;AACA,YAAIC,QAAQ,GAAG,IAAIhB,QAAJ,CAAaa,KAAb,CAAf;AACAG,QAAAA,QAAQ,CAACC,CAAT,GAAaC,IAAI,CAACC,GAAL,CAASN,KAAK,CAACI,CAAf,EAAkB,KAAKF,cAAL,EAAlB,CAAb;;AACA,aAAKK,IAAL,CAAUR,MAAV,EAAkBC,KAAlB,EAAyBG,QAAzB;;AACAJ,QAAAA,MAAM,CAACI,QAAP,GAAkBA,QAAlB;AACD,OANe,CAMdK,IANc,CAMT,IANS,CAAhB;AAOA,WAAKC,OAAL,CAAab,QAAb,GAAwB,KAAKA,QAA7B;AACA,aAAO,IAAP;AACD;;;yBAEIG,M,EAAQC,K,EAAOU,I,EAAM;AACxB,WAAKC,SAAL,CAAeD,IAAI,CAACN,CAApB,EAAuBM,IAAI,CAACE,CAA5B;;AACA,UAAIC,YAAY,GAAG,KAAKJ,OAAL,CAAaI,YAAb,EAAnB;;AACA,UAAIH,IAAI,CAACN,CAAL,IAAW,KAAKF,cAAL,KAAwBW,YAAY,CAACC,CAApD,EAAwD;AACtDJ,QAAAA,IAAI,CAACI,CAAL,GAASD,YAAY,CAACC,CAAtB;AACAJ,QAAAA,IAAI,CAACK,CAAL,GAASF,YAAY,CAACE,CAAtB,CAFsD,CAGtD;;AACA,aAAK,IAAIC,EAAE,GAAGH,YAAY,CAACC,CAA3B,EAA8BE,EAAE,GAAGH,YAAY,CAACC,CAAb,GAAiBJ,IAAI,CAACN,CAAzD,EAA4DY,EAAE,EAA9D,EAAkE;AAChE,eAAK,IAAIC,EAAE,GAAGJ,YAAY,CAACE,CAA3B,EAA8BE,EAAE,GAAGJ,YAAY,CAACE,CAAb,GAAiBL,IAAI,CAACE,CAAzD,EAA4DK,EAAE,EAA9D,EAAkE;AAChE,iBAAKC,gBAAL,CAAsB;AACpBJ,cAAAA,CAAC,EAAEE,EADiB;AAEpBD,cAAAA,CAAC,EAAEE;AAFiB,aAAtB,EAGG,IAAI5B,qBAAJ,CAA0BU,MAA1B,EAAkCW,IAAlC,CAHH;AAID;AACF;;AACD,aAAKd,QAAL,GAAgBiB,YAAY,CAACE,CAAb,GAAiBL,IAAI,CAACE,CAAtC;AACD,OAbD,MAaO;AACL;AACA,aAAKM,gBAAL,CAAsB,KAAKT,OAAL,CAAaI,YAAb,EAAtB,EAAmD,IAAIxB,qBAAJ,EAAnD;;AACA,aAAKkB,IAAL,CAAUR,MAAV,EAAkBC,KAAlB,EAAyBU,IAAzB;AACD;AACF;;;;EAzC+CtB,iB;;SAA7BG,oB","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {GridData, LogicalGridMatrix, LogicalGridMatrixCell, LogicalGridMatrixCursor} from '../../../index';\n\nexport default class HorizontalGridMatrix extends LogicalGridMatrix {\n\n  constructor(columnCount) {\n    super(new LogicalGridMatrixCursor(0, 0, columnCount, Number.MAX_SAFE_INTEGER, LogicalGridMatrixCursor.HORIZONTAL));\n\n    this.rowCount = 0;\n  }\n\n  computeGridData(widgets) {\n    widgets.forEach(function(widget) {\n      var hints = GridData.createFromHints(widget, this.getColumnCount());\n      var gridData = new GridData(hints);\n      gridData.w = Math.min(hints.w, this.getColumnCount());\n      this._add(widget, hints, gridData);\n      widget.gridData = gridData;\n    }.bind(this));\n    this._cursor.rowCount = this.rowCount;\n    return true;\n  }\n\n  _add(widget, hints, data) {\n    this._nextFree(data.w, data.h);\n    var currentIndex = this._cursor.currentIndex();\n    if (data.w <= (this.getColumnCount() - currentIndex.x)) {\n      data.x = currentIndex.x;\n      data.y = currentIndex.y;\n      // add widget\n      for (var xx = currentIndex.x; xx < currentIndex.x + data.w; xx++) {\n        for (var yy = currentIndex.y; yy < currentIndex.y + data.h; yy++) {\n          this._setAssignedCell({\n            x: xx,\n            y: yy\n          }, new LogicalGridMatrixCell(widget, data));\n        }\n      }\n      this.rowCount = currentIndex.y + data.h;\n    } else {\n      // add dummy cell\n      this._setAssignedCell(this._cursor.currentIndex(), new LogicalGridMatrixCell());\n      this._add(widget, hints, data);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}