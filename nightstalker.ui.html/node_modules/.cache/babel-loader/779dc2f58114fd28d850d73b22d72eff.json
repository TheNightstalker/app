{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Device, objects } from '../../index';\nimport $ from 'jquery';\n/**\n * Text comparator, used to compare strings with support for internationalization (i18n).\n * The collator object is only installed once.\n */\n\nvar TEXT = {\n  collator: null,\n  installed: false,\n  install: function install(session) {\n    if (this.installed) {\n      return !!this.collator;\n    } // set static collator variable once\n\n\n    if (Device.get().supportsInternationalization()) {\n      this.collator = new window.Intl.Collator(session.locale.languageTag);\n      $.log.isInfoEnabled() && $.log.info('(comparators.TEXT#install) Browser supports i18n - installed Intl.Collator, can sort in Browser');\n    } else {\n      $.log.isInfoEnabled() && $.log.info('(comparators.TEXT#install) Browser doesn\\'t support i18n. Must sort on server');\n    }\n\n    this.installed = true;\n    return !!this.collator;\n  },\n  compare: function compare(valueA, valueB) {\n    if (!valueA && !valueB) {\n      return 0;\n    }\n\n    if (!valueA) {\n      return -1;\n    }\n\n    if (!valueB) {\n      return 1;\n    }\n\n    if (!this.collator) {\n      // Fallback for browsers that don't support internationalization. This is only necessary\n      // for callers that call this method without check for internationalization support\n      // first (e.g. TableMatrix).\n      return valueA < valueB ? -1 : valueA > valueB ? 1 : 0;\n    } // We don't check the installed flag here. It's a program error when we come here\n    // and the collator is not set. Either we forgot to call install() or we've called\n    // install but the browser does not support i18n.\n\n\n    return this.collator.compare(valueA, valueB);\n  },\n  compareIgnoreCase: function compareIgnoreCase(valueA, valueB) {\n    if (!valueA) {\n      valueA = null;\n    }\n\n    if (!valueB) {\n      valueB = null;\n    }\n\n    if (valueA === valueB) {\n      return 0;\n    }\n\n    if (valueA === null) {\n      return -1;\n    }\n\n    if (valueB === null) {\n      return 1;\n    }\n\n    return this.compare(valueA.toLowerCase(), valueB.toLowerCase());\n  }\n};\n/**\n * Numeric comparator, used to compare numeric values. Used for numbers, dates, etc.\n */\n\nvar NUMERIC = {\n  install: function install(session) {\n    // NOP\n    return true;\n  },\n  compare: function compare(valueA, valueB) {\n    if (objects.isNullOrUndefined(valueA) && objects.isNullOrUndefined(valueB)) {\n      return 0;\n    }\n\n    if (objects.isNullOrUndefined(valueA)) {\n      return -1;\n    }\n\n    if (objects.isNullOrUndefined(valueB)) {\n      return 1;\n    }\n\n    if (valueA < valueB) {\n      return -1;\n    } else if (valueA > valueB) {\n      return 1;\n    }\n\n    return 0;\n  }\n};\n/**\n * Alphanumeric comparator.\n */\n\nvar ALPHANUMERIC = {\n  collator: null,\n  installed: false,\n  install: function install(session) {\n    TEXT.install(session);\n    this.collator = TEXT.collator;\n    return !!this.collator && NUMERIC.install(session);\n  },\n  compare: function compare(valueA, valueB) {\n    return this._compare(valueA, valueB, false);\n  },\n  compareIgnoreCase: function compareIgnoreCase(valueA, valueB) {\n    return this._compare(valueA, valueB, true);\n  },\n  _compare: function _compare(valueA, valueB, ignoreCase) {\n    if (!valueA && !valueB) {\n      return 0;\n    }\n\n    if (!valueA) {\n      return -1;\n    }\n\n    if (!valueB) {\n      return 1;\n    }\n\n    var pattern = '(([0-9]+)|([^0-9]+))';\n    var regexp1 = new RegExp(pattern, 'g');\n    var regexp2 = new RegExp(pattern, 'g');\n    var found1 = regexp1.exec(valueA);\n    var found2 = regexp2.exec(valueB);\n\n    while (found1 && found2) {\n      var n1 = parseInt(found1[1], 0);\n      var n2 = parseInt(found2[1], 0);\n\n      if (!isNaN(n1) && !isNaN(n2)) {\n        var numericResult = NUMERIC.compare(n1, n2);\n\n        if (numericResult !== 0) {\n          return numericResult;\n        }\n      } else {\n        var textResult = ignoreCase ? TEXT.compareIgnoreCase(found1[1], found2[1]) : TEXT.compare(found1[1], found2[1]);\n\n        if (textResult !== 0) {\n          return textResult;\n        }\n      }\n\n      found1 = regexp1.exec(valueA);\n      found2 = regexp2.exec(valueB);\n    }\n\n    if (!found1 && !found2) {\n      return 0;\n    }\n\n    if (!found1) {\n      return -1;\n    }\n\n    return 1;\n  }\n};\nexport default {\n  ALPHANUMERIC: ALPHANUMERIC,\n  NUMERIC: NUMERIC,\n  TEXT: TEXT\n};","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/table/columns/comparators.js"],"names":["Device","objects","$","TEXT","collator","installed","install","session","get","supportsInternationalization","window","Intl","Collator","locale","languageTag","log","isInfoEnabled","info","compare","valueA","valueB","compareIgnoreCase","toLowerCase","NUMERIC","isNullOrUndefined","ALPHANUMERIC","_compare","ignoreCase","pattern","regexp1","RegExp","regexp2","found1","exec","found2","n1","parseInt","n2","isNaN","numericResult","textResult"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Device, objects} from '../../index';\nimport $ from 'jquery';\n\n/**\n * Text comparator, used to compare strings with support for internationalization (i18n).\n * The collator object is only installed once.\n */\nconst TEXT = {\n  collator: null,\n  installed: false,\n  install: function(session) {\n    if (this.installed) {\n      return !!this.collator;\n    }\n\n    // set static collator variable once\n    if (Device.get().supportsInternationalization()) {\n      this.collator = new window.Intl.Collator(session.locale.languageTag);\n      $.log.isInfoEnabled() && $.log.info('(comparators.TEXT#install) Browser supports i18n - installed Intl.Collator, can sort in Browser');\n    } else {\n      $.log.isInfoEnabled() && $.log.info('(comparators.TEXT#install) Browser doesn\\'t support i18n. Must sort on server');\n    }\n\n    this.installed = true;\n    return !!this.collator;\n  },\n  compare: function(valueA, valueB) {\n    if (!valueA && !valueB) {\n      return 0;\n    }\n    if (!valueA) {\n      return -1;\n    }\n    if (!valueB) {\n      return 1;\n    }\n\n    if (!this.collator) {\n      // Fallback for browsers that don't support internationalization. This is only necessary\n      // for callers that call this method without check for internationalization support\n      // first (e.g. TableMatrix).\n      return (valueA < valueB ? -1 : ((valueA > valueB) ? 1 : 0));\n    }\n    // We don't check the installed flag here. It's a program error when we come here\n    // and the collator is not set. Either we forgot to call install() or we've called\n    // install but the browser does not support i18n.\n    return this.collator.compare(valueA, valueB);\n  },\n  compareIgnoreCase: function(valueA, valueB) {\n    if (!valueA) {\n      valueA = null;\n    }\n    if (!valueB) {\n      valueB = null;\n    }\n    if (valueA === valueB) {\n      return 0;\n    }\n    if (valueA === null) {\n      return -1;\n    }\n    if (valueB === null) {\n      return 1;\n    }\n    return this.compare(valueA.toLowerCase(), valueB.toLowerCase());\n  }\n};\n\n/**\n * Numeric comparator, used to compare numeric values. Used for numbers, dates, etc.\n */\nconst NUMERIC = {\n  install: function(session) {\n    // NOP\n    return true;\n  },\n  compare: function(valueA, valueB) {\n    if (objects.isNullOrUndefined(valueA) && objects.isNullOrUndefined(valueB)) {\n      return 0;\n    }\n    if (objects.isNullOrUndefined(valueA)) {\n      return -1;\n    }\n    if (objects.isNullOrUndefined(valueB)) {\n      return 1;\n    }\n\n    if (valueA < valueB) {\n      return -1;\n    } else if (valueA > valueB) {\n      return 1;\n    }\n    return 0;\n  }\n};\n\n/**\n * Alphanumeric comparator.\n */\nconst ALPHANUMERIC = {\n  collator: null,\n  installed: false,\n  install: function(session) {\n    TEXT.install(session);\n    this.collator = TEXT.collator;\n    return !!this.collator && NUMERIC.install(session);\n  },\n  compare: function(valueA, valueB) {\n    return this._compare(valueA, valueB, false);\n  },\n  compareIgnoreCase: function(valueA, valueB) {\n    return this._compare(valueA, valueB, true);\n  },\n  _compare: function(valueA, valueB, ignoreCase) {\n    if (!valueA && !valueB) {\n      return 0;\n    }\n    if (!valueA) {\n      return -1;\n    }\n    if (!valueB) {\n      return 1;\n    }\n\n    var pattern = '(([0-9]+)|([^0-9]+))';\n    var regexp1 = new RegExp(pattern, 'g');\n    var regexp2 = new RegExp(pattern, 'g');\n    var found1 = regexp1.exec(valueA);\n    var found2 = regexp2.exec(valueB);\n    while (found1 && found2) {\n      var n1 = parseInt(found1[1], 0);\n      var n2 = parseInt(found2[1], 0);\n      if (!isNaN(n1) && !isNaN(n2)) {\n        var numericResult = NUMERIC.compare(n1, n2);\n        if (numericResult !== 0) {\n          return numericResult;\n        }\n      } else {\n        var textResult = ignoreCase ? TEXT.compareIgnoreCase(found1[1], found2[1]) : TEXT.compare(found1[1], found2[1]);\n        if (textResult !== 0) {\n          return textResult;\n        }\n      }\n      found1 = regexp1.exec(valueA);\n      found2 = regexp2.exec(valueB);\n    }\n\n    if (!found1 && !found2) {\n      return 0;\n    }\n    if (!found1) {\n      return -1;\n    }\n    return 1;\n  }\n};\n\nexport default {\n  ALPHANUMERIC,\n  NUMERIC,\n  TEXT\n};\n"]},"metadata":{},"sourceType":"module"}