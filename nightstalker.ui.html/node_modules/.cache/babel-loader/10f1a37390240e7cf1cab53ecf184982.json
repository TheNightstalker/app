{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nvar LogicalGridMatrixCursor = /*#__PURE__*/function () {\n  function LogicalGridMatrixCursor(x, y, columnCount, rowCount, orientation) {\n    _classCallCheck(this, LogicalGridMatrixCursor);\n\n    this.startX = x;\n    this.startY = y;\n    this.columnCount = columnCount;\n    this.rowCount = rowCount;\n    this.orientation = orientation;\n    this.reset();\n  }\n\n  _createClass(LogicalGridMatrixCursor, [{\n    key: \"reset\",\n    value: function reset() {\n      this._currentIndex = {\n        x: -1,\n        y: -1\n      };\n    }\n  }, {\n    key: \"currentIndex\",\n    value: function currentIndex() {\n      return {\n        x: this._currentIndex.x,\n        y: this._currentIndex.y\n      };\n    }\n  }, {\n    key: \"increment\",\n    value: function increment() {\n      if (this._currentIndex.x < 0 || this._currentIndex.y < 0) {\n        // initial\n        this._currentIndex.x = this.startX;\n        this._currentIndex.y = this.startY;\n      } else if (this.orientation === LogicalGridMatrixCursor.HORIZONTAL) {\n        this._currentIndex.x++;\n\n        if (this._currentIndex.x >= this.startX + this.columnCount) {\n          this._currentIndex.x = this.startX;\n          this._currentIndex.y++;\n        }\n      } else {\n        // vertical\n        this._currentIndex.y++;\n\n        if (this._currentIndex.y >= this.startY + this.rowCount) {\n          this._currentIndex.y = this.startY;\n          this._currentIndex.x++;\n        }\n      }\n\n      if (this._currentIndex.x >= this.startX + this.columnCount || this._currentIndex.y >= this.startY + this.rowCount) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"decrement\",\n    value: function decrement() {\n      if (this._currentIndex.x < 0 || this._currentIndex.y < 0) {\n        return false;\n      } else if (this._currentIndex.x >= this.startX + this.columnCount || this._currentIndex.y >= this.startY + this.rowCount) {\n        this._currentIndex.x = this.startX + this.columnCount - 1;\n        this._currentIndex.y = this.startY + this.rowCount - 1;\n      } else if (this.orientation === LogicalGridMatrixCursor.HORIZONTAL) {\n        this._currentIndex.x--;\n\n        if (this._currentIndex.x < this.startX) {\n          this._currentIndex.x = this.startX + this.columnCount - 1;\n          this._currentIndex.y--;\n        }\n      } else {\n        // vertical\n        this._currentIndex.y--;\n\n        if (this._currentIndex.y < this.startY) {\n          this._currentIndex.y = this.startY + this.rowCount - 1;\n          this._currentIndex.x--;\n        }\n      }\n\n      if (this._currentIndex.x < this.startX || this._currentIndex.y < this.startY) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var builder = [];\n      builder.push('MatrixCursor [');\n      builder.push('orientation=' + this.orientation);\n      builder.push(', startX=' + this.startX);\n      builder.push(', startY=' + this.startY);\n      builder.push(', columnCount=' + this.columnCount);\n      builder.push(', currentIndex=' + this._currentIndex.x + ', ' + this._currentIndex.y);\n      builder.push(']');\n      return builder.join('');\n    }\n  }]);\n\n  return LogicalGridMatrixCursor;\n}();\n\n_defineProperty(LogicalGridMatrixCursor, \"HORIZONTAL\", 0);\n\n_defineProperty(LogicalGridMatrixCursor, \"VERTICAL\", 1);\n\nexport { LogicalGridMatrixCursor as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/layout/logicalgrid/matrix/LogicalGridMatrixCursor.js"],"names":["LogicalGridMatrixCursor","x","y","columnCount","rowCount","orientation","startX","startY","reset","_currentIndex","HORIZONTAL","builder","push","join"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class LogicalGridMatrixCursor {\n\n  constructor(x, y, columnCount, rowCount, orientation) {\n    this.startX = x;\n    this.startY = y;\n    this.columnCount = columnCount;\n    this.rowCount = rowCount;\n    this.orientation = orientation;\n\n    this.reset();\n  }\n\n  static HORIZONTAL = 0;\n  static VERTICAL = 1;\n\n  reset() {\n    this._currentIndex = {\n      x: -1,\n      y: -1\n    };\n  }\n\n  currentIndex() {\n    return {\n      x: this._currentIndex.x,\n      y: this._currentIndex.y\n    };\n  }\n\n  increment() {\n    if (this._currentIndex.x < 0 || this._currentIndex.y < 0) {\n      // initial\n      this._currentIndex.x = this.startX;\n      this._currentIndex.y = this.startY;\n    } else if (this.orientation === LogicalGridMatrixCursor.HORIZONTAL) {\n      this._currentIndex.x++;\n      if (this._currentIndex.x >= this.startX + this.columnCount) {\n        this._currentIndex.x = this.startX;\n        this._currentIndex.y++;\n      }\n    } else {\n      // vertical\n      this._currentIndex.y++;\n      if (this._currentIndex.y >= this.startY + this.rowCount) {\n        this._currentIndex.y = this.startY;\n        this._currentIndex.x++;\n      }\n    }\n    if (this._currentIndex.x >= this.startX + this.columnCount || this._currentIndex.y >= this.startY + this.rowCount) {\n      return false;\n    }\n    return true;\n  }\n\n  decrement() {\n    if (this._currentIndex.x < 0 || this._currentIndex.y < 0) {\n      return false;\n    } else if (this._currentIndex.x >= this.startX + this.columnCount || this._currentIndex.y >= this.startY + this.rowCount) {\n      this._currentIndex.x = this.startX + this.columnCount - 1;\n      this._currentIndex.y = this.startY + this.rowCount - 1;\n    } else if (this.orientation === LogicalGridMatrixCursor.HORIZONTAL) {\n      this._currentIndex.x--;\n      if (this._currentIndex.x < this.startX) {\n        this._currentIndex.x = this.startX + this.columnCount - 1;\n        this._currentIndex.y--;\n      }\n    } else {\n      // vertical\n      this._currentIndex.y--;\n      if (this._currentIndex.y < this.startY) {\n        this._currentIndex.y = this.startY + this.rowCount - 1;\n        this._currentIndex.x--;\n      }\n    }\n    if (this._currentIndex.x < this.startX || this._currentIndex.y < this.startY) {\n      return false;\n    }\n    return true;\n  }\n\n  toString() {\n    var builder = [];\n    builder.push('MatrixCursor [');\n    builder.push('orientation=' + this.orientation);\n    builder.push(', startX=' + this.startX);\n    builder.push(', startY=' + this.startY);\n    builder.push(', columnCount=' + this.columnCount);\n    builder.push(', currentIndex=' + this._currentIndex.x + ', ' + this._currentIndex.y);\n    builder.push(']');\n    return builder.join('');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}