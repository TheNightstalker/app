{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Device, scout, Widget } from '../index';\nimport $ from 'jquery';\n\nvar GlassPane = /*#__PURE__*/function (_Widget) {\n  _inherits(GlassPane, _Widget);\n\n  var _super = _createSuper(GlassPane);\n\n  function GlassPane() {\n    _classCallCheck(this, GlassPane);\n\n    return _super.call(this);\n  }\n\n  _createClass(GlassPane, [{\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent.appendDiv('glasspane').on('mousedown', this._onMouseDown.bind(this)); // This is required in touch mode, because FastClick messes up the order\n      // of mouse/click events which is especially important for TouchPopups.\n\n      if (Device.get().supportsOnlyTouch()) {\n        this.$container.addClass('needsclick');\n      }\n\n      this.$parent.addClass('glasspane-parent');\n      var cssPosition = this.$parent.css('position');\n\n      if (!scout.isOneOf(cssPosition, 'relative', 'absolute')) {\n        this.$parent.css('position', 'relative');\n      } // Register 'glassPaneTarget' in focus manager.\n\n\n      this.session.focusManager.registerGlassPaneTarget(this.$parent);\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.$parent.removeClass('glasspane-parent');\n      this.session.focusManager.unregisterGlassPaneTarget(this.$parent);\n\n      _get(_getPrototypeOf(GlassPane.prototype), \"_remove\", this).call(this);\n    }\n  }, {\n    key: \"_onMouseDown\",\n    value: function _onMouseDown(event) {\n      // Won't be executed if pointer events is set to none. But acts as safety net if pointer events are not supported or even removed by the user\n      $.suppressEvent(event);\n    }\n  }]);\n\n  return GlassPane;\n}(Widget);\n\nexport { GlassPane as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/glasspane/GlassPane.js"],"names":["Device","scout","Widget","$","GlassPane","$container","$parent","appendDiv","on","_onMouseDown","bind","get","supportsOnlyTouch","addClass","cssPosition","css","isOneOf","session","focusManager","registerGlassPaneTarget","removeClass","unregisterGlassPaneTarget","event","suppressEvent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,MAAR,EAAgBC,KAAhB,EAAuBC,MAAvB,QAAoC,UAApC;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEqBC,S;;;;;AAEnB,uBAAc;AAAA;;AAAA;AAEb;;;;8BAES;AACR,WAAKC,UAAL,GAAkB,KAAKC,OAAL,CACfC,SADe,CACL,WADK,EAEfC,EAFe,CAEZ,WAFY,EAEC,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAFD,CAAlB,CADQ,CAKR;AACA;;AACA,UAAIV,MAAM,CAACW,GAAP,GAAaC,iBAAb,EAAJ,EAAsC;AACpC,aAAKP,UAAL,CAAgBQ,QAAhB,CAAyB,YAAzB;AACD;;AAED,WAAKP,OAAL,CAAaO,QAAb,CAAsB,kBAAtB;AACA,UAAIC,WAAW,GAAG,KAAKR,OAAL,CAAaS,GAAb,CAAiB,UAAjB,CAAlB;;AACA,UAAI,CAACd,KAAK,CAACe,OAAN,CAAcF,WAAd,EAA2B,UAA3B,EAAuC,UAAvC,CAAL,EAAyD;AACvD,aAAKR,OAAL,CAAaS,GAAb,CAAiB,UAAjB,EAA6B,UAA7B;AACD,OAfO,CAiBR;;;AACA,WAAKE,OAAL,CAAaC,YAAb,CAA0BC,uBAA1B,CAAkD,KAAKb,OAAvD;AACD;;;8BAES;AACR,WAAKA,OAAL,CAAac,WAAb,CAAyB,kBAAzB;AACA,WAAKH,OAAL,CAAaC,YAAb,CAA0BG,yBAA1B,CAAoD,KAAKf,OAAzD;;AACA;AACD;;;iCAEYgB,K,EAAO;AAClB;AACAnB,MAAAA,CAAC,CAACoB,aAAF,CAAgBD,KAAhB;AACD;;;;EApCoCpB,M;;SAAlBE,S","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Device, scout, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class GlassPane extends Widget {\n\n  constructor() {\n    super();\n  }\n\n  _render() {\n    this.$container = this.$parent\n      .appendDiv('glasspane')\n      .on('mousedown', this._onMouseDown.bind(this));\n\n    // This is required in touch mode, because FastClick messes up the order\n    // of mouse/click events which is especially important for TouchPopups.\n    if (Device.get().supportsOnlyTouch()) {\n      this.$container.addClass('needsclick');\n    }\n\n    this.$parent.addClass('glasspane-parent');\n    var cssPosition = this.$parent.css('position');\n    if (!scout.isOneOf(cssPosition, 'relative', 'absolute')) {\n      this.$parent.css('position', 'relative');\n    }\n\n    // Register 'glassPaneTarget' in focus manager.\n    this.session.focusManager.registerGlassPaneTarget(this.$parent);\n  }\n\n  _remove() {\n    this.$parent.removeClass('glasspane-parent');\n    this.session.focusManager.unregisterGlassPaneTarget(this.$parent);\n    super._remove();\n  }\n\n  _onMouseDown(event) {\n    // Won't be executed if pointer events is set to none. But acts as safety net if pointer events are not supported or even removed by the user\n    $.suppressEvent(event);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}