{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Device, graphics, HtmlComponent, NumberColumn, Point, Popup, RowLayout, scout, scrollbars, Table, TableHeaderMenuGroup, TableHeaderMenuLayout } from '../index';\n\nvar TableHeaderMenu = /*#__PURE__*/function (_Popup) {\n  _inherits(TableHeaderMenu, _Popup);\n\n  var _super = _createSuper(TableHeaderMenu);\n\n  function TableHeaderMenu() {\n    var _this;\n\n    _classCallCheck(this, TableHeaderMenu);\n\n    _this = _super.call(this);\n    _this.column = null;\n    _this.tableHeader = null;\n    _this.table = null;\n    _this.filter = null;\n    _this.filterCheckedMode = TableHeaderMenu.CheckedMode.ALL;\n    _this.filterSortMode = TableHeaderMenu.SortMode.ALPHABETICALLY;\n    _this.hasFilterTable = false;\n    _this.hasFilterFields = false;\n    _this.leftGroups = [];\n    _this.moveGroup = null;\n    _this.toBeginButton = null;\n    _this.forwardButton = null;\n    _this.backwardButton = null;\n    _this.toEndButton = null;\n    _this.sortingGroup = null;\n    _this.sortDescButton = null;\n    _this.sortAscAddButton = null;\n    _this.sortDescAddButton = null;\n    _this.columnActionsGroup = null;\n    _this.addColumnButton = null;\n    _this.removeColumnButton = null;\n    _this.modifyColumnButton = null;\n    _this.groupButton = null;\n    _this.groupAddButton = null;\n    _this.barChartButton = null;\n    _this.colorGradient1Button = null;\n    _this.colorGradient2Button = null;\n    _this.$rightGroups = [];\n    _this.$headerItem = null;\n    _this.$columnActions = null;\n    _this.$columnFilters = null;\n    _this.$filterTableGroup = null;\n    _this.$filterToggleChecked = null;\n    _this.$filterTableGroupTitle = null;\n    _this.$filterSortOrder = null;\n    _this.$filterFieldsGroup = null;\n    _this._onColumnMovedHandler = _this._onColumnMoved.bind(_assertThisInitialized(_this));\n    _this._tableHeaderScrollHandler = _this._onAnchorScroll.bind(_assertThisInitialized(_this));\n\n    _this.on('locationChange', _this._onLocationChange.bind(_assertThisInitialized(_this))); // Make sure the actions are not disabled even if the table is disabled\n    // To disable the menu use headerEnabled or headerMenusEnabled\n\n\n    _this.inheritAccessibility = false;\n    return _this;\n  }\n\n  _createClass(TableHeaderMenu, [{\n    key: \"_init\",\n    value: function _init(options) {\n      options.scrollType = options.scrollType || 'none';\n\n      _get(_getPrototypeOf(TableHeaderMenu.prototype), \"_init\", this).call(this, options);\n\n      this.tableHeader = options.tableHeader;\n      this.column = options.column;\n      this.table = this.tableHeader.table;\n      this.$headerItem = this.$anchor;\n      this.table.on('columnMoved', this._onColumnMovedHandler); // Filtering\n\n      this.filter = this.table.getFilter(this.column.id);\n\n      if (!this.filter) {\n        this.filter = this.column.createFilter();\n      } // always recalculate available values to make sure new/updated/deleted rows are considered\n\n\n      this.filter.calculate();\n      this.filter.on('filterFieldsChanged', this._updateFilterTable.bind(this));\n\n      this._updateFilterTableCheckedMode();\n\n      this.hasFilterTable = this.filter.availableValues.length > 0;\n      this.hasFilterFields = this.filter.hasFilterFields;\n\n      if (this.hasFilterTable) {\n        this._tableFilterHandler = this._onFilterTableChanged.bind(this);\n        this.table.on('filterAdded', this._tableFilterHandler);\n        this.table.on('filterRemoved', this._tableFilterHandler);\n        this._filterTableRowsCheckedHandler = this._onFilterTableRowsChecked.bind(this);\n      }\n    }\n  }, {\n    key: \"_createLayout\",\n    value: function _createLayout() {\n      return new TableHeaderMenuLayout(this);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.leftGroups = [];\n      this.$rightGroups = [];\n      this.$headerItem.select(true);\n      this.$container = this.$parent.appendDiv('table-header-menu');\n      this.htmlComp = HtmlComponent.install(this.$container, this.session);\n      this.htmlComp.setLayout(this._createLayout());\n      this.$body = this.$container.appendDiv('table-header-menu-body');\n      HtmlComponent.install(this.$body, this.session);\n\n      this._installScrollbars({\n        axis: 'y'\n      });\n\n      this.$columnActions = this.$body.appendDiv('table-header-menu-actions'); // only add right column if filter has a filter-table or filter-fields\n\n      if (this.hasFilterTable || this.hasFilterFields) {\n        this.$columnFilters = this.$body.appendDiv('table-header-menu-filters');\n        var htmlColumnFilters = HtmlComponent.install(this.$columnFilters, this.session);\n        htmlColumnFilters.setLayout(new RowLayout());\n      }\n\n      this.tableHeader.$container.on('scroll', this._tableHeaderScrollHandler);\n      this.$whiter = this.$container.appendDiv('table-header-menu-whiter');\n\n      if (this.withFocusContext && this.focusableContainer) {\n        this.$container.attr('tabindex', -1);\n      } // -- Left column -- //\n      // Moving\n\n\n      var movableColumns = this.table.visibleColumns().filter(function (column) {\n        return !column.fixedPosition;\n      });\n\n      if (movableColumns.length > 1 && !this.column.fixedPosition) {\n        this.leftGroups.push(this._renderMovingGroup());\n      } // Sorting\n\n\n      if (this.table.sortEnabled) {\n        this.leftGroups.push(this._renderSortingGroup());\n      } // Add/remove/change columns\n\n\n      if (this._isColumnActionsGroupVisible()) {\n        this.leftGroups.push(this._renderColumnActionsGroup());\n      } // Grouping\n      // column.grouped check necessary to make ungroup possible, even if grouping is not possible anymore\n\n\n      if (this.table.isGroupingPossible(this.column) || this.column.grouped) {\n        this.leftGroups.push(this._renderGroupingGroup());\n      } // Expand/Collapse\n\n\n      this.leftGroups.push(this._renderHierarchyGruop()); // Aggregation\n\n      if (this.table.isAggregationPossible(this.column)) {\n        this.leftGroups.push(this._renderAggregationGroup());\n      } // Coloring\n\n\n      if (this.column instanceof NumberColumn) {\n        this.leftGroups.push(this._renderColoringGroup());\n      } // -- Right column -- //\n      // Filter table\n\n\n      if (this.hasFilterTable) {\n        this.$rightGroups.push(this._renderFilterTable());\n      } // Filter fields\n\n\n      if (this.hasFilterFields) {\n        this.$rightGroups.push(this._renderFilterFields());\n      }\n\n      this._onColumnMoved(); // Set table style to focused, so that it looks as it still has the focus.\n\n\n      if (this.table.enabled) {\n        this.table.$container.addClass('focused');\n      }\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"get$Scrollable\",\n    value: function get$Scrollable() {\n      return this.$body;\n    }\n  }, {\n    key: \"_updateFirstLast\",\n    value: function _updateFirstLast() {\n      addFirstLastClass(this.leftGroups.filter(function (group) {\n        return group.isVisible();\n      }));\n      addFirstLastClass(this.$rightGroups);\n\n      function addFirstLastClass(groups) {\n        groups.forEach(function (group, index, arr) {\n          toggleCssClass(group, 'first', index === 0);\n          toggleCssClass(group, 'last', index === arr.length - 1);\n        }, this);\n      } // Note: we should refactor code for filter-fields and filter-table so they could also\n      // work with a model-class (like the button menu groups). Currently this would cause\n      // to much work.\n\n\n      function toggleCssClass(group, cssClass, condition) {\n        var $container = group instanceof TableHeaderMenuGroup ? group.$container : group;\n        $container.toggleClass(cssClass, condition);\n      }\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      if (this.filterTable) {\n        this.filterTable.off('rowsChecked', this._filterTableRowsCheckedHandler);\n      }\n\n      this.tableHeader.$container.off('scroll', this._tableHeaderScrollHandler);\n      this.$headerItem.select(false);\n      this.table.off('columnMoved', this._onColumnMovedHandler);\n      this.table.off('filterAdded', this._tableFilterHandler);\n      this.table.off('filterRemoved', this._tableFilterHandler);\n\n      _get(_getPrototypeOf(TableHeaderMenu.prototype), \"_remove\", this).call(this); // table may have been removed in the meantime\n\n\n      if (this.table.rendered) {\n        this.table.$container.removeClass('focused');\n      }\n    }\n  }, {\n    key: \"_renderMovingGroup\",\n    value: function _renderMovingGroup() {\n      var table = this.table,\n          column = this.column,\n          pos = table.visibleColumns().indexOf(column);\n      this.moveGroup = scout.create('TableHeaderMenuGroup', {\n        parent: this,\n        textKey: 'ui.Move',\n        cssClass: 'first'\n      });\n      this.toBeginButton = scout.create('TableHeaderMenuButton', {\n        parent: this.moveGroup,\n        text: '${textKey:ui.toBegin}',\n        cssClass: 'move move-top'\n      });\n      this.toBeginButton.on('action', function () {\n        table.moveColumn(column, pos, 0);\n        pos = table.visibleColumns().indexOf(column);\n      });\n      this.forwardButton = scout.create('TableHeaderMenuButton', {\n        parent: this.moveGroup,\n        text: '${textKey:ui.forward}',\n        cssClass: 'move move-up'\n      });\n      this.forwardButton.on('action', function () {\n        table.moveColumn(column, pos, Math.max(pos - 1, 0));\n        pos = table.visibleColumns().indexOf(column);\n      });\n      this.backwardButton = scout.create('TableHeaderMenuButton', {\n        parent: this.moveGroup,\n        text: '${textKey:ui.backward}',\n        cssClass: 'move move-down'\n      });\n      this.backwardButton.on('action', function () {\n        table.moveColumn(column, pos, Math.min(pos + 1, table.header.findHeaderItems().length - 1));\n        pos = table.visibleColumns().indexOf(column);\n      });\n      this.toEndButton = scout.create('TableHeaderMenuButton', {\n        parent: this.moveGroup,\n        text: '${textKey:ui.toEnd}',\n        cssClass: 'move move-bottom'\n      });\n      this.toEndButton.on('action', function () {\n        table.moveColumn(column, pos, table.header.findHeaderItems().length - 1);\n        pos = table.visibleColumns().indexOf(column);\n      });\n      this.moveGroup.render(this.$columnActions);\n      return this.moveGroup;\n    }\n  }, {\n    key: \"_onColumnMoved\",\n    value: function _onColumnMoved() {\n      var table = this.table,\n          column = this.column;\n\n      if (this.moveGroup) {\n        var visibleColumns = table.visibleColumns();\n        var columnIndex = table.visibleColumns().indexOf(column);\n        var forwardEnabled = visibleColumns[columnIndex - 1] && !visibleColumns[columnIndex - 1].fixedPosition;\n        var backwardEnabled = visibleColumns[columnIndex + 1] && !visibleColumns[columnIndex + 1].fixedPosition;\n        this.toBeginButton.setEnabled(forwardEnabled);\n        this.forwardButton.setEnabled(forwardEnabled);\n        this.backwardButton.setEnabled(backwardEnabled);\n        this.toEndButton.setEnabled(backwardEnabled);\n      }\n\n      this.hierarchyGroup.setVisible(this.table.isTableNodeColumn(column));\n\n      this._updateFirstLast();\n    }\n  }, {\n    key: \"_isColumnActionsGroupVisible\",\n    value: function _isColumnActionsGroupVisible() {\n      return this.table.columnAddable || this.column.removable || this.column.modifiable;\n    }\n  }, {\n    key: \"_renderColumnActionsGroup\",\n    value: function _renderColumnActionsGroup() {\n      var column = this.column,\n          menuPopup = this;\n      this.columnActionsGroup = scout.create('TableHeaderMenuGroup', {\n        parent: this,\n        textKey: 'ui.Column'\n      });\n      this.addColumnButton = scout.create('TableHeaderMenuButton', {\n        parent: this.columnActionsGroup,\n        text: '${textKey:ui.addColumn}',\n        cssClass: 'add-column',\n        visible: this.table.columnAddable\n      });\n      this.addColumnButton.on('action', onClick.bind(this, 'add'));\n      this.removeColumnButton = scout.create('TableHeaderMenuButton', {\n        parent: this.columnActionsGroup,\n        text: '${textKey:ui.removeColumn}',\n        cssClass: 'remove-column',\n        visible: this.column.removable\n      });\n      this.removeColumnButton.on('action', onClick.bind(this, 'remove'));\n      this.modifyColumnButton = scout.create('TableHeaderMenuButton', {\n        parent: this.columnActionsGroup,\n        text: '${textKey:ui.changeColumn}',\n        cssClass: 'change-column',\n        visible: this.column.modifiable\n      });\n      this.modifyColumnButton.on('action', onClick.bind(this, 'modify'));\n      this.columnActionsGroup.render(this.$columnActions);\n      return this.columnActionsGroup;\n\n      function onClick(action) {\n        menuPopup.close();\n        this.table.trigger('columnOrganizeAction', {\n          action: action,\n          column: column\n        });\n      }\n    }\n  }, {\n    key: \"onColumnActionsChanged\",\n    value: function onColumnActionsChanged(event) {\n      this.addColumnButton.setVisible(event.addVisible);\n      this.removeColumnButton.setVisible(event.removeVisible);\n      this.modifyColumnButton.setVisible(event.modifyVisible);\n      var groupVisible = this.columnActionsGroup.children.some(function (button) {\n        return button.visible;\n      });\n      this.columnActionsGroup.setVisible(groupVisible);\n    }\n  }, {\n    key: \"_renderSortingGroup\",\n    value: function _renderSortingGroup() {\n      var table = this.table,\n          column = this.column,\n          menuPopup = this;\n      this.sortingGroup = scout.create('TableHeaderMenuGroup', {\n        parent: this,\n        textKey: 'ColumnSorting'\n      });\n\n      if (!table.hasPermanentHeadOrTailSortColumns()) {\n        this.sortAscButton = scout.create('TableHeaderMenuButton', {\n          parent: this.sortingGroup,\n          text: '${textKey:ui.ascending}',\n          cssClass: 'sort sort-asc',\n          direction: 'asc',\n          toggleAction: true\n        });\n        this.sortAscButton.on('action', onSortClick.bind(this.sortAscButton));\n        this.sortDescButton = scout.create('TableHeaderMenuButton', {\n          parent: this.sortingGroup,\n          text: '${textKey:ui.descending}',\n          cssClass: 'sort sort-desc',\n          direction: 'desc',\n          toggleAction: true\n        });\n        this.sortDescButton.on('action', onSortClick.bind(this.sortDescButton));\n      }\n\n      this.sortAscAddButton = scout.create('TableHeaderMenuButton', {\n        parent: this.sortingGroup,\n        text: '${textKey:ui.ascendingAdditionally}',\n        cssClass: 'sort sort-asc-add',\n        direction: 'asc',\n        toggleAction: true\n      });\n      this.sortAscAddButton.on('action', onSortAdditionalClick.bind(this.sortAscAddButton));\n      this.sortDescAddButton = scout.create('TableHeaderMenuButton', {\n        parent: this.sortingGroup,\n        text: '${textKey:ui.descendingAdditionally}',\n        cssClass: 'sort sort-desc-add',\n        direction: 'desc',\n        toggleAction: true\n      });\n      this.sortDescAddButton.on('action', onSortAdditionalClick.bind(this.sortDescAddButton));\n\n      this._updateSortingSelectedState();\n\n      this.sortingGroup.render(this.$columnActions);\n      return this.sortingGroup;\n\n      function onSortClick() {\n        menuPopup.close();\n        sort(this.direction, false, !this.selected);\n      }\n\n      function onSortAdditionalClick() {\n        menuPopup.close();\n        sort(this.direction, true, !this.selected);\n      }\n\n      function sort(direction, multiSort, remove) {\n        table.sort(column, direction, multiSort, remove);\n\n        menuPopup._updateSortingSelectedState();\n      }\n    }\n  }, {\n    key: \"_updateSortingSelectedState\",\n    value: function _updateSortingSelectedState() {\n      if (!this.table.sortEnabled) {\n        return;\n      }\n\n      var addIcon,\n          showAddCommands = false,\n          sortCount = this._sortColumnCount();\n\n      this.sortingGroup.children.forEach(function (button) {\n        button.setSelected(false);\n      });\n\n      if (sortCount === 1 && !this.table.hasPermanentHeadOrTailSortColumns()) {\n        if (this.column.sortActive) {\n          if (this.column.sortAscending) {\n            this.sortAscButton.setSelected(true);\n          } else {\n            this.sortDescButton.setSelected(true);\n          }\n        } else {\n          showAddCommands = true;\n        }\n      } else if (sortCount > 1 || this.table.hasPermanentHeadOrTailSortColumns()) {\n        showAddCommands = true;\n\n        if (this.column.sortActive) {\n          if (this.column.sortAscending) {\n            this.sortAscAddButton.setSelected(true);\n          } else {\n            this.sortDescAddButton.setSelected(true);\n          }\n\n          addIcon = this.column.sortIndex + 1;\n          this.sortAscAddButton.setIconId(addIcon);\n          this.sortDescAddButton.setIconId(addIcon);\n        }\n      }\n\n      this.sortAscAddButton.setVisible(showAddCommands);\n      this.sortDescAddButton.setVisible(showAddCommands);\n    }\n  }, {\n    key: \"_renderGroupingGroup\",\n    value: function _renderGroupingGroup() {\n      var menuPopup = this,\n          table = this.table,\n          column = this.column,\n          groupCount = this._groupColumnCount();\n\n      var group = scout.create('TableHeaderMenuGroup', {\n        parent: this,\n        textKey: 'ui.Grouping'\n      });\n      this.groupButton = scout.create('TableHeaderMenuButton', {\n        parent: group,\n        text: '${textKey:ui.groupingApply}',\n        cssClass: 'group',\n        additional: false,\n        toggleAction: true\n      });\n      this.groupButton.on('action', groupColumn.bind(this.groupButton));\n      this.groupAddButton = scout.create('TableHeaderMenuButton', {\n        parent: group,\n        text: '${textKey:ui.additionally}',\n        cssClass: 'group-add',\n        additional: true,\n        toggleAction: true\n      });\n      this.groupAddButton.on('action', groupColumn.bind(this.groupAddButton));\n\n      if (groupCount === 0) {\n        this.groupAddButton.setVisible(false);\n      } else if (groupCount === 1 && this.column.grouped) {\n        this.groupButton.setSelected(true);\n        this.groupAddButton.setVisible(false);\n      } else if (groupCount > 1) {\n        this.groupAddButton.setVisible(true);\n      }\n\n      if (table.hasPermanentHeadOrTailSortColumns() && groupCount > 0) {\n        // If table has permanent head columns, other columns may not be grouped exclusively -> only enable add button (equally done for sort buttons)\n        this.groupButton.setVisible(false);\n        this.groupAddButton.setVisible(true);\n      }\n\n      if (this.column.grouped) {\n        if (groupCount === 1) {\n          this.groupAddButton.setSelected(true);\n        } else if (groupCount > 1) {\n          this.groupAddButton.setSelected(true);\n          this.groupAddButton.setIconId(this.column.sortIndex + 1);\n        }\n      }\n\n      group.render(this.$columnActions);\n      return group;\n\n      function groupColumn() {\n        var direction = column.sortIndex >= 0 && !column.sortAscending ? 'desc' : 'asc';\n        menuPopup.close();\n        table.groupColumn(column, this.additional, direction, !this.selected);\n      }\n    }\n  }, {\n    key: \"_renderHierarchyGruop\",\n    value: function _renderHierarchyGruop() {\n      var table = this.table,\n          menuPopup = this;\n      this.hierarchyGroup = scout.create('TableHeaderMenuGroup', {\n        parent: this,\n        textKey: 'ui.Hierarchy',\n        visible: this.table.isTableNodeColumn(this.column)\n      });\n      var collapseAllButton = scout.create('TableHeaderMenuButton', {\n        parent: this.hierarchyGroup,\n        text: '${textKey:ui.CollapseAll}',\n        cssClass: 'hierarchy-collapse-all',\n        enabled: !!arrays.find(table.rows, function (row) {\n          return row.expanded && !arrays.empty(row.childRows);\n        })\n      });\n      collapseAllButton.on('action', function () {\n        menuPopup.close();\n        table.collapseAll();\n      });\n      var expandAllButton = scout.create('TableHeaderMenuButton', {\n        parent: this.hierarchyGroup,\n        text: '${textKey:ui.ExpandAll}',\n        cssClass: 'hierarchy-expand-all',\n        enabled: !!arrays.find(table.rows, function (row) {\n          return !row.expanded && !arrays.empty(row.childRows);\n        })\n      });\n      expandAllButton.on('action', function () {\n        menuPopup.close();\n        table.expandAll();\n      });\n      this.hierarchyGroup.render(this.$columnActions);\n      return this.hierarchyGroup;\n    }\n  }, {\n    key: \"_renderAggregationGroup\",\n    value: function _renderAggregationGroup() {\n      var table = this.table,\n          column = this.column,\n          aggregation = column.aggregationFunction,\n          menuPopup = this,\n          group = scout.create('TableHeaderMenuGroup', {\n        parent: this,\n        textKey: 'ui.Aggregation'\n      }),\n          allowedAggregationFunctions = arrays.ensure(column.allowedAggregationFunctions),\n          isAggregationNoneAllowed = allowedAggregationFunctions.indexOf('none') !== -1;\n      createHeaderMenuButtonForAggregationFunction('${textKey:ui.Sum}', 'sum');\n      createHeaderMenuButtonForAggregationFunction('${textKey:ui.Average}', 'avg');\n      createHeaderMenuButtonForAggregationFunction('${textKey:ui.Minimum}', 'min');\n      createHeaderMenuButtonForAggregationFunction('${textKey:ui.Maximum}', 'max');\n      group.children.forEach(function (button) {\n        button.setSelected(button.aggregation === aggregation);\n      });\n      group.render(this.$columnActions);\n      return group;\n\n      function createHeaderMenuButtonForAggregationFunction(text, aggregation) {\n        if (allowedAggregationFunctions.indexOf(aggregation) !== -1) {\n          var aggrButton = scout.create('TableHeaderMenuButton', {\n            parent: group,\n            text: text,\n            cssClass: 'aggregation-function ' + aggregation,\n            aggregation: aggregation,\n            toggleAction: isAggregationNoneAllowed\n          });\n          aggrButton.on('action', onClick.bind(aggrButton));\n        }\n      }\n\n      function onClick() {\n        menuPopup.close();\n        table.changeAggregation(column, this.aggregation === aggregation ? 'none' : this.aggregation);\n      }\n    }\n  }, {\n    key: \"_renderColoringGroup\",\n    value: function _renderColoringGroup() {\n      var table = this.table,\n          column = this.column,\n          menuPopup = this,\n          backgroundEffect = column.backgroundEffect,\n          group = scout.create('TableHeaderMenuGroup', {\n        parent: this,\n        textKey: 'ui.Coloring'\n      });\n      this.colorGradient1Button = scout.create('TableHeaderMenuButton', {\n        parent: group,\n        text: '${textKey:ui.fromRedToGreen}',\n        cssClass: 'color color-gradient1',\n        backgroundEffect: 'colorGradient1',\n        toggleAction: true\n      });\n      this.colorGradient1Button.on('action', onClick.bind(this.colorGradient1Button));\n      this.colorGradient2Button = scout.create('TableHeaderMenuButton', {\n        parent: group,\n        text: '${textKey:ui.fromGreenToRed}',\n        cssClass: 'color color-gradient2',\n        backgroundEffect: 'colorGradient2',\n        toggleAction: true\n      });\n      this.colorGradient2Button.on('action', onClick.bind(this.colorGradient2Button));\n\n      if (Device.get().supportsCssGradient()) {\n        this.barChartButton = scout.create('TableHeaderMenuButton', {\n          parent: group,\n          text: '${textKey:ui.withBarChart}',\n          cssClass: 'color color-bar-chart',\n          backgroundEffect: 'barChart',\n          toggleAction: true\n        });\n        this.barChartButton.on('action', onClick.bind(this.barChartButton));\n      }\n\n      group.children.forEach(function (button) {\n        button.setSelected(button.backgroundEffect === backgroundEffect);\n      });\n      group.render(this.$columnActions);\n      return group;\n\n      function onClick() {\n        menuPopup.close();\n        table.setColumnBackgroundEffect(column, !this.selected ? null : this.backgroundEffect);\n      }\n    }\n  }, {\n    key: \"_renderFilterTable\",\n    value: function _renderFilterTable() {\n      var $filterActions;\n      this.$filterTableGroup = this.$columnFilters.appendDiv('table-header-menu-group first');\n      var htmlComp = HtmlComponent.install(this.$filterTableGroup, this.session);\n      htmlComp.setLayout(new RowLayout());\n      $filterActions = this.$filterTableGroup.appendDiv('table-header-menu-filter-actions');\n      this.$filterSortOrder = $filterActions.appendDiv('table-header-menu-toggle-sort-order').on('click', this._onSortModeClick.bind(this)).addClass(this.filterSortMode.cssClass);\n      this.$filterToggleChecked = $filterActions.appendDiv('table-header-menu-filter-toggle-checked').text(this.session.text(this.filterCheckedMode.text)).on('click', this._onFilterCheckedModeClick.bind(this));\n      this.$filterTableGroupTitle = this.$filterTableGroup.appendDiv('table-header-menu-group-text').text(this._filterByText());\n      HtmlComponent.install(this.$filterTableGroupTitle, this.session);\n      this.filterTable = this._createFilterTable();\n      this.filterTable.on('rowsChecked', this._filterTableRowsCheckedHandler);\n      var tableRow,\n          tableRows = [];\n      this.filter.availableValues.forEach(function (filterValue) {\n        tableRow = {\n          cells: [scout.create('Cell', {\n            text: this.filter.column.objectType === 'NumberColumn' ? filterValue.text : null,\n            value: this.filter.column.objectType === 'NumberColumn' ? filterValue.key : filterValue.text,\n            iconId: filterValue.iconId,\n            htmlEnabled: filterValue.htmlEnabled,\n            cssClass: filterValue.cssClass\n          }), filterValue.count, filterValue.key === null ? 1 : 0 // empty cell should always be at the bottom\n          ],\n          checked: this.filter.selectedValues.indexOf(filterValue.key) > -1,\n          dataMap: {\n            filterValue: filterValue\n          }\n        };\n        tableRows.push(tableRow);\n      }, this);\n      this.filterTable.insertRows(tableRows);\n      this.filterTable.render(this.$filterTableGroup); // must do this in a setTimeout, since table/popup is not visible yet (same as Table#revealSelection).\n\n      setTimeout(this.filterTable.revealChecked.bind(this.filterTable));\n      return this.$filterTableGroup;\n    }\n  }, {\n    key: \"_createFilterTable\",\n    value: function _createFilterTable() {\n      var objectType = 'Column';\n\n      if (this.column.objectType === 'NumberColumn') {\n        objectType = this.column.objectType;\n      }\n\n      return scout.create('Table', {\n        parent: this,\n        headerVisible: false,\n        multiSelect: false,\n        autoResizeColumns: true,\n        checkable: true,\n        checkableStyle: Table.CheckableStyle.TABLE_ROW,\n        // column-texts are not visible since header is not visible\n        columns: [{\n          objectType: objectType,\n          text: 'filter-value',\n          width: 160,\n          sortActive: true,\n          sortIndex: 1,\n          horizontalAlignment: -1\n        }, {\n          objectType: 'NumberColumn',\n          text: 'aggregate-count',\n          width: 40\n        }, {\n          objectType: 'NumberColumn',\n          displayable: false,\n          sortActive: true,\n          sortIndex: 0\n        }]\n      });\n    }\n    /**\n     * @returns {string} the title-text used for the filter-table\n     */\n\n  }, {\n    key: \"_filterByText\",\n    value: function _filterByText() {\n      var text = this.session.text('ui.Filter'),\n          numSelected = this.filter.selectedValues.length,\n          numFilters = this.filter.availableValues.length;\n\n      if (numSelected && numFilters) {\n        text += ' ' + this.session.text('ui.FilterInfoXOfY', numSelected, numFilters);\n      } else if (numFilters) {\n        text += ' ' + this.session.text('ui.FilterInfoCount', numFilters);\n      }\n\n      return text;\n    }\n  }, {\n    key: \"_onFilterCheckedModeClick\",\n    value: function _onFilterCheckedModeClick() {\n      var checkedMode = TableHeaderMenu.CheckedMode;\n      var checkAll = this.filterCheckedMode.checkAll;\n      this.filter.selectedValues = [];\n\n      if (this.filterCheckedMode === checkedMode.ALL) {\n        this.filterCheckedMode = checkedMode.NONE;\n        this.filter.availableValues.forEach(function (filterValue) {\n          this.filter.selectedValues.push(filterValue.key);\n        }, this);\n      } else {\n        this.filterCheckedMode = checkedMode.ALL;\n      }\n\n      this.filterTable.checkAll(checkAll);\n\n      this._updateFilterTableActions();\n    }\n  }, {\n    key: \"_onSortModeClick\",\n    value: function _onSortModeClick() {\n      var sortMode = TableHeaderMenu.SortMode;\n\n      if (this.filterSortMode === sortMode.ALPHABETICALLY) {\n        // sort by amount\n        this.filterTable.sort(this.filterTable.columns[1], 'desc');\n        this.filterSortMode = sortMode.AMOUNT;\n      } else {\n        // sort alphabetically (first by invisible column to make sure empty cells are always at the bottom)\n        this.filterTable.sort(this.filterTable.columns[2], 'asc');\n        this.filterTable.sort(this.filterTable.columns[0], 'asc', true);\n        this.filterSortMode = sortMode.ALPHABETICALLY;\n      }\n\n      this._updateFilterTableActions();\n    }\n  }, {\n    key: \"_updateFilterTable\",\n    value: function _updateFilterTable() {\n      if (this.filter.filterActive()) {\n        this.table.addFilter(this.filter);\n      } else {\n        this.table.removeFilterByKey(this.column.id);\n      } // callback to table\n\n\n      this.table.filter();\n    }\n  }, {\n    key: \"_updateFilterTableActions\",\n    value: function _updateFilterTableActions() {\n      // checked mode\n      this.$filterToggleChecked.text(this.session.text(this.filterCheckedMode.text)); // sort mode\n\n      var sortMode = TableHeaderMenu.SortMode;\n      var sortAlphabetically = this.filterSortMode === TableHeaderMenu.SortMode.ALPHABETICALLY;\n      this.$filterSortOrder.toggleClass(sortMode.ALPHABETICALLY.cssClass, sortAlphabetically);\n      this.$filterSortOrder.toggleClass(sortMode.AMOUNT.cssClass, !sortAlphabetically);\n    }\n  }, {\n    key: \"_renderFilterFields\",\n    value: function _renderFilterFields() {\n      this.filterFieldsGroupBox = scout.create('GroupBox:FilterFields', {\n        parent: this,\n        column: this.column,\n        filter: this.filter\n      });\n      this.$filterFieldsGroup = this.$columnFilters.appendDiv('table-header-menu-group');\n      var htmlComp = HtmlComponent.install(this.$filterFieldsGroup, this.session);\n      htmlComp.setLayout(new RowLayout());\n      var $filterFieldsText = this.$filterFieldsGroup.appendDiv('table-header-menu-group-text').text(this.filter.filterFieldsTitle());\n      htmlComp = HtmlComponent.install($filterFieldsText, this.session);\n      this.filterFieldsGroupBox.render(this.$filterFieldsGroup);\n      return this.$filterFieldsGroup;\n    }\n  }, {\n    key: \"isOpenFor\",\n    value: function isOpenFor($headerItem) {\n      return this.rendered && this.belongsTo($headerItem);\n    }\n  }, {\n    key: \"_countColumns\",\n    value: function _countColumns(propertyName) {\n      return this.table.visibleColumns().reduce(function (sum, column) {\n        return sum + (column[propertyName] ? 1 : 0);\n      }, 0);\n    }\n  }, {\n    key: \"_sortColumnCount\",\n    value: function _sortColumnCount() {\n      return this._countColumns('sortActive');\n    }\n  }, {\n    key: \"_groupColumnCount\",\n    value: function _groupColumnCount() {\n      return this._countColumns('grouped');\n    }\n  }, {\n    key: \"_computeWhitherWidth\",\n    value: function _computeWhitherWidth() {\n      var $tableHeaderContainer = this.tableHeader.$container,\n          headerItemWidth = this.$headerItem.outerWidth() - this.$headerItem.cssBorderWidthX(),\n          containerWidth = this.$container.outerWidth() - this.$container.cssBorderWidthX(),\n          tableHeaderWidth = $tableHeaderContainer.outerWidth() - this.tableHeader.menuBar.$container.outerWidth(); // if container is wider than header item -> use header item width, otherwise use container width\n\n      var whitherWidth = Math.min(headerItemWidth, containerWidth); // if container is positioned at the right side, header item may not be fully visible (under the menubar or partly invisible due to scrolling)\n\n      whitherWidth = Math.min(whitherWidth, tableHeaderWidth - this.$headerItem.position().left);\n      var clipLeft = $tableHeaderContainer.offset().left - this.$headerItem.offset().left - this.tableHeader.table.$container.cssBorderLeftWidth();\n\n      if (clipLeft > 0) {\n        whitherWidth -= clipLeft;\n      }\n\n      return whitherWidth;\n    }\n  }, {\n    key: \"_renderCompact\",\n    value: function _renderCompact() {\n      this.$body.toggleClass('compact', this.compact);\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"setCompact\",\n    value: function setCompact(compact) {\n      this.setProperty('compact', compact);\n    }\n  }, {\n    key: \"_onLocationChange\",\n    value: function _onLocationChange(event) {\n      var inView,\n          containerBounds,\n          isLocationInView = scrollbars.isLocationInView,\n          headerItemBounds = graphics.offsetBounds(this.$headerItem),\n          $tableHeaderContainer = this.tableHeader.$container;\n      this.$container.setVisible(true);\n      containerBounds = graphics.offsetBounds(this.$container); // menu must only be visible if the header item is in view (menu gets repositioned when the table gets scrolled -> make sure it won't be displayed outside of the table)\n      // check left side of the header item (necessary if header item is moved outside on the left side of the table)\n\n      inView = isLocationInView(new Point(headerItemBounds.x, headerItemBounds.y), $tableHeaderContainer);\n\n      if (!inView) {\n        // if left side of the header is not in view, check if right side of the header and the menu, both must be visible)\n        // check right side of the header item (necessary if header item is moved outside on the right side of the table)\n        inView = isLocationInView(new Point(headerItemBounds.x + headerItemBounds.width, headerItemBounds.y + headerItemBounds.height), $tableHeaderContainer); // check right side of the menu (necessary if header item is larger than menu, and if header item is moved outside on the left side of the table)\n\n        inView = inView && isLocationInView(new Point(containerBounds.x + containerBounds.width, containerBounds.y), $tableHeaderContainer);\n      }\n\n      this.$container.setVisible(inView); // make sure whither is correctly positioned and sized\n      // (bounds must be computed after setVisible, if it was hidden before bounds are not correct)\n\n      containerBounds = graphics.offsetBounds(this.$container);\n      this.$whiter // if header is clipped on the left side, position whither at the left of the visible part of the header (same applies for width, see _computeWhitherWidth)\n      .cssLeft(Math.max(headerItemBounds.x - containerBounds.x, $tableHeaderContainer.offset().left - containerBounds.x - this.tableHeader.table.$container.cssBorderLeftWidth())).width(this._computeWhitherWidth());\n    }\n  }, {\n    key: \"_onAnchorScroll\",\n    value: function _onAnchorScroll(event) {\n      this.position();\n    }\n  }, {\n    key: \"_onFilterTableRowsChecked\",\n    value: function _onFilterTableRowsChecked(event) {\n      this.filter.selectedValues = [];\n      this.filterTable.rows.forEach(function (row) {\n        if (row.checked) {\n          this.filter.selectedValues.push(row.dataMap.filterValue.key);\n        }\n      }, this);\n\n      this._updateFilterTable();\n    }\n  }, {\n    key: \"_onFilterTableChanged\",\n    value: function _onFilterTableChanged() {\n      this.$filterTableGroupTitle.text(this._filterByText());\n\n      this._updateFilterTableCheckedMode();\n\n      this._updateFilterTableActions();\n    } // When no filter value is selected, we change the selection mode to ALL\n    // since it makes no sense to choose NONE when no value is currently selected\n\n  }, {\n    key: \"_updateFilterTableCheckedMode\",\n    value: function _updateFilterTableCheckedMode() {\n      if (this.filter.selectedValues.length === 0) {\n        this.filterCheckedMode = TableHeaderMenu.CheckedMode.ALL;\n      } else {\n        this.filterCheckedMode = TableHeaderMenu.CheckedMode.NONE;\n      }\n    }\n  }, {\n    key: \"_onMouseDownOutside\",\n    value: function _onMouseDownOutside(event) {\n      // close popup only if source of event is not $headerItem or one of it's children.\n      if (this.$headerItem.isOrHas(event.target)) {\n        return;\n      }\n\n      this.close();\n    }\n    /**\n     * Called by table header\n     */\n\n  }, {\n    key: \"onColumnResized\",\n    value: function onColumnResized() {\n      // Adjust whiter with if size gets changed while menu is open (may caused by TableHeader._adjustColumnMinWidth)\n      this.$whiter.width(this._computeWhitherWidth());\n    }\n  }]);\n\n  return TableHeaderMenu;\n}(Popup);\n\n_defineProperty(TableHeaderMenu, \"CheckedMode\", {\n  ALL: {\n    checkAll: true,\n    text: 'ui.SelectAllFilter'\n  },\n  NONE: {\n    checkAll: false,\n    text: 'ui.SelectNoneFilter'\n  }\n});\n\n_defineProperty(TableHeaderMenu, \"SortMode\", {\n  ALPHABETICALLY: {\n    text: 'ui.SortAlphabeticallyFilter',\n    cssClass: 'table-header-menu-toggle-sort-order-alphabetically'\n  },\n  AMOUNT: {\n    text: 'ui.SortByAmountFilter',\n    cssClass: 'table-header-menu-toggle-sort-order-amount'\n  }\n});\n\nexport { TableHeaderMenu as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/table/TableHeaderMenu.js"],"names":["arrays","Device","graphics","HtmlComponent","NumberColumn","Point","Popup","RowLayout","scout","scrollbars","Table","TableHeaderMenuGroup","TableHeaderMenuLayout","TableHeaderMenu","column","tableHeader","table","filter","filterCheckedMode","CheckedMode","ALL","filterSortMode","SortMode","ALPHABETICALLY","hasFilterTable","hasFilterFields","leftGroups","moveGroup","toBeginButton","forwardButton","backwardButton","toEndButton","sortingGroup","sortDescButton","sortAscAddButton","sortDescAddButton","columnActionsGroup","addColumnButton","removeColumnButton","modifyColumnButton","groupButton","groupAddButton","barChartButton","colorGradient1Button","colorGradient2Button","$rightGroups","$headerItem","$columnActions","$columnFilters","$filterTableGroup","$filterToggleChecked","$filterTableGroupTitle","$filterSortOrder","$filterFieldsGroup","_onColumnMovedHandler","_onColumnMoved","bind","_tableHeaderScrollHandler","_onAnchorScroll","on","_onLocationChange","inheritAccessibility","options","scrollType","$anchor","getFilter","id","createFilter","calculate","_updateFilterTable","_updateFilterTableCheckedMode","availableValues","length","_tableFilterHandler","_onFilterTableChanged","_filterTableRowsCheckedHandler","_onFilterTableRowsChecked","select","$container","$parent","appendDiv","htmlComp","install","session","setLayout","_createLayout","$body","_installScrollbars","axis","htmlColumnFilters","$whiter","withFocusContext","focusableContainer","attr","movableColumns","visibleColumns","fixedPosition","push","_renderMovingGroup","sortEnabled","_renderSortingGroup","_isColumnActionsGroupVisible","_renderColumnActionsGroup","isGroupingPossible","grouped","_renderGroupingGroup","_renderHierarchyGruop","isAggregationPossible","_renderAggregationGroup","_renderColoringGroup","_renderFilterTable","_renderFilterFields","enabled","addClass","addFirstLastClass","group","isVisible","groups","forEach","index","arr","toggleCssClass","cssClass","condition","toggleClass","filterTable","off","rendered","removeClass","pos","indexOf","create","parent","textKey","text","moveColumn","Math","max","min","header","findHeaderItems","render","columnIndex","forwardEnabled","backwardEnabled","setEnabled","hierarchyGroup","setVisible","isTableNodeColumn","_updateFirstLast","columnAddable","removable","modifiable","menuPopup","visible","onClick","action","close","trigger","event","addVisible","removeVisible","modifyVisible","groupVisible","children","some","button","hasPermanentHeadOrTailSortColumns","sortAscButton","direction","toggleAction","onSortClick","onSortAdditionalClick","_updateSortingSelectedState","sort","selected","multiSort","remove","addIcon","showAddCommands","sortCount","_sortColumnCount","setSelected","sortActive","sortAscending","sortIndex","setIconId","groupCount","_groupColumnCount","additional","groupColumn","collapseAllButton","find","rows","row","expanded","empty","childRows","collapseAll","expandAllButton","expandAll","aggregation","aggregationFunction","allowedAggregationFunctions","ensure","isAggregationNoneAllowed","createHeaderMenuButtonForAggregationFunction","aggrButton","changeAggregation","backgroundEffect","get","supportsCssGradient","setColumnBackgroundEffect","$filterActions","_onSortModeClick","_onFilterCheckedModeClick","_filterByText","_createFilterTable","tableRow","tableRows","filterValue","cells","objectType","value","key","iconId","htmlEnabled","count","checked","selectedValues","dataMap","insertRows","setTimeout","revealChecked","headerVisible","multiSelect","autoResizeColumns","checkable","checkableStyle","CheckableStyle","TABLE_ROW","columns","width","horizontalAlignment","displayable","numSelected","numFilters","checkedMode","checkAll","NONE","_updateFilterTableActions","sortMode","AMOUNT","filterActive","addFilter","removeFilterByKey","sortAlphabetically","filterFieldsGroupBox","$filterFieldsText","filterFieldsTitle","belongsTo","propertyName","reduce","sum","_countColumns","$tableHeaderContainer","headerItemWidth","outerWidth","cssBorderWidthX","containerWidth","tableHeaderWidth","menuBar","whitherWidth","position","left","clipLeft","offset","cssBorderLeftWidth","compact","invalidateLayoutTree","setProperty","inView","containerBounds","isLocationInView","headerItemBounds","offsetBounds","x","y","height","cssLeft","_computeWhitherWidth","isOrHas","target"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Device, graphics, HtmlComponent, NumberColumn, Point, Popup, RowLayout, scout, scrollbars, Table, TableHeaderMenuGroup, TableHeaderMenuLayout} from '../index';\n\nexport default class TableHeaderMenu extends Popup {\n\n  constructor() {\n    super();\n    this.column = null;\n    this.tableHeader = null;\n    this.table = null;\n    this.filter = null;\n    this.filterCheckedMode = TableHeaderMenu.CheckedMode.ALL;\n    this.filterSortMode = TableHeaderMenu.SortMode.ALPHABETICALLY;\n    this.hasFilterTable = false;\n    this.hasFilterFields = false;\n\n    this.leftGroups = [];\n    this.moveGroup = null;\n    this.toBeginButton = null;\n    this.forwardButton = null;\n    this.backwardButton = null;\n    this.toEndButton = null;\n    this.sortingGroup = null;\n    this.sortDescButton = null;\n    this.sortAscAddButton = null;\n    this.sortDescAddButton = null;\n    this.columnActionsGroup = null;\n    this.addColumnButton = null;\n    this.removeColumnButton = null;\n    this.modifyColumnButton = null;\n    this.groupButton = null;\n    this.groupAddButton = null;\n    this.barChartButton = null;\n    this.colorGradient1Button = null;\n    this.colorGradient2Button = null;\n\n    this.$rightGroups = [];\n    this.$headerItem = null;\n    this.$columnActions = null;\n    this.$columnFilters = null;\n    this.$filterTableGroup = null;\n    this.$filterToggleChecked = null;\n    this.$filterTableGroupTitle = null;\n    this.$filterSortOrder = null;\n    this.$filterFieldsGroup = null;\n\n    this._onColumnMovedHandler = this._onColumnMoved.bind(this);\n    this._tableHeaderScrollHandler = this._onAnchorScroll.bind(this);\n    this.on('locationChange', this._onLocationChange.bind(this));\n\n    // Make sure the actions are not disabled even if the table is disabled\n    // To disable the menu use headerEnabled or headerMenusEnabled\n    this.inheritAccessibility = false;\n  }\n\n  static CheckedMode = {\n    ALL: {\n      checkAll: true,\n      text: 'ui.SelectAllFilter'\n    },\n    NONE: {\n      checkAll: false,\n      text: 'ui.SelectNoneFilter'\n    }\n  };\n\n  static SortMode = {\n    ALPHABETICALLY: {\n      text: 'ui.SortAlphabeticallyFilter',\n      cssClass: 'table-header-menu-toggle-sort-order-alphabetically'\n    },\n    AMOUNT: {\n      text: 'ui.SortByAmountFilter',\n      cssClass: 'table-header-menu-toggle-sort-order-amount'\n    }\n  };\n\n  _init(options) {\n    options.scrollType = options.scrollType || 'none';\n    super._init(options);\n\n    this.tableHeader = options.tableHeader;\n    this.column = options.column;\n    this.table = this.tableHeader.table;\n    this.$headerItem = this.$anchor;\n\n    this.table.on('columnMoved', this._onColumnMovedHandler);\n    // Filtering\n    this.filter = this.table.getFilter(this.column.id);\n    if (!this.filter) {\n      this.filter = this.column.createFilter();\n    }\n    // always recalculate available values to make sure new/updated/deleted rows are considered\n    this.filter.calculate();\n    this.filter.on('filterFieldsChanged', this._updateFilterTable.bind(this));\n    this._updateFilterTableCheckedMode();\n\n    this.hasFilterTable = this.filter.availableValues.length > 0;\n    this.hasFilterFields = this.filter.hasFilterFields;\n\n    if (this.hasFilterTable) {\n      this._tableFilterHandler = this._onFilterTableChanged.bind(this);\n      this.table.on('filterAdded', this._tableFilterHandler);\n      this.table.on('filterRemoved', this._tableFilterHandler);\n      this._filterTableRowsCheckedHandler = this._onFilterTableRowsChecked.bind(this);\n    }\n  }\n\n  _createLayout() {\n    return new TableHeaderMenuLayout(this);\n  }\n\n  _render() {\n    this.leftGroups = [];\n    this.$rightGroups = [];\n\n    this.$headerItem.select(true);\n\n    this.$container = this.$parent.appendDiv('table-header-menu');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(this._createLayout());\n    this.$body = this.$container.appendDiv('table-header-menu-body');\n    HtmlComponent.install(this.$body, this.session);\n    this._installScrollbars({\n      axis: 'y'\n    });\n    this.$columnActions = this.$body.appendDiv('table-header-menu-actions');\n\n    // only add right column if filter has a filter-table or filter-fields\n    if (this.hasFilterTable || this.hasFilterFields) {\n      this.$columnFilters = this.$body.appendDiv('table-header-menu-filters');\n      var htmlColumnFilters = HtmlComponent.install(this.$columnFilters, this.session);\n      htmlColumnFilters.setLayout(new RowLayout());\n    }\n\n    this.tableHeader.$container.on('scroll', this._tableHeaderScrollHandler);\n    this.$whiter = this.$container.appendDiv('table-header-menu-whiter');\n\n    if (this.withFocusContext && this.focusableContainer) {\n      this.$container.attr('tabindex', -1);\n    }\n\n    // -- Left column -- //\n    // Moving\n    var movableColumns = this.table.visibleColumns().filter(function(column) {\n      return !column.fixedPosition;\n    });\n    if (movableColumns.length > 1 && !this.column.fixedPosition) {\n      this.leftGroups.push(this._renderMovingGroup());\n    }\n    // Sorting\n    if (this.table.sortEnabled) {\n      this.leftGroups.push(this._renderSortingGroup());\n    }\n    // Add/remove/change columns\n    if (this._isColumnActionsGroupVisible()) {\n      this.leftGroups.push(this._renderColumnActionsGroup());\n    }\n    // Grouping\n    // column.grouped check necessary to make ungroup possible, even if grouping is not possible anymore\n    if (this.table.isGroupingPossible(this.column) || this.column.grouped) {\n      this.leftGroups.push(this._renderGroupingGroup());\n    }\n\n    // Expand/Collapse\n    this.leftGroups.push(this._renderHierarchyGruop());\n\n    // Aggregation\n    if (this.table.isAggregationPossible(this.column)) {\n      this.leftGroups.push(this._renderAggregationGroup());\n    }\n    // Coloring\n    if (this.column instanceof NumberColumn) {\n      this.leftGroups.push(this._renderColoringGroup());\n    }\n\n    // -- Right column -- //\n    // Filter table\n    if (this.hasFilterTable) {\n      this.$rightGroups.push(this._renderFilterTable());\n    }\n    // Filter fields\n    if (this.hasFilterFields) {\n      this.$rightGroups.push(this._renderFilterFields());\n    }\n\n    this._onColumnMoved();\n\n    // Set table style to focused, so that it looks as it still has the focus.\n    if (this.table.enabled) {\n      this.table.$container.addClass('focused');\n    }\n  }\n\n  /**\n   * @override\n   */\n  get$Scrollable() {\n    return this.$body;\n  }\n\n  _updateFirstLast() {\n    addFirstLastClass(this.leftGroups.filter(function(group) {\n      return group.isVisible();\n    }));\n    addFirstLastClass(this.$rightGroups);\n\n    function addFirstLastClass(groups) {\n      groups.forEach(function(group, index, arr) {\n        toggleCssClass(group, 'first', index === 0);\n        toggleCssClass(group, 'last', index === arr.length - 1);\n      }, this);\n    }\n\n    // Note: we should refactor code for filter-fields and filter-table so they could also\n    // work with a model-class (like the button menu groups). Currently this would cause\n    // to much work.\n    function toggleCssClass(group, cssClass, condition) {\n      var $container = group instanceof TableHeaderMenuGroup ? group.$container : group;\n      $container.toggleClass(cssClass, condition);\n    }\n  }\n\n  _remove() {\n    if (this.filterTable) {\n      this.filterTable.off('rowsChecked', this._filterTableRowsCheckedHandler);\n    }\n    this.tableHeader.$container.off('scroll', this._tableHeaderScrollHandler);\n    this.$headerItem.select(false);\n    this.table.off('columnMoved', this._onColumnMovedHandler);\n    this.table.off('filterAdded', this._tableFilterHandler);\n    this.table.off('filterRemoved', this._tableFilterHandler);\n    super._remove();\n\n    // table may have been removed in the meantime\n    if (this.table.rendered) {\n      this.table.$container.removeClass('focused');\n    }\n  }\n\n  _renderMovingGroup() {\n    var table = this.table,\n      column = this.column,\n      pos = table.visibleColumns().indexOf(column);\n\n    this.moveGroup = scout.create('TableHeaderMenuGroup', {\n      parent: this,\n      textKey: 'ui.Move',\n      cssClass: 'first'\n    });\n    this.toBeginButton = scout.create('TableHeaderMenuButton', {\n      parent: this.moveGroup,\n      text: '${textKey:ui.toBegin}',\n      cssClass: 'move move-top'\n    });\n    this.toBeginButton.on('action', function() {\n      table.moveColumn(column, pos, 0);\n      pos = table.visibleColumns().indexOf(column);\n    });\n\n    this.forwardButton = scout.create('TableHeaderMenuButton', {\n      parent: this.moveGroup,\n      text: '${textKey:ui.forward}',\n      cssClass: 'move move-up'\n    });\n    this.forwardButton.on('action', function() {\n      table.moveColumn(column, pos, Math.max(pos - 1, 0));\n      pos = table.visibleColumns().indexOf(column);\n    });\n\n    this.backwardButton = scout.create('TableHeaderMenuButton', {\n      parent: this.moveGroup,\n      text: '${textKey:ui.backward}',\n      cssClass: 'move move-down'\n    });\n    this.backwardButton.on('action', function() {\n      table.moveColumn(column, pos, Math.min(pos + 1, table.header.findHeaderItems().length - 1));\n      pos = table.visibleColumns().indexOf(column);\n    });\n\n    this.toEndButton = scout.create('TableHeaderMenuButton', {\n      parent: this.moveGroup,\n      text: '${textKey:ui.toEnd}',\n      cssClass: 'move move-bottom'\n    });\n    this.toEndButton.on('action', function() {\n      table.moveColumn(column, pos, table.header.findHeaderItems().length - 1);\n      pos = table.visibleColumns().indexOf(column);\n    });\n\n    this.moveGroup.render(this.$columnActions);\n    return this.moveGroup;\n  }\n\n  _onColumnMoved() {\n    var table = this.table,\n      column = this.column;\n\n    if (this.moveGroup) {\n      var visibleColumns = table.visibleColumns();\n      var columnIndex = table.visibleColumns().indexOf(column);\n      var forwardEnabled = visibleColumns[columnIndex - 1] && !visibleColumns[columnIndex - 1].fixedPosition;\n      var backwardEnabled = visibleColumns[columnIndex + 1] && !visibleColumns[columnIndex + 1].fixedPosition;\n\n      this.toBeginButton.setEnabled(forwardEnabled);\n      this.forwardButton.setEnabled(forwardEnabled);\n      this.backwardButton.setEnabled(backwardEnabled);\n      this.toEndButton.setEnabled(backwardEnabled);\n    }\n\n    this.hierarchyGroup.setVisible(this.table.isTableNodeColumn(column));\n    this._updateFirstLast();\n  }\n\n  _isColumnActionsGroupVisible() {\n    return this.table.columnAddable || this.column.removable || this.column.modifiable;\n  }\n\n  _renderColumnActionsGroup() {\n    var column = this.column,\n      menuPopup = this;\n\n    this.columnActionsGroup = scout.create('TableHeaderMenuGroup', {\n      parent: this,\n      textKey: 'ui.Column'\n    });\n\n    this.addColumnButton = scout.create('TableHeaderMenuButton', {\n      parent: this.columnActionsGroup,\n      text: '${textKey:ui.addColumn}',\n      cssClass: 'add-column',\n      visible: this.table.columnAddable\n    });\n    this.addColumnButton.on('action', onClick.bind(this, 'add'));\n\n    this.removeColumnButton = scout.create('TableHeaderMenuButton', {\n      parent: this.columnActionsGroup,\n      text: '${textKey:ui.removeColumn}',\n      cssClass: 'remove-column',\n      visible: this.column.removable\n    });\n    this.removeColumnButton.on('action', onClick.bind(this, 'remove'));\n\n    this.modifyColumnButton = scout.create('TableHeaderMenuButton', {\n      parent: this.columnActionsGroup,\n      text: '${textKey:ui.changeColumn}',\n      cssClass: 'change-column',\n      visible: this.column.modifiable\n    });\n    this.modifyColumnButton.on('action', onClick.bind(this, 'modify'));\n\n    this.columnActionsGroup.render(this.$columnActions);\n    return this.columnActionsGroup;\n\n    function onClick(action) {\n      menuPopup.close();\n      this.table.trigger('columnOrganizeAction', {\n        action: action,\n        column: column\n      });\n    }\n  }\n\n  onColumnActionsChanged(event) {\n    this.addColumnButton.setVisible(event.addVisible);\n    this.removeColumnButton.setVisible(event.removeVisible);\n    this.modifyColumnButton.setVisible(event.modifyVisible);\n    var groupVisible = this.columnActionsGroup.children.some(function(button) {\n      return button.visible;\n    });\n    this.columnActionsGroup.setVisible(groupVisible);\n  }\n\n  _renderSortingGroup() {\n    var table = this.table,\n      column = this.column,\n      menuPopup = this;\n\n    this.sortingGroup = scout.create('TableHeaderMenuGroup', {\n      parent: this,\n      textKey: 'ColumnSorting'\n    });\n\n    if (!table.hasPermanentHeadOrTailSortColumns()) {\n      this.sortAscButton = scout.create('TableHeaderMenuButton', {\n        parent: this.sortingGroup,\n        text: '${textKey:ui.ascending}',\n        cssClass: 'sort sort-asc',\n        direction: 'asc',\n        toggleAction: true\n      });\n      this.sortAscButton.on('action', onSortClick.bind(this.sortAscButton));\n\n      this.sortDescButton = scout.create('TableHeaderMenuButton', {\n        parent: this.sortingGroup,\n        text: '${textKey:ui.descending}',\n        cssClass: 'sort sort-desc',\n        direction: 'desc',\n        toggleAction: true\n      });\n      this.sortDescButton.on('action', onSortClick.bind(this.sortDescButton));\n    }\n\n    this.sortAscAddButton = scout.create('TableHeaderMenuButton', {\n      parent: this.sortingGroup,\n      text: '${textKey:ui.ascendingAdditionally}',\n      cssClass: 'sort sort-asc-add',\n      direction: 'asc',\n      toggleAction: true\n    });\n    this.sortAscAddButton.on('action', onSortAdditionalClick.bind(this.sortAscAddButton));\n\n    this.sortDescAddButton = scout.create('TableHeaderMenuButton', {\n      parent: this.sortingGroup,\n      text: '${textKey:ui.descendingAdditionally}',\n      cssClass: 'sort sort-desc-add',\n      direction: 'desc',\n      toggleAction: true\n    });\n    this.sortDescAddButton.on('action', onSortAdditionalClick.bind(this.sortDescAddButton));\n\n    this._updateSortingSelectedState();\n    this.sortingGroup.render(this.$columnActions);\n    return this.sortingGroup;\n\n    function onSortClick() {\n      menuPopup.close();\n      sort(this.direction, false, !this.selected);\n    }\n\n    function onSortAdditionalClick() {\n      menuPopup.close();\n      sort(this.direction, true, !this.selected);\n    }\n\n    function sort(direction, multiSort, remove) {\n      table.sort(column, direction, multiSort, remove);\n      menuPopup._updateSortingSelectedState();\n    }\n  }\n\n  _updateSortingSelectedState() {\n    if (!this.table.sortEnabled) {\n      return;\n    }\n\n    var addIcon,\n      showAddCommands = false,\n      sortCount = this._sortColumnCount();\n\n    this.sortingGroup.children.forEach(function(button) {\n      button.setSelected(false);\n    });\n\n    if (sortCount === 1 && !this.table.hasPermanentHeadOrTailSortColumns()) {\n      if (this.column.sortActive) {\n        if (this.column.sortAscending) {\n          this.sortAscButton.setSelected(true);\n        } else {\n          this.sortDescButton.setSelected(true);\n        }\n      } else {\n        showAddCommands = true;\n      }\n    } else if (sortCount > 1 || this.table.hasPermanentHeadOrTailSortColumns()) {\n      showAddCommands = true;\n      if (this.column.sortActive) {\n        if (this.column.sortAscending) {\n          this.sortAscAddButton.setSelected(true);\n        } else {\n          this.sortDescAddButton.setSelected(true);\n        }\n        addIcon = this.column.sortIndex + 1;\n        this.sortAscAddButton.setIconId(addIcon);\n        this.sortDescAddButton.setIconId(addIcon);\n      }\n    }\n\n    this.sortAscAddButton.setVisible(showAddCommands);\n    this.sortDescAddButton.setVisible(showAddCommands);\n  }\n\n  _renderGroupingGroup() {\n    var menuPopup = this,\n      table = this.table,\n      column = this.column,\n      groupCount = this._groupColumnCount();\n\n    var group = scout.create('TableHeaderMenuGroup', {\n      parent: this,\n      textKey: 'ui.Grouping'\n    });\n\n    this.groupButton = scout.create('TableHeaderMenuButton', {\n      parent: group,\n      text: '${textKey:ui.groupingApply}',\n      cssClass: 'group',\n      additional: false,\n      toggleAction: true\n    });\n    this.groupButton.on('action', groupColumn.bind(this.groupButton));\n\n    this.groupAddButton = scout.create('TableHeaderMenuButton', {\n      parent: group,\n      text: '${textKey:ui.additionally}',\n      cssClass: 'group-add',\n      additional: true,\n      toggleAction: true\n    });\n    this.groupAddButton.on('action', groupColumn.bind(this.groupAddButton));\n\n    if (groupCount === 0) {\n      this.groupAddButton.setVisible(false);\n    } else if (groupCount === 1 && this.column.grouped) {\n      this.groupButton.setSelected(true);\n      this.groupAddButton.setVisible(false);\n    } else if (groupCount > 1) {\n      this.groupAddButton.setVisible(true);\n    }\n\n    if (table.hasPermanentHeadOrTailSortColumns() && groupCount > 0) {\n      // If table has permanent head columns, other columns may not be grouped exclusively -> only enable add button (equally done for sort buttons)\n      this.groupButton.setVisible(false);\n      this.groupAddButton.setVisible(true);\n    }\n\n    if (this.column.grouped) {\n      if (groupCount === 1) {\n        this.groupAddButton.setSelected(true);\n      } else if (groupCount > 1) {\n        this.groupAddButton.setSelected(true);\n        this.groupAddButton.setIconId(this.column.sortIndex + 1);\n      }\n    }\n\n    group.render(this.$columnActions);\n    return group;\n\n    function groupColumn() {\n      var direction = (column.sortIndex >= 0 && !column.sortAscending) ? 'desc' : 'asc';\n      menuPopup.close();\n      table.groupColumn(column, this.additional, direction, !this.selected);\n    }\n  }\n\n  _renderHierarchyGruop() {\n    var table = this.table,\n      menuPopup = this;\n    this.hierarchyGroup = scout.create('TableHeaderMenuGroup', {\n      parent: this,\n      textKey: 'ui.Hierarchy',\n      visible: this.table.isTableNodeColumn(this.column)\n    });\n\n    var collapseAllButton = scout.create('TableHeaderMenuButton', {\n      parent: this.hierarchyGroup,\n      text: '${textKey:ui.CollapseAll}',\n      cssClass: 'hierarchy-collapse-all',\n      enabled: !!arrays.find(table.rows, function(row) {\n        return row.expanded && !arrays.empty(row.childRows);\n      })\n    });\n    collapseAllButton.on('action', function() {\n      menuPopup.close();\n      table.collapseAll();\n    });\n\n    var expandAllButton = scout.create('TableHeaderMenuButton', {\n      parent: this.hierarchyGroup,\n      text: '${textKey:ui.ExpandAll}',\n      cssClass: 'hierarchy-expand-all',\n      enabled: !!arrays.find(table.rows, function(row) {\n        return !row.expanded && !arrays.empty(row.childRows);\n      })\n    });\n    expandAllButton.on('action', function() {\n      menuPopup.close();\n      table.expandAll();\n    });\n\n    this.hierarchyGroup.render(this.$columnActions);\n    return this.hierarchyGroup;\n  }\n\n  _renderAggregationGroup() {\n    var table = this.table,\n      column = this.column,\n      aggregation = column.aggregationFunction,\n      menuPopup = this,\n      group = scout.create('TableHeaderMenuGroup', {\n        parent: this,\n        textKey: 'ui.Aggregation'\n      }),\n      allowedAggregationFunctions = arrays.ensure(column.allowedAggregationFunctions),\n      isAggregationNoneAllowed = allowedAggregationFunctions.indexOf('none') !== -1;\n\n    createHeaderMenuButtonForAggregationFunction('${textKey:ui.Sum}', 'sum');\n    createHeaderMenuButtonForAggregationFunction('${textKey:ui.Average}', 'avg');\n    createHeaderMenuButtonForAggregationFunction('${textKey:ui.Minimum}', 'min');\n    createHeaderMenuButtonForAggregationFunction('${textKey:ui.Maximum}', 'max');\n\n    group.children.forEach(function(button) {\n      button.setSelected(button.aggregation === aggregation);\n    });\n    group.render(this.$columnActions);\n    return group;\n\n    function createHeaderMenuButtonForAggregationFunction(text, aggregation) {\n      if (allowedAggregationFunctions.indexOf(aggregation) !== -1) {\n        var aggrButton = scout.create('TableHeaderMenuButton', {\n          parent: group,\n          text: text,\n          cssClass: 'aggregation-function ' + aggregation,\n          aggregation: aggregation,\n          toggleAction: isAggregationNoneAllowed\n        });\n        aggrButton.on('action', onClick.bind(aggrButton));\n      }\n    }\n\n    function onClick() {\n      menuPopup.close();\n      table.changeAggregation(column, this.aggregation === aggregation ? 'none' : this.aggregation);\n    }\n  }\n\n  _renderColoringGroup() {\n    var table = this.table,\n      column = this.column,\n      menuPopup = this,\n      backgroundEffect = column.backgroundEffect,\n      group = scout.create('TableHeaderMenuGroup', {\n        parent: this,\n        textKey: 'ui.Coloring'\n      });\n\n    this.colorGradient1Button = scout.create('TableHeaderMenuButton', {\n      parent: group,\n      text: '${textKey:ui.fromRedToGreen}',\n      cssClass: 'color color-gradient1',\n      backgroundEffect: 'colorGradient1',\n      toggleAction: true\n    });\n    this.colorGradient1Button.on('action', onClick.bind(this.colorGradient1Button));\n\n    this.colorGradient2Button = scout.create('TableHeaderMenuButton', {\n      parent: group,\n      text: '${textKey:ui.fromGreenToRed}',\n      cssClass: 'color color-gradient2',\n      backgroundEffect: 'colorGradient2',\n      toggleAction: true\n    });\n    this.colorGradient2Button.on('action', onClick.bind(this.colorGradient2Button));\n\n    if (Device.get().supportsCssGradient()) {\n      this.barChartButton = scout.create('TableHeaderMenuButton', {\n        parent: group,\n        text: '${textKey:ui.withBarChart}',\n        cssClass: 'color color-bar-chart',\n        backgroundEffect: 'barChart',\n        toggleAction: true\n      });\n      this.barChartButton.on('action', onClick.bind(this.barChartButton));\n    }\n\n    group.children.forEach(function(button) {\n      button.setSelected(button.backgroundEffect === backgroundEffect);\n    });\n    group.render(this.$columnActions);\n    return group;\n\n    function onClick() {\n      menuPopup.close();\n      table.setColumnBackgroundEffect(column, !this.selected ? null : this.backgroundEffect);\n    }\n  }\n\n  _renderFilterTable() {\n    var $filterActions;\n\n    this.$filterTableGroup = this.$columnFilters\n      .appendDiv('table-header-menu-group first');\n    var htmlComp = HtmlComponent.install(this.$filterTableGroup, this.session);\n    htmlComp.setLayout(new RowLayout());\n\n    $filterActions = this.$filterTableGroup\n      .appendDiv('table-header-menu-filter-actions');\n\n    this.$filterSortOrder = $filterActions\n      .appendDiv('table-header-menu-toggle-sort-order')\n      .on('click', this._onSortModeClick.bind(this))\n      .addClass(this.filterSortMode.cssClass);\n\n    this.$filterToggleChecked = $filterActions\n      .appendDiv('table-header-menu-filter-toggle-checked')\n      .text(this.session.text(this.filterCheckedMode.text))\n      .on('click', this._onFilterCheckedModeClick.bind(this));\n\n    this.$filterTableGroupTitle = this.$filterTableGroup\n      .appendDiv('table-header-menu-group-text')\n      .text(this._filterByText());\n    HtmlComponent.install(this.$filterTableGroupTitle, this.session);\n\n    this.filterTable = this._createFilterTable();\n    this.filterTable.on('rowsChecked', this._filterTableRowsCheckedHandler);\n    var tableRow, tableRows = [];\n    this.filter.availableValues.forEach(function(filterValue) {\n      tableRow = {\n        cells: [\n          scout.create('Cell', {\n            text: (this.filter.column.objectType === 'NumberColumn') ? filterValue.text : null,\n            value: (this.filter.column.objectType === 'NumberColumn') ? filterValue.key : filterValue.text,\n            iconId: filterValue.iconId,\n            htmlEnabled: filterValue.htmlEnabled,\n            cssClass: filterValue.cssClass\n          }),\n          filterValue.count,\n          filterValue.key === null ? 1 : 0 // empty cell should always be at the bottom\n        ],\n        checked: this.filter.selectedValues.indexOf(filterValue.key) > -1,\n        dataMap: {\n          filterValue: filterValue\n        }\n      };\n      tableRows.push(tableRow);\n    }, this);\n    this.filterTable.insertRows(tableRows);\n    this.filterTable.render(this.$filterTableGroup);\n\n    // must do this in a setTimeout, since table/popup is not visible yet (same as Table#revealSelection).\n    setTimeout(this.filterTable.revealChecked.bind(this.filterTable));\n\n    return this.$filterTableGroup;\n  }\n\n  _createFilterTable() {\n    var objectType = 'Column';\n    if (this.column.objectType === 'NumberColumn') {\n      objectType = this.column.objectType;\n    }\n\n    return scout.create('Table', {\n      parent: this,\n      headerVisible: false,\n      multiSelect: false,\n      autoResizeColumns: true,\n      checkable: true,\n      checkableStyle: Table.CheckableStyle.TABLE_ROW,\n      // column-texts are not visible since header is not visible\n      columns: [{\n        objectType: objectType,\n        text: 'filter-value',\n        width: 160,\n        sortActive: true,\n        sortIndex: 1,\n        horizontalAlignment: -1\n      }, {\n        objectType: 'NumberColumn',\n        text: 'aggregate-count',\n        width: 40\n      }, {\n        objectType: 'NumberColumn',\n        displayable: false,\n        sortActive: true,\n        sortIndex: 0\n      }]\n    });\n  }\n\n  /**\n   * @returns {string} the title-text used for the filter-table\n   */\n  _filterByText() {\n    var text = this.session.text('ui.Filter'),\n      numSelected = this.filter.selectedValues.length,\n      numFilters = this.filter.availableValues.length;\n\n    if (numSelected && numFilters) {\n      text += ' ' + this.session.text('ui.FilterInfoXOfY', numSelected, numFilters);\n    } else if (numFilters) {\n      text += ' ' + this.session.text('ui.FilterInfoCount', numFilters);\n    }\n    return text;\n  }\n\n  _onFilterCheckedModeClick() {\n    var checkedMode = TableHeaderMenu.CheckedMode;\n    var checkAll = this.filterCheckedMode.checkAll;\n    this.filter.selectedValues = [];\n    if (this.filterCheckedMode === checkedMode.ALL) {\n      this.filterCheckedMode = checkedMode.NONE;\n      this.filter.availableValues.forEach(function(filterValue) {\n        this.filter.selectedValues.push(filterValue.key);\n      }, this);\n    } else {\n      this.filterCheckedMode = checkedMode.ALL;\n    }\n    this.filterTable.checkAll(checkAll);\n    this._updateFilterTableActions();\n  }\n\n  _onSortModeClick() {\n    var sortMode = TableHeaderMenu.SortMode;\n    if (this.filterSortMode === sortMode.ALPHABETICALLY) {\n      // sort by amount\n      this.filterTable.sort(this.filterTable.columns[1], 'desc');\n      this.filterSortMode = sortMode.AMOUNT;\n    } else {\n      // sort alphabetically (first by invisible column to make sure empty cells are always at the bottom)\n      this.filterTable.sort(this.filterTable.columns[2], 'asc');\n      this.filterTable.sort(this.filterTable.columns[0], 'asc', true);\n      this.filterSortMode = sortMode.ALPHABETICALLY;\n    }\n    this._updateFilterTableActions();\n  }\n\n  _updateFilterTable() {\n    if (this.filter.filterActive()) {\n      this.table.addFilter(this.filter);\n    } else {\n      this.table.removeFilterByKey(this.column.id);\n    }\n    // callback to table\n    this.table.filter();\n  }\n\n  _updateFilterTableActions() {\n    // checked mode\n    this.$filterToggleChecked.text(this.session.text(this.filterCheckedMode.text));\n    // sort mode\n    var sortMode = TableHeaderMenu.SortMode;\n    var sortAlphabetically = this.filterSortMode === TableHeaderMenu.SortMode.ALPHABETICALLY;\n    this.$filterSortOrder.toggleClass(sortMode.ALPHABETICALLY.cssClass, sortAlphabetically);\n    this.$filterSortOrder.toggleClass(sortMode.AMOUNT.cssClass, !sortAlphabetically);\n  }\n\n  _renderFilterFields() {\n    this.filterFieldsGroupBox = scout.create('GroupBox:FilterFields', {\n      parent: this,\n      column: this.column,\n      filter: this.filter\n    });\n    this.$filterFieldsGroup = this.$columnFilters.appendDiv('table-header-menu-group');\n    var htmlComp = HtmlComponent.install(this.$filterFieldsGroup, this.session);\n    htmlComp.setLayout(new RowLayout());\n    var $filterFieldsText = this.$filterFieldsGroup\n      .appendDiv('table-header-menu-group-text')\n      .text(this.filter.filterFieldsTitle());\n    htmlComp = HtmlComponent.install($filterFieldsText, this.session);\n    this.filterFieldsGroupBox.render(this.$filterFieldsGroup);\n    return this.$filterFieldsGroup;\n  }\n\n  isOpenFor($headerItem) {\n    return this.rendered && this.belongsTo($headerItem);\n  }\n\n  _countColumns(propertyName) {\n    return this.table.visibleColumns().reduce(function(sum, column) {\n      return sum + (column[propertyName] ? 1 : 0);\n    }, 0);\n  }\n\n  _sortColumnCount() {\n    return this._countColumns('sortActive');\n  }\n\n  _groupColumnCount() {\n    return this._countColumns('grouped');\n  }\n\n  _computeWhitherWidth() {\n    var $tableHeaderContainer = this.tableHeader.$container,\n      headerItemWidth = this.$headerItem.outerWidth() - this.$headerItem.cssBorderWidthX(),\n      containerWidth = this.$container.outerWidth() - this.$container.cssBorderWidthX(),\n      tableHeaderWidth = $tableHeaderContainer.outerWidth() - this.tableHeader.menuBar.$container.outerWidth();\n\n    // if container is wider than header item -> use header item width, otherwise use container width\n    var whitherWidth = Math.min(headerItemWidth, containerWidth);\n    // if container is positioned at the right side, header item may not be fully visible (under the menubar or partly invisible due to scrolling)\n    whitherWidth = Math.min(whitherWidth, tableHeaderWidth - this.$headerItem.position().left);\n    var clipLeft = $tableHeaderContainer.offset().left - this.$headerItem.offset().left - this.tableHeader.table.$container.cssBorderLeftWidth();\n    if (clipLeft > 0) {\n      whitherWidth -= clipLeft;\n    }\n    return whitherWidth;\n  }\n\n  _renderCompact() {\n    this.$body.toggleClass('compact', this.compact);\n    this.invalidateLayoutTree();\n  }\n\n  setCompact(compact) {\n    this.setProperty('compact', compact);\n  }\n\n  _onLocationChange(event) {\n    var inView, containerBounds,\n      isLocationInView = scrollbars.isLocationInView,\n      headerItemBounds = graphics.offsetBounds(this.$headerItem),\n      $tableHeaderContainer = this.tableHeader.$container;\n\n    this.$container.setVisible(true);\n    containerBounds = graphics.offsetBounds(this.$container);\n\n    // menu must only be visible if the header item is in view (menu gets repositioned when the table gets scrolled -> make sure it won't be displayed outside of the table)\n    // check left side of the header item (necessary if header item is moved outside on the left side of the table)\n    inView = isLocationInView(new Point(headerItemBounds.x, headerItemBounds.y), $tableHeaderContainer);\n    if (!inView) {\n      // if left side of the header is not in view, check if right side of the header and the menu, both must be visible)\n      // check right side of the header item (necessary if header item is moved outside on the right side of the table)\n      inView = isLocationInView(new Point(headerItemBounds.x + headerItemBounds.width, headerItemBounds.y + headerItemBounds.height), $tableHeaderContainer);\n      // check right side of the menu (necessary if header item is larger than menu, and if header item is moved outside on the left side of the table)\n      inView = inView && isLocationInView(new Point(containerBounds.x + containerBounds.width, containerBounds.y), $tableHeaderContainer);\n    }\n    this.$container.setVisible(inView);\n\n    // make sure whither is correctly positioned and sized\n    // (bounds must be computed after setVisible, if it was hidden before bounds are not correct)\n    containerBounds = graphics.offsetBounds(this.$container);\n    this.$whiter\n      // if header is clipped on the left side, position whither at the left of the visible part of the header (same applies for width, see _computeWhitherWidth)\n      .cssLeft(Math.max(headerItemBounds.x - containerBounds.x, $tableHeaderContainer.offset().left - containerBounds.x - this.tableHeader.table.$container.cssBorderLeftWidth()))\n      .width(this._computeWhitherWidth());\n  }\n\n  _onAnchorScroll(event) {\n    this.position();\n  }\n\n  _onFilterTableRowsChecked(event) {\n    this.filter.selectedValues = [];\n    this.filterTable.rows.forEach(function(row) {\n      if (row.checked) {\n        this.filter.selectedValues.push(row.dataMap.filterValue.key);\n      }\n    }, this);\n    this._updateFilterTable();\n  }\n\n  _onFilterTableChanged() {\n    this.$filterTableGroupTitle.text(this._filterByText());\n    this._updateFilterTableCheckedMode();\n    this._updateFilterTableActions();\n  }\n\n  // When no filter value is selected, we change the selection mode to ALL\n  // since it makes no sense to choose NONE when no value is currently selected\n  _updateFilterTableCheckedMode() {\n    if (this.filter.selectedValues.length === 0) {\n      this.filterCheckedMode = TableHeaderMenu.CheckedMode.ALL;\n    } else {\n      this.filterCheckedMode = TableHeaderMenu.CheckedMode.NONE;\n    }\n  }\n\n  _onMouseDownOutside(event) {\n    // close popup only if source of event is not $headerItem or one of it's children.\n    if (this.$headerItem.isOrHas(event.target)) {\n      return;\n    }\n    this.close();\n  }\n\n  /**\n   * Called by table header\n   */\n  onColumnResized() {\n    // Adjust whiter with if size gets changed while menu is open (may caused by TableHeader._adjustColumnMinWidth)\n    this.$whiter.width(this._computeWhitherWidth());\n  }\n}\n"]},"metadata":{},"sourceType":"module"}