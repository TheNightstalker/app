{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { objects } from '../index';\n\nvar TextMap = /*#__PURE__*/function () {\n  function TextMap(textMap) {\n    _classCallCheck(this, TextMap);\n\n    this.map = textMap || {};\n  }\n\n  _createClass(TextMap, [{\n    key: \"get\",\n\n    /**\n     * Returns the text for the given key.\n     * If the key does not exist in this text map, a lookup in the parent text map is done.\n     *\n     * @param textKey key to lookup the text\n     * @param vararg texts to replace the placeholders specified by {0}, {1}, etc.\n     */\n    value: function get(textKey) {\n      if (!this._exists(textKey)) {\n        if (this.parent) {\n          var _this$parent;\n\n          return (_this$parent = this.parent).get.apply(_this$parent, arguments);\n        }\n\n        return '[undefined text: ' + textKey + ']';\n      }\n\n      var len = arguments.length,\n          text = this.map[textKey];\n\n      if (len === 1) {\n        return text;\n      }\n\n      for (var i = 1; i < len; i++) {\n        text = text.replace(new RegExp('\\\\{' + (i - 1) + '\\\\}', 'g'), arguments[i]);\n      }\n\n      return text;\n    }\n  }, {\n    key: \"optGet\",\n    value: function optGet(textKey, defaultValue) {\n      if (!this._exists(textKey)) {\n        if (this.parent) {\n          var _this$parent2;\n\n          return (_this$parent2 = this.parent).optGet.apply(_this$parent2, arguments);\n        }\n\n        return defaultValue;\n      }\n\n      if (arguments.length > 2) {\n        // dynamically call text() without 'defaultValue' argument\n        var args = Array.prototype.slice.call(arguments).slice(2);\n        args.unshift(textKey); // add textKey as first argument\n\n        return this.get.apply(this, _toConsumableArray(args));\n      }\n\n      return this.get(textKey);\n    }\n  }, {\n    key: \"exists\",\n    value: function exists(textKey) {\n      if (this._exists(textKey)) {\n        return true;\n      }\n\n      if (this.parent) {\n        return this.parent.exists(textKey);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_exists\",\n    value: function _exists(textKey) {\n      return this.map.hasOwnProperty(textKey);\n    }\n  }, {\n    key: \"add\",\n    value: function add(textKey, text) {\n      this.map[textKey] = text;\n    }\n    /**\n     * Adds all texts from the given textMap to this textMap\n     * @param {Object|TextMap} textMap either a plain object or a {@link TextMap}\n     */\n\n  }, {\n    key: \"addAll\",\n    value: function addAll(textMap) {\n      if (!textMap) {\n        return;\n      }\n\n      if (textMap instanceof TextMap) {\n        textMap = textMap.map;\n      }\n\n      objects.copyOwnProperties(textMap, this.map);\n    }\n  }, {\n    key: \"setParent\",\n    value: function setParent(parent) {\n      this.parent = parent;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(textKey) {\n      delete this.map[textKey];\n    }\n  }]);\n\n  return TextMap;\n}();\n\n_defineProperty(TextMap, \"TEXT_KEY_REGEX\", /\\${textKey:([a-zA-Z0-9.]*)}/);\n\nexport { TextMap as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/text/TextMap.js"],"names":["objects","TextMap","textMap","map","textKey","_exists","parent","get","arguments","len","length","text","i","replace","RegExp","defaultValue","optGet","args","slice","unshift","exists","hasOwnProperty","copyOwnProperties"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,OAAR,QAAsB,UAAtB;;IAEqBC,O;AAEnB,mBAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKC,GAAL,GAAWD,OAAO,IAAI,EAAtB;AACD;;;;;AAID;AACF;AACA;AACA;AACA;AACA;AACA;wBACME,O,EAAS;AACX,UAAI,CAAC,KAAKC,OAAL,CAAaD,OAAb,CAAL,EAA4B;AAC1B,YAAI,KAAKE,MAAT,EAAiB;AAAA;;AACf,iBAAO,qBAAKA,MAAL,EAAYC,GAAZ,qBAAmBC,SAAnB,CAAP;AACD;;AACD,eAAO,sBAAsBJ,OAAtB,GAAgC,GAAvC;AACD;;AACD,UAAIK,GAAG,GAAGD,SAAS,CAACE,MAApB;AAAA,UACEC,IAAI,GAAG,KAAKR,GAAL,CAASC,OAAT,CADT;;AAGA,UAAIK,GAAG,KAAK,CAAZ,EAAe;AACb,eAAOE,IAAP;AACD;;AAED,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAApB,EAAyBG,CAAC,EAA1B,EAA8B;AAC5BD,QAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAa,IAAIC,MAAJ,CAAW,SAASF,CAAC,GAAG,CAAb,IAAkB,KAA7B,EAAoC,GAApC,CAAb,EAAuDJ,SAAS,CAACI,CAAD,CAAhE,CAAP;AACD;;AACD,aAAOD,IAAP;AACD;;;2BAEMP,O,EAASW,Y,EAAc;AAC5B,UAAI,CAAC,KAAKV,OAAL,CAAaD,OAAb,CAAL,EAA4B;AAC1B,YAAI,KAAKE,MAAT,EAAiB;AAAA;;AACf,iBAAO,sBAAKA,MAAL,EAAYU,MAAZ,sBAAsBR,SAAtB,CAAP;AACD;;AACD,eAAOO,YAAP;AACD;;AACD,UAAIP,SAAS,CAACE,MAAV,GAAmB,CAAvB,EAA0B;AACxB;AACA,YAAIO,IAAI,GAAG,2BAAIT,SAAJ,EAAeU,KAAf,CAAqB,CAArB,CAAX;AACAD,QAAAA,IAAI,CAACE,OAAL,CAAaf,OAAb,EAHwB,CAGD;;AACvB,eAAO,KAAKG,GAAL,gCAAYU,IAAZ,EAAP;AACD;;AACD,aAAO,KAAKV,GAAL,CAASH,OAAT,CAAP;AACD;;;2BAEMA,O,EAAS;AACd,UAAI,KAAKC,OAAL,CAAaD,OAAb,CAAJ,EAA2B;AACzB,eAAO,IAAP;AACD;;AACD,UAAI,KAAKE,MAAT,EAAiB;AACf,eAAO,KAAKA,MAAL,CAAYc,MAAZ,CAAmBhB,OAAnB,CAAP;AACD;;AACD,aAAO,KAAP;AACD;;;4BAEOA,O,EAAS;AACf,aAAO,KAAKD,GAAL,CAASkB,cAAT,CAAwBjB,OAAxB,CAAP;AACD;;;wBAEGA,O,EAASO,I,EAAM;AACjB,WAAKR,GAAL,CAASC,OAAT,IAAoBO,IAApB;AACD;AAED;AACF;AACA;AACA;;;;2BACST,O,EAAS;AACd,UAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AACD,UAAIA,OAAO,YAAYD,OAAvB,EAAgC;AAC9BC,QAAAA,OAAO,GAAGA,OAAO,CAACC,GAAlB;AACD;;AACDH,MAAAA,OAAO,CAACsB,iBAAR,CAA0BpB,OAA1B,EAAmC,KAAKC,GAAxC;AACD;;;8BAESG,M,EAAQ;AAChB,WAAKA,MAAL,GAAcA,MAAd;AACD;;;2BAEMF,O,EAAS;AACd,aAAO,KAAKD,GAAL,CAASC,OAAT,CAAP;AACD;;;;;;gBAzFkBH,O,oBAMK,6B;;SANLA,O","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {objects} from '../index';\n\nexport default class TextMap {\n\n  constructor(textMap) {\n    this.map = textMap || {};\n  }\n\n  static TEXT_KEY_REGEX = /\\${textKey:([a-zA-Z0-9.]*)}/;\n\n  /**\n   * Returns the text for the given key.\n   * If the key does not exist in this text map, a lookup in the parent text map is done.\n   *\n   * @param textKey key to lookup the text\n   * @param vararg texts to replace the placeholders specified by {0}, {1}, etc.\n   */\n  get(textKey) {\n    if (!this._exists(textKey)) {\n      if (this.parent) {\n        return this.parent.get(...arguments);\n      }\n      return '[undefined text: ' + textKey + ']';\n    }\n    var len = arguments.length,\n      text = this.map[textKey];\n\n    if (len === 1) {\n      return text;\n    }\n\n    for (var i = 1; i < len; i++) {\n      text = text.replace(new RegExp('\\\\{' + (i - 1) + '\\\\}', 'g'), arguments[i]);\n    }\n    return text;\n  }\n\n  optGet(textKey, defaultValue) {\n    if (!this._exists(textKey)) {\n      if (this.parent) {\n        return this.parent.optGet(...arguments);\n      }\n      return defaultValue;\n    }\n    if (arguments.length > 2) {\n      // dynamically call text() without 'defaultValue' argument\n      var args = [...arguments].slice(2);\n      args.unshift(textKey); // add textKey as first argument\n      return this.get(...args);\n    }\n    return this.get(textKey);\n  }\n\n  exists(textKey) {\n    if (this._exists(textKey)) {\n      return true;\n    }\n    if (this.parent) {\n      return this.parent.exists(textKey);\n    }\n    return false;\n  }\n\n  _exists(textKey) {\n    return this.map.hasOwnProperty(textKey);\n  }\n\n  add(textKey, text) {\n    this.map[textKey] = text;\n  }\n\n  /**\n   * Adds all texts from the given textMap to this textMap\n   * @param {Object|TextMap} textMap either a plain object or a {@link TextMap}\n   */\n  addAll(textMap) {\n    if (!textMap) {\n      return;\n    }\n    if (textMap instanceof TextMap) {\n      textMap = textMap.map;\n    }\n    objects.copyOwnProperties(textMap, this.map);\n  }\n\n  setParent(parent) {\n    this.parent = parent;\n  }\n\n  remove(textKey) {\n    delete this.map[textKey];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}