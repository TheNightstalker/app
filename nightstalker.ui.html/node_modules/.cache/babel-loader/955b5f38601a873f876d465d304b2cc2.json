{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { GridData, LogicalGrid } from '../../index';\n/**\n * @abstract\n */\n\nvar AbstractGrid = /*#__PURE__*/function (_LogicalGrid) {\n  _inherits(AbstractGrid, _LogicalGrid);\n\n  var _super = _createSuper(AbstractGrid);\n\n  function AbstractGrid(options) {\n    var _this;\n\n    _classCallCheck(this, AbstractGrid);\n\n    _this = _super.call(this, options);\n    _this.gridRows = 0;\n    _this.gridColumns = 0;\n    return _this;\n  }\n  /**\n   * Expects this.gridConfig to be set\n   * @override\n   */\n\n\n  _createClass(AbstractGrid, [{\n    key: \"_validate\",\n    value: function _validate(gridContainer) {\n      // reset old state\n      this.gridRows = 0;\n      this.gridConfig.setWidget(gridContainer); // step 0: column count\n\n      this.gridColumns = this.gridConfig.getGridColumnCount();\n      var containingGridXYCount = 0;\n      var notContainingGridXYCount = 0; // build\n\n      var widgets = [];\n      this.gridConfig.getGridWidgets().forEach(function (widget) {\n        if (widget.isVisible()) {\n          widgets.push(widget);\n          var hints = widget.gridDataHints;\n\n          if (hints && hints.x >= 0 && hints.y >= 0) {\n            containingGridXYCount++;\n          } else {\n            notContainingGridXYCount++;\n          }\n        } else {\n          var gd = GridData.createFromHints(widget, 1);\n          widget.gridData = gd;\n        }\n      });\n\n      if (containingGridXYCount > 0 && notContainingGridXYCount === 0) {\n        this.layoutAllStatic(widgets);\n      } else {\n        this.layoutAllDynamic(widgets);\n      }\n    }\n  }, {\n    key: \"layoutAllStatic\",\n    value: function layoutAllStatic(widgets) {\n      var hints = [];\n      widgets.forEach(function (v) {\n        hints.push(GridData.createFromHints(v, 1));\n      });\n      var totalGridW = hints.reduce(function (x, y) {\n        var y1 = y.x + y.w;\n        return y1 > x ? y1 : x;\n      }, 1);\n      var totalGridH = hints.reduce(function (x, y) {\n        var y1 = y.y + y.h;\n        return y1 > x ? y1 : x;\n      }, 0);\n      widgets.forEach(function (v) {\n        v.gridData = GridData.createFromHints(v, totalGridW);\n      });\n      this.gridRows = totalGridH;\n      this.gridColumns = totalGridW;\n    }\n  }, {\n    key: \"layoutAllDynamic\",\n    value: function layoutAllDynamic(widgets) {// abstract, must be implemented by sub classes\n    }\n  }, {\n    key: \"getGridColumnCount\",\n    value: function getGridColumnCount() {\n      return this.gridColumns;\n    }\n  }, {\n    key: \"getGridRowCount\",\n    value: function getGridRowCount() {\n      return this.gridRows;\n    }\n    /**\n     * If grid w is greater than column count, grid w will be set to the column count.\n     */\n\n  }], [{\n    key: \"getGridDataFromHints\",\n    value: function getGridDataFromHints(widget, groupBoxColumnCount) {\n      var data = GridData.createFromHints(widget, groupBoxColumnCount);\n      data.w = Math.min(groupBoxColumnCount, data.w);\n      return data;\n    }\n  }]);\n\n  return AbstractGrid;\n}(LogicalGrid);\n\nexport { AbstractGrid as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/layout/logicalgrid/AbstractGrid.js"],"names":["GridData","LogicalGrid","AbstractGrid","options","gridRows","gridColumns","gridContainer","gridConfig","setWidget","getGridColumnCount","containingGridXYCount","notContainingGridXYCount","widgets","getGridWidgets","forEach","widget","isVisible","push","hints","gridDataHints","x","y","gd","createFromHints","gridData","layoutAllStatic","layoutAllDynamic","v","totalGridW","reduce","y1","w","totalGridH","h","groupBoxColumnCount","data","Math","min"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {GridData, LogicalGrid} from '../../index';\n\n/**\n * @abstract\n */\nexport default class AbstractGrid extends LogicalGrid {\n\n  constructor(options) {\n    super(options);\n    this.gridRows = 0;\n    this.gridColumns = 0;\n  }\n\n  /**\n   * Expects this.gridConfig to be set\n   * @override\n   */\n  _validate(gridContainer) {\n    // reset old state\n    this.gridRows = 0;\n    this.gridConfig.setWidget(gridContainer);\n    // step 0: column count\n    this.gridColumns = this.gridConfig.getGridColumnCount();\n    var containingGridXYCount = 0;\n    var notContainingGridXYCount = 0;\n    // build\n    var widgets = [];\n    this.gridConfig.getGridWidgets().forEach(function(widget) {\n      if (widget.isVisible()) {\n        widgets.push(widget);\n        var hints = widget.gridDataHints;\n        if (hints && hints.x >= 0 && hints.y >= 0) {\n          containingGridXYCount++;\n        } else {\n          notContainingGridXYCount++;\n        }\n      } else {\n        var gd = GridData.createFromHints(widget, 1);\n        widget.gridData = gd;\n      }\n    });\n    if (containingGridXYCount > 0 && notContainingGridXYCount === 0) {\n      this.layoutAllStatic(widgets);\n    } else {\n      this.layoutAllDynamic(widgets);\n    }\n  }\n\n  layoutAllStatic(widgets) {\n    var hints = [];\n    widgets.forEach(function(v) {\n      hints.push(GridData.createFromHints(v, 1));\n    });\n    var totalGridW = hints.reduce(function(x, y) {\n      var y1 = y.x + y.w;\n      return y1 > x ? y1 : x;\n    }, 1);\n    var totalGridH = hints.reduce(function(x, y) {\n      var y1 = y.y + y.h;\n      return y1 > x ? y1 : x;\n    }, 0);\n    widgets.forEach(function(v) {\n      v.gridData = GridData.createFromHints(v, totalGridW);\n    });\n    this.gridRows = totalGridH;\n    this.gridColumns = totalGridW;\n  }\n\n  layoutAllDynamic(widgets) {\n    // abstract, must be implemented by sub classes\n  }\n\n  getGridColumnCount() {\n    return this.gridColumns;\n  }\n\n  getGridRowCount() {\n    return this.gridRows;\n  }\n\n  /**\n   * If grid w is greater than column count, grid w will be set to the column count.\n   */\n  static getGridDataFromHints(widget, groupBoxColumnCount) {\n    var data = GridData.createFromHints(widget, groupBoxColumnCount);\n    data.w = Math.min(groupBoxColumnCount, data.w);\n    return data;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}