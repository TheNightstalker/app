{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { graphics, HtmlComponent, icons, KeyStrokeContext, scout, ViewMenuOpenKeyStroke, Widget } from '../../index';\n/**\n * Shows a list of view buttons with displayStyle=MENU\n * and shows the title of the active view button, if the view button is one\n * of the view buttons contained in the menu.\n */\n\nvar ViewMenuTab = /*#__PURE__*/function (_Widget) {\n  _inherits(ViewMenuTab, _Widget);\n\n  var _super = _createSuper(ViewMenuTab);\n\n  function ViewMenuTab() {\n    var _this;\n\n    _classCallCheck(this, ViewMenuTab);\n\n    _this = _super.call(this);\n    _this.viewButtons = [];\n    _this.selected = false;\n    _this.selectedButton = null;\n    _this.viewTabVisible = true;\n    _this.defaultIconId = icons.FOLDER;\n\n    _this._addWidgetProperties(['selectedButton']);\n\n    return _this;\n  }\n\n  _createClass(ViewMenuTab, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(ViewMenuTab.prototype), \"_init\", this).call(this, model);\n\n      this.dropdown = scout.create('Menu', {\n        parent: this,\n        iconId: icons.ANGLE_DOWN,\n        tabbable: false,\n        cssClass: 'view-menu'\n      });\n      this.dropdown.on('action', this.togglePopup.bind(this));\n\n      this._setViewButtons(this.viewButtons);\n    }\n  }, {\n    key: \"_initKeyStrokeContext\",\n    value: function _initKeyStrokeContext() {\n      _get(_getPrototypeOf(ViewMenuTab.prototype), \"_initKeyStrokeContext\", this).call(this); // Bound to desktop\n\n\n      this.desktopKeyStrokeContext = new KeyStrokeContext();\n      this.desktopKeyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n      this.desktopKeyStrokeContext.$bindTarget = this.session.desktop.$container;\n      this.desktopKeyStrokeContext.$scopeTarget = this.session.desktop.$container;\n      this.desktopKeyStrokeContext.registerKeyStroke([new ViewMenuOpenKeyStroke(this)]);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent.appendDiv('view-tab');\n      this.htmlComp = HtmlComponent.install(this.$container, this.session);\n      this.dropdown.render(this.$container);\n      this.session.keyStrokeManager.installKeyStrokeContext(this.desktopKeyStrokeContext);\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.session.keyStrokeManager.uninstallKeyStrokeContext(this.desktopKeyStrokeContext);\n\n      _get(_getPrototypeOf(ViewMenuTab.prototype), \"_remove\", this).call(this);\n\n      if (this.selectedButton) {\n        this.selectedButton.remove();\n      }\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(ViewMenuTab.prototype), \"_renderProperties\", this).call(this);\n\n      this._updateSelectedButton();\n    }\n  }, {\n    key: \"setViewButtons\",\n    value: function setViewButtons(viewButtons) {\n      this.setProperty('viewButtons', viewButtons);\n    }\n  }, {\n    key: \"_setViewButtons\",\n    value: function _setViewButtons(viewButtons) {\n      this._setProperty('viewButtons', viewButtons);\n\n      this.setVisible(this.viewButtons.length > 0);\n\n      var selectedButton = this._findSelectedViewButton();\n\n      if (selectedButton) {\n        this.setSelectedButton(selectedButton);\n      } else {\n        this.setSelectedButton(this.viewButtons[0]);\n      }\n\n      this.setSelected(!!selectedButton);\n    }\n  }, {\n    key: \"setSelectedButton\",\n    value: function setSelectedButton(viewButton) {\n      if (this.selectedButton && this.selectedButton.cloneOf === viewButton) {\n        return;\n      }\n\n      if (viewButton) {\n        this.setProperty('selectedButton', viewButton);\n      }\n    }\n  }, {\n    key: \"_setSelectedButton\",\n    value: function _setSelectedButton(viewButton) {\n      viewButton = viewButton.clone({\n        parent: this,\n        displayStyle: 'TAB'\n      }, {\n        delegateEventsToOriginal: ['acceptInput', 'action'],\n        delegateAllPropertiesToClone: true,\n        delegateAllPropertiesToOriginal: true,\n        excludePropertiesToOriginal: ['selected']\n      }); // use default icon if outline does not define one.\n\n      viewButton.iconId = viewButton.iconId || this.defaultIconId;\n\n      this._setProperty('selectedButton', viewButton);\n    }\n  }, {\n    key: \"_renderSelectedButton\",\n    value: function _renderSelectedButton() {\n      this._updateSelectedButton();\n    }\n  }, {\n    key: \"_updateSelectedButton\",\n    value: function _updateSelectedButton() {\n      if (!this.selectedButton) {\n        return;\n      }\n\n      if (this.viewTabVisible) {\n        if (!this.selectedButton.rendered) {\n          this.selectedButton.render(this.$container);\n          this.invalidateLayoutTree();\n        }\n      } else {\n        if (this.selectedButton.rendered) {\n          this.selectedButton.remove();\n          this.invalidateLayoutTree();\n        }\n      }\n    }\n  }, {\n    key: \"setViewTabVisible\",\n    value: function setViewTabVisible(viewTabVisible) {\n      this.setProperty('viewTabVisible', viewTabVisible);\n\n      if (this.rendered) {\n        this._updateSelectedButton();\n      }\n    }\n  }, {\n    key: \"_renderSelected\",\n    value: function _renderSelected() {\n      this.$container.select(this.selected);\n    }\n  }, {\n    key: \"_findSelectedViewButton\",\n    value: function _findSelectedViewButton() {\n      var viewMenu;\n\n      for (var i = 0; i < this.viewButtons.length; i++) {\n        viewMenu = this.viewButtons[i];\n\n        if (viewMenu.selected) {\n          return viewMenu;\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Toggles the 'view menu popup', or brings the outline content to the front if in background.\n     */\n\n  }, {\n    key: \"togglePopup\",\n    value: function togglePopup() {\n      if (this.popup) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n      }\n    }\n  }, {\n    key: \"_openPopup\",\n    value: function _openPopup() {\n      if (this.popup) {\n        // already open\n        return;\n      }\n\n      var naviBounds = graphics.bounds(this.$container.parent(), true);\n      this.popup = scout.create('ViewMenuPopup', {\n        parent: this,\n        $tab: this.dropdown.$container,\n        viewMenus: this.viewButtons,\n        naviBounds: naviBounds\n      }); // The class needs to be added to the container before the popup gets opened so that the modified style may be copied to the head.\n\n      this.$container.addClass('popup-open');\n      this.popup.headText = this.text;\n      this.popup.open();\n      this.popup.on('remove', function (event) {\n        this.$container.removeClass('popup-open');\n        this.popup = null;\n      }.bind(this));\n    }\n  }, {\n    key: \"_closePopup\",\n    value: function _closePopup() {\n      if (this.popup) {\n        this.popup.close();\n      }\n    }\n  }, {\n    key: \"setSelected\",\n    value: function setSelected(selected) {\n      this.setProperty('selected', selected);\n    }\n  }, {\n    key: \"sendToBack\",\n    value: function sendToBack() {\n      this._closePopup();\n    }\n  }, {\n    key: \"bringToFront\",\n    value: function bringToFront() {// NOP\n    }\n  }, {\n    key: \"onViewButtonSelected\",\n    value: function onViewButtonSelected() {\n      var viewButton = this._findSelectedViewButton();\n\n      if (viewButton) {\n        this.setSelectedButton(this._findSelectedViewButton());\n      }\n\n      this.setSelected(!!viewButton);\n\n      this._closePopup();\n    }\n  }]);\n\n  return ViewMenuTab;\n}(Widget);\n\nexport { ViewMenuTab as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/desktop/viewbutton/ViewMenuTab.js"],"names":["graphics","HtmlComponent","icons","KeyStrokeContext","scout","ViewMenuOpenKeyStroke","Widget","ViewMenuTab","viewButtons","selected","selectedButton","viewTabVisible","defaultIconId","FOLDER","_addWidgetProperties","model","dropdown","create","parent","iconId","ANGLE_DOWN","tabbable","cssClass","on","togglePopup","bind","_setViewButtons","desktopKeyStrokeContext","invokeAcceptInputOnActiveValueField","$bindTarget","session","desktop","$container","$scopeTarget","registerKeyStroke","$parent","appendDiv","htmlComp","install","render","keyStrokeManager","installKeyStrokeContext","uninstallKeyStrokeContext","remove","_updateSelectedButton","setProperty","_setProperty","setVisible","length","_findSelectedViewButton","setSelectedButton","setSelected","viewButton","cloneOf","clone","displayStyle","delegateEventsToOriginal","delegateAllPropertiesToClone","delegateAllPropertiesToOriginal","excludePropertiesToOriginal","rendered","invalidateLayoutTree","select","viewMenu","i","popup","_closePopup","_openPopup","naviBounds","bounds","$tab","viewMenus","addClass","headText","text","open","event","removeClass","close"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {graphics, HtmlComponent, icons, KeyStrokeContext, scout, ViewMenuOpenKeyStroke, Widget} from '../../index';\n\n/**\n * Shows a list of view buttons with displayStyle=MENU\n * and shows the title of the active view button, if the view button is one\n * of the view buttons contained in the menu.\n */\nexport default class ViewMenuTab extends Widget {\n\n  constructor() {\n    super();\n\n    this.viewButtons = [];\n    this.selected = false;\n    this.selectedButton = null;\n    this.viewTabVisible = true;\n    this.defaultIconId = icons.FOLDER;\n    this._addWidgetProperties(['selectedButton']);\n  }\n\n  _init(model) {\n    super._init(model);\n    this.dropdown = scout.create('Menu', {\n      parent: this,\n      iconId: icons.ANGLE_DOWN,\n      tabbable: false,\n      cssClass: 'view-menu'\n    });\n    this.dropdown.on('action', this.togglePopup.bind(this));\n    this._setViewButtons(this.viewButtons);\n  }\n\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    // Bound to desktop\n    this.desktopKeyStrokeContext = new KeyStrokeContext();\n    this.desktopKeyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n    this.desktopKeyStrokeContext.$bindTarget = this.session.desktop.$container;\n    this.desktopKeyStrokeContext.$scopeTarget = this.session.desktop.$container;\n    this.desktopKeyStrokeContext.registerKeyStroke([\n      new ViewMenuOpenKeyStroke(this)\n    ]);\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('view-tab');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.dropdown.render(this.$container);\n    this.session.keyStrokeManager.installKeyStrokeContext(this.desktopKeyStrokeContext);\n  }\n\n  _remove() {\n    this.session.keyStrokeManager.uninstallKeyStrokeContext(this.desktopKeyStrokeContext);\n    super._remove();\n    if (this.selectedButton) {\n      this.selectedButton.remove();\n    }\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._updateSelectedButton();\n  }\n\n  setViewButtons(viewButtons) {\n    this.setProperty('viewButtons', viewButtons);\n  }\n\n  _setViewButtons(viewButtons) {\n    this._setProperty('viewButtons', viewButtons);\n    this.setVisible(this.viewButtons.length > 0);\n    var selectedButton = this._findSelectedViewButton();\n    if (selectedButton) {\n      this.setSelectedButton(selectedButton);\n    } else {\n      this.setSelectedButton(this.viewButtons[0]);\n    }\n    this.setSelected(!!selectedButton);\n  }\n\n  setSelectedButton(viewButton) {\n    if (this.selectedButton && this.selectedButton.cloneOf === viewButton) {\n      return;\n    }\n    if (viewButton) {\n      this.setProperty('selectedButton', viewButton);\n    }\n  }\n\n  _setSelectedButton(viewButton) {\n    viewButton = viewButton.clone({\n      parent: this,\n      displayStyle: 'TAB'\n    }, {\n      delegateEventsToOriginal: ['acceptInput', 'action'],\n      delegateAllPropertiesToClone: true,\n      delegateAllPropertiesToOriginal: true,\n      excludePropertiesToOriginal: ['selected']\n    });\n\n    // use default icon if outline does not define one.\n    viewButton.iconId = viewButton.iconId || this.defaultIconId;\n    this._setProperty('selectedButton', viewButton);\n  }\n\n  _renderSelectedButton() {\n    this._updateSelectedButton();\n  }\n\n  _updateSelectedButton() {\n    if (!this.selectedButton) {\n      return;\n    }\n    if (this.viewTabVisible) {\n      if (!this.selectedButton.rendered) {\n        this.selectedButton.render(this.$container);\n        this.invalidateLayoutTree();\n      }\n    } else {\n      if (this.selectedButton.rendered) {\n        this.selectedButton.remove();\n        this.invalidateLayoutTree();\n      }\n    }\n  }\n\n  setViewTabVisible(viewTabVisible) {\n    this.setProperty('viewTabVisible', viewTabVisible);\n    if (this.rendered) {\n      this._updateSelectedButton();\n    }\n  }\n\n  _renderSelected() {\n    this.$container.select(this.selected);\n  }\n\n  _findSelectedViewButton() {\n    var viewMenu;\n    for (var i = 0; i < this.viewButtons.length; i++) {\n      viewMenu = this.viewButtons[i];\n      if (viewMenu.selected) {\n        return viewMenu;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Toggles the 'view menu popup', or brings the outline content to the front if in background.\n   */\n  togglePopup() {\n    if (this.popup) {\n      this._closePopup();\n    } else {\n      this._openPopup();\n    }\n  }\n\n  _openPopup() {\n    if (this.popup) {\n      // already open\n      return;\n    }\n    var naviBounds = graphics.bounds(this.$container.parent(), true);\n    this.popup = scout.create('ViewMenuPopup', {\n      parent: this,\n      $tab: this.dropdown.$container,\n      viewMenus: this.viewButtons,\n      naviBounds: naviBounds\n    });\n    // The class needs to be added to the container before the popup gets opened so that the modified style may be copied to the head.\n    this.$container.addClass('popup-open');\n    this.popup.headText = this.text;\n    this.popup.open();\n    this.popup.on('remove', function(event) {\n      this.$container.removeClass('popup-open');\n      this.popup = null;\n    }.bind(this));\n  }\n\n  _closePopup() {\n    if (this.popup) {\n      this.popup.close();\n    }\n  }\n\n  setSelected(selected) {\n    this.setProperty('selected', selected);\n  }\n\n  sendToBack() {\n    this._closePopup();\n  }\n\n  bringToFront() {\n    // NOP\n  }\n\n  onViewButtonSelected() {\n    var viewButton = this._findSelectedViewButton();\n    if (viewButton) {\n      this.setSelectedButton(this._findSelectedViewButton());\n    }\n    this.setSelected(!!viewButton);\n    this._closePopup();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}