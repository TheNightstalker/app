{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { FormField, scout } from '../../index';\n\nvar OutlineTileField = /*#__PURE__*/function (_FormField) {\n  _inherits(OutlineTileField, _FormField);\n\n  var _super = _createSuper(OutlineTileField);\n\n  function OutlineTileField() {\n    var _this;\n\n    _classCallCheck(this, OutlineTileField);\n\n    _this = _super.call(this); // outline is not a widget, because at the time where _init runs, outline is not yet available\n\n    _this.outline = null;\n    _this.tileOutlineOverview = null;\n    return _this;\n  }\n\n  _createClass(OutlineTileField, [{\n    key: \"_render\",\n    value: function _render() {\n      this._ensureTileOutlineOverview();\n\n      this.addContainer(this.$parent, 'outline-tile-field');\n      this.tileOutlineOverview.render(this.$container);\n      this.addField(this.tileOutlineOverview.$container);\n    }\n    /**\n     * We cannot create the TileOutlineOverview instance in the _init function, because at the time where _init runs, outlines are not yet available.\n     */\n\n  }, {\n    key: \"_ensureTileOutlineOverview\",\n    value: function _ensureTileOutlineOverview() {\n      if (this.tileOutlineOverview) {\n        return;\n      }\n\n      var outline = this.outline ? this.session.getWidget(this.outline) : null;\n      this.tileOutlineOverview = scout.create('TileOutlineOverview', {\n        parent: this,\n        outline: outline\n      });\n    }\n  }]);\n\n  return OutlineTileField;\n}(FormField);\n\nexport { OutlineTileField as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/desktop/outline/OutlineTileField.js"],"names":["FormField","scout","OutlineTileField","outline","tileOutlineOverview","_ensureTileOutlineOverview","addContainer","$parent","render","$container","addField","session","getWidget","create","parent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,SAAR,EAAmBC,KAAnB,QAA+B,aAA/B;;IAEqBC,gB;;;;;AAEnB,8BAAc;AAAA;;AAAA;;AACZ,8BADY,CAGZ;;AACA,UAAKC,OAAL,GAAe,IAAf;AACA,UAAKC,mBAAL,GAA2B,IAA3B;AALY;AAMb;;;;8BAES;AACR,WAAKC,0BAAL;;AACA,WAAKC,YAAL,CAAkB,KAAKC,OAAvB,EAAgC,oBAAhC;AACA,WAAKH,mBAAL,CAAyBI,MAAzB,CAAgC,KAAKC,UAArC;AACA,WAAKC,QAAL,CAAc,KAAKN,mBAAL,CAAyBK,UAAvC;AACD;AAED;AACF;AACA;;;;iDAC+B;AAC3B,UAAI,KAAKL,mBAAT,EAA8B;AAC5B;AACD;;AACD,UAAID,OAAO,GAAG,KAAKA,OAAL,GAAe,KAAKQ,OAAL,CAAaC,SAAb,CAAuB,KAAKT,OAA5B,CAAf,GAAsD,IAApE;AACA,WAAKC,mBAAL,GAA2BH,KAAK,CAACY,MAAN,CAAa,qBAAb,EAAoC;AAC7DC,QAAAA,MAAM,EAAE,IADqD;AAE7DX,QAAAA,OAAO,EAAEA;AAFoD,OAApC,CAA3B;AAID;;;;EA7B2CH,S;;SAAzBE,gB","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {FormField, scout} from '../../index';\n\nexport default class OutlineTileField extends FormField {\n\n  constructor() {\n    super();\n\n    // outline is not a widget, because at the time where _init runs, outline is not yet available\n    this.outline = null;\n    this.tileOutlineOverview = null;\n  }\n\n  _render() {\n    this._ensureTileOutlineOverview();\n    this.addContainer(this.$parent, 'outline-tile-field');\n    this.tileOutlineOverview.render(this.$container);\n    this.addField(this.tileOutlineOverview.$container);\n  }\n\n  /**\n   * We cannot create the TileOutlineOverview instance in the _init function, because at the time where _init runs, outlines are not yet available.\n   */\n  _ensureTileOutlineOverview() {\n    if (this.tileOutlineOverview) {\n      return;\n    }\n    var outline = this.outline ? this.session.getWidget(this.outline) : null;\n    this.tileOutlineOverview = scout.create('TileOutlineOverview', {\n      parent: this,\n      outline: outline\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}