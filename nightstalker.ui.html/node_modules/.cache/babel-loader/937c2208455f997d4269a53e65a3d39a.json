{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, graphics } from '../../index';\n\nvar ViewButtonBoxLayout = /*#__PURE__*/function (_AbstractLayout) {\n  _inherits(ViewButtonBoxLayout, _AbstractLayout);\n\n  var _super = _createSuper(ViewButtonBoxLayout);\n\n  function ViewButtonBoxLayout(viewButtonBox) {\n    var _this;\n\n    _classCallCheck(this, ViewButtonBoxLayout);\n\n    _this = _super.call(this);\n    _this.viewButtonBox = viewButtonBox;\n    return _this;\n  }\n\n  _createClass(ViewButtonBoxLayout, [{\n    key: \"layout\",\n    value: function layout($container) {\n      var tabs = this.viewButtonBox.tabButtons.filter(function (tab) {\n        return tab.visible;\n      }),\n          viewMenuTab = this.viewButtonBox.viewMenuTab,\n          htmlComp = this.viewButtonBox.htmlComp,\n          containerWidth = htmlComp.size().width,\n          tabWidth = containerWidth / tabs.length;\n\n      if (viewMenuTab.visible && viewMenuTab.selectedButton.rendered) {\n        if (viewMenuTab.selectedButton) {\n          tabWidth = (containerWidth - graphics.size(viewMenuTab.dropdown.$container, {\n            exact: true\n          }).width) / (tabs.length + 1);\n          viewMenuTab.selectedButton.$container.cssWidth(tabWidth);\n        }\n\n        containerWidth -= graphics.size(viewMenuTab.$container, {\n          exact: true\n        }).width;\n      }\n\n      tabs.forEach(function (tab, index) {\n        if (tabs.length - 1 === index) {\n          // to avoid pixel fault due to rounding issues calculate the rest for the last tab.\n          // Round up to the second digit otherwise at least Chrome may still show the background of the view button box (at least in compact mode)\n          tab.$container.cssWidth(Math.ceil(containerWidth * 100) / 100);\n        } else {\n          tab.$container.cssWidth(tabWidth);\n          containerWidth -= tab.$container.cssWidth();\n        }\n      }, this);\n    }\n  }, {\n    key: \"preferredLayoutSize\",\n    value: function preferredLayoutSize($container) {\n      // View buttons have an absolute css height set -> useCssSize = true\n      return graphics.prefSize($container, {\n        useCssSize: true\n      });\n    }\n  }]);\n\n  return ViewButtonBoxLayout;\n}(AbstractLayout);\n\nexport { ViewButtonBoxLayout as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/desktop/viewbutton/ViewButtonBoxLayout.js"],"names":["AbstractLayout","graphics","ViewButtonBoxLayout","viewButtonBox","$container","tabs","tabButtons","filter","tab","visible","viewMenuTab","htmlComp","containerWidth","size","width","tabWidth","length","selectedButton","rendered","dropdown","exact","cssWidth","forEach","index","Math","ceil","prefSize","useCssSize"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,cAAR,EAAwBC,QAAxB,QAAuC,aAAvC;;IAEqBC,mB;;;;;AAEnB,+BAAYC,aAAZ,EAA2B;AAAA;;AAAA;;AACzB;AACA,UAAKA,aAAL,GAAqBA,aAArB;AAFyB;AAG1B;;;;2BAEMC,U,EAAY;AACjB,UAAIC,IAAI,GAAG,KAAKF,aAAL,CAAmBG,UAAnB,CAA8BC,MAA9B,CAAqC,UAASC,GAAT,EAAc;AAC1D,eAAOA,GAAG,CAACC,OAAX;AACD,OAFQ,CAAX;AAAA,UAGEC,WAAW,GAAG,KAAKP,aAAL,CAAmBO,WAHnC;AAAA,UAIEC,QAAQ,GAAG,KAAKR,aAAL,CAAmBQ,QAJhC;AAAA,UAKEC,cAAc,GAAGD,QAAQ,CAACE,IAAT,GAAgBC,KALnC;AAAA,UAMEC,QAAQ,GAAGH,cAAc,GAAGP,IAAI,CAACW,MANnC;;AAQA,UAAIN,WAAW,CAACD,OAAZ,IAAuBC,WAAW,CAACO,cAAZ,CAA2BC,QAAtD,EAAgE;AAC9D,YAAIR,WAAW,CAACO,cAAhB,EAAgC;AAC9BF,UAAAA,QAAQ,GAAG,CAACH,cAAc,GAAGX,QAAQ,CAACY,IAAT,CAAcH,WAAW,CAACS,QAAZ,CAAqBf,UAAnC,EAA+C;AAC1EgB,YAAAA,KAAK,EAAE;AADmE,WAA/C,EAE1BN,KAFQ,KAEET,IAAI,CAACW,MAAL,GAAc,CAFhB,CAAX;AAGAN,UAAAA,WAAW,CAACO,cAAZ,CAA2Bb,UAA3B,CAAsCiB,QAAtC,CAA+CN,QAA/C;AACD;;AAEDH,QAAAA,cAAc,IAAIX,QAAQ,CAACY,IAAT,CAAcH,WAAW,CAACN,UAA1B,EAAsC;AACtDgB,UAAAA,KAAK,EAAE;AAD+C,SAAtC,EAEfN,KAFH;AAGD;;AAEDT,MAAAA,IAAI,CAACiB,OAAL,CAAa,UAASd,GAAT,EAAce,KAAd,EAAqB;AAChC,YAAIlB,IAAI,CAACW,MAAL,GAAc,CAAd,KAAoBO,KAAxB,EAA+B;AAC7B;AACA;AACAf,UAAAA,GAAG,CAACJ,UAAJ,CAAeiB,QAAf,CAAwBG,IAAI,CAACC,IAAL,CAAUb,cAAc,GAAG,GAA3B,IAAkC,GAA1D;AACD,SAJD,MAIO;AACLJ,UAAAA,GAAG,CAACJ,UAAJ,CAAeiB,QAAf,CAAwBN,QAAxB;AACAH,UAAAA,cAAc,IAAIJ,GAAG,CAACJ,UAAJ,CAAeiB,QAAf,EAAlB;AACD;AACF,OATD,EASG,IATH;AAUD;;;wCAEmBjB,U,EAAY;AAC9B;AACA,aAAOH,QAAQ,CAACyB,QAAT,CAAkBtB,UAAlB,EAA8B;AACnCuB,QAAAA,UAAU,EAAE;AADuB,OAA9B,CAAP;AAGD;;;;EA9C8C3B,c;;SAA5BE,mB","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, graphics} from '../../index';\n\nexport default class ViewButtonBoxLayout extends AbstractLayout {\n\n  constructor(viewButtonBox) {\n    super();\n    this.viewButtonBox = viewButtonBox;\n  }\n\n  layout($container) {\n    var tabs = this.viewButtonBox.tabButtons.filter(function(tab) {\n        return tab.visible;\n      }),\n      viewMenuTab = this.viewButtonBox.viewMenuTab,\n      htmlComp = this.viewButtonBox.htmlComp,\n      containerWidth = htmlComp.size().width,\n      tabWidth = containerWidth / tabs.length;\n\n    if (viewMenuTab.visible && viewMenuTab.selectedButton.rendered) {\n      if (viewMenuTab.selectedButton) {\n        tabWidth = (containerWidth - graphics.size(viewMenuTab.dropdown.$container, {\n          exact: true\n        }).width) / (tabs.length + 1);\n        viewMenuTab.selectedButton.$container.cssWidth(tabWidth);\n      }\n\n      containerWidth -= graphics.size(viewMenuTab.$container, {\n        exact: true\n      }).width;\n    }\n\n    tabs.forEach(function(tab, index) {\n      if (tabs.length - 1 === index) {\n        // to avoid pixel fault due to rounding issues calculate the rest for the last tab.\n        // Round up to the second digit otherwise at least Chrome may still show the background of the view button box (at least in compact mode)\n        tab.$container.cssWidth(Math.ceil(containerWidth * 100) / 100);\n      } else {\n        tab.$container.cssWidth(tabWidth);\n        containerWidth -= tab.$container.cssWidth();\n      }\n    }, this);\n  }\n\n  preferredLayoutSize($container) {\n    // View buttons have an absolute css height set -> useCssSize = true\n    return graphics.prefSize($container, {\n      useCssSize: true\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}