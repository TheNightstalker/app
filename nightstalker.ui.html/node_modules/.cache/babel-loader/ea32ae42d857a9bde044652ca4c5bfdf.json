{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { BoxButtons, ClickActiveElementKeyStroke, CloseKeyStroke, FocusRule, GlassPaneRenderer, keys, KeyStrokeContext, scout, strings, Widget } from '../index';\n\nvar BusyIndicator = /*#__PURE__*/function (_Widget) {\n  _inherits(BusyIndicator, _Widget);\n\n  var _super = _createSuper(BusyIndicator);\n\n  function BusyIndicator() {\n    var _this;\n\n    _classCallCheck(this, BusyIndicator);\n\n    _this = _super.call(this);\n    _this.cancellable = true;\n    _this.showTimeout = 2500;\n    _this.label = null;\n    _this.details = null;\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  _createClass(BusyIndicator, [{\n    key: \"_createKeyStrokeContext\",\n    value: function _createKeyStrokeContext() {\n      return new KeyStrokeContext();\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_initKeyStrokeContext\",\n    value: function _initKeyStrokeContext() {\n      _get(_getPrototypeOf(BusyIndicator.prototype), \"_initKeyStrokeContext\", this).call(this);\n\n      this.keyStrokeContext.registerKeyStroke([new ClickActiveElementKeyStroke(this, [keys.SPACE, keys.ENTER]), new CloseKeyStroke(this, function () {\n        return this.$cancelButton;\n      }.bind(this))]);\n    }\n  }, {\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(BusyIndicator.prototype), \"_init\", this).call(this, model);\n\n      this.label = scout.nvl(this.label, this.session.text('ui.PleaseWait_'));\n    }\n  }, {\n    key: \"render\",\n    value: function render($parent) {\n      // Use entry point by default\n      $parent = $parent || this.entryPoint();\n\n      _get(_getPrototypeOf(BusyIndicator.prototype), \"render\", this).call(this, $parent);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      // Render busy indicator (still hidden by CSS, will be shown later in setTimeout.\n      // But don't use .hidden, otherwise the box' size cannot be calculated correctly!)\n      this.$container = this.$parent.appendDiv('busyindicator invisible');\n      var $handle = this.$container.appendDiv('drag-handle');\n      this.$container.draggable($handle);\n      this.$content = this.$container.appendDiv('busyindicator-content');\n      this.$label = this.$content.appendDiv('busyindicator-label');\n      this.$details = this.$content.appendDiv('busyindicator-details');\n\n      if (this.cancellable) {\n        this.$buttons = this.$container.appendDiv('busyindicator-buttons');\n        var boxButtons = new BoxButtons(this.$buttons);\n        this.$cancelButton = boxButtons.addButton({\n          text: this.session.text('Cancel'),\n          onClick: this._onCancelClick.bind(this)\n        });\n        this.$cancelButton.css('width', '100%');\n      } else {\n        this.$content.addClass('no-buttons');\n      } // Render properties\n\n\n      this._renderLabel();\n\n      this._renderDetails(); // Prevent resizing when message-box is dragged off the viewport\n\n\n      this.$container.addClass('calc-helper');\n      this.$container.css('min-width', this.$container.width());\n      this.$container.removeClass('calc-helper'); // Now that all texts, paddings, widths etc. are set, we can calculate the position\n\n      this._position(); // Show busy box with a delay of 2.5 seconds (configurable by this.showTimeout).\n\n\n      this._busyIndicatorTimeoutId = setTimeout(function () {\n        this.$container.removeClass('invisible').addClassForAnimation('animate-open'); // Validate first focusable element\n        // Maybe, this is not required if problem with single-button form is solved (see FormController.js)\n\n        this.session.focusManager.validateFocus();\n      }.bind(this), this.showTimeout); // Render modality glasspanes\n\n      this._glassPaneRenderer = new GlassPaneRenderer(this);\n\n      this._glassPaneRenderer.renderGlassPanes();\n\n      this._glassPaneRenderer.eachGlassPane(function ($glassPane) {\n        $glassPane.addClass('busy');\n      });\n    }\n  }, {\n    key: \"_postRender\",\n    value: function _postRender() {\n      _get(_getPrototypeOf(BusyIndicator.prototype), \"_postRender\", this).call(this);\n\n      this.session.focusManager.installFocusContext(this.$container, FocusRule.AUTO);\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      // Remove busy box (cancel timer in case it was not fired yet)\n      clearTimeout(this._busyIndicatorTimeoutId); // Remove glasspane\n\n      this._glassPaneRenderer.eachGlassPane(function ($glassPane) {\n        $glassPane.removeClass('busy');\n      });\n\n      this._glassPaneRenderer.removeGlassPanes();\n\n      this.session.focusManager.uninstallFocusContext(this.$container);\n\n      _get(_getPrototypeOf(BusyIndicator.prototype), \"_remove\", this).call(this);\n    }\n  }, {\n    key: \"setLabel\",\n    value: function setLabel(label) {\n      this.setProperty('label', label);\n    }\n  }, {\n    key: \"_renderLabel\",\n    value: function _renderLabel() {\n      this.$label.text(this.label || '');\n    }\n  }, {\n    key: \"setDetails\",\n    value: function setDetails(details) {\n      this.setProperty('details', details);\n    }\n  }, {\n    key: \"_renderDetails\",\n    value: function _renderDetails() {\n      this.$details.html(strings.nl2br(this.details)).setVisible(!!this.details);\n    }\n  }, {\n    key: \"_position\",\n    value: function _position() {\n      this.$container.cssMarginLeft(-this.$container.outerWidth() / 2);\n    }\n    /**\n     * Used by CloseKeyStroke.js\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this.$cancelButton && this.session.focusManager.requestFocus(this.$cancelButton)) {\n        this.$cancelButton.focus();\n        this.$cancelButton.click();\n      }\n    }\n  }, {\n    key: \"_onCancelClick\",\n    value: function _onCancelClick(event) {\n      this.trigger('cancel', event);\n    }\n    /**\n     * Sets the busy indicator into cancelled state.\n     */\n\n  }, {\n    key: \"cancelled\",\n    value: function cancelled() {\n      if (this.rendered) {\n        // not closed yet\n        this.$label.addClass('cancelled');\n        this.$buttons.remove();\n        this.$content.addClass('no-buttons');\n      }\n    }\n  }]);\n\n  return BusyIndicator;\n}(Widget);\n\nexport { BusyIndicator as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/session/BusyIndicator.js"],"names":["BoxButtons","ClickActiveElementKeyStroke","CloseKeyStroke","FocusRule","GlassPaneRenderer","keys","KeyStrokeContext","scout","strings","Widget","BusyIndicator","cancellable","showTimeout","label","details","keyStrokeContext","registerKeyStroke","SPACE","ENTER","$cancelButton","bind","model","nvl","session","text","$parent","entryPoint","$container","appendDiv","$handle","draggable","$content","$label","$details","$buttons","boxButtons","addButton","onClick","_onCancelClick","css","addClass","_renderLabel","_renderDetails","width","removeClass","_position","_busyIndicatorTimeoutId","setTimeout","addClassForAnimation","focusManager","validateFocus","_glassPaneRenderer","renderGlassPanes","eachGlassPane","$glassPane","installFocusContext","AUTO","clearTimeout","removeGlassPanes","uninstallFocusContext","setProperty","html","nl2br","setVisible","cssMarginLeft","outerWidth","requestFocus","focus","click","event","trigger","rendered","remove"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {BoxButtons, ClickActiveElementKeyStroke, CloseKeyStroke, FocusRule, GlassPaneRenderer, keys, KeyStrokeContext, scout, strings, Widget} from '../index';\n\nexport default class BusyIndicator extends Widget {\n\n  constructor() {\n    super();\n    this.cancellable = true;\n    this.showTimeout = 2500;\n    this.label = null;\n    this.details = null;\n  }\n\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    this.keyStrokeContext.registerKeyStroke([\n      new ClickActiveElementKeyStroke(this, [\n        keys.SPACE, keys.ENTER\n      ]),\n      new CloseKeyStroke(this, function() {\n        return this.$cancelButton;\n      }.bind(this))\n    ]);\n  }\n\n  _init(model) {\n    super._init(model);\n    this.label = scout.nvl(this.label, this.session.text('ui.PleaseWait_'));\n  }\n\n  render($parent) {\n    // Use entry point by default\n    $parent = $parent || this.entryPoint();\n    super.render($parent);\n  }\n\n  _render() {\n    // Render busy indicator (still hidden by CSS, will be shown later in setTimeout.\n    // But don't use .hidden, otherwise the box' size cannot be calculated correctly!)\n    this.$container = this.$parent.appendDiv('busyindicator invisible');\n\n    var $handle = this.$container.appendDiv('drag-handle');\n    this.$container.draggable($handle);\n\n    this.$content = this.$container.appendDiv('busyindicator-content');\n    this.$label = this.$content.appendDiv('busyindicator-label');\n    this.$details = this.$content.appendDiv('busyindicator-details');\n\n    if (this.cancellable) {\n      this.$buttons = this.$container.appendDiv('busyindicator-buttons');\n      var boxButtons = new BoxButtons(this.$buttons);\n      this.$cancelButton = boxButtons.addButton({\n        text: this.session.text('Cancel'),\n        onClick: this._onCancelClick.bind(this)\n      });\n      this.$cancelButton.css('width', '100%');\n    } else {\n      this.$content.addClass('no-buttons');\n    }\n\n    // Render properties\n    this._renderLabel();\n    this._renderDetails();\n\n    // Prevent resizing when message-box is dragged off the viewport\n    this.$container.addClass('calc-helper');\n    this.$container.css('min-width', this.$container.width());\n    this.$container.removeClass('calc-helper');\n    // Now that all texts, paddings, widths etc. are set, we can calculate the position\n    this._position();\n\n    // Show busy box with a delay of 2.5 seconds (configurable by this.showTimeout).\n    this._busyIndicatorTimeoutId = setTimeout(function() {\n      this.$container.removeClass('invisible').addClassForAnimation('animate-open');\n      // Validate first focusable element\n      // Maybe, this is not required if problem with single-button form is solved (see FormController.js)\n      this.session.focusManager.validateFocus();\n    }.bind(this), this.showTimeout);\n\n    // Render modality glasspanes\n    this._glassPaneRenderer = new GlassPaneRenderer(this);\n    this._glassPaneRenderer.renderGlassPanes();\n    this._glassPaneRenderer.eachGlassPane($glassPane => {\n      $glassPane.addClass('busy');\n    });\n  }\n\n  _postRender() {\n    super._postRender();\n    this.session.focusManager.installFocusContext(this.$container, FocusRule.AUTO);\n  }\n\n  _remove() {\n    // Remove busy box (cancel timer in case it was not fired yet)\n    clearTimeout(this._busyIndicatorTimeoutId);\n\n    // Remove glasspane\n    this._glassPaneRenderer.eachGlassPane(function($glassPane) {\n      $glassPane.removeClass('busy');\n    });\n    this._glassPaneRenderer.removeGlassPanes();\n    this.session.focusManager.uninstallFocusContext(this.$container);\n\n    super._remove();\n  }\n\n  setLabel(label) {\n    this.setProperty('label', label);\n  }\n\n  _renderLabel() {\n    this.$label.text(this.label || '');\n  }\n\n  setDetails(details) {\n    this.setProperty('details', details);\n  }\n\n  _renderDetails() {\n    this.$details\n      .html(strings.nl2br(this.details))\n      .setVisible(!!this.details);\n  }\n\n  _position() {\n    this.$container.cssMarginLeft(-this.$container.outerWidth() / 2);\n  }\n\n  /**\n   * Used by CloseKeyStroke.js\n   */\n  close() {\n    if (this.$cancelButton && this.session.focusManager.requestFocus(this.$cancelButton)) {\n      this.$cancelButton.focus();\n      this.$cancelButton.click();\n    }\n  }\n\n  _onCancelClick(event) {\n    this.trigger('cancel', event);\n  }\n\n  /**\n   * Sets the busy indicator into cancelled state.\n   */\n  cancelled() {\n    if (this.rendered) { // not closed yet\n      this.$label.addClass('cancelled');\n      this.$buttons.remove();\n      this.$content.addClass('no-buttons');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}