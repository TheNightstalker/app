{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension, FormField, graphics, HtmlComponent, HtmlEnvironment } from '../../../index';\n\nvar TabBoxLayout = /*#__PURE__*/function (_AbstractLayout) {\n  _inherits(TabBoxLayout, _AbstractLayout);\n\n  var _super = _createSuper(TabBoxLayout);\n\n  function TabBoxLayout(tabBox) {\n    var _this;\n\n    _classCallCheck(this, TabBoxLayout);\n\n    _this = _super.call(this);\n    _this._tabBox = tabBox;\n\n    _this._initDefaults();\n\n    _this.htmlPropertyChangeHandler = _this._onHtmlEnvironmenPropertyChange.bind(_assertThisInitialized(_this));\n    HtmlEnvironment.get().on('propertyChange', _this.htmlPropertyChangeHandler);\n\n    _this._tabBox.one('remove', function () {\n      HtmlEnvironment.get().off('propertyChange', this.htmlPropertyChangeHandler);\n    }.bind(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(TabBoxLayout, [{\n    key: \"_initDefaults\",\n    value: function _initDefaults() {\n      this._statusWidth = HtmlEnvironment.get().fieldStatusWidth;\n    }\n  }, {\n    key: \"_onHtmlEnvironmenPropertyChange\",\n    value: function _onHtmlEnvironmenPropertyChange() {\n      this._initDefaults();\n\n      this._tabBox.invalidateLayoutTree();\n    }\n  }, {\n    key: \"layout\",\n    value: function layout($container) {\n      var containerSize,\n          tabContentSize,\n          tabAreaMargins,\n          innerTabAreaSize,\n          htmlContainer = HtmlComponent.get($container),\n          htmlTabContent = HtmlComponent.get(this._tabBox._$tabContent),\n          htmlTabArea = HtmlComponent.get(this._tabBox.header.$container),\n          tabAreaWidthHint = 0,\n          tabAreaSize = new Dimension(),\n          tooltip = this._tabBox._tooltip(),\n          $status = this._tabBox.$status,\n          statusPosition = this._tabBox.statusPosition;\n\n      containerSize = htmlContainer.availableSize().subtract(htmlContainer.insets());\n\n      if (htmlTabArea.isVisible()) {\n        tabAreaMargins = htmlTabArea.margins();\n        tabAreaWidthHint = containerSize.subtract(tabAreaMargins).width;\n\n        if ($status && $status.isVisible()) {\n          this._layoutStatus();\n\n          if (statusPosition === FormField.StatusPosition.DEFAULT) {\n            tabAreaWidthHint -= this._statusWidth + graphics.margins($status).horizontal();\n          }\n        }\n\n        innerTabAreaSize = htmlTabArea.prefSize({\n          widthHint: tabAreaWidthHint\n        });\n\n        if ($status && $status.isVisible()) {\n          this._layoutStatus(innerTabAreaSize.height);\n        }\n\n        innerTabAreaSize.width = tabAreaWidthHint;\n        htmlTabArea.setSize(innerTabAreaSize);\n        tabAreaSize = innerTabAreaSize.add(tabAreaMargins);\n      }\n\n      tabContentSize = containerSize.subtract(htmlTabContent.margins());\n      tabContentSize.height -= tabAreaSize.height;\n      htmlTabContent.setSize(tabContentSize); // Make sure tooltip is at correct position after layouting, if there is one\n\n      if (tooltip && tooltip.rendered) {\n        tooltip.position();\n      }\n    }\n  }, {\n    key: \"_layoutStatus\",\n    value: function _layoutStatus(height) {\n      var htmlContainer = this._tabBox.htmlComp,\n          containerPadding = htmlContainer.insets({\n        includeBorder: false\n      }),\n          top = containerPadding.top,\n          right = containerPadding.right,\n          $tabArea = this._tabBox.header.$container,\n          $status = this._tabBox.$status,\n          statusMargins = graphics.margins($status),\n          statusTop = top,\n          statusPosition = this._tabBox.statusPosition,\n          statusHeight = height - statusMargins.vertical();\n\n      if (statusPosition === FormField.StatusPosition.DEFAULT) {\n        statusTop += $tabArea.cssMarginTop();\n      } else {\n        statusHeight -= $status.cssBorderWidthY(); // status has a transparent border to align icon with text\n      }\n\n      $status.cssWidth(this._statusWidth).cssTop(statusTop).cssRight(right).cssHeight(statusHeight).cssLineHeight(statusHeight);\n    }\n    /**\n     * Preferred size of the tab-box aligns every tab-item in a single line, so that each item is visible.\n     */\n\n  }, {\n    key: \"preferredLayoutSize\",\n    value: function preferredLayoutSize($container, options) {\n      options = options || {};\n      var htmlContainer = HtmlComponent.get($container),\n          htmlTabContent = HtmlComponent.get(this._tabBox._$tabContent),\n          htmlTabArea = HtmlComponent.get(this._tabBox.header.$container),\n          tabAreaSize = new Dimension(),\n          tabContentSize = new Dimension(),\n          $status = this._tabBox.$status,\n          statusPosition = this._tabBox.statusPosition,\n          headerWidthHint = htmlContainer.availableSize().subtract(htmlContainer.insets()).width; // HeightHint not supported\n\n      options.heightHint = null;\n\n      if (htmlTabArea.isVisible()) {\n        if ($status && $status.isVisible()) {\n          if (statusPosition === FormField.StatusPosition.DEFAULT) {\n            headerWidthHint -= $status.outerWidth(true);\n          }\n        }\n\n        tabAreaSize = htmlTabArea.prefSize({\n          widthHint: headerWidthHint\n        }).add(htmlTabArea.margins());\n      }\n\n      tabContentSize = htmlTabContent.prefSize(options).add(htmlContainer.insets()).add(htmlTabContent.margins());\n      return new Dimension(Math.max(tabAreaSize.width, tabContentSize.width), tabContentSize.height + tabAreaSize.height);\n    }\n  }]);\n\n  return TabBoxLayout;\n}(AbstractLayout);\n\nexport { TabBoxLayout as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/tabbox/TabBoxLayout.js"],"names":["AbstractLayout","Dimension","FormField","graphics","HtmlComponent","HtmlEnvironment","TabBoxLayout","tabBox","_tabBox","_initDefaults","htmlPropertyChangeHandler","_onHtmlEnvironmenPropertyChange","bind","get","on","one","off","_statusWidth","fieldStatusWidth","invalidateLayoutTree","$container","containerSize","tabContentSize","tabAreaMargins","innerTabAreaSize","htmlContainer","htmlTabContent","_$tabContent","htmlTabArea","header","tabAreaWidthHint","tabAreaSize","tooltip","_tooltip","$status","statusPosition","availableSize","subtract","insets","isVisible","margins","width","_layoutStatus","StatusPosition","DEFAULT","horizontal","prefSize","widthHint","height","setSize","add","rendered","position","htmlComp","containerPadding","includeBorder","top","right","$tabArea","statusMargins","statusTop","statusHeight","vertical","cssMarginTop","cssBorderWidthY","cssWidth","cssTop","cssRight","cssHeight","cssLineHeight","options","headerWidthHint","heightHint","outerWidth","Math","max"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension, FormField, graphics, HtmlComponent, HtmlEnvironment} from '../../../index';\n\nexport default class TabBoxLayout extends AbstractLayout {\n\n  constructor(tabBox) {\n    super();\n    this._tabBox = tabBox;\n\n    this._initDefaults();\n\n    this.htmlPropertyChangeHandler = this._onHtmlEnvironmenPropertyChange.bind(this);\n    HtmlEnvironment.get().on('propertyChange', this.htmlPropertyChangeHandler);\n    this._tabBox.one('remove', function() {\n      HtmlEnvironment.get().off('propertyChange', this.htmlPropertyChangeHandler);\n    }.bind(this));\n  }\n\n  _initDefaults() {\n    this._statusWidth = HtmlEnvironment.get().fieldStatusWidth;\n  }\n\n  _onHtmlEnvironmenPropertyChange() {\n    this._initDefaults();\n    this._tabBox.invalidateLayoutTree();\n  }\n\n  layout($container) {\n    var containerSize, tabContentSize, tabAreaMargins, innerTabAreaSize,\n      htmlContainer = HtmlComponent.get($container),\n      htmlTabContent = HtmlComponent.get(this._tabBox._$tabContent),\n      htmlTabArea = HtmlComponent.get(this._tabBox.header.$container),\n      tabAreaWidthHint = 0,\n      tabAreaSize = new Dimension(),\n      tooltip = this._tabBox._tooltip(),\n      $status = this._tabBox.$status,\n      statusPosition = this._tabBox.statusPosition;\n\n    containerSize = htmlContainer.availableSize()\n      .subtract(htmlContainer.insets());\n\n    if (htmlTabArea.isVisible()) {\n      tabAreaMargins = htmlTabArea.margins();\n      tabAreaWidthHint = containerSize.subtract(tabAreaMargins).width;\n      if ($status && $status.isVisible()) {\n        this._layoutStatus();\n        if (statusPosition === FormField.StatusPosition.DEFAULT) {\n          tabAreaWidthHint -= (this._statusWidth + graphics.margins($status).horizontal());\n        }\n      }\n      innerTabAreaSize = htmlTabArea.prefSize({\n        widthHint: tabAreaWidthHint\n      });\n\n      if ($status && $status.isVisible()) {\n        this._layoutStatus(innerTabAreaSize.height);\n      }\n\n      innerTabAreaSize.width = tabAreaWidthHint;\n      htmlTabArea.setSize(innerTabAreaSize);\n      tabAreaSize = innerTabAreaSize.add(tabAreaMargins);\n    }\n\n    tabContentSize = containerSize.subtract(htmlTabContent.margins());\n    tabContentSize.height -= tabAreaSize.height;\n    htmlTabContent.setSize(tabContentSize);\n\n    // Make sure tooltip is at correct position after layouting, if there is one\n    if (tooltip && tooltip.rendered) {\n      tooltip.position();\n    }\n  }\n\n  _layoutStatus(height) {\n    var htmlContainer = this._tabBox.htmlComp,\n      containerPadding = htmlContainer.insets({\n        includeBorder: false\n      }),\n      top = containerPadding.top,\n      right = containerPadding.right,\n      $tabArea = this._tabBox.header.$container,\n      $status = this._tabBox.$status,\n      statusMargins = graphics.margins($status),\n      statusTop = top,\n      statusPosition = this._tabBox.statusPosition,\n      statusHeight = height - statusMargins.vertical();\n\n    if (statusPosition === FormField.StatusPosition.DEFAULT) {\n      statusTop += $tabArea.cssMarginTop();\n    } else {\n      statusHeight -= $status.cssBorderWidthY(); // status has a transparent border to align icon with text\n    }\n\n    $status.cssWidth(this._statusWidth)\n      .cssTop(statusTop)\n      .cssRight(right)\n      .cssHeight(statusHeight)\n      .cssLineHeight(statusHeight);\n  }\n\n  /**\n   * Preferred size of the tab-box aligns every tab-item in a single line, so that each item is visible.\n   */\n  preferredLayoutSize($container, options) {\n    options = options || {};\n    var htmlContainer = HtmlComponent.get($container),\n      htmlTabContent = HtmlComponent.get(this._tabBox._$tabContent),\n      htmlTabArea = HtmlComponent.get(this._tabBox.header.$container),\n      tabAreaSize = new Dimension(),\n      tabContentSize = new Dimension(),\n      $status = this._tabBox.$status,\n      statusPosition = this._tabBox.statusPosition,\n      headerWidthHint = htmlContainer.availableSize().subtract(htmlContainer.insets()).width;\n\n    // HeightHint not supported\n    options.heightHint = null;\n\n    if (htmlTabArea.isVisible()) {\n      if ($status && $status.isVisible()) {\n        if (statusPosition === FormField.StatusPosition.DEFAULT) {\n          headerWidthHint -= $status.outerWidth(true);\n        }\n      }\n      tabAreaSize = htmlTabArea.prefSize({\n        widthHint: headerWidthHint\n      })\n        .add(htmlTabArea.margins());\n    }\n\n    tabContentSize = htmlTabContent.prefSize(options)\n      .add(htmlContainer.insets())\n      .add(htmlTabContent.margins());\n\n    return new Dimension(\n      Math.max(tabAreaSize.width, tabContentSize.width),\n      tabContentSize.height + tabAreaSize.height);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}