{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { dates, Device, HtmlComponent, scrollbars, Widget } from '../index';\nimport $ from 'jquery';\n\nvar TimePicker = /*#__PURE__*/function (_Widget) {\n  _inherits(TimePicker, _Widget);\n\n  var _super = _createSuper(TimePicker);\n\n  function TimePicker() {\n    var _this;\n\n    _classCallCheck(this, TimePicker);\n\n    _this = _super.call(this); // Preselected date can only be set if selectedDate is null. The preselected date is rendered differently, but\n    // has no function otherwise. (It is used to indicate the day that will be selected when the user presses\n    // the UP or DOWN key while no date is selected.)\n\n    _this.preselectedTime = null;\n    _this.selectedTime = null;\n    _this.resolution = null;\n    _this.$scrollable = null;\n    _this.touch = Device.get().supportsOnlyTouch();\n    return _this;\n  }\n\n  _createClass(TimePicker, [{\n    key: \"_init\",\n    value: function _init(options) {\n      _get(_getPrototypeOf(TimePicker.prototype), \"_init\", this).call(this, options);\n\n      this.resolution = options.timeResolution;\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent.appendDiv('time-picker').toggleClass('touch', this.touch);\n      this.htmlComp = HtmlComponent.install(this.$container, this.session);\n\n      this._renderTimeSelection();\n\n      this._installScrollbars();\n    }\n  }, {\n    key: \"_renderTimeSelection\",\n    value: function _renderTimeSelection() {\n      var i,\n          date = dates.trunc(new Date()),\n          now = dates.ceil(new Date(), this.resolution),\n          currentHours = 0,\n          $hourRow,\n          $time;\n      var $box = this.$parent.makeDiv('day-table');\n\n      for (i = 0; i < 24; i++) {\n        // reset minutes always every hour line starts with :00\n        date.setMinutes(0);\n        currentHours = date.getHours();\n        $hourRow = $box.appendDiv('hour-row');\n        $time = $hourRow.appendDiv('cell  hours').data('time', new Date(date)).on('click', this._onTimeClick.bind(this));\n        $time.appendSpan('text').text(dates.format(date, this.session.locale, 'HH'));\n\n        while (currentHours === date.getHours()) {\n          $time = $hourRow.appendDiv('cell minutes').data('time', new Date(date)).on('click', this._onTimeClick.bind(this));\n          $time.appendSpan('text').text(dates.format(date, this.session.locale, ':mm'));\n\n          if (dates.isSameTime(now, date)) {\n            $time.addClass('now');\n          }\n\n          date.setMinutes(date.getMinutes() + this.resolution);\n        }\n      }\n\n      $box.appendTo(this.$container);\n      return $box;\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_installScrollbars\",\n    value: function _installScrollbars(options) {\n      this._uninstallScrollbars();\n\n      _get(_getPrototypeOf(TimePicker.prototype), \"_installScrollbars\", this).call(this, {\n        axis: 'y'\n      });\n    }\n  }, {\n    key: \"preselectTime\",\n    value: function preselectTime(time) {\n      if (time) {\n        // Clear selection when a date is preselected\n        this.setSelectedTime(null);\n      }\n\n      this.setPreselectedTime(time);\n    }\n    /**\n     * @internal, use preselectDate to preselect a date\n     */\n\n  }, {\n    key: \"setPreselectedTime\",\n    value: function setPreselectedTime(preselectedTime) {\n      this.setProperty('preselectedTime', preselectedTime);\n    }\n  }, {\n    key: \"_renderPreselectedTime\",\n    value: function _renderPreselectedTime() {\n      var $scrollTo;\n      this.$container.find('.cell').each(function (i, elem) {\n        var $time = $(elem),\n            time = $time.data('time');\n        $time.removeClass('preselected');\n\n        if (this.preselectedTime) {\n          if ($time.hasClass('hours') && this.preselectedTime.getHours() === time.getHours()) {\n            $time.addClass('preselected');\n            $scrollTo = $time;\n          } else if ($time.hasClass('minutes') && dates.isSameTime(this.preselectedTime, time)) {\n            $time.addClass('preselected');\n            $scrollTo = $time;\n          }\n        }\n      }.bind(this));\n\n      if ($scrollTo) {\n        scrollbars.scrollTo(this.$container, $scrollTo, 'center');\n      }\n    }\n  }, {\n    key: \"selectTime\",\n    value: function selectTime(time) {\n      if (time) {\n        // Clear selection when a date is preselected\n        this.setPreselectedTime(null);\n      }\n\n      this.setSelectedTime(time);\n    }\n    /**\n     * @internal, use selectDate to select a date\n     */\n\n  }, {\n    key: \"setSelectedTime\",\n    value: function setSelectedTime(selectedTime) {\n      this.setProperty('selectedTime', selectedTime);\n    }\n  }, {\n    key: \"_renderSelectedTime\",\n    value: function _renderSelectedTime() {\n      var $scrollTo;\n      this.$container.find('.cell').each(function (i, elem) {\n        var $time = $(elem),\n            time = $time.data('time');\n        $time.removeClass('selected');\n\n        if (this.selectedTime) {\n          if ($time.hasClass('hours') && this.selectedTime.getHours() === time.getHours()) {\n            $time.addClass('selected');\n            $scrollTo = $time;\n          } else if ($time.hasClass('minutes') && dates.isSameTime(this.selectedTime, time)) {\n            $time.addClass('selected');\n            $scrollTo = $time;\n          }\n        }\n      }.bind(this));\n\n      if ($scrollTo) {\n        scrollbars.scrollTo(this.$container, $scrollTo, 'center');\n      }\n    }\n  }, {\n    key: \"shiftViewDate\",\n    value: function shiftViewDate(years, months, days) {\n      var date = this.viewDate;\n      date = dates.shift(date, years, months, days);\n      this.showDate(date);\n    }\n  }, {\n    key: \"shiftSelectedTime\",\n    value: function shiftSelectedTime(hourUnits, minuteUnits, secondUnits) {\n      var time = this.preselectedTime;\n\n      if (this.selectedTime) {\n        time = dates.shiftTime(this.selectedTime, hourUnits, minuteUnits * this.resolution, secondUnits);\n      }\n\n      if (!time) {\n        return; // do nothing when no date was found\n      }\n\n      this.selectTime(this._snapToTimeGrid(time));\n    }\n  }, {\n    key: \"_snapToTimeGrid\",\n    value: function _snapToTimeGrid(time) {\n      if (!time) {\n        return time;\n      }\n\n      var min = time.getMinutes();\n      min = parseInt(min / this.resolution) * this.resolution;\n      time.setMinutes(min);\n      return time;\n    }\n  }, {\n    key: \"_findNextAllowedDate\",\n    value: function _findNextAllowedDate(years, months, days) {\n      var i,\n          date,\n          sum = years + months + days,\n          dir = sum > 0 ? 1 : -1,\n          now = this.selectedDate || dates.trunc(new Date()); // if we shift by year or month, shift the 'now' date and then use that date as starting point\n      // to find the next allowed date.\n\n      if (years !== 0) {\n        now = dates.shift(now, years, 0, 0);\n      } else if (months !== 0) {\n        now = dates.shift(now, 0, months, 0);\n      }\n\n      if (dir === 1) {\n        // find next allowed date, starting from currently selected date\n        for (i = 0; i < this.allowedDates.length; i++) {\n          date = this.allowedDates[i];\n\n          if (dates.compare(now, date) < 0) {\n            return date;\n          }\n        }\n      } else if (dir === -1) {\n        // find previous allowed date, starting from currently selected date\n        for (i = this.allowedDates.length - 1; i >= 0; i--) {\n          date = this.allowedDates[i];\n\n          if (dates.compare(now, date) > 0) {\n            return date;\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_isDateAllowed\",\n    value: function _isDateAllowed(date) {\n      // when allowedDates is empty or not set, any date is allowed\n      if (!this.allowedDates || this.allowedDates.length === 0) {\n        return true;\n      } // when allowedDates is set, only dates contained in this array are allowed\n\n\n      var allowedDateAsTimestamp,\n          dateAsTimestamp = date.getTime();\n      return this.allowedDates.some(function (allowedDate) {\n        allowedDateAsTimestamp = allowedDate.getTime();\n        return allowedDateAsTimestamp === dateAsTimestamp;\n      });\n    }\n  }, {\n    key: \"_onNavigationMouseDown\",\n    value: function _onNavigationMouseDown(event) {\n      var $target = $(event.currentTarget);\n      var diff = $target.data('shift');\n      this.shiftViewDate(0, diff, 0);\n    }\n  }, {\n    key: \"_onTimeClick\",\n    value: function _onTimeClick(event) {\n      var $target = $(event.currentTarget);\n      var time = new Date($target.data('time'));\n      this.selectTime(time);\n      this.trigger('timeSelect', {\n        time: time\n      });\n    }\n  }, {\n    key: \"_onMouseWheel\",\n    value: function _onMouseWheel(event) {\n      event = event.originalEvent || this.$container.window(true).event.originalEvent;\n      var wheelData = event.wheelDelta ? event.wheelDelta / 10 : -event.detail * 3;\n      var diff = wheelData >= 0 ? -1 : 1;\n      this.shiftViewDate(0, diff, 0);\n      event.preventDefault();\n    }\n  }]);\n\n  return TimePicker;\n}(Widget);\n\nexport { TimePicker as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/timepicker/TimePicker.js"],"names":["dates","Device","HtmlComponent","scrollbars","Widget","$","TimePicker","preselectedTime","selectedTime","resolution","$scrollable","touch","get","supportsOnlyTouch","options","timeResolution","$container","$parent","appendDiv","toggleClass","htmlComp","install","session","_renderTimeSelection","_installScrollbars","i","date","trunc","Date","now","ceil","currentHours","$hourRow","$time","$box","makeDiv","setMinutes","getHours","data","on","_onTimeClick","bind","appendSpan","text","format","locale","isSameTime","addClass","getMinutes","appendTo","_uninstallScrollbars","axis","time","setSelectedTime","setPreselectedTime","setProperty","$scrollTo","find","each","elem","removeClass","hasClass","scrollTo","years","months","days","viewDate","shift","showDate","hourUnits","minuteUnits","secondUnits","shiftTime","selectTime","_snapToTimeGrid","min","parseInt","sum","dir","selectedDate","allowedDates","length","compare","allowedDateAsTimestamp","dateAsTimestamp","getTime","some","allowedDate","event","$target","currentTarget","diff","shiftViewDate","trigger","originalEvent","window","wheelData","wheelDelta","detail","preventDefault"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {dates, Device, HtmlComponent, scrollbars, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class TimePicker extends Widget {\n\n  constructor() {\n    super();\n\n    // Preselected date can only be set if selectedDate is null. The preselected date is rendered differently, but\n    // has no function otherwise. (It is used to indicate the day that will be selected when the user presses\n    // the UP or DOWN key while no date is selected.)\n    this.preselectedTime = null;\n    this.selectedTime = null;\n    this.resolution = null;\n    this.$scrollable = null;\n\n    this.touch = Device.get().supportsOnlyTouch();\n  }\n\n  _init(options) {\n    super._init(options);\n    this.resolution = options.timeResolution;\n  }\n\n  _render() {\n    this.$container = this.$parent\n      .appendDiv('time-picker')\n      .toggleClass('touch', this.touch);\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n\n    this._renderTimeSelection();\n    this._installScrollbars();\n  }\n\n  _renderTimeSelection() {\n    var i,\n      date = dates.trunc(new Date()),\n      now = dates.ceil(new Date(), this.resolution),\n      currentHours = 0,\n      $hourRow,\n      $time;\n    var $box = this.$parent.makeDiv('day-table');\n    for (i = 0; i < 24; i++) {\n      // reset minutes always every hour line starts with :00\n      date.setMinutes(0);\n      currentHours = date.getHours();\n\n      $hourRow = $box.appendDiv('hour-row');\n      $time = $hourRow.appendDiv('cell  hours')\n        .data('time', new Date(date))\n        .on('click', this._onTimeClick.bind(this));\n      $time.appendSpan('text')\n        .text(dates.format(date, this.session.locale, 'HH'));\n\n      while (currentHours === date.getHours()) {\n        $time = $hourRow.appendDiv('cell minutes')\n          .data('time', new Date(date))\n          .on('click', this._onTimeClick.bind(this));\n\n        $time.appendSpan('text').text(dates.format(date, this.session.locale, ':mm'));\n        if (dates.isSameTime(now, date)) {\n          $time.addClass('now');\n        }\n        date.setMinutes(date.getMinutes() + this.resolution);\n      }\n    }\n    $box.appendTo(this.$container);\n    return $box;\n  }\n\n  /**\n   * @override\n   */\n  _installScrollbars(options) {\n    this._uninstallScrollbars();\n\n    super._installScrollbars({\n      axis: 'y'\n    });\n  }\n\n  preselectTime(time) {\n    if (time) {\n      // Clear selection when a date is preselected\n      this.setSelectedTime(null);\n    }\n    this.setPreselectedTime(time);\n  }\n\n  /**\n   * @internal, use preselectDate to preselect a date\n   */\n  setPreselectedTime(preselectedTime) {\n    this.setProperty('preselectedTime', preselectedTime);\n  }\n\n  _renderPreselectedTime() {\n    var $scrollTo;\n    this.$container.find('.cell').each(function(i, elem) {\n      var $time = $(elem),\n        time = $time.data('time');\n      $time.removeClass('preselected');\n      if (this.preselectedTime) {\n        if ($time.hasClass('hours') && this.preselectedTime.getHours() === time.getHours()) {\n          $time.addClass('preselected');\n          $scrollTo = $time;\n        } else if ($time.hasClass('minutes') && dates.isSameTime(this.preselectedTime, time)) {\n          $time.addClass('preselected');\n          $scrollTo = $time;\n        }\n      }\n    }.bind(this));\n    if ($scrollTo) {\n      scrollbars.scrollTo(this.$container, $scrollTo, 'center');\n    }\n  }\n\n  selectTime(time) {\n    if (time) {\n      // Clear selection when a date is preselected\n      this.setPreselectedTime(null);\n    }\n    this.setSelectedTime(time);\n  }\n\n  /**\n   * @internal, use selectDate to select a date\n   */\n  setSelectedTime(selectedTime) {\n    this.setProperty('selectedTime', selectedTime);\n  }\n\n  _renderSelectedTime() {\n\n    var $scrollTo;\n    this.$container.find('.cell').each(function(i, elem) {\n      var $time = $(elem),\n        time = $time.data('time');\n      $time.removeClass('selected');\n      if (this.selectedTime) {\n        if ($time.hasClass('hours') && this.selectedTime.getHours() === time.getHours()) {\n          $time.addClass('selected');\n          $scrollTo = $time;\n        } else if ($time.hasClass('minutes') && dates.isSameTime(this.selectedTime, time)) {\n          $time.addClass('selected');\n          $scrollTo = $time;\n        }\n      }\n    }.bind(this));\n    if ($scrollTo) {\n      scrollbars.scrollTo(this.$container, $scrollTo, 'center');\n    }\n  }\n\n  shiftViewDate(years, months, days) {\n    var date = this.viewDate;\n    date = dates.shift(date, years, months, days);\n    this.showDate(date);\n  }\n\n  shiftSelectedTime(hourUnits, minuteUnits, secondUnits) {\n    var time = this.preselectedTime;\n    if (this.selectedTime) {\n      time = dates.shiftTime(this.selectedTime, hourUnits, minuteUnits * this.resolution, secondUnits);\n    }\n    if (!time) {\n      return; // do nothing when no date was found\n    }\n    this.selectTime(this._snapToTimeGrid(time));\n  }\n\n  _snapToTimeGrid(time) {\n    if (!time) {\n      return time;\n    }\n    var min = time.getMinutes();\n    min = (parseInt(min / this.resolution) * this.resolution);\n    time.setMinutes(min);\n    return time;\n\n  }\n\n  _findNextAllowedDate(years, months, days) {\n    var i, date,\n      sum = years + months + days,\n      dir = sum > 0 ? 1 : -1,\n      now = this.selectedDate || dates.trunc(new Date());\n\n    // if we shift by year or month, shift the 'now' date and then use that date as starting point\n    // to find the next allowed date.\n    if (years !== 0) {\n      now = dates.shift(now, years, 0, 0);\n    } else if (months !== 0) {\n      now = dates.shift(now, 0, months, 0);\n    }\n\n    if (dir === 1) { // find next allowed date, starting from currently selected date\n      for (i = 0; i < this.allowedDates.length; i++) {\n        date = this.allowedDates[i];\n        if (dates.compare(now, date) < 0) {\n          return date;\n        }\n      }\n    } else if (dir === -1) { // find previous allowed date, starting from currently selected date\n      for (i = this.allowedDates.length - 1; i >= 0; i--) {\n        date = this.allowedDates[i];\n        if (dates.compare(now, date) > 0) {\n          return date;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  _isDateAllowed(date) {\n    // when allowedDates is empty or not set, any date is allowed\n    if (!this.allowedDates || this.allowedDates.length === 0) {\n      return true;\n    }\n    // when allowedDates is set, only dates contained in this array are allowed\n    var allowedDateAsTimestamp,\n      dateAsTimestamp = date.getTime();\n    return this.allowedDates.some(function(allowedDate) {\n      allowedDateAsTimestamp = allowedDate.getTime();\n      return allowedDateAsTimestamp === dateAsTimestamp;\n    });\n  }\n\n  _onNavigationMouseDown(event) {\n    var $target = $(event.currentTarget);\n    var diff = $target.data('shift');\n    this.shiftViewDate(0, diff, 0);\n  }\n\n  _onTimeClick(event) {\n    var $target = $(event.currentTarget);\n    var time = new Date($target.data('time'));\n    this.selectTime(time);\n    this.trigger('timeSelect', {\n      time: time\n    });\n  }\n\n  _onMouseWheel(event) {\n    event = event.originalEvent || this.$container.window(true).event.originalEvent;\n    var wheelData = event.wheelDelta ? event.wheelDelta / 10 : -event.detail * 3;\n    var diff = (wheelData >= 0 ? -1 : 1);\n    this.shiftViewDate(0, diff, 0);\n    event.preventDefault();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}