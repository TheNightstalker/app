{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Dimension, graphics, TreeLayout } from '../../index';\n\nvar OutlineLayout = /*#__PURE__*/function (_TreeLayout) {\n  _inherits(OutlineLayout, _TreeLayout);\n\n  var _super = _createSuper(OutlineLayout);\n\n  function OutlineLayout(outline) {\n    var _this;\n\n    _classCallCheck(this, OutlineLayout);\n\n    _this = _super.call(this, outline);\n    _this.outline = outline;\n    return _this;\n  }\n\n  _createClass(OutlineLayout, [{\n    key: \"_layout\",\n    value: function _layout($container) {\n      var containerSize,\n          htmlContainer = this.outline.htmlComp;\n\n      _get(_getPrototypeOf(OutlineLayout.prototype), \"_layout\", this).call(this, $container);\n\n      containerSize = htmlContainer.availableSize().subtract(htmlContainer.insets());\n\n      if (this.outline.embedDetailContent) {\n        var selectedNode = this.outline.selectedNodes[0];\n\n        if (selectedNode && selectedNode.rendered) {\n          var pageHtmlComp = selectedNode.htmlComp; // pageHtmlComp is null if there is no detail form and no detail menubar\n\n          if (pageHtmlComp) {\n            // Fix width so that prefSize returns the appropriate height (necessary for elements with text wrap)\n            pageHtmlComp.$comp.cssWidth(containerSize.width);\n            var prefSize = pageHtmlComp.prefSize();\n            pageHtmlComp.setSize(new Dimension(containerSize.width, prefSize.height));\n            selectedNode.height = prefSize.height + pageHtmlComp.margins().vertical();\n          }\n        } // Remove width and height from non selected nodes (at this point we don't know the previously selected node anymore, so we need to process all visible nodes)\n        // It is not enough to only process rendered nodes, we need to update the detached nodes as well\n\n\n        this.outline.visibleNodesFlat.forEach(function (node) {\n          var $node = node.$node;\n\n          if (!$node) {\n            // Do nothing if node has never been rendered\n            return;\n          } // check for style.height to prevent unnecessary updates, no need to update nodes without a fixed height\n\n\n          if ($node.isSelected() || !$node[0].style.height || $node[0].style.height === 'auto') {\n            return;\n          }\n\n          $node.css('height', 'auto').css('width', 'auto');\n          node.height = $node.outerHeight(true);\n        });\n      } // layout menu bars\n\n\n      this.outline.titleMenuBar.validateLayout();\n      this.outline.nodeMenuBar.validateLayout();\n      this.outline.detailMenuBar.validateLayout();\n    }\n  }, {\n    key: \"_setDataHeight\",\n    value: function _setDataHeight(heightOffset) {\n      var titleSize = null;\n\n      if (this.outline.titleVisible) {\n        titleSize = graphics.size(this.outline.$title, true);\n      }\n\n      _get(_getPrototypeOf(OutlineLayout.prototype), \"_setDataHeight\", this).call(this, heightOffset + (titleSize === null ? 0 : titleSize.height));\n    }\n  }]);\n\n  return OutlineLayout;\n}(TreeLayout);\n\nexport { OutlineLayout as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/desktop/outline/OutlineLayout.js"],"names":["Dimension","graphics","TreeLayout","OutlineLayout","outline","$container","containerSize","htmlContainer","htmlComp","availableSize","subtract","insets","embedDetailContent","selectedNode","selectedNodes","rendered","pageHtmlComp","$comp","cssWidth","width","prefSize","setSize","height","margins","vertical","visibleNodesFlat","forEach","node","$node","isSelected","style","css","outerHeight","titleMenuBar","validateLayout","nodeMenuBar","detailMenuBar","heightOffset","titleSize","titleVisible","size","$title"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,SAAR,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA8C,aAA9C;;IAEqBC,a;;;;;AAEnB,yBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,8BAAMA,OAAN;AACA,UAAKA,OAAL,GAAeA,OAAf;AAFmB;AAGpB;;;;4BAEOC,U,EAAY;AAClB,UAAIC,aAAJ;AAAA,UACEC,aAAa,GAAG,KAAKH,OAAL,CAAaI,QAD/B;;AAGA,iFAAcH,UAAd;;AAEAC,MAAAA,aAAa,GAAGC,aAAa,CAACE,aAAd,GACbC,QADa,CACJH,aAAa,CAACI,MAAd,EADI,CAAhB;;AAGA,UAAI,KAAKP,OAAL,CAAaQ,kBAAjB,EAAqC;AACnC,YAAIC,YAAY,GAAG,KAAKT,OAAL,CAAaU,aAAb,CAA2B,CAA3B,CAAnB;;AACA,YAAID,YAAY,IAAIA,YAAY,CAACE,QAAjC,EAA2C;AACzC,cAAIC,YAAY,GAAGH,YAAY,CAACL,QAAhC,CADyC,CAEzC;;AACA,cAAIQ,YAAJ,EAAkB;AAChB;AACAA,YAAAA,YAAY,CAACC,KAAb,CAAmBC,QAAnB,CAA4BZ,aAAa,CAACa,KAA1C;AAEA,gBAAIC,QAAQ,GAAGJ,YAAY,CAACI,QAAb,EAAf;AACAJ,YAAAA,YAAY,CAACK,OAAb,CAAqB,IAAIrB,SAAJ,CAAcM,aAAa,CAACa,KAA5B,EAAmCC,QAAQ,CAACE,MAA5C,CAArB;AACAT,YAAAA,YAAY,CAACS,MAAb,GAAsBF,QAAQ,CAACE,MAAT,GAAkBN,YAAY,CAACO,OAAb,GAAuBC,QAAvB,EAAxC;AACD;AACF,SAbkC,CAenC;AACA;;;AACA,aAAKpB,OAAL,CAAaqB,gBAAb,CAA8BC,OAA9B,CAAsC,UAASC,IAAT,EAAe;AACnD,cAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;;AACA,cAAI,CAACA,KAAL,EAAY;AACV;AACA;AACD,WALkD,CAMnD;;;AACA,cAAIA,KAAK,CAACC,UAAN,MAAsB,CAACD,KAAK,CAAC,CAAD,CAAL,CAASE,KAAT,CAAeR,MAAtC,IAAgDM,KAAK,CAAC,CAAD,CAAL,CAASE,KAAT,CAAeR,MAAf,KAA0B,MAA9E,EAAsF;AACpF;AACD;;AAEDM,UAAAA,KAAK,CAACG,GAAN,CAAU,QAAV,EAAoB,MAApB,EACGA,GADH,CACO,OADP,EACgB,MADhB;AAEAJ,UAAAA,IAAI,CAACL,MAAL,GAAcM,KAAK,CAACI,WAAN,CAAkB,IAAlB,CAAd;AACD,SAdD;AAeD,OAzCiB,CA2ClB;;;AACA,WAAK5B,OAAL,CAAa6B,YAAb,CAA0BC,cAA1B;AACA,WAAK9B,OAAL,CAAa+B,WAAb,CAAyBD,cAAzB;AACA,WAAK9B,OAAL,CAAagC,aAAb,CAA2BF,cAA3B;AACD;;;mCAEcG,Y,EAAc;AAC3B,UAAIC,SAAS,GAAG,IAAhB;;AACA,UAAI,KAAKlC,OAAL,CAAamC,YAAjB,EAA+B;AAC7BD,QAAAA,SAAS,GAAGrC,QAAQ,CAACuC,IAAT,CAAc,KAAKpC,OAAL,CAAaqC,MAA3B,EAAmC,IAAnC,CAAZ;AACD;;AACD,wFAAqBJ,YAAY,IAAIC,SAAS,KAAK,IAAd,GAAqB,CAArB,GAAyBA,SAAS,CAAChB,MAAvC,CAAjC;AACD;;;;EA9DwCpB,U;;SAAtBC,a","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Dimension, graphics, TreeLayout} from '../../index';\n\nexport default class OutlineLayout extends TreeLayout {\n\n  constructor(outline) {\n    super(outline);\n    this.outline = outline;\n  }\n\n  _layout($container) {\n    var containerSize,\n      htmlContainer = this.outline.htmlComp;\n\n    super._layout($container);\n\n    containerSize = htmlContainer.availableSize()\n      .subtract(htmlContainer.insets());\n\n    if (this.outline.embedDetailContent) {\n      var selectedNode = this.outline.selectedNodes[0];\n      if (selectedNode && selectedNode.rendered) {\n        var pageHtmlComp = selectedNode.htmlComp;\n        // pageHtmlComp is null if there is no detail form and no detail menubar\n        if (pageHtmlComp) {\n          // Fix width so that prefSize returns the appropriate height (necessary for elements with text wrap)\n          pageHtmlComp.$comp.cssWidth(containerSize.width);\n\n          var prefSize = pageHtmlComp.prefSize();\n          pageHtmlComp.setSize(new Dimension(containerSize.width, prefSize.height));\n          selectedNode.height = prefSize.height + pageHtmlComp.margins().vertical();\n        }\n      }\n\n      // Remove width and height from non selected nodes (at this point we don't know the previously selected node anymore, so we need to process all visible nodes)\n      // It is not enough to only process rendered nodes, we need to update the detached nodes as well\n      this.outline.visibleNodesFlat.forEach(function(node) {\n        var $node = node.$node;\n        if (!$node) {\n          // Do nothing if node has never been rendered\n          return;\n        }\n        // check for style.height to prevent unnecessary updates, no need to update nodes without a fixed height\n        if ($node.isSelected() || !$node[0].style.height || $node[0].style.height === 'auto') {\n          return;\n        }\n\n        $node.css('height', 'auto')\n          .css('width', 'auto');\n        node.height = $node.outerHeight(true);\n      });\n    }\n\n    // layout menu bars\n    this.outline.titleMenuBar.validateLayout();\n    this.outline.nodeMenuBar.validateLayout();\n    this.outline.detailMenuBar.validateLayout();\n  }\n\n  _setDataHeight(heightOffset) {\n    var titleSize = null;\n    if (this.outline.titleVisible) {\n      titleSize = graphics.size(this.outline.$title, true);\n    }\n    super._setDataHeight(heightOffset + (titleSize === null ? 0 : titleSize.height));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}