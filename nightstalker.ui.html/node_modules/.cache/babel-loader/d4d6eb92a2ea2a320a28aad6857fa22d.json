{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractCompactTreeControlKeyStroke, arrays, keys } from '../../index';\n\nvar CompactTreeUpKeyStroke = /*#__PURE__*/function (_AbstractCompactTreeC) {\n  _inherits(CompactTreeUpKeyStroke, _AbstractCompactTreeC);\n\n  var _super = _createSuper(CompactTreeUpKeyStroke);\n\n  function CompactTreeUpKeyStroke(compactProcessTree) {\n    var _this;\n\n    _classCallCheck(this, CompactTreeUpKeyStroke);\n\n    _this = _super.call(this, compactProcessTree);\n    _this.which = [keys.UP];\n    _this.renderingHints.text = '↑';\n    return _this;\n  }\n\n  _createClass(CompactTreeUpKeyStroke, [{\n    key: \"_findNextNode\",\n    value: function _findNextNode($currentNode, currentNode) {\n      if (currentNode) {\n        // Find last process node, or last process node in previous section.\n        return $currentNode.prev('.section-node').data('node') || $currentNode.parent().prev('.section').children('.section-node').last().data('node');\n      } // Find last process node.\n\n\n      return arrays.last(arrays.last(this.field.nodes).childNodes);\n    }\n  }]);\n\n  return CompactTreeUpKeyStroke;\n}(AbstractCompactTreeControlKeyStroke);\n\nexport { CompactTreeUpKeyStroke as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/tree/keystrokes/CompactTreeUpKeyStroke.js"],"names":["AbstractCompactTreeControlKeyStroke","arrays","keys","CompactTreeUpKeyStroke","compactProcessTree","which","UP","renderingHints","text","$currentNode","currentNode","prev","data","parent","children","last","field","nodes","childNodes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,mCAAR,EAA6CC,MAA7C,EAAqDC,IAArD,QAAgE,aAAhE;;IAEqBC,sB;;;;;AAEnB,kCAAYC,kBAAZ,EAAgC;AAAA;;AAAA;;AAC9B,8BAAMA,kBAAN;AACA,UAAKC,KAAL,GAAa,CAACH,IAAI,CAACI,EAAN,CAAb;AACA,UAAKC,cAAL,CAAoBC,IAApB,GAA2B,GAA3B;AAH8B;AAI/B;;;;kCAEaC,Y,EAAcC,W,EAAa;AACvC,UAAIA,WAAJ,EAAiB;AACf;AACA,eAAOD,YAAY,CAACE,IAAb,CAAkB,eAAlB,EAAmCC,IAAnC,CAAwC,MAAxC,KAAmDH,YAAY,CAACI,MAAb,GAAsBF,IAAtB,CAA2B,UAA3B,EAAuCG,QAAvC,CAAgD,eAAhD,EAAiEC,IAAjE,GAAwEH,IAAxE,CAA6E,MAA7E,CAA1D;AACD,OAJsC,CAKvC;;;AACA,aAAOX,MAAM,CAACc,IAAP,CAAYd,MAAM,CAACc,IAAP,CAAY,KAAKC,KAAL,CAAWC,KAAvB,EAA8BC,UAA1C,CAAP;AACD;;;;EAfiDlB,mC;;SAA/BG,sB","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractCompactTreeControlKeyStroke, arrays, keys} from '../../index';\n\nexport default class CompactTreeUpKeyStroke extends AbstractCompactTreeControlKeyStroke {\n\n  constructor(compactProcessTree) {\n    super(compactProcessTree);\n    this.which = [keys.UP];\n    this.renderingHints.text = '↑';\n  }\n\n  _findNextNode($currentNode, currentNode) {\n    if (currentNode) {\n      // Find last process node, or last process node in previous section.\n      return $currentNode.prev('.section-node').data('node') || $currentNode.parent().prev('.section').children('.section-node').last().data('node');\n    }\n    // Find last process node.\n    return arrays.last(arrays.last(this.field.nodes).childNodes);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}