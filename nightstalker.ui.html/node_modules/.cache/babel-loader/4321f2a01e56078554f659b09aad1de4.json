{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractTableNavigationKeyStroke, arrays, keys, scout } from '../../index';\n\nvar TableNavigationDownKeyStroke = /*#__PURE__*/function (_AbstractTableNavigat) {\n  _inherits(TableNavigationDownKeyStroke, _AbstractTableNavigat);\n\n  var _super = _createSuper(TableNavigationDownKeyStroke);\n\n  function TableNavigationDownKeyStroke(table) {\n    var _this;\n\n    _classCallCheck(this, TableNavigationDownKeyStroke);\n\n    _this = _super.call(this, table);\n    _this.which = [keys.DOWN];\n    _this.renderingHints.text = 'â†“';\n\n    _this.renderingHints.$drawingArea = function ($drawingArea, event) {\n      var row = this.firstRowAfterSelection();\n\n      if (row) {\n        return row.$row;\n      }\n    }.bind(_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(TableNavigationDownKeyStroke, [{\n    key: \"handle\",\n    value: function handle(event) {\n      var table = this.field,\n          rows = table.visibleRows,\n          selectedRows = table.selectedRows,\n          lastActionRow = table.selectionHandler.lastActionRow,\n          lastActionRowIndex = -1,\n          newActionRowIndex = -1,\n          newSelectedRows,\n          newActionRow;\n\n      if (lastActionRow) {\n        lastActionRowIndex = rows.indexOf(lastActionRow);\n      }\n\n      if (rows.length > 1 && (selectedRows.length > 0 || lastActionRowIndex > -1)) {\n        // last action row index maybe < 0 if row got invisible (e.g. due to filtering), or if the user has not made a selection before\n        if (lastActionRowIndex < 0) {\n          if (rows.length === selectedRows.length) {\n            lastActionRow = arrays.first(rows);\n          } else {\n            lastActionRow = arrays.last(selectedRows);\n          }\n\n          lastActionRowIndex = rows.indexOf(lastActionRow);\n        }\n\n        if (lastActionRowIndex === rows.length - 1) {\n          return;\n        }\n\n        newActionRowIndex = lastActionRowIndex + 1;\n        newActionRow = rows[newActionRowIndex];\n        newSelectedRows = [newActionRow];\n\n        if (event.shiftKey) {\n          if (table.isRowSelected(newActionRow)) {\n            // if new action row already is selected, remove last action row from selection\n            // use case: rows 2,3,4 are selected, last action row is 2. User presses shift-down -> rows 3,4 need to be the new selection\n            newSelectedRows = [];\n            arrays.pushAll(newSelectedRows, selectedRows); // only unselect when first or last row (but not in the middle of the selection, see #172929)\n\n            var selectionIndizes = table.selectionHandler.getMinMaxSelectionIndizes();\n\n            if (scout.isOneOf(lastActionRowIndex, selectionIndizes[0], selectionIndizes[1])) {\n              arrays.remove(newSelectedRows, lastActionRow);\n            }\n          } else {\n            newSelectedRows = arrays.union(selectedRows, newSelectedRows);\n            newActionRow = this._findLastSelectedRowAfter(table, newActionRowIndex);\n          }\n        }\n      } else {\n        newSelectedRows = [arrays.first(rows)];\n        newActionRow = newSelectedRows[0];\n      }\n\n      table.selectionHandler.lastActionRow = newActionRow;\n      table.selectRows(newSelectedRows, true);\n      table.scrollTo(newActionRow);\n    }\n  }]);\n\n  return TableNavigationDownKeyStroke;\n}(AbstractTableNavigationKeyStroke);\n\nexport { TableNavigationDownKeyStroke as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/table/keystrokes/TableNavigationDownKeyStroke.js"],"names":["AbstractTableNavigationKeyStroke","arrays","keys","scout","TableNavigationDownKeyStroke","table","which","DOWN","renderingHints","text","$drawingArea","event","row","firstRowAfterSelection","$row","bind","field","rows","visibleRows","selectedRows","lastActionRow","selectionHandler","lastActionRowIndex","newActionRowIndex","newSelectedRows","newActionRow","indexOf","length","first","last","shiftKey","isRowSelected","pushAll","selectionIndizes","getMinMaxSelectionIndizes","isOneOf","remove","union","_findLastSelectedRowAfter","selectRows","scrollTo"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractTableNavigationKeyStroke, arrays, keys, scout} from '../../index';\n\nexport default class TableNavigationDownKeyStroke extends AbstractTableNavigationKeyStroke {\n\n  constructor(table) {\n    super(table);\n    this.which = [keys.DOWN];\n    this.renderingHints.text = 'â†“';\n    this.renderingHints.$drawingArea = function($drawingArea, event) {\n      var row = this.firstRowAfterSelection();\n      if (row) {\n        return row.$row;\n      }\n    }.bind(this);\n  }\n\n  handle(event) {\n    var table = this.field,\n      rows = table.visibleRows,\n      selectedRows = table.selectedRows,\n      lastActionRow = table.selectionHandler.lastActionRow,\n      lastActionRowIndex = -1,\n      newActionRowIndex = -1,\n      newSelectedRows, newActionRow;\n\n    if (lastActionRow) {\n      lastActionRowIndex = rows.indexOf(lastActionRow);\n    }\n\n    if (rows.length > 1 && (selectedRows.length > 0 || lastActionRowIndex > -1)) {\n      // last action row index maybe < 0 if row got invisible (e.g. due to filtering), or if the user has not made a selection before\n      if (lastActionRowIndex < 0) {\n        if (rows.length === selectedRows.length) {\n          lastActionRow = arrays.first(rows);\n        } else {\n          lastActionRow = arrays.last(selectedRows);\n        }\n        lastActionRowIndex = rows.indexOf(lastActionRow);\n      }\n      if (lastActionRowIndex === rows.length - 1) {\n        return;\n      }\n\n      newActionRowIndex = lastActionRowIndex + 1;\n      newActionRow = rows[newActionRowIndex];\n      newSelectedRows = [newActionRow];\n\n      if (event.shiftKey) {\n        if (table.isRowSelected(newActionRow)) {\n          // if new action row already is selected, remove last action row from selection\n          // use case: rows 2,3,4 are selected, last action row is 2. User presses shift-down -> rows 3,4 need to be the new selection\n          newSelectedRows = [];\n          arrays.pushAll(newSelectedRows, selectedRows);\n          // only unselect when first or last row (but not in the middle of the selection, see #172929)\n          var selectionIndizes = table.selectionHandler.getMinMaxSelectionIndizes();\n          if (scout.isOneOf(lastActionRowIndex, selectionIndizes[0], selectionIndizes[1])) {\n            arrays.remove(newSelectedRows, lastActionRow);\n          }\n        } else {\n          newSelectedRows = arrays.union(selectedRows, newSelectedRows);\n          newActionRow = this._findLastSelectedRowAfter(table, newActionRowIndex);\n        }\n      }\n    } else {\n      newSelectedRows = [arrays.first(rows)];\n      newActionRow = newSelectedRows[0];\n    }\n\n    table.selectionHandler.lastActionRow = newActionRow;\n    table.selectRows(newSelectedRows, true);\n    table.scrollTo(newActionRow);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}