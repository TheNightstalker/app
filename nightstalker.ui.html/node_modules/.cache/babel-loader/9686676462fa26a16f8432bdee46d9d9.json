{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2020 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, BenchColumnLayoutData, cookies, DeferredGlassPaneTarget, DesktopLayout, DesktopNavigation, Device, DisableBrowserF5ReloadKeyStroke, DisableBrowserTabSwitchingKeyStroke, Event, FileChooserController, Form, HtmlComponent, HtmlEnvironment, KeyStrokeContext, MessageBoxController, objects, Outline, scout, strings, styles, Tree, URL, webstorage, Widget, widgets } from '../index';\nimport $ from 'jquery';\n\nvar Desktop = /*#__PURE__*/function (_Widget) {\n  _inherits(Desktop, _Widget);\n\n  var _super = _createSuper(Desktop);\n\n  function Desktop() {\n    var _this;\n\n    _classCallCheck(this, Desktop);\n\n    _this = _super.call(this);\n    _this.desktopStyle = Desktop.DisplayStyle.DEFAULT;\n    _this.title = null;\n    _this.selectViewTabsKeyStrokesEnabled = true;\n    _this.selectViewTabsKeyStrokeModifier = 'control';\n    _this.cacheSplitterPosition = true;\n    _this.browserHistoryEntry = null;\n    _this.logoId = null;\n    _this.navigationVisible = true;\n    _this.navigationHandleVisible = true;\n    _this.logoActionEnabled = false;\n    _this.benchVisible = true;\n    _this.headerVisible = true;\n    _this.geolocationServiceAvailable = Device.get().supportsGeolocation();\n    _this.benchLayoutData = null;\n    _this.menus = [];\n    _this.addOns = [];\n    _this.dialogs = [];\n    _this.views = [];\n    _this.keyStrokes = [];\n    _this.viewButtons = [];\n    _this.messageBoxes = [];\n    _this.fileChoosers = [];\n    _this.outline = null;\n    _this.activeForm = null;\n    _this.selectedViewTabs = [];\n    _this.notifications = [];\n    _this.navigation = null;\n    _this.header = null;\n    _this.bench = null;\n    _this.splitter = null;\n    _this.splitterVisible = false;\n    _this.formController = null;\n    _this.messageBoxController = null;\n    _this.fileChooserController = null;\n    _this.initialFormRendering = false;\n    _this.offline = false;\n    _this.inBackground = false;\n    _this.openUriHandler = null;\n    _this.theme = null;\n    _this.dense = false;\n    _this._glassPaneTargetFilters = [];\n    _this.url = null;\n\n    _this._addWidgetProperties(['viewButtons', 'menus', 'views', 'selectedViewTabs', 'dialogs', 'outline', 'messageBoxes', 'notifications', 'fileChoosers', 'addOns', 'keyStrokes', 'activeForm']); // event listeners\n\n\n    _this._benchActiveViewChangedHandler = _this._onBenchActivateViewChanged.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Desktop, [{\n    key: \"_init\",\n    value: function _init(model) {\n      // Note: session and desktop are tightly coupled. Because a lot of widgets want to register\n      // a listener on the desktop in their init phase, they access the desktop by calling 'this.session.desktop'\n      // that's why we need this instance as early as possible. When that happens they access a desktop which is\n      // not yet fully initialized. But anyway, it's already possible to attach a listener, for instance.\n      // Because of this line of code here, we don't have to set the variable in App.js, after the desktop has been\n      // created. Also note that Scout Java uses a different pattern to solve the same problem, there a VirtualDesktop\n      // is used during initialization. When initialization is done, all registered listeners on the virtual desktop\n      // are copied to the real desktop instance.\n      var session = model.session || model.parent.session;\n      session.desktop = this;\n\n      _get(_getPrototypeOf(Desktop.prototype), \"_init\", this).call(this, model);\n\n      this.url = new URL();\n\n      this._initTheme();\n\n      this.formController = scout.create('DesktopFormController', {\n        displayParent: this,\n        session: this.session\n      });\n      this.messageBoxController = new MessageBoxController(this, this.session);\n      this.fileChooserController = new FileChooserController(this, this.session);\n      this._resizeHandler = this.onResize.bind(this);\n      this._popstateHandler = this.onPopstate.bind(this);\n      this.updateSplitterVisibility();\n      this.resolveTextKeys(['title']);\n\n      this._setViews(this.views);\n\n      this._setViewButtons(this.viewButtons);\n\n      this._setMenus(this.menus);\n\n      this._setKeyStrokes(this.keyStrokes);\n\n      this._setBenchLayoutData(this.benchLayoutData);\n\n      this._setDisplayStyle(this.displayStyle);\n\n      this._setDense(this.dense);\n\n      this.openUriHandler = scout.create('OpenUriHandler', {\n        session: this.session\n      });\n\n      this._glassPaneTargetFilters.push(function (targetElem, element) {\n        // Exclude all child elements of the given widget\n        // Use case: element is a popup and has tooltip open. The tooltip is displayed in the desktop and considered as glass pane target by the selector above\n        var target = scout.widget(targetElem);\n        return !element.has(target);\n      });\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_createKeyStrokeContext\",\n    value: function _createKeyStrokeContext() {\n      return new KeyStrokeContext();\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_initKeyStrokeContext\",\n    value: function _initKeyStrokeContext() {\n      _get(_getPrototypeOf(Desktop.prototype), \"_initKeyStrokeContext\", this).call(this);\n\n      this.keyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n      this.keyStrokeContext.registerKeyStroke([new DisableBrowserF5ReloadKeyStroke(this), new DisableBrowserTabSwitchingKeyStroke(this)]);\n    }\n  }, {\n    key: \"_onBenchActivateViewChanged\",\n    value: function _onBenchActivateViewChanged(event) {\n      if (this.initialFormRendering) {\n        return;\n      }\n\n      var view = event.view;\n\n      if (view instanceof Form && this.bench.outlineContent !== view && !view.detailForm) {\n        // Notify model that this form is active (only for regular views, not detail forms)\n        this._setFormActivated(view);\n      }\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent;\n      this.$container.addClass('desktop');\n      this.htmlComp = HtmlComponent.install(this.$container, this.session);\n      this.htmlComp.setLayout(this._createLayout()); // Attach resize listener before other elements can add their own resize listener (e.g. an addon) to make sure it is executed first\n\n      this.$container.window().on('resize', this._resizeHandler).on('popstate', this._popstateHandler); // Desktop elements are added before this separator, all overlays are opened after (dialogs, popups, tooltips etc.)\n\n      this.$overlaySeparator = this.$container.appendDiv('overlay-separator').setVisible(false);\n\n      this._renderNavigationVisible();\n\n      this._renderHeaderVisible();\n\n      this._renderBenchVisible();\n\n      this._renderTitle();\n\n      this._renderLogoUrl();\n\n      this._renderSplitterVisible();\n\n      this._renderInBackground();\n\n      this._renderNavigationHandleVisible();\n\n      this._renderNotifications();\n\n      this._renderBrowserHistoryEntry();\n\n      this._renderDense();\n\n      this.addOns.forEach(function (addOn) {\n        addOn.render();\n      }, this); // prevent general drag and drop, dropping a file anywhere in the application must not open this file in browser\n\n      this._setupDragAndDrop();\n\n      this._disableContextMenu();\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.formController.remove();\n      this.messageBoxController.remove();\n      this.fileChooserController.remove();\n      this.$container.window().off('resize', this._resizeHandler).off('popstate', this._popstateHandler);\n\n      _get(_getPrototypeOf(Desktop.prototype), \"_remove\", this).call(this);\n    }\n  }, {\n    key: \"_postRender\",\n    value: function _postRender() {\n      _get(_getPrototypeOf(Desktop.prototype), \"_postRender\", this).call(this); // Render attached forms, message boxes and file choosers.\n\n\n      this.initialFormRendering = true;\n\n      this._renderDisplayChildrenOfOutline();\n\n      this.formController.render();\n      this.messageBoxController.render();\n      this.fileChooserController.render();\n      this.initialFormRendering = false;\n    }\n  }, {\n    key: \"_setDisplayStyle\",\n    value: function _setDisplayStyle(displayStyle) {\n      this._setProperty('displayStyle', displayStyle);\n\n      var isCompact = this.displayStyle === Desktop.DisplayStyle.COMPACT;\n\n      if (this.header) {\n        this.header.setToolBoxVisible(!isCompact);\n        this.header.animateRemoval = isCompact;\n      }\n\n      if (this.navigation) {\n        this.navigation.setToolBoxVisible(isCompact);\n        this.navigation.htmlComp.layoutData.fullWidth = isCompact;\n      }\n\n      if (this.bench) {\n        this.bench.setOutlineContentVisible(!isCompact);\n      }\n\n      if (this.outline) {\n        this.outline.setCompact(isCompact);\n        this.outline.setEmbedDetailContent(isCompact);\n      }\n    }\n  }, {\n    key: \"setDense\",\n    value: function setDense(dense) {\n      this.setProperty('dense', dense);\n    }\n  }, {\n    key: \"_setDense\",\n    value: function _setDense(dense) {\n      this._setProperty('dense', dense);\n\n      styles.clearCache();\n      HtmlEnvironment.get().init(this.dense ? 'dense' : null);\n    }\n  }, {\n    key: \"_renderDense\",\n    value: function _renderDense() {\n      this.$container.toggleClass('dense', this.dense);\n    }\n  }, {\n    key: \"_createLayout\",\n    value: function _createLayout() {\n      return new DesktopLayout(this);\n    }\n    /**\n     * Displays attached forms, message boxes and file choosers.\n     * Outline does not need to be rendered to show the child elements, it needs to be active (necessary if navigation is invisible)\n     */\n\n  }, {\n    key: \"_renderDisplayChildrenOfOutline\",\n    value: function _renderDisplayChildrenOfOutline() {\n      if (!this.outline) {\n        return;\n      }\n\n      this.outline.formController.render();\n      this.outline.messageBoxController.render();\n      this.outline.fileChooserController.render(); // this restores the selected view after a page refresh. selectedViewTabs is only set by the model.\n\n      if (this.outline.selectedViewTabs) {\n        this.outline.selectedViewTabs.forEach(function (selectedView) {\n          this.formController._activateView(selectedView);\n        }.bind(this));\n      } else {\n        // views on the outline are not activated by default. Check for modal views on this outline\n        var modalViews = this.outline.views.filter(function (view) {\n          return view.modal;\n        }); // activate each modal view in the order it was originally activated\n\n        modalViews.forEach(this.formController._activateView.bind(this.formController));\n      }\n    }\n  }, {\n    key: \"_removeDisplayChildrenOfOutline\",\n    value: function _removeDisplayChildrenOfOutline() {\n      if (!this.outline) {\n        return;\n      }\n\n      this.outline.formController.remove();\n      this.outline.messageBoxController.remove();\n      this.outline.fileChooserController.remove();\n    }\n  }, {\n    key: \"computeParentForDisplayParent\",\n    value: function computeParentForDisplayParent(displayParent) {\n      // Outline must not be used as parent, otherwise the children (form, messageboxes etc.) would be removed if navigation is made invisible\n      // The functions _render/removeDisplayChildrenOfOutline take care that the elements are correctly rendered/removed on an outline switch\n      var parent = displayParent;\n\n      if (displayParent instanceof Outline) {\n        parent = this;\n      }\n\n      return parent;\n    }\n  }, {\n    key: \"_renderTitle\",\n    value: function _renderTitle() {\n      var title = this.title;\n\n      if (title === undefined || title === null) {\n        return;\n      }\n\n      var $scoutDivs = $('div.scout');\n\n      if ($scoutDivs.length <= 1) {\n        // only set document title in non-portlet case\n        $scoutDivs.document(true).title = title;\n      }\n    }\n  }, {\n    key: \"_renderActiveForm\",\n    value: function _renderActiveForm() {// NOP -> is handled in _setFormActivated when ui changes active form or if model changes form in _onFormShow/_onFormActivate\n    }\n  }, {\n    key: \"_renderBench\",\n    value: function _renderBench() {\n      if (this.bench) {\n        return;\n      }\n\n      this.bench = scout.create('DesktopBench', {\n        parent: this,\n        animateRemoval: true,\n        headerTabArea: this.header ? this.header.tabArea : undefined,\n        outlineContentVisible: this.displayStyle !== Desktop.DisplayStyle.COMPACT\n      });\n      this.bench.on('viewActivate', this._benchActiveViewChangedHandler);\n      this.bench.render();\n      this.bench.$container.insertBefore(this.$overlaySeparator);\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"_removeBench\",\n    value: function _removeBench() {\n      if (!this.bench) {\n        return;\n      }\n\n      this.bench.off('viewActivate', this._benchActiveViewChangedHandler);\n      this.bench.on('destroy', function () {\n        this.bench = null;\n        this.invalidateLayoutTree();\n      }.bind(this));\n      this.bench.destroy();\n    }\n  }, {\n    key: \"_renderBenchVisible\",\n    value: function _renderBenchVisible() {\n      this.animateLayoutChange = this.rendered;\n\n      if (this.benchVisible) {\n        this._renderBench();\n\n        this._renderInBackground();\n      } else {\n        this._removeBench();\n      }\n    }\n  }, {\n    key: \"_renderNavigation\",\n    value: function _renderNavigation() {\n      if (this.navigation) {\n        return;\n      }\n\n      this.navigation = scout.create('DesktopNavigation', {\n        parent: this,\n        outline: this.outline,\n        toolBoxVisible: this.displayStyle === Desktop.DisplayStyle.COMPACT,\n        layoutData: {\n          fullWidth: this.displayStyle === Desktop.DisplayStyle.COMPACT\n        }\n      });\n      this.navigation.render();\n      this.navigation.$container.prependTo(this.$container);\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"_removeNavigation\",\n    value: function _removeNavigation() {\n      if (!this.navigation) {\n        return;\n      }\n\n      this.navigation.destroy();\n      this.navigation = null;\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"_renderNavigationVisible\",\n    value: function _renderNavigationVisible() {\n      this.animateLayoutChange = this.rendered;\n\n      if (this.navigationVisible) {\n        this._renderNavigation();\n      } else {\n        if (!this.animateLayoutChange) {\n          this._removeNavigation();\n        } else {\n          // re layout to trigger animation\n          this.invalidateLayoutTree();\n        }\n      }\n    }\n  }, {\n    key: \"_renderHeader\",\n    value: function _renderHeader() {\n      if (this.header) {\n        return;\n      }\n\n      this.header = scout.create('DesktopHeader', {\n        parent: this,\n        logoUrl: this.logoUrl,\n        animateRemoval: this.displayStyle === Desktop.DisplayStyle.COMPACT,\n        toolBoxVisible: this.displayStyle !== Desktop.DisplayStyle.COMPACT\n      });\n      this.header.render();\n\n      if (this.navigation && this.navigation.rendered) {\n        this.header.$container.insertAfter(this.navigation.$container);\n      } else {\n        this.header.$container.prependTo(this.$container);\n      } // register header tab area\n\n\n      if (this.bench) {\n        this.bench._setTabArea(this.header.tabArea);\n      }\n\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"_removeHeader\",\n    value: function _removeHeader() {\n      if (!this.header) {\n        return;\n      }\n\n      this.header.on('destroy', function () {\n        this.invalidateLayoutTree();\n        this.header = null;\n      }.bind(this));\n      this.header.destroy();\n    }\n  }, {\n    key: \"_renderHeaderVisible\",\n    value: function _renderHeaderVisible() {\n      if (this.headerVisible) {\n        this._renderHeader();\n      } else {\n        this._removeHeader();\n      }\n    }\n  }, {\n    key: \"_renderLogoUrl\",\n    value: function _renderLogoUrl() {\n      if (this.header) {\n        this.header.setLogoUrl(this.logoUrl);\n      }\n    }\n  }, {\n    key: \"_renderSplitterVisible\",\n    value: function _renderSplitterVisible() {\n      if (this.splitterVisible) {\n        this._renderSplitter();\n      } else {\n        this._removeSplitter();\n      }\n    }\n  }, {\n    key: \"_renderSplitter\",\n    value: function _renderSplitter() {\n      if (this.splitter || !this.navigation) {\n        return;\n      }\n\n      this.splitter = scout.create('Splitter', {\n        parent: this,\n        $anchor: this.navigation.$container,\n        $root: this.$container\n      });\n      this.splitter.render();\n      this.splitter.$container.insertBefore(this.$overlaySeparator);\n      this.splitter.on('move', this._onSplitterMove.bind(this));\n      this.splitter.on('moveEnd', this._onSplitterMoveEnd.bind(this));\n      this.splitter.on('positionChange', this._onSplitterPositionChange.bind(this));\n      this.updateSplitterPosition();\n    }\n  }, {\n    key: \"_removeSplitter\",\n    value: function _removeSplitter() {\n      if (!this.splitter) {\n        return;\n      }\n\n      this.splitter.destroy();\n      this.splitter = null;\n    }\n  }, {\n    key: \"_renderInBackground\",\n    value: function _renderInBackground() {\n      if (this.bench) {\n        this.bench.$container.toggleClass('drop-shadow', this.inBackground);\n      }\n    }\n  }, {\n    key: \"_renderBrowserHistoryEntry\",\n    value: function _renderBrowserHistoryEntry() {\n      if (!Device.get().supportsHistoryApi()) {\n        return;\n      }\n\n      var myWindow = this.$container.window(true),\n          history = this.browserHistoryEntry;\n\n      if (history) {\n        var historyPath = this._createHistoryPath(history);\n\n        var setStateFunc = (this.rendered ? myWindow.history.pushState : myWindow.history.replaceState).bind(myWindow.history);\n        setStateFunc({\n          deepLinkPath: history.deepLinkPath\n        }, history.title, historyPath);\n      }\n    }\n    /**\n     * Takes the history.path provided by the browserHistoryEvent and appends additional URL parameters.\n     */\n\n  }, {\n    key: \"_createHistoryPath\",\n    value: function _createHistoryPath(history) {\n      if (!history.pathVisible) {\n        return '';\n      }\n\n      var historyPath = history.path;\n      var cloneUrl = this.url.clone();\n      cloneUrl.removeParameter('dl');\n      cloneUrl.removeParameter('i');\n\n      if (objects.countOwnProperties(cloneUrl.parameterMap) > 0) {\n        var pathUrl = new URL(historyPath);\n\n        for (var paramName in cloneUrl.parameterMap) {\n          pathUrl.addParameter(paramName, cloneUrl.getParameter(paramName));\n        }\n\n        historyPath = pathUrl.toString({\n          alwaysFirst: ['dl', 'i']\n        });\n      }\n\n      return historyPath;\n    }\n  }, {\n    key: \"_setupDragAndDrop\",\n    value: function _setupDragAndDrop() {\n      var dragEnterOrOver = function dragEnterOrOver(event) {\n        event.stopPropagation();\n        event.preventDefault(); // change cursor to forbidden (no dropping allowed)\n\n        event.originalEvent.dataTransfer.dropEffect = 'none';\n      };\n\n      this.$container.on('dragenter', dragEnterOrOver);\n      this.$container.on('dragover', dragEnterOrOver);\n      this.$container.on('drop', function (event) {\n        event.stopPropagation();\n        event.preventDefault();\n      });\n    }\n  }, {\n    key: \"updateSplitterVisibility\",\n    value: function updateSplitterVisibility() {\n      // Splitter should only be visible if navigation and bench are visible, but never in compact mode (to prevent unnecessary splitter rendering)\n      this.setSplitterVisible(this.navigationVisible && this.benchVisible && this.displayStyle !== Desktop.DisplayStyle.COMPACT);\n    }\n  }, {\n    key: \"setSplitterVisible\",\n    value: function setSplitterVisible(visible) {\n      this.setProperty('splitterVisible', visible);\n    }\n  }, {\n    key: \"updateSplitterPosition\",\n    value: function updateSplitterPosition() {\n      if (!this.splitter) {\n        return;\n      }\n\n      var storedSplitterPosition = this.cacheSplitterPosition && this._loadCachedSplitterPosition();\n\n      if (storedSplitterPosition) {\n        // Restore splitter position\n        var splitterPosition = parseInt(storedSplitterPosition, 10);\n        this.splitter.setPosition(splitterPosition);\n        this.invalidateLayoutTree();\n      } else {\n        // Set initial splitter position (default defined by css)\n        this.splitter.setPosition();\n        this.invalidateLayoutTree();\n      }\n    }\n  }, {\n    key: \"_disableContextMenu\",\n    value: function _disableContextMenu() {\n      // Switch off browser's default context menu for the entire scout desktop (except input fields)\n      this.$container.on('contextmenu', function (event) {\n        if (event.target.nodeName !== 'INPUT' && event.target.nodeName !== 'TEXTAREA' && !event.target.isContentEditable) {\n          event.preventDefault();\n        }\n      });\n    }\n  }, {\n    key: \"setOutline\",\n    value: function setOutline(outline) {\n      if (this.outline === outline) {\n        return;\n      }\n\n      try {\n        if (this.bench) {\n          this.bench.setChanging(true);\n        }\n\n        if (this.rendered) {\n          this._removeDisplayChildrenOfOutline();\n        }\n\n        this.outline = outline;\n\n        this._setDisplayStyle(this.displayStyle);\n\n        this._setOutlineActivated();\n\n        if (this.navigation) {\n          this.navigation.setOutline(this.outline);\n        } // call render after triggering event so glasspane rendering taking place can refer to the current outline content\n\n\n        this.trigger('outlineChange');\n\n        if (this.rendered) {\n          this._renderDisplayChildrenOfOutline();\n        }\n      } finally {\n        if (this.bench) {\n          this.bench.setChanging(false);\n        }\n      }\n    }\n  }, {\n    key: \"_setViews\",\n    value: function _setViews(views) {\n      if (views) {\n        views.forEach(function (view) {\n          view.setDisplayParent(this);\n        }.bind(this));\n      }\n\n      this._setProperty('views', views);\n    }\n  }, {\n    key: \"_setViewButtons\",\n    value: function _setViewButtons(viewButtons) {\n      this.updateKeyStrokes(viewButtons, this.viewButtons);\n\n      this._setProperty('viewButtons', viewButtons);\n    }\n  }, {\n    key: \"setMenus\",\n    value: function setMenus(menus) {\n      if (this.header) {\n        this.header.setMenus(menus);\n      }\n    }\n  }, {\n    key: \"_setMenus\",\n    value: function _setMenus(menus) {\n      this.updateKeyStrokes(menus, this.menus);\n\n      this._setProperty('menus', menus);\n    }\n  }, {\n    key: \"_setKeyStrokes\",\n    value: function _setKeyStrokes(keyStrokes) {\n      this.updateKeyStrokes(keyStrokes, this.keyStrokes);\n\n      this._setProperty('keyStrokes', keyStrokes);\n    }\n  }, {\n    key: \"setNavigationHandleVisible\",\n    value: function setNavigationHandleVisible(visible) {\n      this.setProperty('navigationHandleVisible', visible);\n    }\n  }, {\n    key: \"_renderNavigationHandleVisible\",\n    value: function _renderNavigationHandleVisible() {\n      this.$container.toggleClass('has-navigation-handle', this.navigationHandleVisible);\n    }\n  }, {\n    key: \"setNavigationVisible\",\n    value: function setNavigationVisible(visible) {\n      this.setProperty('navigationVisible', visible);\n      this.updateSplitterVisibility();\n    }\n  }, {\n    key: \"setBenchVisible\",\n    value: function setBenchVisible(visible) {\n      this.setProperty('benchVisible', visible);\n      this.updateSplitterVisibility();\n    }\n  }, {\n    key: \"setHeaderVisible\",\n    value: function setHeaderVisible(visible) {\n      this.setProperty('headerVisible', visible);\n    }\n  }, {\n    key: \"_setBenchLayoutData\",\n    value: function _setBenchLayoutData(layoutData) {\n      layoutData = BenchColumnLayoutData.ensure(layoutData);\n\n      this._setProperty('benchLayoutData', layoutData);\n    }\n  }, {\n    key: \"_setInBackground\",\n    value: function _setInBackground(inBackground) {\n      this._setProperty('inBackground', inBackground);\n    }\n  }, {\n    key: \"outlineDisplayStyle\",\n    value: function outlineDisplayStyle() {\n      if (this.outline) {\n        return this.outline.displayStyle;\n      }\n    }\n  }, {\n    key: \"shrinkNavigation\",\n    value: function shrinkNavigation() {\n      if (this.outline.toggleBreadcrumbStyleEnabled && this.navigationVisible && this.outlineDisplayStyle() === Tree.DisplayStyle.DEFAULT) {\n        this.outline.setDisplayStyle(Tree.DisplayStyle.BREADCRUMB);\n      } else {\n        this.setNavigationVisible(false);\n      }\n    }\n  }, {\n    key: \"enlargeNavigation\",\n    value: function enlargeNavigation() {\n      if (this.navigationVisible && this.outlineDisplayStyle() === Tree.DisplayStyle.BREADCRUMB) {\n        this.outline.setDisplayStyle(Tree.DisplayStyle.DEFAULT);\n      } else {\n        this.setNavigationVisible(true); // Layout immediately to have view tabs positioned correctly before animation starts\n\n        this.validateLayoutTree();\n      }\n    }\n  }, {\n    key: \"switchToBench\",\n    value: function switchToBench() {\n      this.setHeaderVisible(true);\n      this.setBenchVisible(true);\n      this.setNavigationVisible(false);\n    }\n  }, {\n    key: \"switchToNavigation\",\n    value: function switchToNavigation() {\n      this.setNavigationVisible(true);\n      this.setHeaderVisible(false);\n      this.setBenchVisible(false);\n    }\n  }, {\n    key: \"revalidateHeaderLayout\",\n    value: function revalidateHeaderLayout() {\n      if (this.header) {\n        this.header.revalidateLayout();\n      }\n    }\n  }, {\n    key: \"goOffline\",\n    value: function goOffline() {\n      if (this.offline) {\n        return;\n      }\n\n      this.offline = true;\n\n      this._removeOfflineNotification();\n\n      this._offlineNotification = scout.create('DesktopNotification:Offline', {\n        parent: this\n      });\n\n      this._offlineNotification.show();\n    }\n  }, {\n    key: \"goOnline\",\n    value: function goOnline() {\n      this._removeOfflineNotification();\n    }\n  }, {\n    key: \"_removeOfflineNotification\",\n    value: function _removeOfflineNotification() {\n      if (this._offlineNotification) {\n        setTimeout(this.removeNotification.bind(this, this._offlineNotification), 3000);\n        this._offlineNotification = null;\n      }\n    }\n  }, {\n    key: \"addNotification\",\n    value: function addNotification(notification) {\n      if (!notification) {\n        return;\n      }\n\n      this.notifications.push(notification);\n\n      if (this.rendered) {\n        this._renderNotification(notification);\n      }\n    }\n  }, {\n    key: \"_renderNotification\",\n    value: function _renderNotification(notification) {\n      if (this.$notifications) {\n        // Bring to front\n        this.$notifications.appendTo(this.$container);\n      } else {\n        this.$notifications = this.$container.appendDiv('desktop-notifications');\n      }\n\n      notification.fadeIn(this.$notifications);\n\n      if (notification.duration > 0) {\n        notification.removeTimeout = setTimeout(notification.hide.bind(notification), notification.duration);\n        notification.one('remove', function () {\n          this.removeNotification(notification);\n        }.bind(this));\n      }\n    }\n  }, {\n    key: \"_renderNotifications\",\n    value: function _renderNotifications() {\n      this.notifications.forEach(function (notification) {\n        this._renderNotification(notification);\n      }.bind(this));\n    }\n    /**\n     * Removes the given notification.\n     * @param notification Either an instance of DesktopNavigation or a String containing an ID of a notification instance.\n     */\n\n  }, {\n    key: \"removeNotification\",\n    value: function removeNotification(notification) {\n      if (typeof notification === 'string') {\n        var notificationId = notification;\n        notification = arrays.find(this.notifications, function (n) {\n          return notificationId === n.id;\n        });\n      }\n\n      if (!notification) {\n        return;\n      }\n\n      if (notification.removeTimeout) {\n        clearTimeout(notification.removeTimeout);\n      }\n\n      arrays.remove(this.notifications, notification);\n\n      if (!this.rendered) {\n        return;\n      }\n\n      if (this.$notifications) {\n        notification.fadeOut();\n        notification.one('remove', this._onNotificationRemove.bind(this, notification));\n      }\n    }\n  }, {\n    key: \"getPopupsFor\",\n    value: function getPopupsFor(widget) {\n      var popups = [];\n      this.$container.children('.popup').each(function (i, elem) {\n        var $popup = $(elem),\n            popup = widgets.get($popup);\n\n        if (widget.has(popup)) {\n          popups.push(popup);\n        }\n      });\n      return popups;\n    }\n    /**\n     * Destroys every popup which is a descendant of the given widget.\n     */\n\n  }, {\n    key: \"destroyPopupsFor\",\n    value: function destroyPopupsFor(widget) {\n      this.getPopupsFor(widget).forEach(function (popup) {\n        popup.destroy();\n      });\n    }\n  }, {\n    key: \"openUri\",\n    value: function openUri(uri, action) {\n      if (!this.rendered) {\n        this._postRenderActions.push(this.openUri.bind(this, uri, action));\n\n        return;\n      }\n\n      this.openUriHandler.openUri(uri, action);\n    }\n  }, {\n    key: \"bringOutlineToFront\",\n    value: function bringOutlineToFront() {\n      if (!this.rendered) {\n        this._postRenderActions.push(this.bringOutlineToFront.bind(this));\n\n        return;\n      }\n\n      if (!this.inBackground || this.displayStyle === Desktop.DisplayStyle.BENCH) {\n        return;\n      }\n\n      this._setInBackground(false);\n\n      this._setOutlineActivated();\n\n      if (this.navigationVisible) {\n        this.navigation.bringToFront();\n      }\n\n      if (this.benchVisible) {\n        this.bench.bringToFront();\n      }\n\n      if (this.headerVisible) {\n        this.header.bringToFront();\n      }\n\n      this._renderInBackground();\n    }\n  }, {\n    key: \"sendOutlineToBack\",\n    value: function sendOutlineToBack() {\n      if (this.inBackground) {\n        return;\n      }\n\n      this._setInBackground(true);\n\n      if (this.navigationVisible) {\n        this.navigation.sendToBack();\n      }\n\n      if (this.benchVisible) {\n        this.bench.sendToBack();\n      }\n\n      if (this.headerVisible) {\n        this.header.sendToBack();\n      }\n\n      this._renderInBackground();\n    }\n    /**\n     * === Method required for objects that act as 'displayParent' ===\n     *\n     * Returns 'true' if the Desktop is currently accessible to the user.\n     */\n\n  }, {\n    key: \"inFront\",\n    value: function inFront() {\n      return true; // Desktop is always available to the user.\n    }\n    /**\n     * === Method required for objects that act as 'displayParent' ===\n     *\n     * Returns the DOM elements to paint a glassPanes over, once a modal Form, message-box, file-chooser or wait-dialog is showed with the Desktop as its 'displayParent'.\n     */\n\n  }, {\n    key: \"_glassPaneTargets\",\n    value: function _glassPaneTargets(element) {\n      // Do not return $container, because this is the parent of all forms and message boxes. Otherwise, no form could gain focus, even the form requested desktop modality.\n      var $glassPaneTargets = this.$container.children().not('.splitter') // exclude splitter to be locked\n      .not('.desktop-notifications') // exclude notification box like 'connection interrupted' to be locked\n      .not('.overlay-separator'); // exclude overlay separator (marker element)\n\n      if (element) {\n        if (element.$container) {\n          $glassPaneTargets = $glassPaneTargets.not(element.$container);\n        }\n\n        var overlays = this.$overlaySeparator.nextAll().toArray();\n        var nextSiblings = []; // If the element is an overlay, get all next siblings and exclude them because they must not be covered\n\n        if (element.$container && overlays.indexOf(element.$container[0]) > -1) {\n          nextSiblings = element.$container.nextAll().toArray();\n        } // The top-most element should not have a glass-pane (#274353)\n\n\n        var topMostElement = null;\n\n        if (overlays.length) {\n          for (var i = overlays.length - 1; i >= 0; i--) {\n            // Don't consider filtered glass-pane targets like the HelpPopup.js\n            // These targets stand outside the regular modality hierarchy.\n            var overlay = overlays[i];\n\n            if (!this._isGlassPaneTargetFiltered(overlay, element)) {\n              continue;\n            }\n\n            topMostElement = overlay;\n            break; // stop looking further\n          }\n        }\n\n        $glassPaneTargets = $glassPaneTargets.filter(function (i, targetElem) {\n          if (nextSiblings.indexOf(targetElem) > -1) {\n            return false;\n          }\n\n          if (targetElem === topMostElement) {\n            return false;\n          }\n\n          return this._isGlassPaneTargetFiltered(targetElem, element);\n        }.bind(this));\n      }\n\n      var glassPaneTargets;\n\n      if (element instanceof Form && element.displayHint === Form.DisplayHint.VIEW) {\n        $glassPaneTargets = $glassPaneTargets.not('.desktop-bench').not('.desktop-header');\n\n        if (this.header && this.header.toolBox && this.header.toolBox.$container) {\n          $glassPaneTargets.push(this.header.toolBox.$container);\n        }\n\n        glassPaneTargets = $.makeArray($glassPaneTargets);\n        arrays.pushAll(glassPaneTargets, this._getBenchGlassPaneTargetsForView(element));\n      } else {\n        glassPaneTargets = $.makeArray($glassPaneTargets);\n      } // When a popup-window is opened its container must also be added to the result\n\n\n      this._pushPopupWindowGlassPaneTargets(glassPaneTargets, element);\n\n      return glassPaneTargets;\n    }\n  }, {\n    key: \"_isGlassPaneTargetFiltered\",\n    value: function _isGlassPaneTargetFiltered(targetElem, element) {\n      return this._glassPaneTargetFilters.every(function (filter) {\n        return filter(targetElem, element);\n      }, this);\n    }\n    /**\n     * Adds a filter which is applied when the glass pane targets are collected.\n     * If the filter returns <code>false</code>, the target won't be accepted and not covered by a glass pane.\n     * This filter should be used primarily for elements like the help-popup which stand outside\n     * of the regular modality hierarchy.\n     *\n     * @param filter a function with the parameter target and element. Target is the element which\n     *     would be covered by a glass pane, element is the element the user interacts with (e.g. the modal dialog).\n     * @see _glassPaneTargets\n     */\n\n  }, {\n    key: \"addGlassPaneTargetFilter\",\n    value: function addGlassPaneTargetFilter(filter) {\n      this._glassPaneTargetFilters.push(filter);\n    }\n  }, {\n    key: \"removeGlassPaneTargetFilter\",\n    value: function removeGlassPaneTargetFilter(filter) {\n      arrays.remove(this._glassPaneTargetFilters, filter);\n    }\n    /**\n     * This 'deferred' object is used because popup windows are not immediately usable when they're opened.\n     * That's why we must render the glass-pane of a popup window later. Which means, at the point in time\n     * when its $container is created and ready for usage. To avoid race conditions we must also wait until\n     * the glass pane renderer is ready. Only when both conditions are fullfilled, we can render the glass\n     * pane.\n     */\n\n  }, {\n    key: \"_deferredGlassPaneTarget\",\n    value: function _deferredGlassPaneTarget(popupWindow) {\n      var deferred = new DeferredGlassPaneTarget();\n      popupWindow.one('init', function () {\n        deferred.ready([popupWindow.$container]);\n      });\n      return deferred;\n    }\n  }, {\n    key: \"_getBenchGlassPaneTargetsForView\",\n    value: function _getBenchGlassPaneTargetsForView(view) {\n      var $glassPanes = [];\n      $glassPanes = $glassPanes.concat(this._getTabGlassPaneTargetsForView(view, this.header));\n\n      if (this.bench) {\n        this.bench.visibleTabBoxes().forEach(function (tabBox) {\n          if (!tabBox.rendered) {\n            return;\n          }\n\n          if (tabBox.hasView(view)) {\n            $glassPanes = $glassPanes.concat(this._getTabGlassPaneTargetsForView(view, tabBox));\n          } else {\n            $glassPanes.push(tabBox.$container);\n          }\n        }, this);\n      }\n\n      return $glassPanes;\n    }\n  }, {\n    key: \"_getTabGlassPaneTargetsForView\",\n    value: function _getTabGlassPaneTargetsForView(view, tabBox) {\n      var $glassPanes = [];\n\n      if (tabBox && tabBox.tabArea) {\n        tabBox.tabArea.tabs.forEach(function (tab) {\n          if (tab.view !== view) {\n            $glassPanes.push(tab.$container); // Workaround for javascript not being able to prevent hover event propagation:\n            // In case of tabs, the hover selector is defined on the element that is the direct parent\n            // of the glass pane. Under these circumstances, the hover style isn't be prevented by the glass pane.\n\n            tab.$container.addClass('no-hover');\n          }\n        });\n      }\n\n      return $glassPanes;\n    }\n  }, {\n    key: \"_pushPopupWindowGlassPaneTargets\",\n    value: function _pushPopupWindowGlassPaneTargets(glassPaneTargets, element) {\n      this.formController._popupWindows.forEach(function (popupWindow) {\n        if (element === popupWindow.form) {\n          // Don't block form itself\n          return;\n        }\n\n        glassPaneTargets.push(popupWindow.initialized ? popupWindow.$container[0] : this._deferredGlassPaneTarget(popupWindow));\n      }, this);\n    }\n  }, {\n    key: \"showForm\",\n    value: function showForm(form, position) {\n      var displayParent = form.displayParent || this;\n      form.setDisplayParent(displayParent);\n\n      this._setFormActivated(form); // register listener to recover active form when child dialog is removed\n\n\n      displayParent.formController.registerAndRender(form, position, true);\n    }\n  }, {\n    key: \"hideForm\",\n    value: function hideForm(form) {\n      if (!form.displayParent) {\n        // showForm has probably never been called -> nothing to do here\n        // May happen if form.close() is called immediately after form.open() without waiting for the open promise to resolve\n        // Hint: it is not possible to check whether the form is rendered and then return (which would be the obvious thing to do).\n        // Reason: Forms in popup windows are removed before getting closed, see DesktopFormController._onPopupWindowUnload\n        return;\n      }\n\n      if (this.displayStyle === Desktop.DisplayStyle.COMPACT && form.isView() && this.benchVisible) {\n        var openViews = this.bench.getViews().slice();\n        arrays.remove(openViews, form);\n\n        if (openViews.length === 0) {\n          // Hide bench and show navigation if this is the last view to be hidden\n          this.switchToNavigation();\n        }\n      }\n\n      form.displayParent.formController.unregisterAndRemove(form);\n\n      if (!this.benchVisible || this.bench.getViews().length === 0) {\n        // Bring outline to front if last view has been closed,\n        // even if bench is invisible (compact case) to update state correctly and reshow elements (dialog etc.) linked to the outline\n        this.bringOutlineToFront();\n      }\n    }\n  }, {\n    key: \"activateForm\",\n    value: function activateForm(form) {\n      var displayParent = form.displayParent || this;\n      displayParent.formController.activateForm(form);\n\n      this._setFormActivated(form); // If the form has a modal child dialog, this dialog needs to be activated as well.\n\n\n      form.dialogs.forEach(function (dialog) {\n        if (dialog.modal) {\n          this.activateForm(dialog);\n        }\n      }, this);\n    }\n  }, {\n    key: \"_setOutlineActivated\",\n    value: function _setOutlineActivated() {\n      this._setFormActivated(null);\n\n      if (this.outline) {\n        this.outline.activateCurrentPage();\n      }\n    }\n  }, {\n    key: \"_setFormActivated\",\n    value: function _setFormActivated(form) {\n      // If desktop is in rendering process the can not set a new active form. instead the active form from the model is set selected.\n      if (!this.rendered || this.initialFormRendering) {\n        return;\n      }\n\n      if (this.activeForm === form) {\n        return;\n      }\n\n      this.activeForm = form;\n\n      if (!form) {\n        // no form is activated -> show outline\n        this.bringOutlineToFront();\n      } else if (form.displayHint === Form.DisplayHint.VIEW && !form.detailForm && this.bench && this.bench.hasView(form)) {\n        // view form was activated. send the outline to back to ensure the form is attached\n        // exclude detail forms even though detail forms usually are not activated\n        // Also only consider \"real\" views used in the bench and ignore other views (e.g. used in a form menu)\n        this.sendOutlineToBack();\n      }\n\n      this.triggerFormActivate(form);\n    }\n  }, {\n    key: \"triggerFormActivate\",\n    value: function triggerFormActivate(form) {\n      this.trigger('formActivate', {\n        form: form\n      });\n    }\n  }, {\n    key: \"cancelViews\",\n    value: function cancelViews(forms) {\n      var event = new Event();\n      event.forms = forms;\n      this.trigger('cancelForms', event);\n\n      if (!event.defaultPrevented) {\n        this._cancelViews(forms);\n      }\n    }\n  }, {\n    key: \"_cancelViews\",\n    value: function _cancelViews(forms) {\n      // do not cancel forms when the form child hierarchy does not get canceled.\n      forms = forms.filter(function (form) {\n        return !arrays.find(form.views, function (view) {\n          return view.modal;\n        });\n      }); // if there's only one form simply cancel it directly\n\n      if (forms.length === 1) {\n        forms[0].cancel();\n        return;\n      } // collect all forms in the display child hierarchy with unsaved changes.\n\n\n      var unsavedForms = forms.filter(function (form) {\n        var requiresSaveChildDialogs = false;\n        form.visitDisplayChildren(function (dialog) {\n          if (dialog.lifecycle.requiresSave()) {\n            requiresSaveChildDialogs = true;\n          }\n        }, function (displayChild) {\n          return displayChild instanceof Form;\n        });\n        return form.lifecycle.requiresSave() || requiresSaveChildDialogs;\n      }); // initialize with a resolved promise in case there are no unsaved forms.\n\n      var waitFor = $.resolvedPromise();\n\n      if (unsavedForms.length > 0) {\n        var unsavedFormChangesForm = scout.create('scout.UnsavedFormChangesForm', {\n          parent: this,\n          session: this.session,\n          displayParent: this,\n          unsavedForms: unsavedForms\n        });\n        unsavedFormChangesForm.open(); // promise that is resolved when the UnsavedFormChangesForm is stored\n\n        waitFor = unsavedFormChangesForm.whenSave().then(function () {\n          var formsToSave = unsavedFormChangesForm.openFormsField.value;\n          formsToSave.forEach(function (form) {\n            form.visitDisplayChildren(function (dialog) {\n              // forms should be stored with ok(). Other display children can simply be closed.\n              if (dialog instanceof Form) {\n                dialog.ok();\n              } else {\n                dialog.close();\n              }\n            });\n            form.ok();\n          });\n          return formsToSave;\n        });\n      }\n\n      waitFor.then(function (formsToSave) {\n        if (formsToSave) {\n          // already saved & closed forms (handled by the UnsavedFormChangesForm)\n          arrays.removeAll(forms, formsToSave);\n        } // close the remaining forms that don't require saving.\n\n\n        forms.forEach(function (form) {\n          form.visitDisplayChildren(function (dialog) {\n            dialog.close();\n          });\n          form.close();\n        });\n      });\n    }\n    /**\n     * Called when the animation triggered by animationLayoutChange is complete (e.g. navigation or bench got visible/invisible)\n     */\n\n  }, {\n    key: \"onLayoutAnimationComplete\",\n    value: function onLayoutAnimationComplete() {\n      if (!this.headerVisible) {\n        this._removeHeader();\n      }\n\n      if (!this.navigationVisible) {\n        this._removeNavigation();\n      }\n\n      if (!this.benchVisible) {\n        this._removeBench();\n      }\n\n      this.trigger('animationEnd');\n      this.animateLayoutChange = false;\n    }\n  }, {\n    key: \"onLayoutAnimationStep\",\n    value: function onLayoutAnimationStep() {\n      this.repositionTooltips();\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize(event) {\n      this.revalidateLayoutTree();\n    }\n  }, {\n    key: \"resetPopstateHandler\",\n    value: function resetPopstateHandler() {\n      this.setPopstateHandler(this.onPopstate.bind(this));\n    }\n  }, {\n    key: \"setPopstateHandler\",\n    value: function setPopstateHandler(handler) {\n      if (this.rendered || this.rendering) {\n        var window = this.$container.window();\n\n        if (this._popstateHandler) {\n          window.off('popstate', this._popstateHandler);\n        }\n\n        if (handler) {\n          window.on('popstate', handler);\n        }\n      }\n\n      this._popstateHandler = handler;\n    }\n  }, {\n    key: \"onPopstate\",\n    value: function onPopstate(event) {\n      var historyState = event.originalEvent.state;\n\n      if (historyState && historyState.deepLinkPath) {\n        this.trigger('historyEntryActivate', historyState);\n      }\n    }\n  }, {\n    key: \"_onSplitterMove\",\n    value: function _onSplitterMove(event) {\n      // disallow a position greater than 50%\n      this.resizing = true;\n      var max = Math.floor(this.$container.outerWidth(true) / 2);\n\n      if (event.position > max) {\n        event.setPosition(max);\n      }\n    }\n  }, {\n    key: \"_onSplitterPositionChange\",\n    value: function _onSplitterPositionChange(event) {\n      // No need to revalidate while layouting (desktop layout sets the splitter position and would trigger a relayout)\n      if (!this.htmlComp.layouting) {\n        this.revalidateLayout();\n      }\n    }\n  }, {\n    key: \"_onSplitterMoveEnd\",\n    value: function _onSplitterMoveEnd(event) {\n      var splitterPosition = event.position; // Store size\n\n      if (this.cacheSplitterPosition) {\n        this._storeCachedSplitterPosition(this.splitter.position);\n      } // Check if splitter is smaller than min size\n\n\n      if (splitterPosition < DesktopNavigation.BREADCRUMB_STYLE_WIDTH) {\n        // Set width of navigation to BREADCRUMB_STYLE_WIDTH, using an animation.\n        // While animating, update the desktop layout.\n        // At the end of the animation, update the desktop layout, and store the splitter position.\n        this.navigation.$container.animate({\n          width: DesktopNavigation.BREADCRUMB_STYLE_WIDTH\n        }, {\n          progress: function () {\n            this.resizing = true;\n            this.splitter.setPosition();\n            this.revalidateLayout();\n            this.resizing = false; // progress seems to be called after complete again -> layout requires flag to be properly set\n          }.bind(this),\n          complete: function () {\n            this.resizing = true;\n            this.splitter.setPosition(); // Store size\n\n            this._storeCachedSplitterPosition(this.splitter.position);\n\n            this.revalidateLayout();\n            this.resizing = false;\n          }.bind(this)\n        });\n      } else {\n        this.resizing = false;\n      }\n    }\n  }, {\n    key: \"_loadCachedSplitterPosition\",\n    value: function _loadCachedSplitterPosition() {\n      return webstorage.getItem(sessionStorage, 'scout:desktopSplitterPosition') || webstorage.getItem(localStorage, 'scout:desktopSplitterPosition:' + window.location.pathname);\n    }\n  }, {\n    key: \"_storeCachedSplitterPosition\",\n    value: function _storeCachedSplitterPosition(splitterPosition) {\n      webstorage.setItem(sessionStorage, 'scout:desktopSplitterPosition', splitterPosition);\n      webstorage.setItem(localStorage, 'scout:desktopSplitterPosition:' + window.location.pathname, splitterPosition);\n    }\n  }, {\n    key: \"_onNotificationRemove\",\n    value: function _onNotificationRemove(notification) {\n      if (this.notifications.length === 0 && this.$notifications) {\n        this.$notifications.remove();\n        this.$notifications = null;\n      }\n    }\n  }, {\n    key: \"onReconnecting\",\n    value: function onReconnecting() {\n      if (!this.offline) {\n        return;\n      }\n\n      this._offlineNotification.reconnect();\n    }\n  }, {\n    key: \"onReconnectingSucceeded\",\n    value: function onReconnectingSucceeded() {\n      if (!this.offline) {\n        return;\n      }\n\n      this.offline = false;\n\n      this._offlineNotification.reconnectSucceeded();\n\n      this._removeOfflineNotification();\n    }\n  }, {\n    key: \"onReconnectingFailed\",\n    value: function onReconnectingFailed() {\n      if (!this.offline) {\n        return;\n      }\n\n      this._offlineNotification.reconnectFailed();\n    }\n  }, {\n    key: \"dataChange\",\n    value: function dataChange(dataType) {\n      this.events.trigger('dataChange', dataType);\n    }\n  }, {\n    key: \"_activeTheme\",\n    value: function _activeTheme() {\n      return cookies.get('scout.ui.theme') || Desktop.DEFAULT_THEME;\n    }\n  }, {\n    key: \"logoAction\",\n    value: function logoAction() {\n      if (this.logoActionEnabled) {\n        this.trigger('logoAction');\n      }\n    }\n  }, {\n    key: \"_initTheme\",\n    value: function _initTheme() {\n      var theme = this.theme;\n\n      if (this.url.hasParameter('theme')) {\n        theme = strings.nullIfEmpty(this.url.getParameter('theme')) || Desktop.DEFAULT_THEME;\n      } else if (theme === null) {\n        theme = this._activeTheme();\n      }\n\n      this.setTheme(theme);\n    }\n    /**\n     * Changes the current theme.\n     * <p>\n     * The theme name is stored in a persistent cookie called scout.ui.theme.\n     * In order to activate it, the browser is reloaded so that the CSS files for the new theme can be downloaded.\n     * <p>\n     * Since it is a persistent cookie, the theme will be activated again the next time the app is started, unless the cookie is deleted.\n     */\n\n  }, {\n    key: \"setTheme\",\n    value: function setTheme(theme) {\n      this.setProperty('theme', theme);\n\n      if (this.theme !== this._activeTheme()) {\n        this._switchTheme(theme);\n      }\n    }\n  }, {\n    key: \"_switchTheme\",\n    value: function _switchTheme(theme) {\n      // Add a persistent cookie which expires in 30 days\n      cookies.set('scout.ui.theme', theme, 30 * 24 * 3600); // Reload page in order to download the CSS files for the new theme\n      // Don't remove body but make it invisible, otherwise JS exceptions might be thrown if body is removed while an action executed\n\n      $('body').setVisible(false);\n      var reloadOptions = {\n        clearBody: false\n      }; // If parameter 'theme' exists in the URL, remove it now - otherwise the parameter would overrule the cookie settings\n\n      if (this.url.hasParameter('theme')) {\n        this.url.removeParameter('theme');\n        reloadOptions.redirectUrl = this.url.toString();\n      }\n\n      scout.reloadPage(reloadOptions);\n    }\n    /**\n     * Moves all the given overlays (popups, dialogs, message boxes etc.) before the target overlay and activates the focus context of the target overlay.\n     *\n     * @param overlaysToMove {HTMLElement[]} the overlays which should be moved before the target overlay\n     * @param $targetOverlay {$|HTMLElement} the overlay which should eventually be on top of the movable overlays\n     */\n\n  }, {\n    key: \"moveOverlaysBehindAndFocus\",\n    value: function moveOverlaysBehindAndFocus(overlaysToMove, $targetOverlay) {\n      $targetOverlay = $.ensure($targetOverlay);\n      $targetOverlay.nextAll().toArray().forEach(function (overlay) {\n        if (arrays.containsAll(overlaysToMove, [overlay])) {\n          $(overlay).insertBefore($targetOverlay);\n        }\n      }); // Activate the focus context of the form (will restore the previously focused field)\n      // This must not be done when the currently focused element is part of this dialog's DOM\n      // subtree, even if it has a separate focus context. Otherwise, the dialog would be\n      // (unnecessarily) activated, causing the current focus context to lose the focus.\n      // Example: editable table with a cell editor popup --> editor should keep the focus\n      // when the user clicks the clear icon (\"x\") inside the editor field.\n\n      if (!$targetOverlay.isOrHas($targetOverlay.activeElement())) {\n        this.session.focusManager.activateFocusContext($targetOverlay);\n      }\n    }\n  }, {\n    key: \"repositionTooltips\",\n    value: function repositionTooltips() {\n      this.$container.children('.tooltip').each(function () {\n        scout.widget($(this)).position();\n      });\n    }\n  }]);\n\n  return Desktop;\n}(Widget);\n\n_defineProperty(Desktop, \"DisplayStyle\", {\n  DEFAULT: 'default',\n  BENCH: 'bench',\n  COMPACT: 'compact'\n});\n\n_defineProperty(Desktop, \"UriAction\", {\n  DOWNLOAD: 'download',\n  OPEN: 'open',\n  NEW_WINDOW: 'newWindow',\n  POPUP_WINDOW: 'popupWindow',\n  SAME_WINDOW: 'sameWindow'\n});\n\n_defineProperty(Desktop, \"DEFAULT_THEME\", 'default');\n\nexport { Desktop as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/desktop/Desktop.js"],"names":["arrays","BenchColumnLayoutData","cookies","DeferredGlassPaneTarget","DesktopLayout","DesktopNavigation","Device","DisableBrowserF5ReloadKeyStroke","DisableBrowserTabSwitchingKeyStroke","Event","FileChooserController","Form","HtmlComponent","HtmlEnvironment","KeyStrokeContext","MessageBoxController","objects","Outline","scout","strings","styles","Tree","URL","webstorage","Widget","widgets","$","Desktop","desktopStyle","DisplayStyle","DEFAULT","title","selectViewTabsKeyStrokesEnabled","selectViewTabsKeyStrokeModifier","cacheSplitterPosition","browserHistoryEntry","logoId","navigationVisible","navigationHandleVisible","logoActionEnabled","benchVisible","headerVisible","geolocationServiceAvailable","get","supportsGeolocation","benchLayoutData","menus","addOns","dialogs","views","keyStrokes","viewButtons","messageBoxes","fileChoosers","outline","activeForm","selectedViewTabs","notifications","navigation","header","bench","splitter","splitterVisible","formController","messageBoxController","fileChooserController","initialFormRendering","offline","inBackground","openUriHandler","theme","dense","_glassPaneTargetFilters","url","_addWidgetProperties","_benchActiveViewChangedHandler","_onBenchActivateViewChanged","bind","model","session","parent","desktop","_initTheme","create","displayParent","_resizeHandler","onResize","_popstateHandler","onPopstate","updateSplitterVisibility","resolveTextKeys","_setViews","_setViewButtons","_setMenus","_setKeyStrokes","_setBenchLayoutData","_setDisplayStyle","displayStyle","_setDense","push","targetElem","element","target","widget","has","keyStrokeContext","invokeAcceptInputOnActiveValueField","registerKeyStroke","event","view","outlineContent","detailForm","_setFormActivated","$container","$parent","addClass","htmlComp","install","setLayout","_createLayout","window","on","$overlaySeparator","appendDiv","setVisible","_renderNavigationVisible","_renderHeaderVisible","_renderBenchVisible","_renderTitle","_renderLogoUrl","_renderSplitterVisible","_renderInBackground","_renderNavigationHandleVisible","_renderNotifications","_renderBrowserHistoryEntry","_renderDense","forEach","addOn","render","_setupDragAndDrop","_disableContextMenu","remove","off","_renderDisplayChildrenOfOutline","_setProperty","isCompact","COMPACT","setToolBoxVisible","animateRemoval","layoutData","fullWidth","setOutlineContentVisible","setCompact","setEmbedDetailContent","setProperty","clearCache","init","toggleClass","selectedView","_activateView","modalViews","filter","modal","undefined","$scoutDivs","length","document","headerTabArea","tabArea","outlineContentVisible","insertBefore","invalidateLayoutTree","destroy","animateLayoutChange","rendered","_renderBench","_removeBench","toolBoxVisible","prependTo","_renderNavigation","_removeNavigation","logoUrl","insertAfter","_setTabArea","_renderHeader","_removeHeader","setLogoUrl","_renderSplitter","_removeSplitter","$anchor","$root","_onSplitterMove","_onSplitterMoveEnd","_onSplitterPositionChange","updateSplitterPosition","supportsHistoryApi","myWindow","history","historyPath","_createHistoryPath","setStateFunc","pushState","replaceState","deepLinkPath","pathVisible","path","cloneUrl","clone","removeParameter","countOwnProperties","parameterMap","pathUrl","paramName","addParameter","getParameter","toString","alwaysFirst","dragEnterOrOver","stopPropagation","preventDefault","originalEvent","dataTransfer","dropEffect","setSplitterVisible","visible","storedSplitterPosition","_loadCachedSplitterPosition","splitterPosition","parseInt","setPosition","nodeName","isContentEditable","setChanging","_removeDisplayChildrenOfOutline","_setOutlineActivated","setOutline","trigger","setDisplayParent","updateKeyStrokes","setMenus","ensure","toggleBreadcrumbStyleEnabled","outlineDisplayStyle","setDisplayStyle","BREADCRUMB","setNavigationVisible","validateLayoutTree","setHeaderVisible","setBenchVisible","revalidateLayout","_removeOfflineNotification","_offlineNotification","show","setTimeout","removeNotification","notification","_renderNotification","$notifications","appendTo","fadeIn","duration","removeTimeout","hide","one","notificationId","find","n","id","clearTimeout","fadeOut","_onNotificationRemove","popups","children","each","i","elem","$popup","popup","getPopupsFor","uri","action","_postRenderActions","openUri","bringOutlineToFront","BENCH","_setInBackground","bringToFront","sendToBack","$glassPaneTargets","not","overlays","nextAll","toArray","nextSiblings","indexOf","topMostElement","overlay","_isGlassPaneTargetFiltered","glassPaneTargets","displayHint","DisplayHint","VIEW","toolBox","makeArray","pushAll","_getBenchGlassPaneTargetsForView","_pushPopupWindowGlassPaneTargets","every","popupWindow","deferred","ready","$glassPanes","concat","_getTabGlassPaneTargetsForView","visibleTabBoxes","tabBox","hasView","tabs","tab","_popupWindows","form","initialized","_deferredGlassPaneTarget","position","registerAndRender","isView","openViews","getViews","slice","switchToNavigation","unregisterAndRemove","activateForm","dialog","activateCurrentPage","sendOutlineToBack","triggerFormActivate","forms","defaultPrevented","_cancelViews","cancel","unsavedForms","requiresSaveChildDialogs","visitDisplayChildren","lifecycle","requiresSave","displayChild","waitFor","resolvedPromise","unsavedFormChangesForm","open","whenSave","then","formsToSave","openFormsField","value","ok","close","removeAll","repositionTooltips","revalidateLayoutTree","setPopstateHandler","handler","rendering","historyState","state","resizing","max","Math","floor","outerWidth","layouting","_storeCachedSplitterPosition","BREADCRUMB_STYLE_WIDTH","animate","width","progress","complete","getItem","sessionStorage","localStorage","location","pathname","setItem","reconnect","reconnectSucceeded","reconnectFailed","dataType","events","DEFAULT_THEME","hasParameter","nullIfEmpty","_activeTheme","setTheme","_switchTheme","set","reloadOptions","clearBody","redirectUrl","reloadPage","overlaysToMove","$targetOverlay","containsAll","isOrHas","activeElement","focusManager","activateFocusContext","DOWNLOAD","OPEN","NEW_WINDOW","POPUP_WINDOW","SAME_WINDOW"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2020 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {\n  arrays,\n  BenchColumnLayoutData,\n  cookies,\n  DeferredGlassPaneTarget,\n  DesktopLayout,\n  DesktopNavigation,\n  Device,\n  DisableBrowserF5ReloadKeyStroke,\n  DisableBrowserTabSwitchingKeyStroke,\n  Event,\n  FileChooserController,\n  Form,\n  HtmlComponent,\n  HtmlEnvironment,\n  KeyStrokeContext,\n  MessageBoxController,\n  objects,\n  Outline,\n  scout,\n  strings,\n  styles,\n  Tree,\n  URL,\n  webstorage,\n  Widget,\n  widgets\n} from '../index';\nimport $ from 'jquery';\n\nexport default class Desktop extends Widget {\n\n  constructor() {\n    super();\n\n    this.desktopStyle = Desktop.DisplayStyle.DEFAULT;\n\n    this.title = null;\n    this.selectViewTabsKeyStrokesEnabled = true;\n    this.selectViewTabsKeyStrokeModifier = 'control';\n    this.cacheSplitterPosition = true;\n    this.browserHistoryEntry = null;\n    this.logoId = null;\n    this.navigationVisible = true;\n    this.navigationHandleVisible = true;\n    this.logoActionEnabled = false;\n    this.benchVisible = true;\n    this.headerVisible = true;\n    this.geolocationServiceAvailable = Device.get().supportsGeolocation();\n    this.benchLayoutData = null;\n\n    this.menus = [];\n    this.addOns = [];\n    this.dialogs = [];\n    this.views = [];\n    this.keyStrokes = [];\n    this.viewButtons = [];\n    this.messageBoxes = [];\n    this.fileChoosers = [];\n    this.outline = null;\n    this.activeForm = null;\n    this.selectedViewTabs = [];\n    this.notifications = [];\n\n    this.navigation = null;\n    this.header = null;\n    this.bench = null;\n    this.splitter = null;\n    this.splitterVisible = false;\n    this.formController = null;\n    this.messageBoxController = null;\n    this.fileChooserController = null;\n    this.initialFormRendering = false;\n    this.offline = false;\n    this.inBackground = false;\n    this.openUriHandler = null;\n    this.theme = null;\n    this.dense = false;\n    this._glassPaneTargetFilters = [];\n    this.url = null;\n\n    this._addWidgetProperties(['viewButtons', 'menus', 'views', 'selectedViewTabs', 'dialogs', 'outline', 'messageBoxes', 'notifications', 'fileChoosers', 'addOns', 'keyStrokes', 'activeForm']);\n\n    // event listeners\n    this._benchActiveViewChangedHandler = this._onBenchActivateViewChanged.bind(this);\n  }\n\n  static DisplayStyle = {\n    DEFAULT: 'default',\n    BENCH: 'bench',\n    COMPACT: 'compact'\n  };\n\n  static UriAction = {\n    DOWNLOAD: 'download',\n    OPEN: 'open',\n    NEW_WINDOW: 'newWindow',\n    POPUP_WINDOW: 'popupWindow',\n    SAME_WINDOW: 'sameWindow'\n  };\n\n  static DEFAULT_THEME = 'default';\n\n  _init(model) {\n    // Note: session and desktop are tightly coupled. Because a lot of widgets want to register\n    // a listener on the desktop in their init phase, they access the desktop by calling 'this.session.desktop'\n    // that's why we need this instance as early as possible. When that happens they access a desktop which is\n    // not yet fully initialized. But anyway, it's already possible to attach a listener, for instance.\n    // Because of this line of code here, we don't have to set the variable in App.js, after the desktop has been\n    // created. Also note that Scout Java uses a different pattern to solve the same problem, there a VirtualDesktop\n    // is used during initialization. When initialization is done, all registered listeners on the virtual desktop\n    // are copied to the real desktop instance.\n    var session = model.session || model.parent.session;\n    session.desktop = this;\n\n    super._init(model);\n    this.url = new URL();\n    this._initTheme();\n    this.formController = scout.create('DesktopFormController', {\n      displayParent: this,\n      session: this.session\n    });\n    this.messageBoxController = new MessageBoxController(this, this.session);\n    this.fileChooserController = new FileChooserController(this, this.session);\n    this._resizeHandler = this.onResize.bind(this);\n    this._popstateHandler = this.onPopstate.bind(this);\n    this.updateSplitterVisibility();\n    this.resolveTextKeys(['title']);\n    this._setViews(this.views);\n    this._setViewButtons(this.viewButtons);\n    this._setMenus(this.menus);\n    this._setKeyStrokes(this.keyStrokes);\n    this._setBenchLayoutData(this.benchLayoutData);\n    this._setDisplayStyle(this.displayStyle);\n    this._setDense(this.dense);\n    this.openUriHandler = scout.create('OpenUriHandler', {\n      session: this.session\n    });\n    this._glassPaneTargetFilters.push(function(targetElem, element) {\n      // Exclude all child elements of the given widget\n      // Use case: element is a popup and has tooltip open. The tooltip is displayed in the desktop and considered as glass pane target by the selector above\n      var target = scout.widget(targetElem);\n      return !element.has(target);\n    });\n  }\n\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n\n    this.keyStrokeContext.invokeAcceptInputOnActiveValueField = true;\n    this.keyStrokeContext.registerKeyStroke([\n      new DisableBrowserF5ReloadKeyStroke(this),\n      new DisableBrowserTabSwitchingKeyStroke(this)\n    ]);\n  }\n\n  _onBenchActivateViewChanged(event) {\n    if (this.initialFormRendering) {\n      return;\n    }\n    var view = event.view;\n    if (view instanceof Form && this.bench.outlineContent !== view && !view.detailForm) {\n      // Notify model that this form is active (only for regular views, not detail forms)\n      this._setFormActivated(view);\n    }\n  }\n\n  _render() {\n    this.$container = this.$parent;\n    this.$container.addClass('desktop');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(this._createLayout());\n\n    // Attach resize listener before other elements can add their own resize listener (e.g. an addon) to make sure it is executed first\n    this.$container.window()\n      .on('resize', this._resizeHandler)\n      .on('popstate', this._popstateHandler);\n\n    // Desktop elements are added before this separator, all overlays are opened after (dialogs, popups, tooltips etc.)\n    this.$overlaySeparator = this.$container.appendDiv('overlay-separator').setVisible(false);\n\n    this._renderNavigationVisible();\n    this._renderHeaderVisible();\n    this._renderBenchVisible();\n    this._renderTitle();\n    this._renderLogoUrl();\n    this._renderSplitterVisible();\n    this._renderInBackground();\n    this._renderNavigationHandleVisible();\n    this._renderNotifications();\n    this._renderBrowserHistoryEntry();\n    this._renderDense();\n    this.addOns.forEach(function(addOn) {\n      addOn.render();\n    }, this);\n\n    // prevent general drag and drop, dropping a file anywhere in the application must not open this file in browser\n    this._setupDragAndDrop();\n\n    this._disableContextMenu();\n  }\n\n  _remove() {\n    this.formController.remove();\n    this.messageBoxController.remove();\n    this.fileChooserController.remove();\n    this.$container.window()\n      .off('resize', this._resizeHandler)\n      .off('popstate', this._popstateHandler);\n    super._remove();\n  }\n\n  _postRender() {\n    super._postRender();\n\n    // Render attached forms, message boxes and file choosers.\n    this.initialFormRendering = true;\n    this._renderDisplayChildrenOfOutline();\n    this.formController.render();\n    this.messageBoxController.render();\n    this.fileChooserController.render();\n    this.initialFormRendering = false;\n  }\n\n  _setDisplayStyle(displayStyle) {\n    this._setProperty('displayStyle', displayStyle);\n\n    var isCompact = this.displayStyle === Desktop.DisplayStyle.COMPACT;\n\n    if (this.header) {\n      this.header.setToolBoxVisible(!isCompact);\n      this.header.animateRemoval = isCompact;\n    }\n    if (this.navigation) {\n      this.navigation.setToolBoxVisible(isCompact);\n      this.navigation.htmlComp.layoutData.fullWidth = isCompact;\n    }\n    if (this.bench) {\n      this.bench.setOutlineContentVisible(!isCompact);\n    }\n    if (this.outline) {\n      this.outline.setCompact(isCompact);\n      this.outline.setEmbedDetailContent(isCompact);\n    }\n  }\n\n  setDense(dense) {\n    this.setProperty('dense', dense);\n  }\n\n  _setDense(dense) {\n    this._setProperty('dense', dense);\n\n    styles.clearCache();\n    HtmlEnvironment.get().init(this.dense ? 'dense' : null);\n  }\n\n  _renderDense() {\n    this.$container.toggleClass('dense', this.dense);\n  }\n\n  _createLayout() {\n    return new DesktopLayout(this);\n  }\n\n  /**\n   * Displays attached forms, message boxes and file choosers.\n   * Outline does not need to be rendered to show the child elements, it needs to be active (necessary if navigation is invisible)\n   */\n  _renderDisplayChildrenOfOutline() {\n    if (!this.outline) {\n      return;\n    }\n    this.outline.formController.render();\n    this.outline.messageBoxController.render();\n    this.outline.fileChooserController.render();\n\n    // this restores the selected view after a page refresh. selectedViewTabs is only set by the model.\n    if (this.outline.selectedViewTabs) {\n      this.outline.selectedViewTabs.forEach(function(selectedView) {\n        this.formController._activateView(selectedView);\n      }.bind(this));\n    } else {\n      // views on the outline are not activated by default. Check for modal views on this outline\n      var modalViews = this.outline.views.filter(function(view) {\n        return view.modal;\n      });\n      // activate each modal view in the order it was originally activated\n      modalViews.forEach(this.formController._activateView.bind(this.formController));\n    }\n  }\n\n  _removeDisplayChildrenOfOutline() {\n    if (!this.outline) {\n      return;\n    }\n    this.outline.formController.remove();\n    this.outline.messageBoxController.remove();\n    this.outline.fileChooserController.remove();\n  }\n\n  computeParentForDisplayParent(displayParent) {\n    // Outline must not be used as parent, otherwise the children (form, messageboxes etc.) would be removed if navigation is made invisible\n    // The functions _render/removeDisplayChildrenOfOutline take care that the elements are correctly rendered/removed on an outline switch\n    var parent = displayParent;\n    if (displayParent instanceof Outline) {\n      parent = this;\n    }\n    return parent;\n  }\n\n  _renderTitle() {\n    var title = this.title;\n    if (title === undefined || title === null) {\n      return;\n    }\n    var $scoutDivs = $('div.scout');\n    if ($scoutDivs.length <= 1) { // only set document title in non-portlet case\n      $scoutDivs.document(true).title = title;\n    }\n  }\n\n  _renderActiveForm() {\n    // NOP -> is handled in _setFormActivated when ui changes active form or if model changes form in _onFormShow/_onFormActivate\n  }\n\n  _renderBench() {\n    if (this.bench) {\n      return;\n    }\n    this.bench = scout.create('DesktopBench', {\n      parent: this,\n      animateRemoval: true,\n      headerTabArea: this.header ? this.header.tabArea : undefined,\n      outlineContentVisible: this.displayStyle !== Desktop.DisplayStyle.COMPACT\n    });\n    this.bench.on('viewActivate', this._benchActiveViewChangedHandler);\n    this.bench.render();\n    this.bench.$container.insertBefore(this.$overlaySeparator);\n    this.invalidateLayoutTree();\n  }\n\n  _removeBench() {\n    if (!this.bench) {\n      return;\n    }\n    this.bench.off('viewActivate', this._benchActiveViewChangedHandler);\n    this.bench.on('destroy', function() {\n      this.bench = null;\n      this.invalidateLayoutTree();\n    }.bind(this));\n    this.bench.destroy();\n  }\n\n  _renderBenchVisible() {\n    this.animateLayoutChange = this.rendered;\n    if (this.benchVisible) {\n      this._renderBench();\n      this._renderInBackground();\n    } else {\n      this._removeBench();\n    }\n  }\n\n  _renderNavigation() {\n    if (this.navigation) {\n      return;\n    }\n    this.navigation = scout.create('DesktopNavigation', {\n      parent: this,\n      outline: this.outline,\n      toolBoxVisible: this.displayStyle === Desktop.DisplayStyle.COMPACT,\n      layoutData: {\n        fullWidth: this.displayStyle === Desktop.DisplayStyle.COMPACT\n      }\n    });\n    this.navigation.render();\n    this.navigation.$container.prependTo(this.$container);\n    this.invalidateLayoutTree();\n  }\n\n  _removeNavigation() {\n    if (!this.navigation) {\n      return;\n    }\n    this.navigation.destroy();\n    this.navigation = null;\n    this.invalidateLayoutTree();\n  }\n\n  _renderNavigationVisible() {\n    this.animateLayoutChange = this.rendered;\n    if (this.navigationVisible) {\n      this._renderNavigation();\n    } else {\n      if (!this.animateLayoutChange) {\n        this._removeNavigation();\n      } else {\n        // re layout to trigger animation\n        this.invalidateLayoutTree();\n      }\n    }\n  }\n\n  _renderHeader() {\n    if (this.header) {\n      return;\n    }\n    this.header = scout.create('DesktopHeader', {\n      parent: this,\n      logoUrl: this.logoUrl,\n      animateRemoval: this.displayStyle === Desktop.DisplayStyle.COMPACT,\n      toolBoxVisible: this.displayStyle !== Desktop.DisplayStyle.COMPACT\n    });\n    this.header.render();\n    if (this.navigation && this.navigation.rendered) {\n      this.header.$container.insertAfter(this.navigation.$container);\n    } else {\n      this.header.$container.prependTo(this.$container);\n    }\n    // register header tab area\n    if (this.bench) {\n      this.bench._setTabArea(this.header.tabArea);\n    }\n    this.invalidateLayoutTree();\n  }\n\n  _removeHeader() {\n    if (!this.header) {\n      return;\n    }\n    this.header.on('destroy', function() {\n      this.invalidateLayoutTree();\n      this.header = null;\n    }.bind(this));\n    this.header.destroy();\n  }\n\n  _renderHeaderVisible() {\n    if (this.headerVisible) {\n      this._renderHeader();\n    } else {\n      this._removeHeader();\n    }\n  }\n\n  _renderLogoUrl() {\n    if (this.header) {\n      this.header.setLogoUrl(this.logoUrl);\n    }\n  }\n\n  _renderSplitterVisible() {\n    if (this.splitterVisible) {\n      this._renderSplitter();\n    } else {\n      this._removeSplitter();\n    }\n  }\n\n  _renderSplitter() {\n    if (this.splitter || !this.navigation) {\n      return;\n    }\n    this.splitter = scout.create('Splitter', {\n      parent: this,\n      $anchor: this.navigation.$container,\n      $root: this.$container\n    });\n    this.splitter.render();\n    this.splitter.$container.insertBefore(this.$overlaySeparator);\n    this.splitter.on('move', this._onSplitterMove.bind(this));\n    this.splitter.on('moveEnd', this._onSplitterMoveEnd.bind(this));\n    this.splitter.on('positionChange', this._onSplitterPositionChange.bind(this));\n    this.updateSplitterPosition();\n  }\n\n  _removeSplitter() {\n    if (!this.splitter) {\n      return;\n    }\n    this.splitter.destroy();\n    this.splitter = null;\n  }\n\n  _renderInBackground() {\n    if (this.bench) {\n      this.bench.$container.toggleClass('drop-shadow', this.inBackground);\n    }\n  }\n\n  _renderBrowserHistoryEntry() {\n    if (!Device.get().supportsHistoryApi()) {\n      return;\n    }\n    var myWindow = this.$container.window(true),\n      history = this.browserHistoryEntry;\n    if (history) {\n      var historyPath = this._createHistoryPath(history);\n      var setStateFunc = (this.rendered ? myWindow.history.pushState : myWindow.history.replaceState).bind(myWindow.history);\n      setStateFunc({\n        deepLinkPath: history.deepLinkPath\n      }, history.title, historyPath);\n    }\n  }\n\n  /**\n   * Takes the history.path provided by the browserHistoryEvent and appends additional URL parameters.\n   */\n  _createHistoryPath(history) {\n    if (!history.pathVisible) {\n      return '';\n    }\n    var historyPath = history.path;\n    var cloneUrl = this.url.clone();\n    cloneUrl.removeParameter('dl');\n    cloneUrl.removeParameter('i');\n    if (objects.countOwnProperties(cloneUrl.parameterMap) > 0) {\n      var pathUrl = new URL(historyPath);\n      for (var paramName in cloneUrl.parameterMap) {\n        pathUrl.addParameter(paramName, cloneUrl.getParameter(paramName));\n      }\n      historyPath = pathUrl.toString({alwaysFirst: ['dl', 'i']});\n    }\n    return historyPath;\n  }\n\n  _setupDragAndDrop() {\n    var dragEnterOrOver = function(event) {\n      event.stopPropagation();\n      event.preventDefault();\n      // change cursor to forbidden (no dropping allowed)\n      event.originalEvent.dataTransfer.dropEffect = 'none';\n    };\n\n    this.$container.on('dragenter', dragEnterOrOver);\n    this.$container.on('dragover', dragEnterOrOver);\n    this.$container.on('drop', function(event) {\n      event.stopPropagation();\n      event.preventDefault();\n    });\n  }\n\n  updateSplitterVisibility() {\n    // Splitter should only be visible if navigation and bench are visible, but never in compact mode (to prevent unnecessary splitter rendering)\n    this.setSplitterVisible(this.navigationVisible && this.benchVisible && this.displayStyle !== Desktop.DisplayStyle.COMPACT);\n  }\n\n  setSplitterVisible(visible) {\n    this.setProperty('splitterVisible', visible);\n  }\n\n  updateSplitterPosition() {\n    if (!this.splitter) {\n      return;\n    }\n    var storedSplitterPosition = this.cacheSplitterPosition && this._loadCachedSplitterPosition();\n    if (storedSplitterPosition) {\n      // Restore splitter position\n      var splitterPosition = parseInt(storedSplitterPosition, 10);\n      this.splitter.setPosition(splitterPosition);\n      this.invalidateLayoutTree();\n    } else {\n      // Set initial splitter position (default defined by css)\n      this.splitter.setPosition();\n      this.invalidateLayoutTree();\n    }\n  }\n\n  _disableContextMenu() {\n    // Switch off browser's default context menu for the entire scout desktop (except input fields)\n    this.$container.on('contextmenu', function(event) {\n      if (event.target.nodeName !== 'INPUT' && event.target.nodeName !== 'TEXTAREA' && !event.target.isContentEditable) {\n        event.preventDefault();\n      }\n    });\n  }\n\n  setOutline(outline) {\n    if (this.outline === outline) {\n      return;\n    }\n    try {\n      if (this.bench) {\n        this.bench.setChanging(true);\n      }\n      if (this.rendered) {\n        this._removeDisplayChildrenOfOutline();\n      }\n\n      this.outline = outline;\n      this._setDisplayStyle(this.displayStyle);\n      this._setOutlineActivated();\n      if (this.navigation) {\n        this.navigation.setOutline(this.outline);\n      }\n      // call render after triggering event so glasspane rendering taking place can refer to the current outline content\n      this.trigger('outlineChange');\n\n      if (this.rendered) {\n        this._renderDisplayChildrenOfOutline();\n      }\n    } finally {\n      if (this.bench) {\n        this.bench.setChanging(false);\n      }\n    }\n  }\n\n  _setViews(views) {\n    if (views) {\n      views.forEach(function(view) {\n        view.setDisplayParent(this);\n      }.bind(this));\n    }\n    this._setProperty('views', views);\n  }\n\n  _setViewButtons(viewButtons) {\n    this.updateKeyStrokes(viewButtons, this.viewButtons);\n    this._setProperty('viewButtons', viewButtons);\n  }\n\n  setMenus(menus) {\n    if (this.header) {\n      this.header.setMenus(menus);\n    }\n  }\n\n  _setMenus(menus) {\n    this.updateKeyStrokes(menus, this.menus);\n    this._setProperty('menus', menus);\n  }\n\n  _setKeyStrokes(keyStrokes) {\n    this.updateKeyStrokes(keyStrokes, this.keyStrokes);\n    this._setProperty('keyStrokes', keyStrokes);\n  }\n\n  setNavigationHandleVisible(visible) {\n    this.setProperty('navigationHandleVisible', visible);\n  }\n\n  _renderNavigationHandleVisible() {\n    this.$container.toggleClass('has-navigation-handle', this.navigationHandleVisible);\n  }\n\n  setNavigationVisible(visible) {\n    this.setProperty('navigationVisible', visible);\n    this.updateSplitterVisibility();\n  }\n\n  setBenchVisible(visible) {\n    this.setProperty('benchVisible', visible);\n    this.updateSplitterVisibility();\n  }\n\n  setHeaderVisible(visible) {\n    this.setProperty('headerVisible', visible);\n  }\n\n  _setBenchLayoutData(layoutData) {\n    layoutData = BenchColumnLayoutData.ensure(layoutData);\n    this._setProperty('benchLayoutData', layoutData);\n  }\n\n  _setInBackground(inBackground) {\n    this._setProperty('inBackground', inBackground);\n  }\n\n  outlineDisplayStyle() {\n    if (this.outline) {\n      return this.outline.displayStyle;\n    }\n  }\n\n  shrinkNavigation() {\n    if (this.outline.toggleBreadcrumbStyleEnabled && this.navigationVisible &&\n      this.outlineDisplayStyle() === Tree.DisplayStyle.DEFAULT) {\n      this.outline.setDisplayStyle(Tree.DisplayStyle.BREADCRUMB);\n    } else {\n      this.setNavigationVisible(false);\n    }\n  }\n\n  enlargeNavigation() {\n    if (this.navigationVisible && this.outlineDisplayStyle() === Tree.DisplayStyle.BREADCRUMB) {\n      this.outline.setDisplayStyle(Tree.DisplayStyle.DEFAULT);\n    } else {\n      this.setNavigationVisible(true);\n      // Layout immediately to have view tabs positioned correctly before animation starts\n      this.validateLayoutTree();\n    }\n  }\n\n  switchToBench() {\n    this.setHeaderVisible(true);\n    this.setBenchVisible(true);\n    this.setNavigationVisible(false);\n  }\n\n  switchToNavigation() {\n    this.setNavigationVisible(true);\n    this.setHeaderVisible(false);\n    this.setBenchVisible(false);\n  }\n\n  revalidateHeaderLayout() {\n    if (this.header) {\n      this.header.revalidateLayout();\n    }\n  }\n\n  goOffline() {\n    if (this.offline) {\n      return;\n    }\n    this.offline = true;\n    this._removeOfflineNotification();\n    this._offlineNotification = scout.create('DesktopNotification:Offline', {\n      parent: this\n    });\n    this._offlineNotification.show();\n  }\n\n  goOnline() {\n    this._removeOfflineNotification();\n  }\n\n  _removeOfflineNotification() {\n    if (this._offlineNotification) {\n      setTimeout(this.removeNotification.bind(this, this._offlineNotification), 3000);\n      this._offlineNotification = null;\n    }\n  }\n\n  addNotification(notification) {\n    if (!notification) {\n      return;\n    }\n    this.notifications.push(notification);\n    if (this.rendered) {\n      this._renderNotification(notification);\n    }\n  }\n\n  _renderNotification(notification) {\n    if (this.$notifications) {\n      // Bring to front\n      this.$notifications.appendTo(this.$container);\n    } else {\n      this.$notifications = this.$container.appendDiv('desktop-notifications');\n    }\n    notification.fadeIn(this.$notifications);\n    if (notification.duration > 0) {\n      notification.removeTimeout = setTimeout(notification.hide.bind(notification), notification.duration);\n      notification.one('remove', function() {\n        this.removeNotification(notification);\n      }.bind(this));\n    }\n  }\n\n  _renderNotifications() {\n    this.notifications.forEach(function(notification) {\n      this._renderNotification(notification);\n    }.bind(this));\n  }\n\n  /**\n   * Removes the given notification.\n   * @param notification Either an instance of DesktopNavigation or a String containing an ID of a notification instance.\n   */\n  removeNotification(notification) {\n    if (typeof notification === 'string') {\n      var notificationId = notification;\n      notification = arrays.find(this.notifications, function(n) {\n        return notificationId === n.id;\n      });\n    }\n    if (!notification) {\n      return;\n    }\n    if (notification.removeTimeout) {\n      clearTimeout(notification.removeTimeout);\n    }\n    arrays.remove(this.notifications, notification);\n    if (!this.rendered) {\n      return;\n    }\n    if (this.$notifications) {\n      notification.fadeOut();\n      notification.one('remove', this._onNotificationRemove.bind(this, notification));\n    }\n  }\n\n  getPopupsFor(widget) {\n    var popups = [];\n    this.$container.children('.popup').each(function(i, elem) {\n      var $popup = $(elem),\n        popup = widgets.get($popup);\n\n      if (widget.has(popup)) {\n        popups.push(popup);\n      }\n    });\n    return popups;\n  }\n\n  /**\n   * Destroys every popup which is a descendant of the given widget.\n   */\n  destroyPopupsFor(widget) {\n    this.getPopupsFor(widget).forEach(function(popup) {\n      popup.destroy();\n    });\n  }\n\n  openUri(uri, action) {\n    if (!this.rendered) {\n      this._postRenderActions.push(this.openUri.bind(this, uri, action));\n      return;\n    }\n    this.openUriHandler.openUri(uri, action);\n  }\n\n  bringOutlineToFront() {\n    if (!this.rendered) {\n      this._postRenderActions.push(this.bringOutlineToFront.bind(this));\n      return;\n    }\n\n    if (!this.inBackground || this.displayStyle === Desktop.DisplayStyle.BENCH) {\n      return;\n    }\n\n    this._setInBackground(false);\n    this._setOutlineActivated();\n\n    if (this.navigationVisible) {\n      this.navigation.bringToFront();\n    }\n    if (this.benchVisible) {\n      this.bench.bringToFront();\n    }\n    if (this.headerVisible) {\n      this.header.bringToFront();\n    }\n\n    this._renderInBackground();\n  }\n\n  sendOutlineToBack() {\n    if (this.inBackground) {\n      return;\n    }\n    this._setInBackground(true);\n    if (this.navigationVisible) {\n      this.navigation.sendToBack();\n    }\n    if (this.benchVisible) {\n      this.bench.sendToBack();\n    }\n    if (this.headerVisible) {\n      this.header.sendToBack();\n    }\n    this._renderInBackground();\n  }\n\n  /**\n   * === Method required for objects that act as 'displayParent' ===\n   *\n   * Returns 'true' if the Desktop is currently accessible to the user.\n   */\n  inFront() {\n    return true; // Desktop is always available to the user.\n  }\n\n  /**\n   * === Method required for objects that act as 'displayParent' ===\n   *\n   * Returns the DOM elements to paint a glassPanes over, once a modal Form, message-box, file-chooser or wait-dialog is showed with the Desktop as its 'displayParent'.\n   */\n  _glassPaneTargets(element) {\n    // Do not return $container, because this is the parent of all forms and message boxes. Otherwise, no form could gain focus, even the form requested desktop modality.\n    var $glassPaneTargets = this.$container\n      .children()\n      .not('.splitter') // exclude splitter to be locked\n      .not('.desktop-notifications') // exclude notification box like 'connection interrupted' to be locked\n      .not('.overlay-separator'); // exclude overlay separator (marker element)\n\n    if (element) {\n      if (element.$container) {\n        $glassPaneTargets = $glassPaneTargets.not(element.$container);\n      }\n      var overlays = this.$overlaySeparator.nextAll().toArray();\n      var nextSiblings = [];\n      // If the element is an overlay, get all next siblings and exclude them because they must not be covered\n      if (element.$container && overlays.indexOf(element.$container[0]) > -1) {\n        nextSiblings = element.$container.nextAll().toArray();\n      }\n\n      // The top-most element should not have a glass-pane (#274353)\n      var topMostElement = null;\n      if (overlays.length) {\n        for (var i = overlays.length - 1; i >= 0; i--) {\n          // Don't consider filtered glass-pane targets like the HelpPopup.js\n          // These targets stand outside the regular modality hierarchy.\n          var overlay = overlays[i];\n          if (!this._isGlassPaneTargetFiltered(overlay, element)) {\n            continue;\n          }\n          topMostElement = overlay;\n          break; // stop looking further\n        }\n      }\n\n      $glassPaneTargets = $glassPaneTargets.filter(function(i, targetElem) {\n        if (nextSiblings.indexOf(targetElem) > -1) {\n          return false;\n        }\n        if (targetElem === topMostElement) {\n          return false;\n        }\n        return this._isGlassPaneTargetFiltered(targetElem, element);\n      }.bind(this));\n    }\n\n    var glassPaneTargets;\n    if (element instanceof Form && element.displayHint === Form.DisplayHint.VIEW) {\n      $glassPaneTargets = $glassPaneTargets\n        .not('.desktop-bench')\n        .not('.desktop-header');\n\n      if (this.header && this.header.toolBox && this.header.toolBox.$container) {\n        $glassPaneTargets.push(this.header.toolBox.$container);\n      }\n\n      glassPaneTargets = $.makeArray($glassPaneTargets);\n      arrays.pushAll(glassPaneTargets, this._getBenchGlassPaneTargetsForView(element));\n    } else {\n      glassPaneTargets = $.makeArray($glassPaneTargets);\n    }\n\n    // When a popup-window is opened its container must also be added to the result\n    this._pushPopupWindowGlassPaneTargets(glassPaneTargets, element);\n\n    return glassPaneTargets;\n  }\n\n  _isGlassPaneTargetFiltered(targetElem, element) {\n    return this._glassPaneTargetFilters.every(function(filter) {\n      return filter(targetElem, element);\n    }, this);\n  }\n\n  /**\n   * Adds a filter which is applied when the glass pane targets are collected.\n   * If the filter returns <code>false</code>, the target won't be accepted and not covered by a glass pane.\n   * This filter should be used primarily for elements like the help-popup which stand outside\n   * of the regular modality hierarchy.\n   *\n   * @param filter a function with the parameter target and element. Target is the element which\n   *     would be covered by a glass pane, element is the element the user interacts with (e.g. the modal dialog).\n   * @see _glassPaneTargets\n   */\n  addGlassPaneTargetFilter(filter) {\n    this._glassPaneTargetFilters.push(filter);\n  }\n\n  removeGlassPaneTargetFilter(filter) {\n    arrays.remove(this._glassPaneTargetFilters, filter);\n  }\n\n  /**\n   * This 'deferred' object is used because popup windows are not immediately usable when they're opened.\n   * That's why we must render the glass-pane of a popup window later. Which means, at the point in time\n   * when its $container is created and ready for usage. To avoid race conditions we must also wait until\n   * the glass pane renderer is ready. Only when both conditions are fullfilled, we can render the glass\n   * pane.\n   */\n  _deferredGlassPaneTarget(popupWindow) {\n    var deferred = new DeferredGlassPaneTarget();\n    popupWindow.one('init', function() {\n      deferred.ready([popupWindow.$container]);\n    });\n    return deferred;\n  }\n\n  _getBenchGlassPaneTargetsForView(view) {\n    var $glassPanes = [];\n\n    $glassPanes = $glassPanes.concat(this._getTabGlassPaneTargetsForView(view, this.header));\n\n    if (this.bench) {\n      this.bench.visibleTabBoxes().forEach(function(tabBox) {\n        if (!tabBox.rendered) {\n          return;\n        }\n        if (tabBox.hasView(view)) {\n          $glassPanes = $glassPanes.concat(this._getTabGlassPaneTargetsForView(view, tabBox));\n        } else {\n          $glassPanes.push(tabBox.$container);\n        }\n      }, this);\n    }\n    return $glassPanes;\n  }\n\n  _getTabGlassPaneTargetsForView(view, tabBox) {\n    var $glassPanes = [];\n    if (tabBox && tabBox.tabArea) {\n      tabBox.tabArea.tabs.forEach(function(tab) {\n        if (tab.view !== view) {\n          $glassPanes.push(tab.$container);\n          // Workaround for javascript not being able to prevent hover event propagation:\n          // In case of tabs, the hover selector is defined on the element that is the direct parent\n          // of the glass pane. Under these circumstances, the hover style isn't be prevented by the glass pane.\n          tab.$container.addClass('no-hover');\n        }\n      });\n    }\n    return $glassPanes;\n  }\n\n  _pushPopupWindowGlassPaneTargets(glassPaneTargets, element) {\n    this.formController._popupWindows.forEach(function(popupWindow) {\n      if (element === popupWindow.form) {\n        // Don't block form itself\n        return;\n      }\n      glassPaneTargets.push(popupWindow.initialized ?\n        popupWindow.$container[0] : this._deferredGlassPaneTarget(popupWindow));\n    }, this);\n  }\n\n  showForm(form, position) {\n    var displayParent = form.displayParent || this;\n    form.setDisplayParent(displayParent);\n\n    this._setFormActivated(form);\n    // register listener to recover active form when child dialog is removed\n    displayParent.formController.registerAndRender(form, position, true);\n  }\n\n  hideForm(form) {\n    if (!form.displayParent) {\n      // showForm has probably never been called -> nothing to do here\n      // May happen if form.close() is called immediately after form.open() without waiting for the open promise to resolve\n      // Hint: it is not possible to check whether the form is rendered and then return (which would be the obvious thing to do).\n      // Reason: Forms in popup windows are removed before getting closed, see DesktopFormController._onPopupWindowUnload\n      return;\n    }\n\n    if (this.displayStyle === Desktop.DisplayStyle.COMPACT && form.isView() && this.benchVisible) {\n      var openViews = this.bench.getViews().slice();\n      arrays.remove(openViews, form);\n      if (openViews.length === 0) {\n        // Hide bench and show navigation if this is the last view to be hidden\n        this.switchToNavigation();\n      }\n    }\n    form.displayParent.formController.unregisterAndRemove(form);\n    if (!this.benchVisible || this.bench.getViews().length === 0) {\n      // Bring outline to front if last view has been closed,\n      // even if bench is invisible (compact case) to update state correctly and reshow elements (dialog etc.) linked to the outline\n      this.bringOutlineToFront();\n    }\n  }\n\n  activateForm(form) {\n    var displayParent = form.displayParent || this;\n    displayParent.formController.activateForm(form);\n    this._setFormActivated(form);\n\n    // If the form has a modal child dialog, this dialog needs to be activated as well.\n    form.dialogs.forEach(function(dialog) {\n      if (dialog.modal) {\n        this.activateForm(dialog);\n      }\n    }, this);\n  }\n\n  _setOutlineActivated() {\n    this._setFormActivated(null);\n    if (this.outline) {\n      this.outline.activateCurrentPage();\n    }\n  }\n\n  _setFormActivated(form) {\n    // If desktop is in rendering process the can not set a new active form. instead the active form from the model is set selected.\n    if (!this.rendered || this.initialFormRendering) {\n      return;\n    }\n    if (this.activeForm === form) {\n      return;\n    }\n\n    this.activeForm = form;\n\n    if (!form) {\n      // no form is activated -> show outline\n      this.bringOutlineToFront();\n    } else if (form.displayHint === Form.DisplayHint.VIEW && !form.detailForm && this.bench && this.bench.hasView(form)) {\n      // view form was activated. send the outline to back to ensure the form is attached\n      // exclude detail forms even though detail forms usually are not activated\n      // Also only consider \"real\" views used in the bench and ignore other views (e.g. used in a form menu)\n      this.sendOutlineToBack();\n    }\n\n    this.triggerFormActivate(form);\n  }\n\n  triggerFormActivate(form) {\n    this.trigger('formActivate', {\n      form: form\n    });\n  }\n\n  cancelViews(forms) {\n    var event = new Event();\n    event.forms = forms;\n    this.trigger('cancelForms', event);\n    if (!event.defaultPrevented) {\n      this._cancelViews(forms);\n    }\n  }\n\n  _cancelViews(forms) {\n    // do not cancel forms when the form child hierarchy does not get canceled.\n    forms = forms.filter(function(form) {\n      return !arrays.find(form.views, function(view) {\n        return view.modal;\n      });\n    });\n\n    // if there's only one form simply cancel it directly\n    if (forms.length === 1) {\n      forms[0].cancel();\n      return;\n    }\n\n    // collect all forms in the display child hierarchy with unsaved changes.\n    var unsavedForms = forms.filter(function(form) {\n      var requiresSaveChildDialogs = false;\n      form.visitDisplayChildren(function(dialog) {\n        if (dialog.lifecycle.requiresSave()) {\n          requiresSaveChildDialogs = true;\n        }\n      }, function(displayChild) {\n        return displayChild instanceof Form;\n      });\n      return form.lifecycle.requiresSave() || requiresSaveChildDialogs;\n    });\n\n    // initialize with a resolved promise in case there are no unsaved forms.\n    var waitFor = $.resolvedPromise();\n    if (unsavedForms.length > 0) {\n      var unsavedFormChangesForm = scout.create('scout.UnsavedFormChangesForm', {\n        parent: this,\n        session: this.session,\n        displayParent: this,\n        unsavedForms: unsavedForms\n      });\n      unsavedFormChangesForm.open();\n      // promise that is resolved when the UnsavedFormChangesForm is stored\n      waitFor = unsavedFormChangesForm.whenSave().then(function() {\n        var formsToSave = unsavedFormChangesForm.openFormsField.value;\n        formsToSave.forEach(function(form) {\n          form.visitDisplayChildren(function(dialog) {\n            // forms should be stored with ok(). Other display children can simply be closed.\n            if (dialog instanceof Form) {\n              dialog.ok();\n            } else {\n              dialog.close();\n            }\n          });\n          form.ok();\n        });\n        return formsToSave;\n      });\n    }\n    waitFor.then(function(formsToSave) {\n      if (formsToSave) {\n        // already saved & closed forms (handled by the UnsavedFormChangesForm)\n        arrays.removeAll(forms, formsToSave);\n      }\n      // close the remaining forms that don't require saving.\n      forms.forEach(function(form) {\n        form.visitDisplayChildren(function(dialog) {\n          dialog.close();\n        });\n        form.close();\n      });\n    });\n  }\n\n  /**\n   * Called when the animation triggered by animationLayoutChange is complete (e.g. navigation or bench got visible/invisible)\n   */\n  onLayoutAnimationComplete() {\n    if (!this.headerVisible) {\n      this._removeHeader();\n    }\n    if (!this.navigationVisible) {\n      this._removeNavigation();\n    }\n    if (!this.benchVisible) {\n      this._removeBench();\n    }\n    this.trigger('animationEnd');\n    this.animateLayoutChange = false;\n  }\n\n  onLayoutAnimationStep() {\n    this.repositionTooltips();\n  }\n\n  onResize(event) {\n    this.revalidateLayoutTree();\n  }\n\n  resetPopstateHandler() {\n    this.setPopstateHandler(this.onPopstate.bind(this));\n  }\n\n  setPopstateHandler(handler) {\n    if (this.rendered || this.rendering) {\n      var window = this.$container.window();\n      if (this._popstateHandler) {\n        window.off('popstate', this._popstateHandler);\n      }\n      if (handler) {\n        window.on('popstate', handler);\n      }\n    }\n    this._popstateHandler = handler;\n  }\n\n  onPopstate(event) {\n    var historyState = event.originalEvent.state;\n    if (historyState && historyState.deepLinkPath) {\n      this.trigger('historyEntryActivate', historyState);\n    }\n  }\n\n  _onSplitterMove(event) {\n    // disallow a position greater than 50%\n    this.resizing = true;\n    var max = Math.floor(this.$container.outerWidth(true) / 2);\n    if (event.position > max) {\n      event.setPosition(max);\n    }\n  }\n\n  _onSplitterPositionChange(event) {\n    // No need to revalidate while layouting (desktop layout sets the splitter position and would trigger a relayout)\n    if (!this.htmlComp.layouting) {\n      this.revalidateLayout();\n    }\n  }\n\n  _onSplitterMoveEnd(event) {\n    var splitterPosition = event.position;\n\n    // Store size\n    if (this.cacheSplitterPosition) {\n      this._storeCachedSplitterPosition(this.splitter.position);\n    }\n\n    // Check if splitter is smaller than min size\n    if (splitterPosition < DesktopNavigation.BREADCRUMB_STYLE_WIDTH) {\n      // Set width of navigation to BREADCRUMB_STYLE_WIDTH, using an animation.\n      // While animating, update the desktop layout.\n      // At the end of the animation, update the desktop layout, and store the splitter position.\n      this.navigation.$container.animate({\n        width: DesktopNavigation.BREADCRUMB_STYLE_WIDTH\n      }, {\n        progress: function() {\n          this.resizing = true;\n          this.splitter.setPosition();\n          this.revalidateLayout();\n          this.resizing = false; // progress seems to be called after complete again -> layout requires flag to be properly set\n        }.bind(this),\n        complete: function() {\n          this.resizing = true;\n          this.splitter.setPosition();\n          // Store size\n          this._storeCachedSplitterPosition(this.splitter.position);\n          this.revalidateLayout();\n          this.resizing = false;\n        }.bind(this)\n      });\n    } else {\n      this.resizing = false;\n    }\n  }\n\n  _loadCachedSplitterPosition() {\n    return webstorage.getItem(sessionStorage, 'scout:desktopSplitterPosition') ||\n      webstorage.getItem(localStorage, 'scout:desktopSplitterPosition:' + window.location.pathname);\n  }\n\n  _storeCachedSplitterPosition(splitterPosition) {\n    webstorage.setItem(sessionStorage, 'scout:desktopSplitterPosition', splitterPosition);\n    webstorage.setItem(localStorage, 'scout:desktopSplitterPosition:' + window.location.pathname, splitterPosition);\n  }\n\n  _onNotificationRemove(notification) {\n    if (this.notifications.length === 0 && this.$notifications) {\n      this.$notifications.remove();\n      this.$notifications = null;\n    }\n  }\n\n  onReconnecting() {\n    if (!this.offline) {\n      return;\n    }\n    this._offlineNotification.reconnect();\n  }\n\n  onReconnectingSucceeded() {\n    if (!this.offline) {\n      return;\n    }\n    this.offline = false;\n    this._offlineNotification.reconnectSucceeded();\n    this._removeOfflineNotification();\n  }\n\n  onReconnectingFailed() {\n    if (!this.offline) {\n      return;\n    }\n    this._offlineNotification.reconnectFailed();\n  }\n\n  dataChange(dataType) {\n    this.events.trigger('dataChange', dataType);\n  }\n\n  _activeTheme() {\n    return cookies.get('scout.ui.theme') || Desktop.DEFAULT_THEME;\n  }\n\n  logoAction() {\n    if (this.logoActionEnabled) {\n      this.trigger('logoAction');\n    }\n  }\n\n  _initTheme() {\n    var theme = this.theme;\n    if (this.url.hasParameter('theme')) {\n      theme = strings.nullIfEmpty(this.url.getParameter('theme')) || Desktop.DEFAULT_THEME;\n    } else if (theme === null) {\n      theme = this._activeTheme();\n    }\n    this.setTheme(theme);\n  }\n\n  /**\n   * Changes the current theme.\n   * <p>\n   * The theme name is stored in a persistent cookie called scout.ui.theme.\n   * In order to activate it, the browser is reloaded so that the CSS files for the new theme can be downloaded.\n   * <p>\n   * Since it is a persistent cookie, the theme will be activated again the next time the app is started, unless the cookie is deleted.\n   */\n  setTheme(theme) {\n    this.setProperty('theme', theme);\n    if (this.theme !== this._activeTheme()) {\n      this._switchTheme(theme);\n    }\n  }\n\n  _switchTheme(theme) {\n    // Add a persistent cookie which expires in 30 days\n    cookies.set('scout.ui.theme', theme, 30 * 24 * 3600);\n\n    // Reload page in order to download the CSS files for the new theme\n    // Don't remove body but make it invisible, otherwise JS exceptions might be thrown if body is removed while an action executed\n    $('body').setVisible(false);\n    var reloadOptions = {\n      clearBody: false\n    };\n    // If parameter 'theme' exists in the URL, remove it now - otherwise the parameter would overrule the cookie settings\n    if (this.url.hasParameter('theme')) {\n      this.url.removeParameter('theme');\n      reloadOptions.redirectUrl = this.url.toString();\n    }\n    scout.reloadPage(reloadOptions);\n  }\n\n  /**\n   * Moves all the given overlays (popups, dialogs, message boxes etc.) before the target overlay and activates the focus context of the target overlay.\n   *\n   * @param overlaysToMove {HTMLElement[]} the overlays which should be moved before the target overlay\n   * @param $targetOverlay {$|HTMLElement} the overlay which should eventually be on top of the movable overlays\n   */\n  moveOverlaysBehindAndFocus(overlaysToMove, $targetOverlay) {\n    $targetOverlay = $.ensure($targetOverlay);\n    $targetOverlay.nextAll().toArray()\n      .forEach(function(overlay) {\n        if (arrays.containsAll(overlaysToMove, [overlay])) {\n          $(overlay).insertBefore($targetOverlay);\n        }\n      });\n\n    // Activate the focus context of the form (will restore the previously focused field)\n    // This must not be done when the currently focused element is part of this dialog's DOM\n    // subtree, even if it has a separate focus context. Otherwise, the dialog would be\n    // (unnecessarily) activated, causing the current focus context to lose the focus.\n    // Example: editable table with a cell editor popup --> editor should keep the focus\n    // when the user clicks the clear icon (\"x\") inside the editor field.\n    if (!$targetOverlay.isOrHas($targetOverlay.activeElement())) {\n      this.session.focusManager.activateFocusContext($targetOverlay);\n    }\n  }\n\n  repositionTooltips() {\n    this.$container.children('.tooltip').each(function() {\n      scout.widget($(this)).position();\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}