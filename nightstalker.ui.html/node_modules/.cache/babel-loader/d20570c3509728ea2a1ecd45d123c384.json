{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { LogicalGridConfig, scout } from '../../../index';\n\nvar GroupBoxGridConfig = /*#__PURE__*/function (_LogicalGridConfig) {\n  _inherits(GroupBoxGridConfig, _LogicalGridConfig);\n\n  var _super = _createSuper(GroupBoxGridConfig);\n\n  function GroupBoxGridConfig() {\n    _classCallCheck(this, GroupBoxGridConfig);\n\n    return _super.call(this);\n  }\n\n  _createClass(GroupBoxGridConfig, [{\n    key: \"getGridWidgets\",\n    value: function getGridWidgets() {\n      return this.widget.controls;\n    }\n  }, {\n    key: \"getGridColumnCount\",\n    value: function getGridColumnCount() {\n      var gridColumns = -1,\n          widget = this.widget;\n\n      do {\n        gridColumns = scout.nvl(widget.gridColumnCount, gridColumns);\n      } while (gridColumns < 0 && widget.getParentGroupBox && (widget = widget.getParentGroupBox()));\n\n      return gridColumns < 0 ? 2 : gridColumns;\n    }\n  }]);\n\n  return GroupBoxGridConfig;\n}(LogicalGridConfig);\n\nexport { GroupBoxGridConfig as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/groupbox/GroupBoxGridConfig.js"],"names":["LogicalGridConfig","scout","GroupBoxGridConfig","widget","controls","gridColumns","nvl","gridColumnCount","getParentGroupBox"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,iBAAR,EAA2BC,KAA3B,QAAuC,gBAAvC;;IAEqBC,kB;;;;;AAEnB,gCAAc;AAAA;;AAAA;AAEb;;;;qCAEgB;AACf,aAAO,KAAKC,MAAL,CAAYC,QAAnB;AACD;;;yCAEoB;AACnB,UAAIC,WAAW,GAAG,CAAC,CAAnB;AAAA,UACEF,MAAM,GAAG,KAAKA,MADhB;;AAGA,SAAG;AACDE,QAAAA,WAAW,GAAGJ,KAAK,CAACK,GAAN,CAAUH,MAAM,CAACI,eAAjB,EAAkCF,WAAlC,CAAd;AACD,OAFD,QAESA,WAAW,GAAG,CAAd,IAAmBF,MAAM,CAACK,iBAA1B,KAAgDL,MAAM,GAAGA,MAAM,CAACK,iBAAP,EAAzD,CAFT;;AAIA,aAAOH,WAAW,GAAG,CAAd,GAAkB,CAAlB,GAAsBA,WAA7B;AACD;;;;EAnB6CL,iB;;SAA3BE,kB","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {LogicalGridConfig, scout} from '../../../index';\n\nexport default class GroupBoxGridConfig extends LogicalGridConfig {\n\n  constructor() {\n    super();\n  }\n\n  getGridWidgets() {\n    return this.widget.controls;\n  }\n\n  getGridColumnCount() {\n    var gridColumns = -1,\n      widget = this.widget;\n\n    do {\n      gridColumns = scout.nvl(widget.gridColumnCount, gridColumns);\n    } while (gridColumns < 0 && widget.getParentGroupBox && (widget = widget.getParentGroupBox()));\n\n    return gridColumns < 0 ? 2 : gridColumns;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}