{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n\n/**\n * Modifier like shift, ctrl or alt used in keystrokes.\n *\n * A keystroke can consist of multiple modifierBitMask, which can be represented by bitwise OR'ing them together.\n */\nvar NONE = 0; // without any modifier\n\nvar CTRL = 1 << 0; // with the ctrl modifier (NOSONAR)\n\nvar CTRL_UNDEFINED = 1 << 1; // with or without the ctrl modifier (NOSONAR)\n\nvar SHIFT = 1 << 2; // with the shift modifier (NOSONAR)\n\nvar SHIFT_UNDEFINED = 1 << 3; // with or without the shift modifier (NOSONAR)\n\nvar ALT = 1 << 4; // with the alt modifier (NOSONAR)\n\nvar ALT_UNDEFINED = 1 << 5; // with or without the alt modifier (NOSONAR)\n\nexport function isCtrl(modifierBitMask) {\n  return _eval(modifierBitMask, CTRL, CTRL_UNDEFINED);\n}\nexport function isShift(modifierBitMask) {\n  return _eval(modifierBitMask, SHIFT, SHIFT_UNDEFINED);\n}\nexport function isAlt(modifierBitMask) {\n  return _eval(modifierBitMask, ALT, ALT_UNDEFINED);\n}\nexport function _eval(testee, modifier, modifierUndefined) {\n  if ((modifierUndefined & testee) > 0) {\n    // NOSONAR\n    return undefined;\n  }\n\n  return (modifier & testee) > 0; // NOSONAR\n}\nexport function toModifierBitMask(event) {\n  var modifierBitMask = 0;\n  modifierBitMask |= event.ctrlKey ? CTRL : 0; // NOSONAR\n\n  modifierBitMask |= event.altKey ? ALT : 0; // NOSONAR\n\n  modifierBitMask |= event.shiftKey ? SHIFT : 0; // NOSONAR\n\n  return modifierBitMask;\n}\nexport default {\n  ALT: ALT,\n  ALT_UNDEFINED: ALT_UNDEFINED,\n  CTRL: CTRL,\n  CTRL_UNDEFINED: CTRL_UNDEFINED,\n  NONE: NONE,\n  SHIFT: SHIFT,\n  SHIFT_UNDEFINED: SHIFT_UNDEFINED,\n  isAlt: isAlt,\n  isCtrl: isCtrl,\n  isShift: isShift,\n  toModifierBitMask: toModifierBitMask\n};","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/keystroke/keyStrokeModifier.js"],"names":["NONE","CTRL","CTRL_UNDEFINED","SHIFT","SHIFT_UNDEFINED","ALT","ALT_UNDEFINED","isCtrl","modifierBitMask","_eval","isShift","isAlt","testee","modifier","modifierUndefined","undefined","toModifierBitMask","event","ctrlKey","altKey","shiftKey"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,IAAI,GAAG,CAAb,C,CAAgB;;AAChB,IAAMC,IAAI,GAAG,KAAK,CAAlB,C,CAAqB;;AACrB,IAAMC,cAAc,GAAG,KAAK,CAA5B,C,CAA+B;;AAC/B,IAAMC,KAAK,GAAG,KAAK,CAAnB,C,CAAsB;;AACtB,IAAMC,eAAe,GAAG,KAAK,CAA7B,C,CAAgC;;AAChC,IAAMC,GAAG,GAAG,KAAK,CAAjB,C,CAAoB;;AACpB,IAAMC,aAAa,GAAG,KAAK,CAA3B,C,CAA8B;;AAE9B,OAAO,SAASC,MAAT,CAAgBC,eAAhB,EAAiC;AACtC,SAAOC,KAAK,CAACD,eAAD,EAAkBP,IAAlB,EAAwBC,cAAxB,CAAZ;AACD;AAED,OAAO,SAASQ,OAAT,CAAiBF,eAAjB,EAAkC;AACvC,SAAOC,KAAK,CAACD,eAAD,EAAkBL,KAAlB,EAAyBC,eAAzB,CAAZ;AACD;AAED,OAAO,SAASO,KAAT,CAAeH,eAAf,EAAgC;AACrC,SAAOC,KAAK,CAACD,eAAD,EAAkBH,GAAlB,EAAuBC,aAAvB,CAAZ;AACD;AAED,OAAO,SAASG,KAAT,CAAeG,MAAf,EAAuBC,QAAvB,EAAiCC,iBAAjC,EAAoD;AACzD,MAAI,CAACA,iBAAiB,GAAGF,MAArB,IAA+B,CAAnC,EAAsC;AAAE;AACtC,WAAOG,SAAP;AACD;;AACD,SAAO,CAACF,QAAQ,GAAGD,MAAZ,IAAsB,CAA7B,CAJyD,CAIzB;AACjC;AAED,OAAO,SAASI,iBAAT,CAA2BC,KAA3B,EAAkC;AACvC,MAAIT,eAAe,GAAG,CAAtB;AACAA,EAAAA,eAAe,IAAIS,KAAK,CAACC,OAAN,GAAgBjB,IAAhB,GAAuB,CAA1C,CAFuC,CAEM;;AAC7CO,EAAAA,eAAe,IAAIS,KAAK,CAACE,MAAN,GAAed,GAAf,GAAqB,CAAxC,CAHuC,CAGI;;AAC3CG,EAAAA,eAAe,IAAIS,KAAK,CAACG,QAAN,GAAiBjB,KAAjB,GAAyB,CAA5C,CAJuC,CAIQ;;AAC/C,SAAOK,eAAP;AACD;AAED,eAAe;AACbH,EAAAA,GAAG,EAAHA,GADa;AAEbC,EAAAA,aAAa,EAAbA,aAFa;AAGbL,EAAAA,IAAI,EAAJA,IAHa;AAIbC,EAAAA,cAAc,EAAdA,cAJa;AAKbF,EAAAA,IAAI,EAAJA,IALa;AAMbG,EAAAA,KAAK,EAALA,KANa;AAObC,EAAAA,eAAe,EAAfA,eAPa;AAQbO,EAAAA,KAAK,EAALA,KARa;AASbJ,EAAAA,MAAM,EAANA,MATa;AAUbG,EAAAA,OAAO,EAAPA,OAVa;AAWbM,EAAAA,iBAAiB,EAAjBA;AAXa,CAAf","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n/**\n * Modifier like shift, ctrl or alt used in keystrokes.\n *\n * A keystroke can consist of multiple modifierBitMask, which can be represented by bitwise OR'ing them together.\n */\n\nconst NONE = 0; // without any modifier\nconst CTRL = 1 << 0; // with the ctrl modifier (NOSONAR)\nconst CTRL_UNDEFINED = 1 << 1; // with or without the ctrl modifier (NOSONAR)\nconst SHIFT = 1 << 2; // with the shift modifier (NOSONAR)\nconst SHIFT_UNDEFINED = 1 << 3; // with or without the shift modifier (NOSONAR)\nconst ALT = 1 << 4; // with the alt modifier (NOSONAR)\nconst ALT_UNDEFINED = 1 << 5; // with or without the alt modifier (NOSONAR)\n\nexport function isCtrl(modifierBitMask) {\n  return _eval(modifierBitMask, CTRL, CTRL_UNDEFINED);\n}\n\nexport function isShift(modifierBitMask) {\n  return _eval(modifierBitMask, SHIFT, SHIFT_UNDEFINED);\n}\n\nexport function isAlt(modifierBitMask) {\n  return _eval(modifierBitMask, ALT, ALT_UNDEFINED);\n}\n\nexport function _eval(testee, modifier, modifierUndefined) {\n  if ((modifierUndefined & testee) > 0) { // NOSONAR\n    return undefined;\n  }\n  return (modifier & testee) > 0; // NOSONAR\n}\n\nexport function toModifierBitMask(event) {\n  var modifierBitMask = 0;\n  modifierBitMask |= event.ctrlKey ? CTRL : 0; // NOSONAR\n  modifierBitMask |= event.altKey ? ALT : 0; // NOSONAR\n  modifierBitMask |= event.shiftKey ? SHIFT : 0; // NOSONAR\n  return modifierBitMask;\n}\n\nexport default {\n  ALT,\n  ALT_UNDEFINED,\n  CTRL,\n  CTRL_UNDEFINED,\n  NONE,\n  SHIFT,\n  SHIFT_UNDEFINED,\n  isAlt,\n  isCtrl,\n  isShift,\n  toModifierBitMask\n};\n"]},"metadata":{},"sourceType":"module"}