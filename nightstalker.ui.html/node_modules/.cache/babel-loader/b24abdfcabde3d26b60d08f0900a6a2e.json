{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Column, lookupField, objects, ProposalChooser, scout } from '../../../index';\n\nvar TableProposalChooser = /*#__PURE__*/function (_ProposalChooser) {\n  _inherits(TableProposalChooser, _ProposalChooser);\n\n  var _super = _createSuper(TableProposalChooser);\n\n  function TableProposalChooser() {\n    _classCallCheck(this, TableProposalChooser);\n\n    return _super.call(this);\n  }\n\n  _createClass(TableProposalChooser, [{\n    key: \"_createModel\",\n    value: function _createModel() {\n      var headerVisible = false,\n          columns = [],\n          descriptors = this.smartField.columnDescriptors;\n\n      if (descriptors) {\n        descriptors.forEach(function (descriptor, index) {\n          headerVisible = headerVisible || !!descriptor.text;\n          columns.push(this._createColumnForDescriptor(descriptor));\n        }, this);\n      } else {\n        columns.push(this._createColumn());\n      }\n\n      var table = this._createTable(columns, headerVisible);\n\n      table.on('rowClick', this._onRowClick.bind(this));\n      return table;\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn() {\n      return scout.create('Column', {\n        session: this.session,\n        width: Column.NARROW_MIN_WIDTH,\n        horizontalAlignment: this.smartField.gridData.horizontalAlignment\n      });\n    }\n  }, {\n    key: \"_createColumnForDescriptor\",\n    value: function _createColumnForDescriptor(descriptor) {\n      var width = Column.NARROW_MIN_WIDTH;\n\n      if (descriptor.width && descriptor.width > 0) {\n        // 0 = default\n        width = descriptor.width;\n      }\n\n      var column = scout.create('Column', {\n        session: this.session,\n        text: descriptor.text,\n        cssClass: scout.nvl(descriptor.cssClass, null),\n        width: width,\n        // needs to be passed here to make sure initialWidth is also set, if set using setWidth() autoResizeColumn won't work because initalWidth would still be NARROW_MIN_WIDTH\n        autoOptimizeWidth: scout.nvl(descriptor.autoOptimizeWidth, false),\n        fixedWidth: scout.nvl(descriptor.fixedWidth, false),\n        fixedPosition: scout.nvl(descriptor.fixedPosition, false),\n        horizontalAlignment: scout.nvl(descriptor.horizontalAlignment, this.smartField.gridData.horizontalAlignment),\n        visible: scout.nvl(descriptor.visible, true),\n        htmlEnabled: scout.nvl(descriptor.htmlEnabled, false)\n      });\n      return column;\n    }\n  }, {\n    key: \"_createTable\",\n    value: function _createTable(columns, headerVisible) {\n      return scout.create('Table', {\n        parent: this,\n        headerVisible: headerVisible,\n        autoResizeColumns: true,\n        multiSelect: false,\n        multilineText: true,\n        scrollToSelection: true,\n        columns: columns,\n        headerMenusEnabled: false\n      });\n    }\n  }, {\n    key: \"_onRowClick\",\n    value: function _onRowClick(event) {\n      var row = event.row;\n\n      if (!row || !row.enabled) {\n        return;\n      }\n\n      this.setBusy(true);\n      this.triggerLookupRowSelected(row);\n    }\n  }, {\n    key: \"selectedRow\",\n    value: function selectedRow() {\n      return this.model.selectedRow();\n    }\n  }, {\n    key: \"setLookupResult\",\n    value: function setLookupResult(result) {\n      var tableRows = [],\n          lookupRows = result.lookupRows,\n          multipleColumns = !!this.smartField.columnDescriptors;\n      this.model.deleteAllRows();\n      lookupRows.forEach(function (lookupRow) {\n        tableRows.push(this._createTableRow(lookupRow, multipleColumns));\n      }, this);\n      this.model.insertRows(tableRows);\n\n      this._selectProposal(result, tableRows);\n    }\n  }, {\n    key: \"trySelectCurrentValue\",\n    value: function trySelectCurrentValue() {\n      var currentValue = this.smartField.getValueForSelection();\n\n      if (objects.isNullOrUndefined(currentValue)) {\n        return;\n      }\n\n      var tableRow = arrays.find(this.model.rows, function (row) {\n        return row.lookupRow.key === currentValue;\n      });\n\n      if (tableRow) {\n        this.model.selectRow(tableRow);\n      }\n    }\n  }, {\n    key: \"selectFirstLookupRow\",\n    value: function selectFirstLookupRow() {\n      if (this.model.rows.length) {\n        this.model.selectRow(this.model.rows[0]);\n      }\n    }\n  }, {\n    key: \"clearSelection\",\n    value: function clearSelection() {\n      this.model.deselectAll();\n    }\n  }, {\n    key: \"clearLookupRows\",\n    value: function clearLookupRows() {\n      this.model.removeAllRows();\n    }\n    /**\n     * Creates a table-row for the given lookup-row.\n     *\n     * @returns {object} table-row model\n     */\n\n  }, {\n    key: \"_createTableRow\",\n    value: function _createTableRow(lookupRow, multipleColumns) {\n      var row = lookupField.createTableRow(lookupRow, multipleColumns);\n\n      if (multipleColumns) {\n        arrays.pushAll(row.cells, this._transformTableRowData(lookupRow, lookupRow.additionalTableRowData));\n      }\n\n      return row;\n    }\n  }, {\n    key: \"_renderModel\",\n    value: function _renderModel() {\n      this.model.setVirtual(this.smartField.virtual());\n      this.model.render(); // Make sure table never gets the focus, but looks focused\n\n      this.model.$container.setTabbable(false);\n      this.model.$container.addClass('focused');\n    }\n  }, {\n    key: \"getSelectedLookupRow\",\n    value: function getSelectedLookupRow() {\n      var selectedRow = this.model.selectedRow();\n\n      if (!selectedRow) {\n        return null;\n      }\n\n      return selectedRow.lookupRow;\n    }\n    /**\n     * Takes the TableRowData bean and the infos provided by the column descriptors to create an\n     * array of additional values in the correct order, as defined by the descriptors.\n     */\n\n  }, {\n    key: \"_transformTableRowData\",\n    value: function _transformTableRowData(lookupRow, tableRowData) {\n      var descriptors = this.smartField.columnDescriptors;\n      var cells = [];\n      descriptors.forEach(function (desc) {\n        cells.push(lookupField.createTableCell(lookupRow, desc, tableRowData));\n      });\n      return cells;\n    }\n  }]);\n\n  return TableProposalChooser;\n}(ProposalChooser);\n\nexport { TableProposalChooser as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/smartfield/TableProposalChooser.js"],"names":["arrays","Column","lookupField","objects","ProposalChooser","scout","TableProposalChooser","headerVisible","columns","descriptors","smartField","columnDescriptors","forEach","descriptor","index","text","push","_createColumnForDescriptor","_createColumn","table","_createTable","on","_onRowClick","bind","create","session","width","NARROW_MIN_WIDTH","horizontalAlignment","gridData","column","cssClass","nvl","autoOptimizeWidth","fixedWidth","fixedPosition","visible","htmlEnabled","parent","autoResizeColumns","multiSelect","multilineText","scrollToSelection","headerMenusEnabled","event","row","enabled","setBusy","triggerLookupRowSelected","model","selectedRow","result","tableRows","lookupRows","multipleColumns","deleteAllRows","lookupRow","_createTableRow","insertRows","_selectProposal","currentValue","getValueForSelection","isNullOrUndefined","tableRow","find","rows","key","selectRow","length","deselectAll","removeAllRows","createTableRow","pushAll","cells","_transformTableRowData","additionalTableRowData","setVirtual","virtual","render","$container","setTabbable","addClass","tableRowData","desc","createTableCell"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Column, lookupField, objects, ProposalChooser, scout} from '../../../index';\n\nexport default class TableProposalChooser extends ProposalChooser {\n\n  constructor() {\n    super();\n  }\n\n  _createModel() {\n    var headerVisible = false,\n      columns = [],\n      descriptors = this.smartField.columnDescriptors;\n\n    if (descriptors) {\n      descriptors.forEach(function(descriptor, index) {\n        headerVisible = headerVisible || !!descriptor.text;\n        columns.push(this._createColumnForDescriptor(descriptor));\n      }, this);\n    } else {\n      columns.push(this._createColumn());\n    }\n\n    var table = this._createTable(columns, headerVisible);\n    table.on('rowClick', this._onRowClick.bind(this));\n\n    return table;\n  }\n\n  _createColumn() {\n    return scout.create('Column', {\n      session: this.session,\n      width: Column.NARROW_MIN_WIDTH,\n      horizontalAlignment: this.smartField.gridData.horizontalAlignment\n    });\n  }\n\n  _createColumnForDescriptor(descriptor) {\n    var width = Column.NARROW_MIN_WIDTH;\n    if (descriptor.width && descriptor.width > 0) { // 0 = default\n      width = descriptor.width;\n    }\n    var column = scout.create('Column', {\n      session: this.session,\n      text: descriptor.text,\n      cssClass: scout.nvl(descriptor.cssClass, null),\n      width: width, // needs to be passed here to make sure initialWidth is also set, if set using setWidth() autoResizeColumn won't work because initalWidth would still be NARROW_MIN_WIDTH\n      autoOptimizeWidth: scout.nvl(descriptor.autoOptimizeWidth, false),\n      fixedWidth: scout.nvl(descriptor.fixedWidth, false),\n      fixedPosition: scout.nvl(descriptor.fixedPosition, false),\n      horizontalAlignment: scout.nvl(descriptor.horizontalAlignment, this.smartField.gridData.horizontalAlignment),\n      visible: scout.nvl(descriptor.visible, true),\n      htmlEnabled: scout.nvl(descriptor.htmlEnabled, false)\n    });\n    return column;\n  }\n\n  _createTable(columns, headerVisible) {\n    return scout.create('Table', {\n      parent: this,\n      headerVisible: headerVisible,\n      autoResizeColumns: true,\n      multiSelect: false,\n      multilineText: true,\n      scrollToSelection: true,\n      columns: columns,\n      headerMenusEnabled: false\n    });\n  }\n\n  _onRowClick(event) {\n    var row = event.row;\n    if (!row || !row.enabled) {\n      return;\n    }\n    this.setBusy(true);\n    this.triggerLookupRowSelected(row);\n  }\n\n  selectedRow() {\n    return this.model.selectedRow();\n  }\n\n  setLookupResult(result) {\n    var\n      tableRows = [],\n      lookupRows = result.lookupRows,\n      multipleColumns = !!this.smartField.columnDescriptors;\n\n    this.model.deleteAllRows();\n    lookupRows.forEach(function(lookupRow) {\n      tableRows.push(this._createTableRow(lookupRow, multipleColumns));\n    }, this);\n    this.model.insertRows(tableRows);\n\n    this._selectProposal(result, tableRows);\n  }\n\n  trySelectCurrentValue() {\n    var currentValue = this.smartField.getValueForSelection();\n    if (objects.isNullOrUndefined(currentValue)) {\n      return;\n    }\n    var tableRow = arrays.find(this.model.rows, function(row) {\n      return row.lookupRow.key === currentValue;\n    });\n    if (tableRow) {\n      this.model.selectRow(tableRow);\n    }\n  }\n\n  selectFirstLookupRow() {\n    if (this.model.rows.length) {\n      this.model.selectRow(this.model.rows[0]);\n    }\n  }\n\n  clearSelection() {\n    this.model.deselectAll();\n  }\n\n  clearLookupRows() {\n    this.model.removeAllRows();\n  }\n\n  /**\n   * Creates a table-row for the given lookup-row.\n   *\n   * @returns {object} table-row model\n   */\n  _createTableRow(lookupRow, multipleColumns) {\n    var row = lookupField.createTableRow(lookupRow, multipleColumns);\n    if (multipleColumns) {\n      arrays.pushAll(row.cells, this._transformTableRowData(lookupRow, lookupRow.additionalTableRowData));\n    }\n    return row;\n  }\n\n  _renderModel() {\n    this.model.setVirtual(this.smartField.virtual());\n    this.model.render();\n\n    // Make sure table never gets the focus, but looks focused\n    this.model.$container.setTabbable(false);\n    this.model.$container.addClass('focused');\n  }\n\n  getSelectedLookupRow() {\n    var selectedRow = this.model.selectedRow();\n    if (!selectedRow) {\n      return null;\n    }\n    return selectedRow.lookupRow;\n  }\n\n  /**\n   * Takes the TableRowData bean and the infos provided by the column descriptors to create an\n   * array of additional values in the correct order, as defined by the descriptors.\n   */\n  _transformTableRowData(lookupRow, tableRowData) {\n    var descriptors = this.smartField.columnDescriptors;\n    var cells = [];\n    descriptors.forEach(function(desc) {\n      cells.push(lookupField.createTableCell(lookupRow, desc, tableRowData));\n    });\n    return cells;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}