{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Device, dragAndDrop, InputFieldKeyStrokeContext, strings, URL, Widget } from '../index';\nimport $ from 'jquery';\n\nvar FileInput = /*#__PURE__*/function (_Widget) {\n  _inherits(FileInput, _Widget);\n\n  var _super = _createSuper(FileInput);\n\n  function FileInput() {\n    var _this;\n\n    _classCallCheck(this, FileInput);\n\n    _this = _super.call(this);\n    _this.acceptTypes = null;\n    _this.maximumUploadSize = FileInput.DEFAULT_MAXIMUM_UPLOAD_SIZE;\n    _this.multiSelect = false;\n    _this.files = [];\n    _this.legacyFileUploadUrl = null;\n    _this.text = null;\n    return _this;\n  }\n\n  _createClass(FileInput, [{\n    key: \"_init\",\n    // 50 MB\n    value: function _init(model) {\n      _get(_getPrototypeOf(FileInput.prototype), \"_init\", this).call(this, model);\n\n      this.uploadController = model.uploadController || model.parent;\n      var url = new URL(model.legacyFileUploadUrl || 'upload/' + this.session.uiSessionId + '/' + this.uploadController.id);\n      url.setParameter('legacy', true);\n      this.legacyFileUploadUrl = url.toString();\n      this.legacy = !Device.get().supportsFile();\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_initKeyStrokeContext\",\n    value: function _initKeyStrokeContext() {\n      // Need to create keystroke context here because this.legacy is not set at the time the constructor is executed\n      this.keyStrokeContext = this._createKeyStrokeContext();\n\n      _get(_getPrototypeOf(FileInput.prototype), \"_initKeyStrokeContext\", this).call(this);\n    }\n  }, {\n    key: \"_createKeyStrokeContext\",\n    value: function _createKeyStrokeContext() {\n      if (this.legacy) {\n        // native input control is a text field -> use input field context to make sure backspace etc. does not bubble up\n        return new InputFieldKeyStrokeContext();\n      }\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$fileInput = this.$parent.makeElement('<input>').attr('type', 'file').on('change', this._onFileChange.bind(this));\n\n      if (!this.legacy) {\n        this.$container = this.$parent.appendDiv('file-input input-field').on('dragenter', this._onDragEnterOrOver.bind(this)).on('dragover', this._onDragEnterOrOver.bind(this)).on('drop', this._onDrop.bind(this));\n        this.$fileInput.appendTo(this.$container);\n        this.$container.on('mousedown', this._onMouseDown.bind(this));\n        this.$text = this.$container.appendDiv('file-input-text');\n      } else {\n        this._renderLegacyMode();\n      }\n\n      if (this.legacy) {\n        // Files may not be set into native control -> clear list in order to be sync again\n        this.clear();\n      }\n    }\n  }, {\n    key: \"_renderLegacyMode\",\n    value: function _renderLegacyMode() {\n      this.$legacyFormTarget = this.$fileInput.appendElement('<iframe>').attr('name', 'legacyFileUpload' + this.uploadController.id).on('load', function () {\n        // Manually handle JSON response from iframe\n        try {\n          // \"onAjaxDone\"\n          var text = this.$legacyFormTarget.contents().text();\n\n          if (strings.hasText(text)) {\n            // Manually handle JSON response\n            var json = $.parseJSON(text);\n            this.session.responseQueue.process(json);\n          }\n        } finally {\n          // \"onAjaxAlways\"\n          this.session.setBusy(false);\n        }\n      }.bind(this));\n      this.$fileInput.attr('name', 'file').addClass('legacy-upload-file-input');\n      this.$legacyForm = this.$parent.appendElement('<form>', 'legacy-upload-form').attr('action', this.legacyFileUploadUrl).attr('enctype', 'multipart/form-data').attr('method', 'post').attr('target', 'legacyFileUpload' + this.uploadController.id).append(this.$fileInput);\n      this.$container = this.$legacyForm;\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(FileInput.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderText();\n\n      this._renderAcceptTypes();\n\n      this._renderMultiSelect();\n    }\n  }, {\n    key: \"_renderEnabled\",\n    value: function _renderEnabled() {\n      _get(_getPrototypeOf(FileInput.prototype), \"_renderEnabled\", this).call(this);\n\n      if (this.legacy) {\n        this.$fileInput.setEnabled(this.enabledComputed);\n      } else {\n        this.$container.setTabbable(this.enabledComputed);\n      }\n    }\n  }, {\n    key: \"setText\",\n    value: function setText(text) {\n      this.setProperty('text', text);\n    }\n  }, {\n    key: \"_renderText\",\n    value: function _renderText() {\n      if (this.legacy) {\n        return;\n      }\n\n      var text = this.text || '';\n      this.$text.text(text);\n    }\n  }, {\n    key: \"setAcceptTypes\",\n    value: function setAcceptTypes(acceptTypes) {\n      this.setProperty('acceptTypes', acceptTypes);\n    }\n  }, {\n    key: \"_renderAcceptTypes\",\n    value: function _renderAcceptTypes() {\n      var acceptTypes = this.acceptTypes || '';\n      this.$fileInput.attr('accept', acceptTypes);\n    }\n  }, {\n    key: \"setMultiSelect\",\n    value: function setMultiSelect(multiSelect) {\n      this.setProperty('multiSelect', multiSelect);\n    }\n  }, {\n    key: \"_renderMultiSelect\",\n    value: function _renderMultiSelect() {\n      this.$fileInput.prop('multiple', this.multiSelect);\n    }\n  }, {\n    key: \"setMaximumUploadSize\",\n    value: function setMaximumUploadSize(maximumUploadSize) {\n      this.setProperty('maximumUploadSize', maximumUploadSize);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._setFiles([]); // _setFiles actually sets the text as well, but only if files have changed.\n      // Make sure text is cleared as well if there are no files but a text set.\n\n\n      this.setText(null);\n\n      if (this.rendered) {\n        this.$fileInput.val(null);\n      }\n    }\n  }, {\n    key: \"_setFiles\",\n    value: function _setFiles(files) {\n      if (files instanceof FileList) {\n        files = FileInput.fileListToArray(files);\n      }\n\n      files = arrays.ensure(files);\n\n      if (arrays.equals(this.files, files)) {\n        return;\n      }\n\n      var name = '';\n\n      if (files.length > 0) {\n        if (this.legacy) {\n          name = files[0];\n        } else {\n          name = files[0].name;\n        }\n      }\n\n      this.files = files;\n      this.setText(name);\n      this.trigger('change', {\n        files: files\n      });\n    }\n  }, {\n    key: \"upload\",\n    value: function upload() {\n      if (this.files.length === 0) {\n        return true;\n      }\n\n      if (!this.legacy) {\n        return this.session.uploadFiles(this.uploadController, this.files, undefined, this.maximumUploadSize);\n      }\n\n      this.session.setBusy(true);\n      this.$legacyForm[0].submit();\n      return true;\n    }\n  }, {\n    key: \"browse\",\n    value: function browse() {\n      // Trigger browser's file chooser\n      this.$fileInput.click();\n    }\n  }, {\n    key: \"_onFileChange\",\n    value: function _onFileChange(event) {\n      var files = [];\n\n      if (!this.legacy) {\n        files = this.$fileInput[0].files;\n      } else {\n        if (this.$fileInput[0].value) {\n          files.push(this.$fileInput[0].value);\n        }\n      }\n\n      if (files.length) {\n        this._setFiles(files);\n      }\n    }\n  }, {\n    key: \"_onMouseDown\",\n    value: function _onMouseDown() {\n      if (!this.enabled) {\n        return;\n      }\n\n      this.browse();\n    }\n  }, {\n    key: \"_onDragEnterOrOver\",\n    value: function _onDragEnterOrOver(event) {\n      dragAndDrop.verifyDataTransferTypesScoutTypes(event, dragAndDrop.SCOUT_TYPES.FILE_TRANSFER);\n    }\n  }, {\n    key: \"_onDrop\",\n    value: function _onDrop(event) {\n      if (dragAndDrop.dataTransferTypesContainsScoutTypes(event.originalEvent.dataTransfer, dragAndDrop.SCOUT_TYPES.FILE_TRANSFER)) {\n        event.stopPropagation();\n        event.preventDefault();\n        var files = event.originalEvent.dataTransfer.files;\n\n        if (files.length >= 1) {\n          this._setFiles(files);\n        }\n      }\n    }\n  }, {\n    key: \"validateMaximumUploadSize\",\n    value: function validateMaximumUploadSize(files) {\n      files = arrays.ensure(files);\n\n      if (files.length === 0) {\n        return;\n      }\n\n      var totalSize = files.reduce(function (total, file) {\n        return total + file.size;\n      }, 0);\n\n      if (this.maximumUploadSize !== null && totalSize > this.maximumUploadSize) {\n        throw this.session.text('ui.FileSizeLimit', this.maximumUploadSize / 1024 / 1024);\n      }\n    }\n  }], [{\n    key: \"fileListToArray\",\n    value: function fileListToArray(fileList) {\n      var files = [],\n          i;\n\n      for (i = 0; i < fileList.length; i++) {\n        files.push(fileList[i]);\n      }\n\n      return files;\n    }\n  }]);\n\n  return FileInput;\n}(Widget);\n\n_defineProperty(FileInput, \"DEFAULT_MAXIMUM_UPLOAD_SIZE\", 50 * 1024 * 1024);\n\nexport { FileInput as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/filechooser/FileInput.js"],"names":["arrays","Device","dragAndDrop","InputFieldKeyStrokeContext","strings","URL","Widget","$","FileInput","acceptTypes","maximumUploadSize","DEFAULT_MAXIMUM_UPLOAD_SIZE","multiSelect","files","legacyFileUploadUrl","text","model","uploadController","parent","url","session","uiSessionId","id","setParameter","toString","legacy","get","supportsFile","keyStrokeContext","_createKeyStrokeContext","$fileInput","$parent","makeElement","attr","on","_onFileChange","bind","$container","appendDiv","_onDragEnterOrOver","_onDrop","appendTo","_onMouseDown","$text","_renderLegacyMode","clear","$legacyFormTarget","appendElement","contents","hasText","json","parseJSON","responseQueue","process","setBusy","addClass","$legacyForm","append","_renderText","_renderAcceptTypes","_renderMultiSelect","setEnabled","enabledComputed","setTabbable","setProperty","prop","_setFiles","setText","rendered","val","FileList","fileListToArray","ensure","equals","name","length","trigger","uploadFiles","undefined","submit","click","event","value","push","enabled","browse","verifyDataTransferTypesScoutTypes","SCOUT_TYPES","FILE_TRANSFER","dataTransferTypesContainsScoutTypes","originalEvent","dataTransfer","stopPropagation","preventDefault","totalSize","reduce","total","file","size","fileList","i"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Device, dragAndDrop, InputFieldKeyStrokeContext, strings, URL, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class FileInput extends Widget {\n\n  constructor() {\n    super();\n    this.acceptTypes = null;\n    this.maximumUploadSize = FileInput.DEFAULT_MAXIMUM_UPLOAD_SIZE;\n    this.multiSelect = false;\n    this.files = [];\n    this.legacyFileUploadUrl = null;\n    this.text = null;\n  }\n\n  static DEFAULT_MAXIMUM_UPLOAD_SIZE = 50 * 1024 * 1024; // 50 MB\n\n  _init(model) {\n    super._init(model);\n    this.uploadController = model.uploadController || model.parent;\n    var url = new URL(model.legacyFileUploadUrl || 'upload/' + this.session.uiSessionId + '/' + this.uploadController.id);\n    url.setParameter('legacy', true);\n    this.legacyFileUploadUrl = url.toString();\n    this.legacy = !Device.get().supportsFile();\n  }\n\n  /**\n   * @override\n   */\n  _initKeyStrokeContext() {\n    // Need to create keystroke context here because this.legacy is not set at the time the constructor is executed\n    this.keyStrokeContext = this._createKeyStrokeContext();\n    super._initKeyStrokeContext();\n  }\n\n  _createKeyStrokeContext() {\n    if (this.legacy) {\n      // native input control is a text field -> use input field context to make sure backspace etc. does not bubble up\n      return new InputFieldKeyStrokeContext();\n    }\n  }\n\n  _render() {\n    this.$fileInput = this.$parent.makeElement('<input>')\n      .attr('type', 'file')\n      .on('change', this._onFileChange.bind(this));\n\n    if (!this.legacy) {\n      this.$container = this.$parent.appendDiv('file-input input-field')\n        .on('dragenter', this._onDragEnterOrOver.bind(this))\n        .on('dragover', this._onDragEnterOrOver.bind(this))\n        .on('drop', this._onDrop.bind(this));\n      this.$fileInput.appendTo(this.$container);\n      this.$container.on('mousedown', this._onMouseDown.bind(this));\n      this.$text = this.$container.appendDiv('file-input-text');\n    } else {\n      this._renderLegacyMode();\n    }\n\n    if (this.legacy) {\n      // Files may not be set into native control -> clear list in order to be sync again\n      this.clear();\n    }\n  }\n\n  _renderLegacyMode() {\n    this.$legacyFormTarget = this.$fileInput.appendElement('<iframe>')\n      .attr('name', 'legacyFileUpload' + this.uploadController.id)\n      .on('load', function() {\n        // Manually handle JSON response from iframe\n        try {\n          // \"onAjaxDone\"\n          var text = this.$legacyFormTarget.contents().text();\n          if (strings.hasText(text)) {\n            // Manually handle JSON response\n            var json = $.parseJSON(text);\n            this.session.responseQueue.process(json);\n          }\n        } finally {\n          // \"onAjaxAlways\"\n          this.session.setBusy(false);\n        }\n      }.bind(this));\n    this.$fileInput\n      .attr('name', 'file')\n      .addClass('legacy-upload-file-input');\n    this.$legacyForm = this.$parent.appendElement('<form>', 'legacy-upload-form')\n      .attr('action', this.legacyFileUploadUrl)\n      .attr('enctype', 'multipart/form-data')\n      .attr('method', 'post')\n      .attr('target', 'legacyFileUpload' + this.uploadController.id)\n      .append(this.$fileInput);\n    this.$container = this.$legacyForm;\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderText();\n    this._renderAcceptTypes();\n    this._renderMultiSelect();\n  }\n\n  _renderEnabled() {\n    super._renderEnabled();\n\n    if (this.legacy) {\n      this.$fileInput.setEnabled(this.enabledComputed);\n    } else {\n      this.$container.setTabbable(this.enabledComputed);\n    }\n  }\n\n  setText(text) {\n    this.setProperty('text', text);\n  }\n\n  _renderText() {\n    if (this.legacy) {\n      return;\n    }\n    var text = this.text || '';\n    this.$text.text(text);\n  }\n\n  setAcceptTypes(acceptTypes) {\n    this.setProperty('acceptTypes', acceptTypes);\n  }\n\n  _renderAcceptTypes() {\n    var acceptTypes = this.acceptTypes || '';\n    this.$fileInput.attr('accept', acceptTypes);\n  }\n\n  setMultiSelect(multiSelect) {\n    this.setProperty('multiSelect', multiSelect);\n  }\n\n  _renderMultiSelect() {\n    this.$fileInput.prop('multiple', this.multiSelect);\n  }\n\n  setMaximumUploadSize(maximumUploadSize) {\n    this.setProperty('maximumUploadSize', maximumUploadSize);\n  }\n\n  clear() {\n    this._setFiles([]);\n    // _setFiles actually sets the text as well, but only if files have changed.\n    // Make sure text is cleared as well if there are no files but a text set.\n    this.setText(null);\n    if (this.rendered) {\n      this.$fileInput.val(null);\n    }\n  }\n\n  _setFiles(files) {\n    if (files instanceof FileList) {\n      files = FileInput.fileListToArray(files);\n    }\n    files = arrays.ensure(files);\n    if (arrays.equals(this.files, files)) {\n      return;\n    }\n    var name = '';\n    if (files.length > 0) {\n      if (this.legacy) {\n        name = files[0];\n      } else {\n        name = files[0].name;\n      }\n    }\n    this.files = files;\n    this.setText(name);\n    this.trigger('change', {\n      files: files\n    });\n  }\n\n  upload() {\n    if (this.files.length === 0) {\n      return true;\n    }\n    if (!this.legacy) {\n      return this.session.uploadFiles(this.uploadController, this.files, undefined, this.maximumUploadSize);\n    }\n    this.session.setBusy(true);\n    this.$legacyForm[0].submit();\n    return true;\n  }\n\n  browse() {\n    // Trigger browser's file chooser\n    this.$fileInput.click();\n  }\n\n  _onFileChange(event) {\n    var files = [];\n\n    if (!this.legacy) {\n      files = this.$fileInput[0].files;\n    } else {\n      if (this.$fileInput[0].value) {\n        files.push(this.$fileInput[0].value);\n      }\n    }\n    if (files.length) {\n      this._setFiles(files);\n    }\n  }\n\n  _onMouseDown() {\n    if (!this.enabled) {\n      return;\n    }\n    this.browse();\n  }\n\n  _onDragEnterOrOver(event) {\n    dragAndDrop.verifyDataTransferTypesScoutTypes(event, dragAndDrop.SCOUT_TYPES.FILE_TRANSFER);\n  }\n\n  _onDrop(event) {\n    if (dragAndDrop.dataTransferTypesContainsScoutTypes(event.originalEvent.dataTransfer, dragAndDrop.SCOUT_TYPES.FILE_TRANSFER)) {\n      event.stopPropagation();\n      event.preventDefault();\n\n      var files = event.originalEvent.dataTransfer.files;\n      if (files.length >= 1) {\n        this._setFiles(files);\n      }\n    }\n  }\n\n  static fileListToArray(fileList) {\n    var files = [],\n      i;\n    for (i = 0; i < fileList.length; i++) {\n      files.push(fileList[i]);\n    }\n    return files;\n  }\n\n  validateMaximumUploadSize(files) {\n    files = arrays.ensure(files);\n    if (files.length === 0) {\n      return;\n    }\n\n    var totalSize = files.reduce(function(total, file) {\n      return total + file.size;\n    }, 0);\n\n    if (this.maximumUploadSize !== null && totalSize > this.maximumUploadSize) {\n      throw this.session.text('ui.FileSizeLimit', (this.maximumUploadSize / 1024 / 1024));\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}