{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { scout, ValueField } from '../../../index';\nimport $ from 'jquery';\n\nvar SliderField = /*#__PURE__*/function (_ValueField) {\n  _inherits(SliderField, _ValueField);\n\n  var _super = _createSuper(SliderField);\n\n  function SliderField() {\n    var _this;\n\n    _classCallCheck(this, SliderField);\n\n    _this = _super.call(this);\n    _this.slider;\n    return _this;\n  }\n\n  _createClass(SliderField, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(SliderField.prototype), \"_init\", this).call(this, model);\n\n      var sliderOptions = $.extend({\n        parent: this\n      }, model);\n      this.slider = scout.create('Slider', sliderOptions);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.addContainer(this.$parent, 'slider-field');\n      this.addLabel();\n      this.addMandatoryIndicator();\n\n      this._renderSlider();\n    }\n  }, {\n    key: \"_renderSlider\",\n    value: function _renderSlider() {\n      this.slider.render();\n      this.addField(this.slider.$container);\n    }\n  }, {\n    key: \"_readDisplayText\",\n    value: function _readDisplayText() {\n      // Use the inner slider's value as display text, as the user cannot enter the value manually.\n      // This value is already guaranteed to be a valid number (see Slider.js, _onValueChange). We\n      // convert it to a string to match the expected data type for a display text.\n      return String(this.slider.value);\n    }\n  }, {\n    key: \"_parseValue\",\n    value: function _parseValue(displayText) {\n      // Convert display text back to number\n      return Number(displayText);\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      this.slider.setValue(value);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this.slider.value;\n    }\n  }]);\n\n  return SliderField;\n}(ValueField);\n\nexport { SliderField as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/slider/SliderField.js"],"names":["scout","ValueField","$","SliderField","slider","model","sliderOptions","extend","parent","create","addContainer","$parent","addLabel","addMandatoryIndicator","_renderSlider","render","addField","$container","String","value","displayText","Number","setValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,KAAR,EAAeC,UAAf,QAAgC,gBAAhC;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEqBC,W;;;;;AAEnB,yBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,MAAL;AAFY;AAGb;;;;0BAEKC,K,EAAO;AACX,6EAAYA,KAAZ;;AACA,UAAIC,aAAa,GAAGJ,CAAC,CAACK,MAAF,CAAS;AAC3BC,QAAAA,MAAM,EAAE;AADmB,OAAT,EAEjBH,KAFiB,CAApB;AAGA,WAAKD,MAAL,GAAcJ,KAAK,CAACS,MAAN,CAAa,QAAb,EAAuBH,aAAvB,CAAd;AACD;;;8BAES;AACR,WAAKI,YAAL,CAAkB,KAAKC,OAAvB,EAAgC,cAAhC;AACA,WAAKC,QAAL;AACA,WAAKC,qBAAL;;AACA,WAAKC,aAAL;AACD;;;oCAEe;AACd,WAAKV,MAAL,CAAYW,MAAZ;AACA,WAAKC,QAAL,CAAc,KAAKZ,MAAL,CAAYa,UAA1B;AACD;;;uCAEkB;AACjB;AACA;AACA;AACA,aAAOC,MAAM,CAAC,KAAKd,MAAL,CAAYe,KAAb,CAAb;AACD;;;gCAEWC,W,EAAa;AACvB;AACA,aAAOC,MAAM,CAACD,WAAD,CAAb;AACD;;;6BAEQD,K,EAAO;AACd,WAAKf,MAAL,CAAYkB,QAAZ,CAAqBH,KAArB;AACD;;;+BAEU;AACT,aAAO,KAAKf,MAAL,CAAYe,KAAnB;AACD;;;;EA7CsClB,U;;SAApBE,W","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {scout, ValueField} from '../../../index';\nimport $ from 'jquery';\n\nexport default class SliderField extends ValueField {\n\n  constructor() {\n    super();\n    this.slider;\n  }\n\n  _init(model) {\n    super._init(model);\n    var sliderOptions = $.extend({\n      parent: this\n    }, model);\n    this.slider = scout.create('Slider', sliderOptions);\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'slider-field');\n    this.addLabel();\n    this.addMandatoryIndicator();\n    this._renderSlider();\n  }\n\n  _renderSlider() {\n    this.slider.render();\n    this.addField(this.slider.$container);\n  }\n\n  _readDisplayText() {\n    // Use the inner slider's value as display text, as the user cannot enter the value manually.\n    // This value is already guaranteed to be a valid number (see Slider.js, _onValueChange). We\n    // convert it to a string to match the expected data type for a display text.\n    return String(this.slider.value);\n  }\n\n  _parseValue(displayText) {\n    // Convert display text back to number\n    return Number(displayText);\n  }\n\n  setValue(value) {\n    this.slider.setValue(value);\n  }\n\n  getValue() {\n    return this.slider.value;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}