{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { icons, Insets, Popup, Resizable, scout, WidgetPopupLayout } from '../index';\nimport $ from 'jquery';\nimport graphics from '../layout/graphics';\n\nvar WidgetPopup = /*#__PURE__*/function (_Popup) {\n  _inherits(WidgetPopup, _Popup);\n\n  var _super = _createSuper(WidgetPopup);\n\n  function WidgetPopup() {\n    var _this;\n\n    _classCallCheck(this, WidgetPopup);\n\n    _this = _super.call(this);\n    _this.animateOpening = true;\n    _this.animateResize = true;\n    _this.animateRemoval = true;\n    _this.closable = false;\n    _this.closeAction = null;\n    _this.movable = false;\n    _this.resizable = false;\n    _this.resizeModes = null;\n    _this.minSize = null;\n    _this.widget = null;\n    _this.windowPaddingX = 0;\n    _this.windowPaddingY = 0;\n    _this.windowResizeType = 'layoutAndPosition';\n    _this.$dragHandle = null;\n    _this._moveHandler = _this._onMove.bind(_assertThisInitialized(_this));\n    _this._resizeHandler = _this._onResize.bind(_assertThisInitialized(_this));\n    _this._autoPositionOrig = null;\n\n    _this._addWidgetProperties(['widget']);\n\n    return _this;\n  }\n\n  _createClass(WidgetPopup, [{\n    key: \"_createLayout\",\n    value: function _createLayout() {\n      return new WidgetPopupLayout(this);\n    }\n  }, {\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(WidgetPopup.prototype), \"_init\", this).call(this, model);\n\n      this._setClosable(this.closable);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      _get(_getPrototypeOf(WidgetPopup.prototype), \"_render\", this).call(this);\n\n      this.$container.addClass('widget-popup');\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(WidgetPopup.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderWidget();\n\n      this._renderClosable();\n\n      this._renderMovable();\n\n      this._renderResizable();\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.$dragHandle = null;\n\n      _get(_getPrototypeOf(WidgetPopup.prototype), \"_remove\", this).call(this);\n    }\n  }, {\n    key: \"setWidget\",\n    value: function setWidget(widget) {\n      this.setProperty('widget', widget);\n    }\n  }, {\n    key: \"_renderWidget\",\n    value: function _renderWidget() {\n      if (!this.widget) {\n        return;\n      }\n\n      this.widget.render();\n      this.widget.$container.addClass('popup-widget');\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"setClosable\",\n    value: function setClosable(closable) {\n      this.setProperty('closable', closable);\n    }\n  }, {\n    key: \"_setClosable\",\n    value: function _setClosable(closable) {\n      this._setProperty('closable', closable);\n\n      if (this.closable) {\n        if (this.closeAction) {\n          return;\n        }\n\n        this.closeAction = this._createCloseAction();\n        this.closeAction.on('action', this._onCloseAction.bind(this));\n      } else {\n        if (!this.closeAction) {\n          return;\n        }\n\n        this.closeAction.destroy();\n        this.closeAction = null;\n      }\n    }\n  }, {\n    key: \"_createCloseAction\",\n    value: function _createCloseAction() {\n      return scout.create('Action', {\n        parent: this,\n        cssClass: 'close-action',\n        iconId: icons.REMOVE\n      });\n    }\n  }, {\n    key: \"_renderClosable\",\n    value: function _renderClosable() {\n      if (this.closeAction) {\n        this.closeAction.render();\n      }\n    }\n  }, {\n    key: \"_onCloseAction\",\n    value: function _onCloseAction() {\n      this.close();\n    }\n  }, {\n    key: \"setResizable\",\n    value: function setResizable(resizable) {\n      this.setProperty('resizable', resizable);\n    }\n  }, {\n    key: \"_renderResizable\",\n    value: function _renderResizable() {\n      if (this.resizable) {\n        this.$container.resizable({\n          modes: this._determineResizeModes(),\n          $parent: this.$container,\n          boundaries: this._calculateResizeBoundaries()\n        }).on('resize', this._resizeHandler);\n      } else {\n        this.$container.unresizable().off('resize', this._resizeHandler);\n        this.invalidateLayoutTree(); // Resize popup to preferred size\n      }\n    }\n  }, {\n    key: \"_calculateResizeBoundaries\",\n    value: function _calculateResizeBoundaries() {\n      var resizeBoundaries = new Insets();\n\n      if (!this.$arrow) {\n        return resizeBoundaries;\n      }\n\n      var anchorMiddle = this._getAnchorMiddlePoint();\n\n      if (!anchorMiddle) {\n        return resizeBoundaries;\n      }\n\n      var arrowSize = graphics.size(this.$arrow);\n\n      if (this._isVerticallyAligned()) {\n        resizeBoundaries.top = anchorMiddle.y - arrowSize.height;\n        resizeBoundaries.bottom = anchorMiddle.y + arrowSize.height;\n      } else {\n        resizeBoundaries.left = anchorMiddle.x - arrowSize.width;\n        resizeBoundaries.right = anchorMiddle.x + arrowSize.width;\n      }\n\n      return resizeBoundaries;\n    }\n  }, {\n    key: \"_determineResizeModes\",\n    value: function _determineResizeModes() {\n      if (!this.$arrow || this.resizeModes) {\n        return this.resizeModes;\n      }\n\n      if (this.calculatedVerticalAlignment === Popup.Alignment.TOP) {\n        return [Resizable.MODES.WEST, Resizable.MODES.EAST, Resizable.MODES.NORTH];\n      }\n\n      if (this.calculatedVerticalAlignment === Popup.Alignment.BOTTOM) {\n        return [Resizable.MODES.WEST, Resizable.MODES.EAST, Resizable.MODES.SOUTH];\n      }\n\n      if (this.calculatedHorizontalAlignment === Popup.Alignment.LEFT) {\n        return [Resizable.MODES.NORTH, Resizable.MODES.SOUTH, Resizable.MODES.WEST];\n      }\n\n      if (this.calculatedHorizontalAlignment === Popup.Alignment.RIGHT) {\n        return [Resizable.MODES.NORTH, Resizable.MODES.SOUTH, Resizable.MODES.EAST];\n      }\n\n      return this.resizeModes;\n    }\n  }, {\n    key: \"_onResize\",\n    value: function _onResize(event) {\n      var autoSizeOrig = this.htmlComp.layout.autoSize;\n      this.htmlComp.layout.autoSize = false;\n      this.htmlComp.revalidateLayout();\n      this.htmlComp.layout.autoSize = autoSizeOrig;\n\n      this._updateArrowPosition();\n\n      return false;\n    }\n    /**\n     * @Override\n     */\n\n  }, {\n    key: \"position\",\n    value: function position(switchIfNecessary) {\n      _get(_getPrototypeOf(WidgetPopup.prototype), \"position\", this).call(this, switchIfNecessary);\n\n      if (this.resizable) {\n        var resizable = this.$container.data('resizable');\n        resizable.setBoundaries(this._calculateResizeBoundaries());\n        resizable.setModes(this._determineResizeModes());\n\n        this._updateArrowPosition();\n      }\n    }\n    /**\n     * @Override\n     */\n\n  }, {\n    key: \"_updateArrowClass\",\n    value: function _updateArrowClass(verticalAlignment, horizontalAlignment) {\n      _get(_getPrototypeOf(WidgetPopup.prototype), \"_updateArrowClass\", this).call(this, verticalAlignment, horizontalAlignment);\n\n      if (this.$arrow) {\n        // make sure to remove css positioning which could have been applied in _updateArrowPosition()\n        // otherwise the original positioning functions of popup.js may not work correctly anymore\n        this.$arrow.cssLeft(null);\n        this.$arrow.cssTop(null);\n      }\n    }\n  }, {\n    key: \"_updateArrowPosition\",\n    value: function _updateArrowPosition() {\n      if (!this.$arrow) {\n        return;\n      }\n\n      var anchorMiddlePoint = this._getAnchorMiddlePoint();\n\n      if (!anchorMiddlePoint) {\n        return;\n      }\n\n      this.$arrow.removeClass('leftedge rightedge topedge bottomedge');\n      var arrowSize = graphics.size(this.$arrow);\n      var arrowMargins = graphics.margins(this.$arrow);\n\n      if (this._isVerticallyAligned()) {\n        var verticalMarginShift = arrowMargins.top + arrowMargins.bottom;\n        this.$arrow.cssTop(anchorMiddlePoint.y - (verticalMarginShift + this.$container.position().top + arrowSize.height / 2));\n      } else {\n        var horizontalMarginShift = arrowMargins.left + arrowMargins.right;\n        this.$arrow.cssLeft(anchorMiddlePoint.x - (horizontalMarginShift + this.$container.position().left + arrowSize.width / 2));\n      }\n    }\n  }, {\n    key: \"_getAnchorMiddlePoint\",\n    value: function _getAnchorMiddlePoint() {\n      var anchorBounds = this.getAnchorBounds();\n      return anchorBounds ? anchorBounds.center() : null;\n    }\n  }, {\n    key: \"_isVerticallyAligned\",\n    value: function _isVerticallyAligned() {\n      return scout.isOneOf(this.calculatedHorizontalAlignment, Popup.Alignment.LEFT, Popup.Alignment.RIGHT);\n    }\n  }, {\n    key: \"setMovable\",\n    value: function setMovable(movable) {\n      this.setProperty('movable', movable);\n    }\n  }, {\n    key: \"_renderMovable\",\n    value: function _renderMovable() {\n      if (this.movable) {\n        if (this.$dragHandle) {\n          return;\n        }\n\n        this.$dragHandle = this.$container.prependDiv('drag-handle');\n        this.$container.draggable(this.$dragHandle, $.throttle(this._moveHandler, 1000 / 60)); // 60fps\n      } else {\n        if (!this.$dragHandle) {\n          return;\n        }\n\n        this.$container.undraggable(this.$dragHandle);\n        this.$dragHandle.remove();\n        this.$dragHandle = null;\n        this.htmlComp.layout.autoPosition = this._autoPositionOrig;\n        this._autoPositionOrig = null;\n        this.invalidateLayoutTree(); // move popup to preferred position\n      }\n    }\n  }, {\n    key: \"_onMove\",\n    value: function _onMove(newOffset) {\n      // Disable automatic positioning as soon as the user drags the popup\n      if (this._autoPositionOrig === null) {\n        this._autoPositionOrig = this.htmlComp.layout.autoPosition;\n        this.htmlComp.layout.autoPosition = false;\n      }\n\n      this.trigger('move', newOffset);\n    }\n  }, {\n    key: \"set$Anchor\",\n    value: function set$Anchor($anchor) {\n      if (this._autoPositionOrig && $anchor && this.$anchor !== $anchor) {\n        // If a new anchor is set, the popup is positioned automatically -> reset flag to make animation work\n        this.htmlComp.layout.autoPosition = this._autoPositionOrig;\n        this._autoPositionOrig = null;\n      }\n\n      _get(_getPrototypeOf(WidgetPopup.prototype), \"set$Anchor\", this).call(this, $anchor);\n    }\n  }]);\n\n  return WidgetPopup;\n}(Popup);\n\nexport { WidgetPopup as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/popup/WidgetPopup.js"],"names":["icons","Insets","Popup","Resizable","scout","WidgetPopupLayout","$","graphics","WidgetPopup","animateOpening","animateResize","animateRemoval","closable","closeAction","movable","resizable","resizeModes","minSize","widget","windowPaddingX","windowPaddingY","windowResizeType","$dragHandle","_moveHandler","_onMove","bind","_resizeHandler","_onResize","_autoPositionOrig","_addWidgetProperties","model","_setClosable","$container","addClass","_renderWidget","_renderClosable","_renderMovable","_renderResizable","setProperty","render","invalidateLayoutTree","_setProperty","_createCloseAction","on","_onCloseAction","destroy","create","parent","cssClass","iconId","REMOVE","close","modes","_determineResizeModes","$parent","boundaries","_calculateResizeBoundaries","unresizable","off","resizeBoundaries","$arrow","anchorMiddle","_getAnchorMiddlePoint","arrowSize","size","_isVerticallyAligned","top","y","height","bottom","left","x","width","right","calculatedVerticalAlignment","Alignment","TOP","MODES","WEST","EAST","NORTH","BOTTOM","SOUTH","calculatedHorizontalAlignment","LEFT","RIGHT","event","autoSizeOrig","htmlComp","layout","autoSize","revalidateLayout","_updateArrowPosition","switchIfNecessary","data","setBoundaries","setModes","verticalAlignment","horizontalAlignment","cssLeft","cssTop","anchorMiddlePoint","removeClass","arrowMargins","margins","verticalMarginShift","position","horizontalMarginShift","anchorBounds","getAnchorBounds","center","isOneOf","prependDiv","draggable","throttle","undraggable","remove","autoPosition","newOffset","trigger","$anchor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,KAAR,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,SAA9B,EAAyCC,KAAzC,EAAgDC,iBAAhD,QAAwE,UAAxE;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,QAAP,MAAqB,oBAArB;;IAEqBC,W;;;;;AAEnB,yBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,cAAL,GAAsB,IAAtB;AACA,UAAKC,aAAL,GAAqB,IAArB;AACA,UAAKC,cAAL,GAAsB,IAAtB;AACA,UAAKC,QAAL,GAAgB,KAAhB;AACA,UAAKC,WAAL,GAAmB,IAAnB;AACA,UAAKC,OAAL,GAAe,KAAf;AACA,UAAKC,SAAL,GAAiB,KAAjB;AACA,UAAKC,WAAL,GAAmB,IAAnB;AACA,UAAKC,OAAL,GAAe,IAAf;AACA,UAAKC,MAAL,GAAc,IAAd;AACA,UAAKC,cAAL,GAAsB,CAAtB;AACA,UAAKC,cAAL,GAAsB,CAAtB;AACA,UAAKC,gBAAL,GAAwB,mBAAxB;AACA,UAAKC,WAAL,GAAmB,IAAnB;AACA,UAAKC,YAAL,GAAoB,MAAKC,OAAL,CAAaC,IAAb,+BAApB;AACA,UAAKC,cAAL,GAAsB,MAAKC,SAAL,CAAeF,IAAf,+BAAtB;AACA,UAAKG,iBAAL,GAAyB,IAAzB;;AACA,UAAKC,oBAAL,CAA0B,CAAC,QAAD,CAA1B;;AAnBY;AAoBb;;;;oCAEe;AACd,aAAO,IAAIxB,iBAAJ,CAAsB,IAAtB,CAAP;AACD;;;0BAEKyB,K,EAAO;AACX,6EAAYA,KAAZ;;AACA,WAAKC,YAAL,CAAkB,KAAKnB,QAAvB;AACD;;;8BAES;AACR;;AACA,WAAKoB,UAAL,CAAgBC,QAAhB,CAAyB,cAAzB;AACD;;;wCAEmB;AAClB;;AACA,WAAKC,aAAL;;AACA,WAAKC,eAAL;;AACA,WAAKC,cAAL;;AACA,WAAKC,gBAAL;AACD;;;8BAES;AACR,WAAKf,WAAL,GAAmB,IAAnB;;AACA;AACD;;;8BAESJ,M,EAAQ;AAChB,WAAKoB,WAAL,CAAiB,QAAjB,EAA2BpB,MAA3B;AACD;;;oCAEe;AACd,UAAI,CAAC,KAAKA,MAAV,EAAkB;AAChB;AACD;;AACD,WAAKA,MAAL,CAAYqB,MAAZ;AACA,WAAKrB,MAAL,CAAYc,UAAZ,CAAuBC,QAAvB,CAAgC,cAAhC;AACA,WAAKO,oBAAL;AACD;;;gCAEW5B,Q,EAAU;AACpB,WAAK0B,WAAL,CAAiB,UAAjB,EAA6B1B,QAA7B;AACD;;;iCAEYA,Q,EAAU;AACrB,WAAK6B,YAAL,CAAkB,UAAlB,EAA8B7B,QAA9B;;AACA,UAAI,KAAKA,QAAT,EAAmB;AACjB,YAAI,KAAKC,WAAT,EAAsB;AACpB;AACD;;AACD,aAAKA,WAAL,GAAmB,KAAK6B,kBAAL,EAAnB;AACA,aAAK7B,WAAL,CAAiB8B,EAAjB,CAAoB,QAApB,EAA8B,KAAKC,cAAL,CAAoBnB,IAApB,CAAyB,IAAzB,CAA9B;AACD,OAND,MAMO;AACL,YAAI,CAAC,KAAKZ,WAAV,EAAuB;AACrB;AACD;;AACD,aAAKA,WAAL,CAAiBgC,OAAjB;AACA,aAAKhC,WAAL,GAAmB,IAAnB;AACD;AACF;;;yCAEoB;AACnB,aAAOT,KAAK,CAAC0C,MAAN,CAAa,QAAb,EAAuB;AAC5BC,QAAAA,MAAM,EAAE,IADoB;AAE5BC,QAAAA,QAAQ,EAAE,cAFkB;AAG5BC,QAAAA,MAAM,EAAEjD,KAAK,CAACkD;AAHc,OAAvB,CAAP;AAKD;;;sCAEiB;AAChB,UAAI,KAAKrC,WAAT,EAAsB;AACpB,aAAKA,WAAL,CAAiB0B,MAAjB;AACD;AACF;;;qCAEgB;AACf,WAAKY,KAAL;AACD;;;iCAEYpC,S,EAAW;AACtB,WAAKuB,WAAL,CAAiB,WAAjB,EAA8BvB,SAA9B;AACD;;;uCAEkB;AACjB,UAAI,KAAKA,SAAT,EAAoB;AAClB,aAAKiB,UAAL,CACGjB,SADH,CACa;AAACqC,UAAAA,KAAK,EAAE,KAAKC,qBAAL,EAAR;AAAsCC,UAAAA,OAAO,EAAE,KAAKtB,UAApD;AAAgEuB,UAAAA,UAAU,EAAE,KAAKC,0BAAL;AAA5E,SADb,EAEGb,EAFH,CAEM,QAFN,EAEgB,KAAKjB,cAFrB;AAGD,OAJD,MAIO;AACL,aAAKM,UAAL,CACGyB,WADH,GAEGC,GAFH,CAEO,QAFP,EAEiB,KAAKhC,cAFtB;AAGA,aAAKc,oBAAL,GAJK,CAIwB;AAC9B;AACF;;;iDAE4B;AAC3B,UAAImB,gBAAgB,GAAG,IAAI1D,MAAJ,EAAvB;;AACA,UAAI,CAAC,KAAK2D,MAAV,EAAkB;AAChB,eAAOD,gBAAP;AACD;;AACD,UAAIE,YAAY,GAAG,KAAKC,qBAAL,EAAnB;;AACA,UAAI,CAACD,YAAL,EAAmB;AACjB,eAAOF,gBAAP;AACD;;AACD,UAAII,SAAS,GAAGxD,QAAQ,CAACyD,IAAT,CAAc,KAAKJ,MAAnB,CAAhB;;AACA,UAAI,KAAKK,oBAAL,EAAJ,EAAiC;AAC/BN,QAAAA,gBAAgB,CAACO,GAAjB,GAAuBL,YAAY,CAACM,CAAb,GAAiBJ,SAAS,CAACK,MAAlD;AACAT,QAAAA,gBAAgB,CAACU,MAAjB,GAA0BR,YAAY,CAACM,CAAb,GAAiBJ,SAAS,CAACK,MAArD;AACD,OAHD,MAGO;AACLT,QAAAA,gBAAgB,CAACW,IAAjB,GAAwBT,YAAY,CAACU,CAAb,GAAiBR,SAAS,CAACS,KAAnD;AACAb,QAAAA,gBAAgB,CAACc,KAAjB,GAAyBZ,YAAY,CAACU,CAAb,GAAiBR,SAAS,CAACS,KAApD;AACD;;AACD,aAAOb,gBAAP;AACD;;;4CAEuB;AACtB,UAAI,CAAC,KAAKC,MAAN,IAAgB,KAAK5C,WAAzB,EAAsC;AACpC,eAAO,KAAKA,WAAZ;AACD;;AACD,UAAI,KAAK0D,2BAAL,KAAqCxE,KAAK,CAACyE,SAAN,CAAgBC,GAAzD,EAA8D;AAC5D,eAAO,CAACzE,SAAS,CAAC0E,KAAV,CAAgBC,IAAjB,EAAuB3E,SAAS,CAAC0E,KAAV,CAAgBE,IAAvC,EAA6C5E,SAAS,CAAC0E,KAAV,CAAgBG,KAA7D,CAAP;AACD;;AACD,UAAI,KAAKN,2BAAL,KAAqCxE,KAAK,CAACyE,SAAN,CAAgBM,MAAzD,EAAiE;AAC/D,eAAO,CAAC9E,SAAS,CAAC0E,KAAV,CAAgBC,IAAjB,EAAuB3E,SAAS,CAAC0E,KAAV,CAAgBE,IAAvC,EAA6C5E,SAAS,CAAC0E,KAAV,CAAgBK,KAA7D,CAAP;AACD;;AACD,UAAI,KAAKC,6BAAL,KAAuCjF,KAAK,CAACyE,SAAN,CAAgBS,IAA3D,EAAiE;AAC/D,eAAO,CAACjF,SAAS,CAAC0E,KAAV,CAAgBG,KAAjB,EAAwB7E,SAAS,CAAC0E,KAAV,CAAgBK,KAAxC,EAA+C/E,SAAS,CAAC0E,KAAV,CAAgBC,IAA/D,CAAP;AACD;;AACD,UAAI,KAAKK,6BAAL,KAAuCjF,KAAK,CAACyE,SAAN,CAAgBU,KAA3D,EAAkE;AAChE,eAAO,CAAClF,SAAS,CAAC0E,KAAV,CAAgBG,KAAjB,EAAwB7E,SAAS,CAAC0E,KAAV,CAAgBK,KAAxC,EAA+C/E,SAAS,CAAC0E,KAAV,CAAgBE,IAA/D,CAAP;AACD;;AACD,aAAO,KAAK/D,WAAZ;AACD;;;8BAESsE,K,EAAO;AACf,UAAIC,YAAY,GAAG,KAAKC,QAAL,CAAcC,MAAd,CAAqBC,QAAxC;AACA,WAAKF,QAAL,CAAcC,MAAd,CAAqBC,QAArB,GAAgC,KAAhC;AACA,WAAKF,QAAL,CAAcG,gBAAd;AACA,WAAKH,QAAL,CAAcC,MAAd,CAAqBC,QAArB,GAAgCH,YAAhC;;AACA,WAAKK,oBAAL;;AACA,aAAO,KAAP;AACD;AAED;AACF;AACA;;;;6BACWC,iB,EAAmB;AAC1B,gFAAeA,iBAAf;;AACA,UAAI,KAAK9E,SAAT,EAAoB;AAClB,YAAIA,SAAS,GAAG,KAAKiB,UAAL,CAAgB8D,IAAhB,CAAqB,WAArB,CAAhB;AACA/E,QAAAA,SAAS,CAACgF,aAAV,CAAwB,KAAKvC,0BAAL,EAAxB;AACAzC,QAAAA,SAAS,CAACiF,QAAV,CAAmB,KAAK3C,qBAAL,EAAnB;;AACA,aAAKuC,oBAAL;AACD;AACF;AAED;AACF;AACA;;;;sCACoBK,iB,EAAmBC,mB,EAAqB;AACxD,yFAAwBD,iBAAxB,EAA2CC,mBAA3C;;AACA,UAAI,KAAKtC,MAAT,EAAiB;AACf;AACA;AACA,aAAKA,MAAL,CAAYuC,OAAZ,CAAoB,IAApB;AACA,aAAKvC,MAAL,CAAYwC,MAAZ,CAAmB,IAAnB;AACD;AACF;;;2CAEsB;AACrB,UAAI,CAAC,KAAKxC,MAAV,EAAkB;AAChB;AACD;;AACD,UAAIyC,iBAAiB,GAAG,KAAKvC,qBAAL,EAAxB;;AACA,UAAI,CAACuC,iBAAL,EAAwB;AACtB;AACD;;AACD,WAAKzC,MAAL,CAAY0C,WAAZ,CAAwB,uCAAxB;AACA,UAAIvC,SAAS,GAAGxD,QAAQ,CAACyD,IAAT,CAAc,KAAKJ,MAAnB,CAAhB;AACA,UAAI2C,YAAY,GAAGhG,QAAQ,CAACiG,OAAT,CAAiB,KAAK5C,MAAtB,CAAnB;;AACA,UAAI,KAAKK,oBAAL,EAAJ,EAAiC;AAC/B,YAAIwC,mBAAmB,GAAGF,YAAY,CAACrC,GAAb,GAAmBqC,YAAY,CAAClC,MAA1D;AACA,aAAKT,MAAL,CAAYwC,MAAZ,CAAmBC,iBAAiB,CAAClC,CAAlB,IAAuBsC,mBAAmB,GAAG,KAAKzE,UAAL,CAAgB0E,QAAhB,GAA2BxC,GAAjD,GAAwDH,SAAS,CAACK,MAAV,GAAmB,CAAlG,CAAnB;AACD,OAHD,MAGO;AACL,YAAIuC,qBAAqB,GAAGJ,YAAY,CAACjC,IAAb,GAAoBiC,YAAY,CAAC9B,KAA7D;AACA,aAAKb,MAAL,CAAYuC,OAAZ,CAAoBE,iBAAiB,CAAC9B,CAAlB,IAAuBoC,qBAAqB,GAAG,KAAK3E,UAAL,CAAgB0E,QAAhB,GAA2BpC,IAAnD,GAA2DP,SAAS,CAACS,KAAV,GAAkB,CAApG,CAApB;AACD;AACF;;;4CAEuB;AACtB,UAAIoC,YAAY,GAAG,KAAKC,eAAL,EAAnB;AACA,aAAOD,YAAY,GAAGA,YAAY,CAACE,MAAb,EAAH,GAA2B,IAA9C;AACD;;;2CAEsB;AACrB,aAAO1G,KAAK,CAAC2G,OAAN,CAAc,KAAK5B,6BAAnB,EAAkDjF,KAAK,CAACyE,SAAN,CAAgBS,IAAlE,EAAwElF,KAAK,CAACyE,SAAN,CAAgBU,KAAxF,CAAP;AACD;;;+BAEUvE,O,EAAS;AAClB,WAAKwB,WAAL,CAAiB,SAAjB,EAA4BxB,OAA5B;AACD;;;qCAEgB;AACf,UAAI,KAAKA,OAAT,EAAkB;AAChB,YAAI,KAAKQ,WAAT,EAAsB;AACpB;AACD;;AACD,aAAKA,WAAL,GAAmB,KAAKU,UAAL,CAAgBgF,UAAhB,CAA2B,aAA3B,CAAnB;AACA,aAAKhF,UAAL,CAAgBiF,SAAhB,CAA0B,KAAK3F,WAA/B,EAA4ChB,CAAC,CAAC4G,QAAF,CAAW,KAAK3F,YAAhB,EAA8B,OAAO,EAArC,CAA5C,EALgB,CAKuE;AACxF,OAND,MAMO;AACL,YAAI,CAAC,KAAKD,WAAV,EAAuB;AACrB;AACD;;AACD,aAAKU,UAAL,CAAgBmF,WAAhB,CAA4B,KAAK7F,WAAjC;AACA,aAAKA,WAAL,CAAiB8F,MAAjB;AACA,aAAK9F,WAAL,GAAmB,IAAnB;AACA,aAAKkE,QAAL,CAAcC,MAAd,CAAqB4B,YAArB,GAAoC,KAAKzF,iBAAzC;AACA,aAAKA,iBAAL,GAAyB,IAAzB;AACA,aAAKY,oBAAL,GATK,CASwB;AAC9B;AACF;;;4BAEO8E,S,EAAW;AACjB;AACA,UAAI,KAAK1F,iBAAL,KAA2B,IAA/B,EAAqC;AACnC,aAAKA,iBAAL,GAAyB,KAAK4D,QAAL,CAAcC,MAAd,CAAqB4B,YAA9C;AACA,aAAK7B,QAAL,CAAcC,MAAd,CAAqB4B,YAArB,GAAoC,KAApC;AACD;;AACD,WAAKE,OAAL,CAAa,MAAb,EAAqBD,SAArB;AACD;;;+BAEUE,O,EAAS;AAClB,UAAI,KAAK5F,iBAAL,IAA0B4F,OAA1B,IAAqC,KAAKA,OAAL,KAAiBA,OAA1D,EAAmE;AACjE;AACA,aAAKhC,QAAL,CAAcC,MAAd,CAAqB4B,YAArB,GAAoC,KAAKzF,iBAAzC;AACA,aAAKA,iBAAL,GAAyB,IAAzB;AACD;;AACD,kFAAiB4F,OAAjB;AACD;;;;EAvQsCtH,K;;SAApBM,W","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {icons, Insets, Popup, Resizable, scout, WidgetPopupLayout} from '../index';\nimport $ from 'jquery';\nimport graphics from '../layout/graphics';\n\nexport default class WidgetPopup extends Popup {\n\n  constructor() {\n    super();\n    this.animateOpening = true;\n    this.animateResize = true;\n    this.animateRemoval = true;\n    this.closable = false;\n    this.closeAction = null;\n    this.movable = false;\n    this.resizable = false;\n    this.resizeModes = null;\n    this.minSize = null;\n    this.widget = null;\n    this.windowPaddingX = 0;\n    this.windowPaddingY = 0;\n    this.windowResizeType = 'layoutAndPosition';\n    this.$dragHandle = null;\n    this._moveHandler = this._onMove.bind(this);\n    this._resizeHandler = this._onResize.bind(this);\n    this._autoPositionOrig = null;\n    this._addWidgetProperties(['widget']);\n  }\n\n  _createLayout() {\n    return new WidgetPopupLayout(this);\n  }\n\n  _init(model) {\n    super._init(model);\n    this._setClosable(this.closable);\n  }\n\n  _render() {\n    super._render();\n    this.$container.addClass('widget-popup');\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderWidget();\n    this._renderClosable();\n    this._renderMovable();\n    this._renderResizable();\n  }\n\n  _remove() {\n    this.$dragHandle = null;\n    super._remove();\n  }\n\n  setWidget(widget) {\n    this.setProperty('widget', widget);\n  }\n\n  _renderWidget() {\n    if (!this.widget) {\n      return;\n    }\n    this.widget.render();\n    this.widget.$container.addClass('popup-widget');\n    this.invalidateLayoutTree();\n  }\n\n  setClosable(closable) {\n    this.setProperty('closable', closable);\n  }\n\n  _setClosable(closable) {\n    this._setProperty('closable', closable);\n    if (this.closable) {\n      if (this.closeAction) {\n        return;\n      }\n      this.closeAction = this._createCloseAction();\n      this.closeAction.on('action', this._onCloseAction.bind(this));\n    } else {\n      if (!this.closeAction) {\n        return;\n      }\n      this.closeAction.destroy();\n      this.closeAction = null;\n    }\n  }\n\n  _createCloseAction() {\n    return scout.create('Action', {\n      parent: this,\n      cssClass: 'close-action',\n      iconId: icons.REMOVE\n    });\n  }\n\n  _renderClosable() {\n    if (this.closeAction) {\n      this.closeAction.render();\n    }\n  }\n\n  _onCloseAction() {\n    this.close();\n  }\n\n  setResizable(resizable) {\n    this.setProperty('resizable', resizable);\n  }\n\n  _renderResizable() {\n    if (this.resizable) {\n      this.$container\n        .resizable({modes: this._determineResizeModes(), $parent: this.$container, boundaries: this._calculateResizeBoundaries()})\n        .on('resize', this._resizeHandler);\n    } else {\n      this.$container\n        .unresizable()\n        .off('resize', this._resizeHandler);\n      this.invalidateLayoutTree(); // Resize popup to preferred size\n    }\n  }\n\n  _calculateResizeBoundaries() {\n    var resizeBoundaries = new Insets();\n    if (!this.$arrow) {\n      return resizeBoundaries;\n    }\n    var anchorMiddle = this._getAnchorMiddlePoint();\n    if (!anchorMiddle) {\n      return resizeBoundaries;\n    }\n    var arrowSize = graphics.size(this.$arrow);\n    if (this._isVerticallyAligned()) {\n      resizeBoundaries.top = anchorMiddle.y - arrowSize.height;\n      resizeBoundaries.bottom = anchorMiddle.y + arrowSize.height;\n    } else {\n      resizeBoundaries.left = anchorMiddle.x - arrowSize.width;\n      resizeBoundaries.right = anchorMiddle.x + arrowSize.width;\n    }\n    return resizeBoundaries;\n  }\n\n  _determineResizeModes() {\n    if (!this.$arrow || this.resizeModes) {\n      return this.resizeModes;\n    }\n    if (this.calculatedVerticalAlignment === Popup.Alignment.TOP) {\n      return [Resizable.MODES.WEST, Resizable.MODES.EAST, Resizable.MODES.NORTH];\n    }\n    if (this.calculatedVerticalAlignment === Popup.Alignment.BOTTOM) {\n      return [Resizable.MODES.WEST, Resizable.MODES.EAST, Resizable.MODES.SOUTH];\n    }\n    if (this.calculatedHorizontalAlignment === Popup.Alignment.LEFT) {\n      return [Resizable.MODES.NORTH, Resizable.MODES.SOUTH, Resizable.MODES.WEST];\n    }\n    if (this.calculatedHorizontalAlignment === Popup.Alignment.RIGHT) {\n      return [Resizable.MODES.NORTH, Resizable.MODES.SOUTH, Resizable.MODES.EAST];\n    }\n    return this.resizeModes;\n  }\n\n  _onResize(event) {\n    var autoSizeOrig = this.htmlComp.layout.autoSize;\n    this.htmlComp.layout.autoSize = false;\n    this.htmlComp.revalidateLayout();\n    this.htmlComp.layout.autoSize = autoSizeOrig;\n    this._updateArrowPosition();\n    return false;\n  }\n\n  /**\n   * @Override\n   */\n  position(switchIfNecessary) {\n    super.position(switchIfNecessary);\n    if (this.resizable) {\n      var resizable = this.$container.data('resizable');\n      resizable.setBoundaries(this._calculateResizeBoundaries());\n      resizable.setModes(this._determineResizeModes());\n      this._updateArrowPosition();\n    }\n  }\n\n  /**\n   * @Override\n   */\n  _updateArrowClass(verticalAlignment, horizontalAlignment) {\n    super._updateArrowClass(verticalAlignment, horizontalAlignment);\n    if (this.$arrow) {\n      // make sure to remove css positioning which could have been applied in _updateArrowPosition()\n      // otherwise the original positioning functions of popup.js may not work correctly anymore\n      this.$arrow.cssLeft(null);\n      this.$arrow.cssTop(null);\n    }\n  }\n\n  _updateArrowPosition() {\n    if (!this.$arrow) {\n      return;\n    }\n    var anchorMiddlePoint = this._getAnchorMiddlePoint();\n    if (!anchorMiddlePoint) {\n      return;\n    }\n    this.$arrow.removeClass('leftedge rightedge topedge bottomedge');\n    var arrowSize = graphics.size(this.$arrow);\n    var arrowMargins = graphics.margins(this.$arrow);\n    if (this._isVerticallyAligned()) {\n      var verticalMarginShift = arrowMargins.top + arrowMargins.bottom;\n      this.$arrow.cssTop(anchorMiddlePoint.y - (verticalMarginShift + this.$container.position().top + (arrowSize.height / 2)));\n    } else {\n      var horizontalMarginShift = arrowMargins.left + arrowMargins.right;\n      this.$arrow.cssLeft(anchorMiddlePoint.x - (horizontalMarginShift + this.$container.position().left + (arrowSize.width / 2)));\n    }\n  }\n\n  _getAnchorMiddlePoint() {\n    var anchorBounds = this.getAnchorBounds();\n    return anchorBounds ? anchorBounds.center() : null;\n  }\n\n  _isVerticallyAligned() {\n    return scout.isOneOf(this.calculatedHorizontalAlignment, Popup.Alignment.LEFT, Popup.Alignment.RIGHT);\n  }\n\n  setMovable(movable) {\n    this.setProperty('movable', movable);\n  }\n\n  _renderMovable() {\n    if (this.movable) {\n      if (this.$dragHandle) {\n        return;\n      }\n      this.$dragHandle = this.$container.prependDiv('drag-handle');\n      this.$container.draggable(this.$dragHandle, $.throttle(this._moveHandler, 1000 / 60)); // 60fps\n    } else {\n      if (!this.$dragHandle) {\n        return;\n      }\n      this.$container.undraggable(this.$dragHandle);\n      this.$dragHandle.remove();\n      this.$dragHandle = null;\n      this.htmlComp.layout.autoPosition = this._autoPositionOrig;\n      this._autoPositionOrig = null;\n      this.invalidateLayoutTree(); // move popup to preferred position\n    }\n  }\n\n  _onMove(newOffset) {\n    // Disable automatic positioning as soon as the user drags the popup\n    if (this._autoPositionOrig === null) {\n      this._autoPositionOrig = this.htmlComp.layout.autoPosition;\n      this.htmlComp.layout.autoPosition = false;\n    }\n    this.trigger('move', newOffset);\n  }\n\n  set$Anchor($anchor) {\n    if (this._autoPositionOrig && $anchor && this.$anchor !== $anchor) {\n      // If a new anchor is set, the popup is positioned automatically -> reset flag to make animation work\n      this.htmlComp.layout.autoPosition = this._autoPositionOrig;\n      this._autoPositionOrig = null;\n    }\n    super.set$Anchor($anchor);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}