{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { FormField, HtmlComponent, Point, Popup, SingleLayout, TouchPopupLayout, ValueField } from '../index';\n\nvar TouchPopup = /*#__PURE__*/function (_Popup) {\n  _inherits(TouchPopup, _Popup);\n\n  var _super = _createSuper(TouchPopup);\n\n  function TouchPopup() {\n    var _this;\n\n    _classCallCheck(this, TouchPopup);\n\n    _this = _super.call(this); // the original touch field from the form\n\n    _this._touchField = null;\n    _this._touchFieldTooltip = null; // the cloned field from the popup\n\n    _this._field = null; // the widget placed below the field\n\n    _this._widget = null;\n    _this._$widgetContainer = null;\n    _this._widgetContainerHtmlComp = null;\n    _this.windowPaddingX = 0;\n    _this.windowPaddingY = 0;\n    _this.withGlassPane = true;\n    _this._touchFieldPropertyChangeListener = _this._onTouchFieldPropertyChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TouchPopup, [{\n    key: \"_init\",\n    value: function _init(options) {\n      _get(_getPrototypeOf(TouchPopup.prototype), \"_init\", this).call(this, options);\n\n      this._touchField = options.field;\n\n      if (this._touchField._tooltip() && this._touchField._tooltip().rendered) {\n        // Hide existing tooltip to not show it twice (it will be shown on the popup too). It may even throw an exception if the tooltip contains a (not cloned) menu\n        this._touchFieldTooltip = this._touchField._tooltip();\n\n        this._touchFieldTooltip.remove();\n      } // clone original touch field\n      // original and clone both point to the same popup instance\n\n\n      this._field = this._touchField.clone(this._fieldOverrides());\n\n      this._touchField.on('propertyChange', this._touchFieldPropertyChangeListener);\n\n      this._initWidget(options);\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      this._touchField.off('propertyChange', this._touchFieldPropertyChangeListener);\n\n      if (this._touchFieldTooltip && !this._touchFieldTooltip.destroyed) {\n        // Make tooltip visible again if not destroyed in the meantime\n        this._touchFieldTooltip.render(this._touchField._$tooltipParent());\n      }\n\n      _get(_getPrototypeOf(TouchPopup.prototype), \"_destroy\", this).call(this);\n    }\n  }, {\n    key: \"_fieldOverrides\",\n    value: function _fieldOverrides() {\n      return {\n        parent: this,\n        labelPosition: FormField.LabelPosition.ON_FIELD,\n        fieldStyle: FormField.FieldStyle.CLASSIC,\n        popup: this,\n        statusVisible: false,\n        menusVisible: false,\n        // menus don't work (action on clone is not propagated to original, currentMenuTypes is not updated correctly) -> don't show it on popup\n        embedded: true,\n        touchMode: false,\n        clearable: ValueField.Clearable.ALWAYS\n      };\n    }\n  }, {\n    key: \"_initWidget\",\n    value: function _initWidget(options) {// NOP\n    }\n  }, {\n    key: \"_createLayout\",\n    value: function _createLayout() {\n      return new TouchPopupLayout(this);\n    }\n    /**\n     * @override Popup.js\n     */\n\n  }, {\n    key: \"prefLocation\",\n    value: function prefLocation(verticalAlignment, horizontalAlignment) {\n      var popupSize = this.htmlComp.prefSize(),\n          windowWidth = this.$container.window().width(),\n          x = Math.max(this.windowPaddingX, (windowWidth - popupSize.width) / 2);\n      return new Point(x, 0);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent.appendDiv('touch-popup');\n      this._$header = this.$container.appendDiv('touch-popup-header');\n\n      this._$header.appendDiv('status closer touch-popup-close-icon').on('click', this._onCloseIconClick.bind(this));\n\n      this._$header.appendDiv('touch-popup-title').textOrNbsp(this._touchField.label, 'empty');\n\n      this._$widgetContainer = this.$container.appendDiv('touch-popup-widget-container');\n      this._widgetContainerHtmlComp = HtmlComponent.install(this._$widgetContainer, this.session);\n\n      this._widgetContainerHtmlComp.setLayout(new SingleLayout()); // field may render something into the widget container -> render after widget container and move to correct place\n\n\n      this._field.render(); // Move to top\n\n\n      this._field.$container.insertBefore(this._$widgetContainer);\n\n      this._field.$container.addClass('touch-popup-field');\n\n      if (this._widget) {\n        this._widget.render(this._$widgetContainer);\n      }\n\n      this.htmlComp = HtmlComponent.install(this.$container, this.session);\n      this.htmlComp.validateRoot = true;\n      this.htmlComp.setLayout(this._createLayout());\n    }\n  }, {\n    key: \"_onTouchFieldPropertyChange\",\n    value: function _onTouchFieldPropertyChange(event) {\n      if (event.propertyName === 'errorStatus') {\n        this._field.setErrorStatus(event.newValue);\n      } else if (event.propertyName === 'lookupRow') {\n        this._field.setLookupRow(event.newValue);\n      }\n    }\n    /**\n     * Calls accept input on the embedded field.\n     */\n\n  }, {\n    key: \"_acceptInput\",\n    value: function _acceptInput() {\n      var promise = this._field.acceptInput();\n\n      if (promise) {\n        promise.always(this.close.bind(this));\n      } else {\n        this.close();\n      }\n    }\n  }, {\n    key: \"_onCloseIconClick\",\n    value: function _onCloseIconClick(event) {\n      this._acceptInput();\n    }\n  }]);\n\n  return TouchPopup;\n}(Popup);\n\nexport { TouchPopup as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/popup/TouchPopup.js"],"names":["FormField","HtmlComponent","Point","Popup","SingleLayout","TouchPopupLayout","ValueField","TouchPopup","_touchField","_touchFieldTooltip","_field","_widget","_$widgetContainer","_widgetContainerHtmlComp","windowPaddingX","windowPaddingY","withGlassPane","_touchFieldPropertyChangeListener","_onTouchFieldPropertyChange","bind","options","field","_tooltip","rendered","remove","clone","_fieldOverrides","on","_initWidget","off","destroyed","render","_$tooltipParent","parent","labelPosition","LabelPosition","ON_FIELD","fieldStyle","FieldStyle","CLASSIC","popup","statusVisible","menusVisible","embedded","touchMode","clearable","Clearable","ALWAYS","verticalAlignment","horizontalAlignment","popupSize","htmlComp","prefSize","windowWidth","$container","window","width","x","Math","max","$parent","appendDiv","_$header","_onCloseIconClick","textOrNbsp","label","install","session","setLayout","insertBefore","addClass","validateRoot","_createLayout","event","propertyName","setErrorStatus","newValue","setLookupRow","promise","acceptInput","always","close","_acceptInput"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {FormField, HtmlComponent, Point, Popup, SingleLayout, TouchPopupLayout, ValueField} from '../index';\n\nexport default class TouchPopup extends Popup {\n\n  constructor() {\n    super();\n\n    // the original touch field from the form\n    this._touchField = null;\n    this._touchFieldTooltip = null;\n    // the cloned field from the popup\n    this._field = null;\n    // the widget placed below the field\n    this._widget = null;\n    this._$widgetContainer = null;\n    this._widgetContainerHtmlComp = null;\n    this.windowPaddingX = 0;\n    this.windowPaddingY = 0;\n    this.withGlassPane = true;\n    this._touchFieldPropertyChangeListener = this._onTouchFieldPropertyChange.bind(this);\n  }\n\n  _init(options) {\n    super._init(options);\n    this._touchField = options.field;\n    if (this._touchField._tooltip() && this._touchField._tooltip().rendered) {\n      // Hide existing tooltip to not show it twice (it will be shown on the popup too). It may even throw an exception if the tooltip contains a (not cloned) menu\n      this._touchFieldTooltip = this._touchField._tooltip();\n      this._touchFieldTooltip.remove();\n    }\n\n    // clone original touch field\n    // original and clone both point to the same popup instance\n    this._field = this._touchField.clone(this._fieldOverrides());\n    this._touchField.on('propertyChange', this._touchFieldPropertyChangeListener);\n    this._initWidget(options);\n  }\n\n  _destroy() {\n    this._touchField.off('propertyChange', this._touchFieldPropertyChangeListener);\n    if (this._touchFieldTooltip && !this._touchFieldTooltip.destroyed) {\n      // Make tooltip visible again if not destroyed in the meantime\n      this._touchFieldTooltip.render(this._touchField._$tooltipParent());\n    }\n    super._destroy();\n  }\n\n  _fieldOverrides() {\n    return {\n      parent: this,\n      labelPosition: FormField.LabelPosition.ON_FIELD,\n      fieldStyle: FormField.FieldStyle.CLASSIC,\n      popup: this,\n      statusVisible: false,\n      menusVisible: false, // menus don't work (action on clone is not propagated to original, currentMenuTypes is not updated correctly) -> don't show it on popup\n      embedded: true,\n      touchMode: false,\n      clearable: ValueField.Clearable.ALWAYS\n    };\n  }\n\n  _initWidget(options) {\n    // NOP\n  }\n\n  _createLayout() {\n    return new TouchPopupLayout(this);\n  }\n\n  /**\n   * @override Popup.js\n   */\n  prefLocation(verticalAlignment, horizontalAlignment) {\n    var popupSize = this.htmlComp.prefSize(),\n      windowWidth = this.$container.window().width(),\n      x = Math.max(this.windowPaddingX, (windowWidth - popupSize.width) / 2);\n    return new Point(x, 0);\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('touch-popup');\n\n    this._$header = this.$container.appendDiv('touch-popup-header');\n    this._$header\n      .appendDiv('status closer touch-popup-close-icon')\n      .on('click', this._onCloseIconClick.bind(this));\n    this._$header.appendDiv('touch-popup-title').textOrNbsp(this._touchField.label, 'empty');\n\n    this._$widgetContainer = this.$container.appendDiv('touch-popup-widget-container');\n    this._widgetContainerHtmlComp = HtmlComponent.install(this._$widgetContainer, this.session);\n    this._widgetContainerHtmlComp.setLayout(new SingleLayout());\n\n    // field may render something into the widget container -> render after widget container and move to correct place\n    this._field.render();\n\n    // Move to top\n    this._field.$container.insertBefore(this._$widgetContainer);\n    this._field.$container.addClass('touch-popup-field');\n\n    if (this._widget) {\n      this._widget.render(this._$widgetContainer);\n    }\n\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.validateRoot = true;\n    this.htmlComp.setLayout(this._createLayout());\n  }\n\n  _onTouchFieldPropertyChange(event) {\n    if (event.propertyName === 'errorStatus') {\n      this._field.setErrorStatus(event.newValue);\n    } else if (event.propertyName === 'lookupRow') {\n      this._field.setLookupRow(event.newValue);\n    }\n  }\n\n  /**\n   * Calls accept input on the embedded field.\n   */\n  _acceptInput() {\n    var promise = this._field.acceptInput();\n    if (promise) {\n      promise.always(this.close.bind(this));\n    } else {\n      this.close();\n    }\n  }\n\n  _onCloseIconClick(event) {\n    this._acceptInput();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}