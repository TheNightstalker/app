{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Key, KeyStroke } from '../index';\n/**\n * KeyStroke which is bound to a range of keys, e.g. ctrl-1 ... ctrl-9.\n */\n\nvar RangeKeyStroke = /*#__PURE__*/function (_KeyStroke) {\n  _inherits(RangeKeyStroke, _KeyStroke);\n\n  var _super = _createSuper(RangeKeyStroke);\n\n  function RangeKeyStroke() {\n    var _this;\n\n    _classCallCheck(this, RangeKeyStroke);\n\n    _this = _super.call(this);\n    _this.ranges = [];\n    return _this;\n  }\n\n  _createClass(RangeKeyStroke, [{\n    key: \"registerRange\",\n    value: function registerRange(from, to) {\n      this.ranges.push({\n        from: from,\n        to: to\n      });\n    }\n    /**\n     * @override KeyStroke.js\n     */\n\n  }, {\n    key: \"_accept\",\n    value: function _accept(event) {\n      // event.ctrlKey||event.metaKey  --> some keystrokes with ctrl modifier are captured and suppressed by osx use in this cases command key\n      if ((event.ctrlKey || event.metaKey) !== this.ctrl || event.altKey !== this.alt || event.shiftKey !== this.shift) {\n        return false;\n      }\n\n      return this.ranges.some(function (range) {\n        return event.which >= this._getRangeFrom(range) && event.which <= this._getRangeTo(range);\n      }, this);\n    }\n    /**\n     * @override KeyStroke.js\n     */\n\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      var keys = [];\n      this.ranges.forEach(function (range) {\n        var from = this._getRangeFrom(range);\n\n        var to = this._getRangeTo(range);\n\n        for (var which = from; which <= to; which++) {\n          keys.push(new Key(this, which));\n        }\n      }, this);\n      return keys;\n    }\n  }, {\n    key: \"_getRangeFrom\",\n    value: function _getRangeFrom(range) {\n      return typeof range.from === 'function' ? range.from() : range.from;\n    }\n  }, {\n    key: \"_getRangeTo\",\n    value: function _getRangeTo(range) {\n      return typeof range.to === 'function' ? range.to() : range.to;\n    }\n  }]);\n\n  return RangeKeyStroke;\n}(KeyStroke);\n\nexport { RangeKeyStroke as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/keystroke/RangeKeyStroke.js"],"names":["Key","KeyStroke","RangeKeyStroke","ranges","from","to","push","event","ctrlKey","metaKey","ctrl","altKey","alt","shiftKey","shift","some","range","which","_getRangeFrom","_getRangeTo","keys","forEach"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,GAAR,EAAaC,SAAb,QAA6B,UAA7B;AAEA;AACA;AACA;;IACqBC,c;;;;;AAEnB,4BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,MAAL,GAAc,EAAd;AAFY;AAGb;;;;kCAEaC,I,EAAMC,E,EAAI;AACtB,WAAKF,MAAL,CAAYG,IAAZ,CAAiB;AACfF,QAAAA,IAAI,EAAEA,IADS;AAEfC,QAAAA,EAAE,EAAEA;AAFW,OAAjB;AAID;AAED;AACF;AACA;;;;4BACUE,K,EAAO;AACb;AACA,UAAI,CAACA,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,OAAxB,MAAqC,KAAKC,IAA1C,IACFH,KAAK,CAACI,MAAN,KAAiB,KAAKC,GADpB,IAEFL,KAAK,CAACM,QAAN,KAAmB,KAAKC,KAF1B,EAGE;AACA,eAAO,KAAP;AACD;;AAED,aAAO,KAAKX,MAAL,CAAYY,IAAZ,CAAiB,UAASC,KAAT,EAAgB;AACtC,eAAOT,KAAK,CAACU,KAAN,IAAe,KAAKC,aAAL,CAAmBF,KAAnB,CAAf,IAA4CT,KAAK,CAACU,KAAN,IAAe,KAAKE,WAAL,CAAiBH,KAAjB,CAAlE;AACD,OAFM,EAEJ,IAFI,CAAP;AAGD;AAED;AACF;AACA;;;;2BACS;AACL,UAAII,IAAI,GAAG,EAAX;AACA,WAAKjB,MAAL,CAAYkB,OAAZ,CAAoB,UAASL,KAAT,EAAgB;AAClC,YAAIZ,IAAI,GAAG,KAAKc,aAAL,CAAmBF,KAAnB,CAAX;;AACA,YAAIX,EAAE,GAAG,KAAKc,WAAL,CAAiBH,KAAjB,CAAT;;AAEA,aAAK,IAAIC,KAAK,GAAGb,IAAjB,EAAuBa,KAAK,IAAIZ,EAAhC,EAAoCY,KAAK,EAAzC,EAA6C;AAC3CG,UAAAA,IAAI,CAACd,IAAL,CAAU,IAAIN,GAAJ,CAAQ,IAAR,EAAciB,KAAd,CAAV;AACD;AACF,OAPD,EAOG,IAPH;AASA,aAAOG,IAAP;AACD;;;kCAEaJ,K,EAAO;AACnB,aAAQ,OAAOA,KAAK,CAACZ,IAAb,KAAsB,UAAtB,GAAmCY,KAAK,CAACZ,IAAN,EAAnC,GAAkDY,KAAK,CAACZ,IAAhE;AACD;;;gCAEWY,K,EAAO;AACjB,aAAQ,OAAOA,KAAK,CAACX,EAAb,KAAoB,UAApB,GAAiCW,KAAK,CAACX,EAAN,EAAjC,GAA8CW,KAAK,CAACX,EAA5D;AACD;;;;EAtDyCJ,S;;SAAvBC,c","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Key, KeyStroke} from '../index';\n\n/**\n * KeyStroke which is bound to a range of keys, e.g. ctrl-1 ... ctrl-9.\n */\nexport default class RangeKeyStroke extends KeyStroke {\n\n  constructor() {\n    super();\n    this.ranges = [];\n  }\n\n  registerRange(from, to) {\n    this.ranges.push({\n      from: from,\n      to: to\n    });\n  }\n\n  /**\n   * @override KeyStroke.js\n   */\n  _accept(event) {\n    // event.ctrlKey||event.metaKey  --> some keystrokes with ctrl modifier are captured and suppressed by osx use in this cases command key\n    if ((event.ctrlKey || event.metaKey) !== this.ctrl ||\n      event.altKey !== this.alt ||\n      event.shiftKey !== this.shift\n    ) {\n      return false;\n    }\n\n    return this.ranges.some(function(range) {\n      return event.which >= this._getRangeFrom(range) && event.which <= this._getRangeTo(range);\n    }, this);\n  }\n\n  /**\n   * @override KeyStroke.js\n   */\n  keys() {\n    var keys = [];\n    this.ranges.forEach(function(range) {\n      var from = this._getRangeFrom(range);\n      var to = this._getRangeTo(range);\n\n      for (var which = from; which <= to; which++) {\n        keys.push(new Key(this, which));\n      }\n    }, this);\n\n    return keys;\n  }\n\n  _getRangeFrom(range) {\n    return (typeof range.from === 'function' ? range.from() : range.from);\n  }\n\n  _getRangeTo(range) {\n    return (typeof range.to === 'function' ? range.to() : range.to);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}