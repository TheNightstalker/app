{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nvar WidgetEventTypeFilter = /*#__PURE__*/function () {\n  function WidgetEventTypeFilter() {\n    _classCallCheck(this, WidgetEventTypeFilter);\n\n    this.filters = [];\n  }\n\n  _createClass(WidgetEventTypeFilter, [{\n    key: \"addFilter\",\n    value: function addFilter(filterFunc) {\n      this.filters.push(filterFunc);\n    }\n  }, {\n    key: \"addFilterForEventType\",\n    value: function addFilterForEventType(eventType) {\n      this.filters.push(function (event) {\n        return event.type === eventType;\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(event) {\n      return this.filters.some(function (filterFunc) {\n        return filterFunc(event);\n      });\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.filters = [];\n    }\n  }]);\n\n  return WidgetEventTypeFilter;\n}();\n\nexport { WidgetEventTypeFilter as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/session/WidgetEventTypeFilter.js"],"names":["WidgetEventTypeFilter","filters","filterFunc","push","eventType","event","type","some"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACqBA,qB;AAEnB,mCAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,EAAf;AACD;;;;8BAESC,U,EAAY;AACpB,WAAKD,OAAL,CAAaE,IAAb,CAAkBD,UAAlB;AACD;;;0CAEqBE,S,EAAW;AAC/B,WAAKH,OAAL,CAAaE,IAAb,CAAkB,UAASE,KAAT,EAAgB;AAChC,eAAOA,KAAK,CAACC,IAAN,KAAeF,SAAtB;AACD,OAFD;AAGD;;;2BAEMC,K,EAAO;AACZ,aAAO,KAAKJ,OAAL,CAAaM,IAAb,CAAkB,UAASL,UAAT,EAAqB;AAC5C,eAAOA,UAAU,CAACG,KAAD,CAAjB;AACD,OAFM,CAAP;AAGD;;;4BAEO;AACN,WAAKJ,OAAL,GAAe,EAAf;AACD;;;;;;SAxBkBD,qB","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nexport default class WidgetEventTypeFilter {\n\n  constructor() {\n    this.filters = [];\n  }\n\n  addFilter(filterFunc) {\n    this.filters.push(filterFunc);\n  }\n\n  addFilterForEventType(eventType) {\n    this.filters.push(function(event) {\n      return event.type === eventType;\n    });\n  }\n\n  filter(event) {\n    return this.filters.some(function(filterFunc) {\n      return filterFunc(event);\n    });\n  }\n\n  reset() {\n    this.filters = [];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}