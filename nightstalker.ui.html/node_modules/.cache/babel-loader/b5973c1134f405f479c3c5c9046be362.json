{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { BackgroundJobPollingStatus } from '../index';\n\nvar BackgroundJobPollingSupport = /*#__PURE__*/function () {\n  function BackgroundJobPollingSupport(enabled) {\n    _classCallCheck(this, BackgroundJobPollingSupport);\n\n    this.enabled = !!enabled;\n    this.status = BackgroundJobPollingStatus.STOPPED;\n  }\n\n  _createClass(BackgroundJobPollingSupport, [{\n    key: \"setFailed\",\n    value: function setFailed() {\n      this.status = BackgroundJobPollingStatus.FAILURE;\n    }\n  }, {\n    key: \"setRunning\",\n    value: function setRunning() {\n      this.status = BackgroundJobPollingStatus.RUNNING;\n    }\n  }, {\n    key: \"setStopped\",\n    value: function setStopped() {\n      this.status = BackgroundJobPollingStatus.STOPPED;\n    }\n  }, {\n    key: \"isFailed\",\n    value: function isFailed() {\n      return this.status === BackgroundJobPollingStatus.FAILURE;\n    }\n  }, {\n    key: \"isRunning\",\n    value: function isRunning() {\n      return this.status === BackgroundJobPollingStatus.RUNNING;\n    }\n  }, {\n    key: \"isStopped\",\n    value: function isStopped() {\n      return this.status === BackgroundJobPollingStatus.STOPPED;\n    }\n  }]);\n\n  return BackgroundJobPollingSupport;\n}();\n\nexport { BackgroundJobPollingSupport as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/session/BackgroundJobPollingSupport.js"],"names":["BackgroundJobPollingStatus","BackgroundJobPollingSupport","enabled","status","STOPPED","FAILURE","RUNNING"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,0BAAR,QAAyC,UAAzC;;IAEqBC,2B;AAEnB,uCAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKA,OAAL,GAAe,CAAC,CAACA,OAAjB;AACA,SAAKC,MAAL,GAAcH,0BAA0B,CAACI,OAAzC;AACD;;;;gCAEW;AACV,WAAKD,MAAL,GAAcH,0BAA0B,CAACK,OAAzC;AACD;;;iCAEY;AACX,WAAKF,MAAL,GAAcH,0BAA0B,CAACM,OAAzC;AACD;;;iCAEY;AACX,WAAKH,MAAL,GAAcH,0BAA0B,CAACI,OAAzC;AACD;;;+BAEU;AACT,aAAQ,KAAKD,MAAL,KAAgBH,0BAA0B,CAACK,OAAnD;AACD;;;gCAEW;AACV,aAAQ,KAAKF,MAAL,KAAgBH,0BAA0B,CAACM,OAAnD;AACD;;;gCAEW;AACV,aAAQ,KAAKH,MAAL,KAAgBH,0BAA0B,CAACI,OAAnD;AACD;;;;;;SA7BkBH,2B","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {BackgroundJobPollingStatus} from '../index';\n\nexport default class BackgroundJobPollingSupport {\n\n  constructor(enabled) {\n    this.enabled = !!enabled;\n    this.status = BackgroundJobPollingStatus.STOPPED;\n  }\n\n  setFailed() {\n    this.status = BackgroundJobPollingStatus.FAILURE;\n  }\n\n  setRunning() {\n    this.status = BackgroundJobPollingStatus.RUNNING;\n  }\n\n  setStopped() {\n    this.status = BackgroundJobPollingStatus.STOPPED;\n  }\n\n  isFailed() {\n    return (this.status === BackgroundJobPollingStatus.FAILURE);\n  }\n\n  isRunning() {\n    return (this.status === BackgroundJobPollingStatus.RUNNING);\n  }\n\n  isStopped() {\n    return (this.status === BackgroundJobPollingStatus.STOPPED);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}