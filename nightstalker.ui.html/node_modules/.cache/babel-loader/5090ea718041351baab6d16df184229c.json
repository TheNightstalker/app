{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Form, graphics, keys, scout, scrollbars, Status, strings, Widget } from '../index';\nimport $ from 'jquery';\n\nvar Tooltip = /*#__PURE__*/function (_Widget) {\n  _inherits(Tooltip, _Widget);\n\n  var _super = _createSuper(Tooltip);\n\n  function Tooltip() {\n    var _this;\n\n    _classCallCheck(this, Tooltip);\n\n    _this = _super.call(this);\n    /**\n     * Either a String or a function which returns a String\n     */\n\n    _this.text = null;\n    _this.arrowPosition = 25;\n    _this.arrowPositionUnit = '%';\n    _this.windowPaddingX = 10;\n    _this.windowPaddingY = 5;\n    _this.origin = null;\n    /**\n     * When the origin point is calculated using $element.offset(),\n     * the result is absolute to the window. When positioning the tooltip, the $parent's offset must\n     * be subtracted. When the given origin is already relative to the parent, set this option to\n     * \"true\" to disable this additional calculation.\n     */\n\n    _this.originRelativeToParent = false;\n    _this.$anchor = null;\n    _this.autoRemove = true;\n    _this.tooltipPosition = 'top';\n    _this.scrollType = 'position';\n    _this.htmlEnabled = false;\n    _this.$content = null;\n    _this.menus = [];\n\n    _this._addWidgetProperties(['menus']);\n\n    _this._openLater = false;\n    return _this;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"render\",\n    value: function render($parent) {\n      // Use entry point by default\n      var $tooltipParent = $parent || this.entryPoint(); // when the parent is detached it is not possible to render the popup -> do it later\n\n      if (!$tooltipParent || !$tooltipParent.length || !$tooltipParent.isAttached()) {\n        this._openLater = true;\n        this.$parent = $tooltipParent;\n        return;\n      }\n\n      _get(_getPrototypeOf(Tooltip.prototype), \"render\", this).call(this, $tooltipParent);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent.appendDiv('tooltip').data('tooltip', this);\n\n      if (this.cssClass) {\n        this.$container.addClass(this.cssClass);\n      }\n\n      this.$arrow = this.$container.appendDiv('tooltip-arrow');\n      this.$content = this.$container.appendDiv('tooltip-content');\n\n      this._renderText();\n\n      this._renderSeverity();\n\n      this._renderMenus();\n\n      if (this.autoRemove) {\n        // Every user action will remove the tooltip\n        this._mouseDownHandler = this._onDocumentMouseDown.bind(this); // The listener needs to be executed in the capturing phase -> Allows for having context menus inside the tooltip, otherwise click on context menu header would close the tooltip\n\n        this.$container.document(true).addEventListener('mousedown', this._mouseDownHandler, true); // true=the event handler is executed in the capturing phase\n\n        this._keydownHandler = this._onDocumentKeyDown.bind(this);\n        this.$container.document().on('keydown', this._keydownHandler);\n      }\n\n      if (this.$anchor && this.scrollType) {\n        this._anchorScrollHandler = this._onAnchorScroll.bind(this);\n        scrollbars.onScroll(this.$anchor, this._anchorScrollHandler);\n      } // If the tooltip is rendered inside a (popup) dialog, get a reference to the dialog.\n\n\n      this.dialog = null;\n      var parent = this.parent;\n\n      while (parent) {\n        if (parent instanceof Form && parent.isDialog()) {\n          this.dialog = parent;\n          break;\n        }\n\n        parent = parent.parent;\n      } // If inside a dialog, attach a listener to reposition the tooltip when the dialog is moved\n\n\n      if (this.dialog) {\n        this._moveHandler = this.position.bind(this);\n        this.dialog.on('move', this._moveHandler);\n      }\n    }\n  }, {\n    key: \"_postRender\",\n    value: function _postRender() {\n      _get(_getPrototypeOf(Tooltip.prototype), \"_postRender\", this).call(this);\n\n      this.position();\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      if (this._mouseDownHandler) {\n        this.$container.document(true).removeEventListener('mousedown', this._mouseDownHandler, true);\n        this._mouseDownHandler = null;\n      }\n\n      if (this._keydownHandler) {\n        this.$container.document().off('keydown', this._keydownHandler);\n        this._keydownHandler = null;\n      }\n\n      if (this._anchorScrollHandler) {\n        scrollbars.offScroll(this._anchorScrollHandler);\n        this._anchorScrollHandler = null;\n      }\n\n      if (this._moveHandler) {\n        if (this.dialog) {\n          this.dialog.off('move', this._moveHandler);\n        }\n\n        this._moveHandler = null;\n      }\n\n      this.dialog = null;\n      this.$menus = null;\n\n      _get(_getPrototypeOf(Tooltip.prototype), \"_remove\", this).call(this);\n    }\n  }, {\n    key: \"_onAttach\",\n    value: function _onAttach() {\n      _get(_getPrototypeOf(Tooltip.prototype), \"_onAttach\", this).call(this);\n\n      if (this._openLater && !this.rendered) {\n        this._openLater = false;\n        this.render();\n      }\n    }\n  }, {\n    key: \"_renderOnDetach\",\n    value: function _renderOnDetach() {\n      this._openLater = true;\n      this.remove();\n\n      _get(_getPrototypeOf(Tooltip.prototype), \"_onDetach\", this).call(this);\n    }\n  }, {\n    key: \"_isRemovalPrevented\",\n    value: function _isRemovalPrevented() {\n      // Never prevent. Default returns true if removal is pending by an animation, but tooltips should be closed before the animation starts\n      return false;\n    }\n  }, {\n    key: \"setText\",\n    value: function setText(text) {\n      this.setProperty('text', text);\n    }\n  }, {\n    key: \"setSeverity\",\n    value: function setSeverity(severity) {\n      this.setProperty('severity', severity);\n    }\n  }, {\n    key: \"_renderText\",\n    value: function _renderText() {\n      var text = this.text || '';\n\n      if (this.htmlEnabled) {\n        this.$content.html(text);\n      } else {\n        // use nl2br to allow tooltips with line breaks\n        this.$content.html(strings.nl2br(text));\n      }\n\n      this.$content.setVisible(!!text);\n      this.$container.toggleClass('no-text', !text);\n\n      if (!this.rendering) {\n        this.position();\n      }\n    }\n  }, {\n    key: \"_renderSeverity\",\n    value: function _renderSeverity() {\n      this.$container.removeClass(Status.SEVERITY_CSS_CLASSES);\n      this.$container.addClass(Status.cssClassForSeverity(this.severity));\n    }\n  }, {\n    key: \"setMenus\",\n    value: function setMenus(menus) {\n      menus = arrays.ensure(menus);\n      this.setProperty('menus', menus);\n    }\n  }, {\n    key: \"_renderMenus\",\n    value: function _renderMenus() {\n      var maxIconWidth = 0,\n          menus = this.menus;\n\n      if (menus.length > 0 && !this.$menus) {\n        this.$menus = this.$container.appendDiv('tooltip-menus');\n      } else if (menus.length === 0 && this.$menus) {\n        this.$menus.remove();\n        this.$menus = null;\n      } // Render menus\n\n\n      menus.forEach(function (menu) {\n        var iconWidth = 0;\n        menu.render(this.$menus);\n\n        if (menu.iconId) {\n          iconWidth = menu.get$Icon().outerWidth(true);\n          maxIconWidth = Math.max(iconWidth, maxIconWidth);\n        }\n      }, this); // Align menus if there is one with an icon\n\n      if (maxIconWidth > 0) {\n        menus.forEach(function (menu) {\n          if (!menu.iconId) {\n            menu.$text.cssPaddingLeft(maxIconWidth);\n          } else {\n            menu.$text.cssPaddingLeft(maxIconWidth - menu.get$Icon().outerWidth(true));\n          }\n        }, this);\n      }\n\n      if (!this.rendering) {\n        this.position();\n      }\n    }\n  }, {\n    key: \"position\",\n    value: function position() {\n      var top, left, arrowSize, overlapX, overlapY, x, y, origin, tooltipWidth, tooltipHeight, arrowDivWidth, arrowPosition, inView;\n\n      if (this.origin) {\n        origin = this.origin;\n        x = origin.x;\n      } else {\n        origin = graphics.offsetBounds(this.$anchor);\n        x = origin.x + origin.width / 2;\n      }\n\n      y = origin.y;\n\n      if (this.$anchor) {\n        // Sticky tooltip must only be visible if the location where the tooltip points is in view (prevents that the tooltip points at an invisible anchor)\n        inView = scrollbars.isLocationInView(origin, this.$anchor.scrollParent());\n        this.$container.setVisible(inView);\n      } // this.$parent might not be at (0,0) of the document\n\n\n      if (!this.originRelativeToParent) {\n        var parentOffset = this.$parent.offset();\n        x -= parentOffset.left;\n        y -= parentOffset.top;\n      }\n\n      arrowDivWidth = this.$arrow.outerWidth(); // Arrow is a div rotated by 45 deg -> visible height is half the div\n\n      arrowSize = Tooltip.computeHypotenuse(arrowDivWidth) / 2;\n      tooltipHeight = this.$container.outerHeight();\n      tooltipWidth = this.$container.outerWidth(); // Compute actual arrow position if position is provided in percentage\n\n      arrowPosition = this.arrowPosition;\n\n      if (this.arrowPositionUnit === '%') {\n        arrowPosition = tooltipWidth * this.arrowPosition / 100;\n      }\n\n      top = y - tooltipHeight - arrowSize;\n      left = x - arrowPosition;\n      overlapX = left + tooltipWidth + this.windowPaddingX - this.$parent.width();\n      overlapY = top - this.windowPaddingY; // Move tooltip to the left until it gets fully visible\n\n      if (overlapX > 0) {\n        left -= overlapX;\n        arrowPosition = x - left;\n      } // Move tooltip to the bottom, arrow on top\n\n\n      this.$arrow.removeClass('arrow-top arrow-bottom');\n\n      if (this.tooltipPosition === 'bottom' || overlapY < 0) {\n        this.$arrow.addClass('arrow-top');\n        top = y + origin.height + arrowSize;\n      } else {\n        this.$arrow.addClass('arrow-bottom');\n      } // Make sure arrow is never positioned outside of the tooltip\n\n\n      arrowPosition = Math.min(arrowPosition, this.$container.outerWidth() - arrowSize);\n      arrowPosition = Math.max(arrowPosition, arrowSize);\n      this.$arrow.cssLeft(arrowPosition);\n      this.$container.cssLeft(left).cssTop(top); // If there are menu popups make sure they are positioned correctly\n\n      this.menus.forEach(function (menu) {\n        if (menu.popup) {\n          menu.popup.position();\n        }\n      }, this);\n    }\n  }, {\n    key: \"_onAnchorScroll\",\n    value: function _onAnchorScroll(event) {\n      if (!this.rendered) {\n        // Scroll events may be fired delayed, even if scroll listener are already removed.\n        return;\n      }\n\n      if (this.scrollType === 'position') {\n        this.position();\n      } else if (this.scrollType === 'remove') {\n        this.destroy();\n      }\n    }\n  }, {\n    key: \"_onDocumentMouseDown\",\n    value: function _onDocumentMouseDown(event) {\n      if (!this.rendered) {\n        return false;\n      }\n\n      if (this._isMouseDownOutside(event)) {\n        this._onMouseDownOutside(event);\n      }\n    }\n  }, {\n    key: \"_isMouseDownOutside\",\n    value: function _isMouseDownOutside(event) {\n      var $target = $(event.target),\n          targetWidget = scout.widget($target); // Only remove the tooltip if the click is outside of the container or the $anchor (= status icon)\n      // Also ignore clicks if the tooltip is covert by a glasspane\n\n      return !this.isOrHas(targetWidget) && this.$anchor && !this.$anchor.isOrHas($target[0]) && !this.session.focusManager.isElementCovertByGlassPane(this.$container[0]);\n    }\n    /**\n     * Method invoked once a mouse down event occurs outside the tooltip.\n     */\n\n  }, {\n    key: \"_onMouseDownOutside\",\n    value: function _onMouseDownOutside() {\n      this.destroy();\n    }\n  }, {\n    key: \"_onDocumentKeyDown\",\n    value: function _onDocumentKeyDown(event) {\n      if (scout.isOneOf(event.which, keys.CTRL, keys.SHIFT, keys.ALT, keys.NUM_LOCK, keys.CAPS_LOCK, keys.SCROLL_LOCK, keys.WIN_LEFT, keys.WIN_RIGHT, keys.SELECT, keys.PAUSE, keys.PRINT_SCREEN)) {\n        return;\n      }\n\n      this.destroy();\n    }\n    /* --- STATIC HELPERS ------------------------------------------------------------- */\n\n    /**\n     * @memberOf Tooltip\n     */\n\n  }], [{\n    key: \"computeHypotenuse\",\n    value: function computeHypotenuse(x) {\n      return Math.sqrt(Math.pow(x, 2) + Math.pow(x, 2));\n    }\n  }]);\n\n  return Tooltip;\n}(Widget);\n\nexport { Tooltip as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/tooltip/Tooltip.js"],"names":["arrays","Form","graphics","keys","scout","scrollbars","Status","strings","Widget","$","Tooltip","text","arrowPosition","arrowPositionUnit","windowPaddingX","windowPaddingY","origin","originRelativeToParent","$anchor","autoRemove","tooltipPosition","scrollType","htmlEnabled","$content","menus","_addWidgetProperties","_openLater","$parent","$tooltipParent","entryPoint","length","isAttached","$container","appendDiv","data","cssClass","addClass","$arrow","_renderText","_renderSeverity","_renderMenus","_mouseDownHandler","_onDocumentMouseDown","bind","document","addEventListener","_keydownHandler","_onDocumentKeyDown","on","_anchorScrollHandler","_onAnchorScroll","onScroll","dialog","parent","isDialog","_moveHandler","position","removeEventListener","off","offScroll","$menus","rendered","render","remove","setProperty","severity","html","nl2br","setVisible","toggleClass","rendering","removeClass","SEVERITY_CSS_CLASSES","cssClassForSeverity","ensure","maxIconWidth","forEach","menu","iconWidth","iconId","get$Icon","outerWidth","Math","max","$text","cssPaddingLeft","top","left","arrowSize","overlapX","overlapY","x","y","tooltipWidth","tooltipHeight","arrowDivWidth","inView","offsetBounds","width","isLocationInView","scrollParent","parentOffset","offset","computeHypotenuse","outerHeight","height","min","cssLeft","cssTop","popup","event","destroy","_isMouseDownOutside","_onMouseDownOutside","$target","target","targetWidget","widget","isOrHas","session","focusManager","isElementCovertByGlassPane","isOneOf","which","CTRL","SHIFT","ALT","NUM_LOCK","CAPS_LOCK","SCROLL_LOCK","WIN_LEFT","WIN_RIGHT","SELECT","PAUSE","PRINT_SCREEN","sqrt","pow"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Form, graphics, keys, scout, scrollbars, Status, strings, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class Tooltip extends Widget {\n\n  constructor() {\n    super();\n\n    /**\n     * Either a String or a function which returns a String\n     */\n    this.text = null;\n\n    this.arrowPosition = 25;\n    this.arrowPositionUnit = '%';\n    this.windowPaddingX = 10;\n    this.windowPaddingY = 5;\n    this.origin = null;\n\n    /**\n     * When the origin point is calculated using $element.offset(),\n     * the result is absolute to the window. When positioning the tooltip, the $parent's offset must\n     * be subtracted. When the given origin is already relative to the parent, set this option to\n     * \"true\" to disable this additional calculation.\n     */\n    this.originRelativeToParent = false;\n    this.$anchor = null;\n    this.autoRemove = true;\n    this.tooltipPosition = 'top';\n    this.scrollType = 'position';\n    this.htmlEnabled = false;\n    this.$content = null;\n    this.menus = [];\n    this._addWidgetProperties(['menus']);\n\n    this._openLater = false;\n  }\n\n  render($parent) {\n    // Use entry point by default\n    var $tooltipParent = $parent || this.entryPoint();\n    // when the parent is detached it is not possible to render the popup -> do it later\n    if (!$tooltipParent || !$tooltipParent.length || !$tooltipParent.isAttached()) {\n      this._openLater = true;\n      this.$parent = $tooltipParent;\n      return;\n    }\n    super.render($tooltipParent);\n  }\n\n  _render() {\n    this.$container = this.$parent\n      .appendDiv('tooltip')\n      .data('tooltip', this);\n\n    if (this.cssClass) {\n      this.$container.addClass(this.cssClass);\n    }\n\n    this.$arrow = this.$container.appendDiv('tooltip-arrow');\n    this.$content = this.$container.appendDiv('tooltip-content');\n    this._renderText();\n    this._renderSeverity();\n    this._renderMenus();\n\n    if (this.autoRemove) {\n      // Every user action will remove the tooltip\n      this._mouseDownHandler = this._onDocumentMouseDown.bind(this);\n      // The listener needs to be executed in the capturing phase -> Allows for having context menus inside the tooltip, otherwise click on context menu header would close the tooltip\n      this.$container.document(true).addEventListener('mousedown', this._mouseDownHandler, true); // true=the event handler is executed in the capturing phase\n\n      this._keydownHandler = this._onDocumentKeyDown.bind(this);\n      this.$container.document()\n        .on('keydown', this._keydownHandler);\n    }\n\n    if (this.$anchor && this.scrollType) {\n      this._anchorScrollHandler = this._onAnchorScroll.bind(this);\n      scrollbars.onScroll(this.$anchor, this._anchorScrollHandler);\n    }\n\n    // If the tooltip is rendered inside a (popup) dialog, get a reference to the dialog.\n    this.dialog = null;\n    var parent = this.parent;\n    while (parent) {\n      if (parent instanceof Form && parent.isDialog()) {\n        this.dialog = parent;\n        break;\n      }\n      parent = parent.parent;\n    }\n\n    // If inside a dialog, attach a listener to reposition the tooltip when the dialog is moved\n    if (this.dialog) {\n      this._moveHandler = this.position.bind(this);\n      this.dialog.on('move', this._moveHandler);\n    }\n  }\n\n  _postRender() {\n    super._postRender();\n    this.position();\n  }\n\n  _remove() {\n    if (this._mouseDownHandler) {\n      this.$container.document(true).removeEventListener('mousedown', this._mouseDownHandler, true);\n      this._mouseDownHandler = null;\n    }\n    if (this._keydownHandler) {\n      this.$container.document().off('keydown', this._keydownHandler);\n      this._keydownHandler = null;\n    }\n    if (this._anchorScrollHandler) {\n      scrollbars.offScroll(this._anchorScrollHandler);\n      this._anchorScrollHandler = null;\n    }\n    if (this._moveHandler) {\n      if (this.dialog) {\n        this.dialog.off('move', this._moveHandler);\n      }\n      this._moveHandler = null;\n    }\n    this.dialog = null;\n    this.$menus = null;\n    super._remove();\n  }\n\n  _onAttach() {\n    super._onAttach();\n    if (this._openLater && !this.rendered) {\n      this._openLater = false;\n      this.render();\n    }\n  }\n\n  _renderOnDetach() {\n    this._openLater = true;\n    this.remove();\n    super._onDetach();\n  }\n\n  _isRemovalPrevented() {\n    // Never prevent. Default returns true if removal is pending by an animation, but tooltips should be closed before the animation starts\n    return false;\n  }\n\n  setText(text) {\n    this.setProperty('text', text);\n  }\n\n  setSeverity(severity) {\n    this.setProperty('severity', severity);\n  }\n\n  _renderText() {\n    var text = this.text || '';\n    if (this.htmlEnabled) {\n      this.$content.html(text);\n    } else {\n      // use nl2br to allow tooltips with line breaks\n      this.$content.html(strings.nl2br(text));\n    }\n    this.$content.setVisible(!!text);\n    this.$container.toggleClass('no-text', !text);\n    if (!this.rendering) {\n      this.position();\n    }\n  }\n\n  _renderSeverity() {\n    this.$container.removeClass(Status.SEVERITY_CSS_CLASSES);\n    this.$container.addClass(Status.cssClassForSeverity(this.severity));\n  }\n\n  setMenus(menus) {\n    menus = arrays.ensure(menus);\n    this.setProperty('menus', menus);\n  }\n\n  _renderMenus() {\n    var maxIconWidth = 0,\n      menus = this.menus;\n\n    if (menus.length > 0 && !this.$menus) {\n      this.$menus = this.$container.appendDiv('tooltip-menus');\n    } else if (menus.length === 0 && this.$menus) {\n      this.$menus.remove();\n      this.$menus = null;\n    }\n\n    // Render menus\n    menus.forEach(function(menu) {\n      var iconWidth = 0;\n      menu.render(this.$menus);\n      if (menu.iconId) {\n        iconWidth = menu.get$Icon().outerWidth(true);\n        maxIconWidth = Math.max(iconWidth, maxIconWidth);\n      }\n    }, this);\n\n    // Align menus if there is one with an icon\n    if (maxIconWidth > 0) {\n      menus.forEach(function(menu) {\n        if (!menu.iconId) {\n          menu.$text.cssPaddingLeft(maxIconWidth);\n        } else {\n          menu.$text.cssPaddingLeft(maxIconWidth - menu.get$Icon().outerWidth(true));\n        }\n      }, this);\n    }\n\n    if (!this.rendering) {\n      this.position();\n    }\n  }\n\n  position() {\n    var top, left, arrowSize, overlapX, overlapY, x, y, origin,\n      tooltipWidth, tooltipHeight, arrowDivWidth, arrowPosition, inView;\n\n    if (this.origin) {\n      origin = this.origin;\n      x = origin.x;\n    } else {\n      origin = graphics.offsetBounds(this.$anchor);\n      x = origin.x + origin.width / 2;\n    }\n    y = origin.y;\n\n    if (this.$anchor) {\n      // Sticky tooltip must only be visible if the location where the tooltip points is in view (prevents that the tooltip points at an invisible anchor)\n      inView = scrollbars.isLocationInView(origin, this.$anchor.scrollParent());\n      this.$container.setVisible(inView);\n    }\n\n    // this.$parent might not be at (0,0) of the document\n    if (!this.originRelativeToParent) {\n      var parentOffset = this.$parent.offset();\n      x -= parentOffset.left;\n      y -= parentOffset.top;\n    }\n\n    arrowDivWidth = this.$arrow.outerWidth();\n    // Arrow is a div rotated by 45 deg -> visible height is half the div\n    arrowSize = Tooltip.computeHypotenuse(arrowDivWidth) / 2;\n\n    tooltipHeight = this.$container.outerHeight();\n    tooltipWidth = this.$container.outerWidth();\n\n    // Compute actual arrow position if position is provided in percentage\n    arrowPosition = this.arrowPosition;\n    if (this.arrowPositionUnit === '%') {\n      arrowPosition = tooltipWidth * this.arrowPosition / 100;\n    }\n\n    top = y - tooltipHeight - arrowSize;\n    left = x - arrowPosition;\n    overlapX = left + tooltipWidth + this.windowPaddingX - this.$parent.width();\n    overlapY = top - this.windowPaddingY;\n\n    // Move tooltip to the left until it gets fully visible\n    if (overlapX > 0) {\n      left -= overlapX;\n      arrowPosition = x - left;\n    }\n\n    // Move tooltip to the bottom, arrow on top\n    this.$arrow.removeClass('arrow-top arrow-bottom');\n    if (this.tooltipPosition === 'bottom' || overlapY < 0) {\n      this.$arrow.addClass('arrow-top');\n      top = y + origin.height + arrowSize;\n    } else {\n      this.$arrow.addClass('arrow-bottom');\n    }\n\n    // Make sure arrow is never positioned outside of the tooltip\n    arrowPosition = Math.min(arrowPosition, this.$container.outerWidth() - arrowSize);\n    arrowPosition = Math.max(arrowPosition, arrowSize);\n    this.$arrow.cssLeft(arrowPosition);\n    this.$container\n      .cssLeft(left)\n      .cssTop(top);\n\n    // If there are menu popups make sure they are positioned correctly\n    this.menus.forEach(function(menu) {\n      if (menu.popup) {\n        menu.popup.position();\n      }\n    }, this);\n  }\n\n  _onAnchorScroll(event) {\n    if (!this.rendered) {\n      // Scroll events may be fired delayed, even if scroll listener are already removed.\n      return;\n    }\n    if (this.scrollType === 'position') {\n      this.position();\n    } else if (this.scrollType === 'remove') {\n      this.destroy();\n    }\n  }\n\n  _onDocumentMouseDown(event) {\n    if (!this.rendered) {\n      return false;\n    }\n    if (this._isMouseDownOutside(event)) {\n      this._onMouseDownOutside(event);\n    }\n  }\n\n  _isMouseDownOutside(event) {\n    var $target = $(event.target),\n      targetWidget = scout.widget($target);\n\n    // Only remove the tooltip if the click is outside of the container or the $anchor (= status icon)\n    // Also ignore clicks if the tooltip is covert by a glasspane\n    return !this.isOrHas(targetWidget) &&\n      (this.$anchor && !this.$anchor.isOrHas($target[0])) &&\n      !this.session.focusManager.isElementCovertByGlassPane(this.$container[0]);\n  }\n\n  /**\n   * Method invoked once a mouse down event occurs outside the tooltip.\n   */\n  _onMouseDownOutside() {\n    this.destroy();\n  }\n\n  _onDocumentKeyDown(event) {\n    if (scout.isOneOf(event.which,\n      keys.CTRL, keys.SHIFT, keys.ALT,\n      keys.NUM_LOCK, keys.CAPS_LOCK, keys.SCROLL_LOCK,\n      keys.WIN_LEFT, keys.WIN_RIGHT, keys.SELECT,\n      keys.PAUSE, keys.PRINT_SCREEN)) {\n      return;\n    }\n\n    this.destroy();\n  }\n\n  /* --- STATIC HELPERS ------------------------------------------------------------- */\n\n  /**\n   * @memberOf Tooltip\n   */\n  static computeHypotenuse(x) {\n    return Math.sqrt(Math.pow(x, 2) + Math.pow(x, 2));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}