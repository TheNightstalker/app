{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { AbstractLayout, Dimension } from '../../index';\n\nvar DesktopNavigationLayout = /*#__PURE__*/function (_AbstractLayout) {\n  _inherits(DesktopNavigationLayout, _AbstractLayout);\n\n  var _super = _createSuper(DesktopNavigationLayout);\n\n  function DesktopNavigationLayout(navigation) {\n    var _this;\n\n    _classCallCheck(this, DesktopNavigationLayout);\n\n    _this = _super.call(this);\n    _this.navigation = navigation;\n    return _this;\n  }\n\n  _createClass(DesktopNavigationLayout, [{\n    key: \"layout\",\n    value: function layout($container) {\n      var bodySize,\n          viewButtonBoxSize,\n          viewButtonBoxPrefSize,\n          htmlContainer = this.navigation.htmlComp,\n          containerSize = htmlContainer.size({\n        exact: true\n      }),\n          htmlBody = this.navigation.htmlCompBody,\n          toolBox = this.navigation.toolBox,\n          viewButtonBox = this.navigation.viewButtonBox,\n          viewButtonBoxHeight = 0,\n          viewButtonBoxWidth = 0;\n      containerSize = containerSize.subtract(htmlContainer.insets());\n\n      if (viewButtonBox.visible) {\n        viewButtonBoxPrefSize = viewButtonBox.htmlComp.prefSize();\n        viewButtonBoxHeight = viewButtonBoxPrefSize.height;\n        viewButtonBoxWidth = containerSize.width;\n\n        if (toolBox) {\n          viewButtonBoxWidth = viewButtonBoxPrefSize.width;\n        }\n\n        viewButtonBoxSize = new Dimension(viewButtonBoxWidth, viewButtonBoxHeight).subtract(viewButtonBox.htmlComp.margins());\n        viewButtonBox.htmlComp.setSize(viewButtonBoxSize);\n      }\n\n      if (toolBox) {\n        toolBox.$container.cssLeft(viewButtonBoxWidth);\n        toolBox.htmlComp.setSize(new Dimension(containerSize.width - viewButtonBoxWidth, viewButtonBoxHeight));\n      }\n\n      bodySize = new Dimension(containerSize.width, containerSize.height).subtract(htmlBody.margins());\n\n      if (this.navigation.singleViewButton) {\n        htmlBody.$comp.cssTop(0);\n      } else {\n        htmlBody.$comp.cssTop(viewButtonBoxHeight);\n        bodySize.height -= viewButtonBoxHeight;\n      }\n\n      htmlBody.setSize(bodySize);\n    }\n  }, {\n    key: \"preferredLayoutSize\",\n    value: function preferredLayoutSize($container) {\n      var htmlContainer = this.navigation.htmlComp,\n          htmlBody = this.navigation.htmlCompBody,\n          toolBox = this.navigation.toolBox,\n          viewButtonBox = this.navigation.viewButtonBox;\n      var prefSize = htmlBody.prefSize();\n      var prefSizeBoxes = new Dimension(0, 0);\n\n      if (viewButtonBox) {\n        var prefSizeViewButtonBox = viewButtonBox.htmlComp.prefSize();\n        prefSizeBoxes.width += prefSizeViewButtonBox.width;\n        prefSizeBoxes.height = Math.max(prefSizeBoxes.height, prefSizeViewButtonBox.height);\n      }\n\n      if (toolBox) {\n        var prefSizeToolBox = toolBox.htmlComp.prefSize();\n        prefSizeBoxes.width += prefSizeToolBox.width;\n        prefSizeBoxes.height = Math.max(prefSizeBoxes.height, prefSizeToolBox.height);\n      }\n\n      prefSize.height += prefSizeBoxes.height;\n      prefSize.width = Math.max(prefSize.width, prefSizeBoxes.width);\n      prefSize = prefSize.add(htmlContainer.insets());\n      return prefSize;\n    }\n  }]);\n\n  return DesktopNavigationLayout;\n}(AbstractLayout);\n\nexport { DesktopNavigationLayout as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/desktop/navigation/DesktopNavigationLayout.js"],"names":["AbstractLayout","Dimension","DesktopNavigationLayout","navigation","$container","bodySize","viewButtonBoxSize","viewButtonBoxPrefSize","htmlContainer","htmlComp","containerSize","size","exact","htmlBody","htmlCompBody","toolBox","viewButtonBox","viewButtonBoxHeight","viewButtonBoxWidth","subtract","insets","visible","prefSize","height","width","margins","setSize","cssLeft","singleViewButton","$comp","cssTop","prefSizeBoxes","prefSizeViewButtonBox","Math","max","prefSizeToolBox","add"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {AbstractLayout, Dimension} from '../../index';\n\nexport default class DesktopNavigationLayout extends AbstractLayout {\n\n  constructor(navigation) {\n    super();\n    this.navigation = navigation;\n  }\n\n  layout($container) {\n    var bodySize, viewButtonBoxSize, viewButtonBoxPrefSize,\n      htmlContainer = this.navigation.htmlComp,\n      containerSize = htmlContainer.size({\n        exact: true\n      }),\n      htmlBody = this.navigation.htmlCompBody,\n      toolBox = this.navigation.toolBox,\n      viewButtonBox = this.navigation.viewButtonBox,\n      viewButtonBoxHeight = 0,\n      viewButtonBoxWidth = 0;\n\n    containerSize = containerSize.subtract(htmlContainer.insets());\n\n    if (viewButtonBox.visible) {\n      viewButtonBoxPrefSize = viewButtonBox.htmlComp.prefSize();\n      viewButtonBoxHeight = viewButtonBoxPrefSize.height;\n      viewButtonBoxWidth = containerSize.width;\n      if (toolBox) {\n        viewButtonBoxWidth = viewButtonBoxPrefSize.width;\n      }\n\n      viewButtonBoxSize = new Dimension(viewButtonBoxWidth, viewButtonBoxHeight)\n        .subtract(viewButtonBox.htmlComp.margins());\n      viewButtonBox.htmlComp.setSize(viewButtonBoxSize);\n    }\n\n    if (toolBox) {\n      toolBox.$container.cssLeft(viewButtonBoxWidth);\n      toolBox.htmlComp.setSize(new Dimension(containerSize.width - viewButtonBoxWidth, viewButtonBoxHeight));\n    }\n\n    bodySize = new Dimension(containerSize.width, containerSize.height)\n      .subtract(htmlBody.margins());\n    if (this.navigation.singleViewButton) {\n      htmlBody.$comp.cssTop(0);\n    } else {\n      htmlBody.$comp.cssTop(viewButtonBoxHeight);\n      bodySize.height -= viewButtonBoxHeight;\n    }\n    htmlBody.setSize(bodySize);\n  }\n\n  preferredLayoutSize($container) {\n    var htmlContainer = this.navigation.htmlComp,\n      htmlBody = this.navigation.htmlCompBody,\n      toolBox = this.navigation.toolBox,\n      viewButtonBox = this.navigation.viewButtonBox;\n\n    var prefSize = htmlBody.prefSize();\n\n    var prefSizeBoxes = new Dimension(0, 0);\n    if (viewButtonBox) {\n      var prefSizeViewButtonBox = viewButtonBox.htmlComp.prefSize();\n      prefSizeBoxes.width += prefSizeViewButtonBox.width;\n      prefSizeBoxes.height = Math.max(prefSizeBoxes.height, prefSizeViewButtonBox.height);\n    }\n    if (toolBox) {\n      var prefSizeToolBox = toolBox.htmlComp.prefSize();\n      prefSizeBoxes.width += prefSizeToolBox.width;\n      prefSizeBoxes.height = Math.max(prefSizeBoxes.height, prefSizeToolBox.height);\n    }\n\n    prefSize.height += prefSizeBoxes.height;\n    prefSize.width = Math.max(prefSize.width, prefSizeBoxes.width);\n    prefSize = prefSize.add(htmlContainer.insets());\n\n    return prefSize;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}