{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { codes, Device, EventSupport, fonts, locales, logging, numbers, ObjectFactory, objects, polyfills, scout, Session, texts, webstorage } from './index';\nimport $ from 'jquery';\nvar instance = null;\nvar listeners = [];\n\nvar App = /*#__PURE__*/function () {\n  _createClass(App, null, [{\n    key: \"addListener\",\n    value: function addListener(type, func) {\n      var listener = {\n        type: type,\n        func: func\n      };\n\n      if (instance) {\n        instance.events.addListener(listener);\n      } else {\n        listeners.push(listener);\n      }\n\n      return listener;\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return instance;\n    }\n  }]);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    this.events = this._createEventSupport();\n    this.initialized = false;\n    this.sessions = []; // register the listeners which were added to scout before the app is created\n\n    listeners.forEach(function (listener) {\n      this.addListener(listener);\n    }, this);\n    listeners = [];\n    instance = this;\n    this.errorHandler = this._createErrorHandler();\n  }\n  /**\n   * Main initialization function.<p>\n   *\n   * Calls this._prepare, this._bootstrap and this._init.<p>\n   * At the initial phase the essential objects are initialized, those which are required for the next phases like logging and the object factory.<br>\n   * During the bootstrap phase additional scripts may get loaded required for a successful session startup.<br>\n   * The actual initialization does not get started before these bootstrap scripts are loaded.\n   *\n   * @param [options]\n   * @param [options.bootstrap.textsUrl] URL pointing to a json resource containing texts that will be available through texts.js\n   * @param [options.bootstrap.localesUrl] URL pointing to a json resource containing locale information processed by locales.js\n   * @param [options.bootstrap.codesUrl] URL pointing to a json resources containing codes that will be available through codes.js\n   */\n\n\n  _createClass(App, [{\n    key: \"init\",\n    value: function init(options) {\n      options = options || {};\n      return this._prepare(options).then(this._bootstrap.bind(this, options.bootstrap)).then(this._init.bind(this, options)).then(this._initDone.bind(this, options)).catch(this._fail.bind(this, options));\n    }\n    /**\n     * Initializes the logging framework, polyfills and the object factory.\n     * This happens at the prepare phase because all these things should be available from the beginning.\n     */\n\n  }, {\n    key: \"_prepare\",\n    value: function _prepare(options) {\n      return this._prepareLogging(options).done(function () {\n        this._prepareEssentials(options);\n\n        this._prepareDone(options);\n      }.bind(this));\n    }\n  }, {\n    key: \"_prepareEssentials\",\n    value: function _prepareEssentials(options) {\n      polyfills.install(window);\n      ObjectFactory.get().init();\n    }\n  }, {\n    key: \"_prepareDone\",\n    value: function _prepareDone(options) {\n      this.trigger('prepare', {\n        options: options\n      });\n      $.log.isDebugEnabled() && $.log.debug('App prepared');\n    }\n  }, {\n    key: \"_prepareLogging\",\n    value: function _prepareLogging(options) {\n      return logging.bootstrap();\n    }\n    /**\n     * Executes the default bootstrap functions and returns an array of promises.<p>\n     * The actual session startup begins only when every of these promises are completed.\n     * This gives the possibility to dynamically load additional scripts or files which are mandatory for a successful session startup.\n     * The individual bootstrap functions may return null or undefined, a single promise or multiple promises as an array.\n     */\n\n  }, {\n    key: \"_bootstrap\",\n    value: function _bootstrap(options) {\n      options = options || {};\n      var promises = [];\n\n      this._doBootstrap(options).forEach(function (value) {\n        if (Array.isArray(value)) {\n          promises.concat(value);\n        } else if (value) {\n          promises.push(value);\n        }\n      });\n\n      return $.promiseAll(promises).done(this._bootstrapDone.bind(this, options)).catch(this._bootstrapFail.bind(this, options));\n    }\n  }, {\n    key: \"_doBootstrap\",\n    value: function _doBootstrap(options) {\n      return [Device.get().bootstrap(), fonts.bootstrap(options.fonts), locales.bootstrap(options.localesUrl), texts.bootstrap(options.textsUrl), codes.bootstrap(options.codesUrl)];\n    }\n  }, {\n    key: \"_bootstrapDone\",\n    value: function _bootstrapDone(options) {\n      webstorage.removeItem(sessionStorage, 'scout:timeoutPageReload');\n      this.trigger('bootstrap', {\n        options: options\n      });\n      $.log.isDebugEnabled() && $.log.debug('App bootstrapped');\n    }\n  }, {\n    key: \"_bootstrapFail\",\n    value: function _bootstrapFail(options, vararg, textStatus, errorThrown, requestOptions) {\n      $.log.isInfoEnabled() && $.log.info('App bootstrap failed'); // If one of the bootstrap ajax call fails due to a session timeout, the index.html is probably loaded from cache without asking the server for its validity.\n      // Normally, loading the index.html should already return a session timeout, but if it is loaded from the (back button) cache, no request will be done and therefore no timeout can be returned.\n      // The browser is allowed to display a page when navigating back without issuing a request even though cache-headers are set to must-revalidate.\n      // The only way to prevent it would be the no-store header but then pressing back would always reload the page and not only on a session timeout.\n      // Sometimes the JavaScript and therefore the ajax calls won't be executed in case the page is loaded from that cache, but sometimes they will nevertheless (we don't know the reasons).\n      // So, if it that happens, the server will return a session timeout and the best thing we can do is to reload the page hoping a request for the index.html will be done which eventually will be forwarded to the login page.\n\n      if ($.isJqXHR(vararg)) {\n        // Ajax error\n        // If a resource returns 401 (unauthorized) it is likely a session timeout.\n        // This may happen if no Scout backend is used or a reverse proxy returned the response, otherwise status 200 with an error object would be returned, see below\n        if (this._isSessionTimeoutStatus(vararg.status)) {\n          var url = requestOptions ? requestOptions.url : '';\n\n          this._handleBootstrapTimeoutError(vararg, url);\n\n          return;\n        }\n      } else if (objects.isPlainObject(vararg) && vararg.error) {\n        // Json based error\n        // Json errors (normally processed by Session.js) are returned with http status 200\n        if (vararg.error.code === Session.JsonResponseError.SESSION_TIMEOUT) {\n          this._handleBootstrapTimeoutError(vararg.error, vararg.url);\n\n          return;\n        }\n      } // Make sure promise will be rejected with all original arguments so that it can be eventually handled by this._fail\n\n\n      var args = objects.argumentsToArray(arguments).slice(1);\n      return $.rejectedPromise.apply($, args);\n    }\n  }, {\n    key: \"_isSessionTimeoutStatus\",\n    value: function _isSessionTimeoutStatus(httpStatus) {\n      return httpStatus === 401;\n    }\n  }, {\n    key: \"_handleBootstrapTimeoutError\",\n    value: function _handleBootstrapTimeoutError(error, url) {\n      $.log.isInfoEnabled() && $.log.info('Timeout error for resource ' + url + '. Reloading page...');\n\n      if (webstorage.getItem(sessionStorage, 'scout:timeoutPageReload')) {\n        // Prevent loop in case a reload did not solve the problem\n        $.log.isWarnEnabled() && $.log.warn('Prevented automatic reload, startup will likely fail', error, url);\n        webstorage.removeItem(sessionStorage, 'scout:timeoutPageReload');\n        throw new Error('Resource ' + url + ' could not be loaded due to a session timeout, even after a page reload');\n      }\n\n      webstorage.setItem(sessionStorage, 'scout:timeoutPageReload', true); // See comment in _bootstrapFail for the reasons why to reload here\n\n      scout.reloadPage();\n    }\n    /**\n     * Initializes a session for each html element with class '.scout' and stores them in scout.sessions.\n     */\n\n  }, {\n    key: \"_init\",\n    value: function _init(options) {\n      options = options || {};\n\n      if (!this._checkBrowserCompability(options)) {\n        return;\n      }\n\n      this._initVersion(options);\n\n      this._prepareDOM();\n\n      this._installErrorHandler();\n\n      this._installGlobalMouseDownInterceptor();\n\n      this._installSyntheticActiveStateHandler();\n\n      this._ajaxSetup();\n\n      this._installExtensions();\n\n      return this._load(options).then(this._loadSessions.bind(this, options.session));\n    }\n    /**\n     * Maybe implemented to load data from a server before the desktop is created.\n     * @returns {Promise} promise which is resolved after the loading is complete\n     */\n\n  }, {\n    key: \"_load\",\n    value: function _load(options) {\n      return $.resolvedPromise();\n    }\n  }, {\n    key: \"_checkBrowserCompability\",\n    value: function _checkBrowserCompability(options) {\n      var device = Device.get();\n      var app = this;\n      $.log.isInfoEnabled() && $.log.info('Detected browser ' + device.browser + ' version ' + device.browserVersion);\n\n      if (!scout.nvl(options.checkBrowserCompatibility, true) || device.isSupportedBrowser()) {\n        // No check requested or browser is supported\n        return true;\n      }\n\n      $('.scout').each(function () {\n        var $entryPoint = $(this),\n            $box = $entryPoint.appendDiv(),\n            newOptions = objects.valueCopy(options);\n        newOptions.checkBrowserCompatibility = false;\n        $box.load('unsupported-browser.html', function () {\n          $box.find('button').on('click', function () {\n            $box.remove();\n\n            app._init(newOptions);\n          });\n        });\n      });\n      return false;\n    }\n  }, {\n    key: \"_initVersion\",\n    value: function _initVersion(options) {\n      this.version = scout.nvl(this.version, options.version, $('scout-version').data('value'));\n    }\n  }, {\n    key: \"_prepareDOM\",\n    value: function _prepareDOM() {\n      scout.prepareDOM(document);\n    }\n  }, {\n    key: \"_installGlobalMouseDownInterceptor\",\n    value: function _installGlobalMouseDownInterceptor() {\n      scout.installGlobalMouseDownInterceptor(document);\n    }\n  }, {\n    key: \"_installSyntheticActiveStateHandler\",\n    value: function _installSyntheticActiveStateHandler() {\n      scout.installSyntheticActiveStateHandler(document);\n    }\n    /**\n     * Installs a global error handler.\n     * <p>\n     * Note: we do not install an error handler on popup-windows because everything is controlled by the main-window\n     * so exceptions will also occur in that window. This also means, the fatal message-box will be displayed in the\n     * main-window, even when a popup-window is opened and active.\n     * <p>\n     * Caution: The error.stack doesn't look the same in different browsers. Chrome for instance puts the error message\n     * on the first line of the stack. Firefox does only contain the stack lines, without the message, but in return\n     * the stack trace is much longer :)\n     */\n\n  }, {\n    key: \"_installErrorHandler\",\n    value: function _installErrorHandler() {\n      window.onerror = this.errorHandler.windowErrorHandler; // FIXME bsh, cgu: use ErrorHandler to handle unhandled promise rejections. Just replacing jQuery.Deferred.exceptionHook(error, stack) does not work\n      // because it is called on every exception and not only on unhandled.\n      // https://developer.mozilla.org/en-US/docs/Web/API/Window/unhandledrejection_event would be exactly what we need, but jQuery does not support it.\n      // Bluebird has a polyfill -> can it be ported to jQuery?\n    }\n  }, {\n    key: \"_createErrorHandler\",\n    value: function _createErrorHandler() {\n      return scout.create('ErrorHandler');\n    }\n    /**\n     * Uses the object returned by {@link #_ajaxDefaults} to setup ajax. The values in that object are used as default values for every ajax call.\n     */\n\n  }, {\n    key: \"_ajaxSetup\",\n    value: function _ajaxSetup() {\n      var ajaxDefaults = this._ajaxDefaults();\n\n      if (ajaxDefaults) {\n        $.ajaxSetup(ajaxDefaults);\n      }\n    }\n    /**\n     * Returns the defaults for every ajax call. You may override it to set custom defaults.\n     * By default _beforeAjaxCall is assigned to the beforeSend method.\n     * <p>\n     * Note: This will affect every ajax call, so use it with care! See also the advice on https://api.jquery.com/jquery.ajaxsetup/.\n     */\n\n  }, {\n    key: \"_ajaxDefaults\",\n    value: function _ajaxDefaults() {\n      return {\n        beforeSend: this._beforeAjaxCall.bind(this)\n      };\n    }\n    /**\n     * Called before every ajax call. Sets the header X-Scout-Correlation-Id.\n     * <p>\n     * Maybe overridden to set custom headers or to execute other code which should run before an ajax call.\n     */\n\n  }, {\n    key: \"_beforeAjaxCall\",\n    value: function _beforeAjaxCall(request) {\n      request.setRequestHeader('X-Scout-Correlation-Id', numbers.correlationId());\n      request.setRequestHeader('X-Requested-With', 'XMLHttpRequest'); // explicitly add here because jQuery only adds it automatically if it is no crossDomain request\n    }\n  }, {\n    key: \"_loadSessions\",\n    value: function _loadSessions(options) {\n      options = options || {};\n      var promises = [];\n      $('.scout').each(function (i, elem) {\n        var $entryPoint = $(elem);\n        options.portletPartId = options.portletPartId || $entryPoint.data('partid') || '0';\n\n        var promise = this._loadSession($entryPoint, options);\n\n        promises.push(promise);\n      }.bind(this));\n      return $.promiseAll(promises);\n    }\n    /**\n     * @returns {Promise} promise which is resolved when the session is ready\n     */\n\n  }, {\n    key: \"_loadSession\",\n    value: function _loadSession($entryPoint, options) {\n      options.locale = options.locale || this._loadLocale();\n      options.$entryPoint = $entryPoint;\n\n      var session = this._createSession(options);\n\n      this.sessions.push(session); // TODO [7.0] cgu improve this, start must not be executed because it currently does a server request\n\n      var desktop = this._createDesktop(session.root);\n\n      this.trigger('desktopReady', {\n        desktop: desktop\n      });\n      session.render(function () {\n        session._renderDesktop(); // Ensure layout is valid (explicitly layout immediately and don't wait for setTimeout to run to make layouting invisible to the user)\n\n\n        session.layoutValidator.validate();\n        session.focusManager.validateFocus();\n        session.ready = true;\n        this.trigger('sessionReady', {\n          session: session\n        });\n        $.log.isInfoEnabled() && $.log.info('Session initialized. Detected ' + Device.get());\n      }.bind(this));\n      return $.resolvedPromise();\n    }\n  }, {\n    key: \"_createSession\",\n    value: function _createSession(options) {\n      return scout.create('Session', options, {\n        ensureUniqueId: false\n      });\n    }\n  }, {\n    key: \"_createDesktop\",\n    value: function _createDesktop(parent) {\n      return scout.create('Desktop', {\n        parent: parent\n      });\n    }\n    /**\n     * @returns {Locale} the locale to be used when no locale is provided as app option. By default the navigators locale is used.\n     */\n\n  }, {\n    key: \"_loadLocale\",\n    value: function _loadLocale() {\n      return locales.getNavigatorLocale();\n    }\n  }, {\n    key: \"_initDone\",\n    value: function _initDone(options) {\n      this.initialized = true;\n      this.trigger('init', {\n        options: options\n      });\n      $.log.isInfoEnabled() && $.log.info('App initialized');\n    }\n  }, {\n    key: \"_fail\",\n    value: function _fail(options, error) {\n      $.log.error('App initialization failed.');\n      var args = objects.argumentsToArray(arguments).slice(1);\n      return this.errorHandler.handle(args).then(function (errorInfo) {\n        var $error = $('body').appendDiv('startup-error');\n        $error.appendDiv('startup-error-title').text('The application could not be started');\n\n        if (errorInfo.message) {\n          $error.appendDiv('startup-error-message').text(errorInfo.message);\n        } // Reject with original rejection arguments\n\n\n        return $.rejectedPromise.apply($, args);\n      });\n    }\n    /**\n     * Override this method to install extensions to Scout objects. Since the extension feature replaces functions\n     * on the prototype of the Scout objects you must apply 'function patches' to Scout framework or other code before\n     * the extensions are installed.\n     *\n     * The default implementation does nothing.\n     */\n\n  }, {\n    key: \"_installExtensions\",\n    value: function _installExtensions() {// NOP\n    } // --- Event handling methods ---\n\n  }, {\n    key: \"_createEventSupport\",\n    value: function _createEventSupport() {\n      return new EventSupport();\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(type, event) {\n      event = event || {};\n      event.source = this;\n      this.events.trigger(type, event);\n    }\n  }, {\n    key: \"one\",\n    value: function one(type, func) {\n      this.events.one(type, func);\n    }\n  }, {\n    key: \"on\",\n    value: function on(type, func) {\n      return this.events.on(type, func);\n    }\n  }, {\n    key: \"off\",\n    value: function off(type, func) {\n      this.events.off(type, func);\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener(listener) {\n      this.events.addListener(listener);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(listener) {\n      this.events.removeListener(listener);\n    }\n  }, {\n    key: \"when\",\n    value: function when(type) {\n      return this.events.when(type);\n    }\n  }]);\n\n  return App;\n}();\n/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n\n\nexport { App as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/App.js"],"names":["codes","Device","EventSupport","fonts","locales","logging","numbers","ObjectFactory","objects","polyfills","scout","Session","texts","webstorage","$","instance","listeners","App","type","func","listener","events","addListener","push","_createEventSupport","initialized","sessions","forEach","errorHandler","_createErrorHandler","options","_prepare","then","_bootstrap","bind","bootstrap","_init","_initDone","catch","_fail","_prepareLogging","done","_prepareEssentials","_prepareDone","install","window","get","init","trigger","log","isDebugEnabled","debug","promises","_doBootstrap","value","Array","isArray","concat","promiseAll","_bootstrapDone","_bootstrapFail","localesUrl","textsUrl","codesUrl","removeItem","sessionStorage","vararg","textStatus","errorThrown","requestOptions","isInfoEnabled","info","isJqXHR","_isSessionTimeoutStatus","status","url","_handleBootstrapTimeoutError","isPlainObject","error","code","JsonResponseError","SESSION_TIMEOUT","args","argumentsToArray","arguments","slice","rejectedPromise","apply","httpStatus","getItem","isWarnEnabled","warn","Error","setItem","reloadPage","_checkBrowserCompability","_initVersion","_prepareDOM","_installErrorHandler","_installGlobalMouseDownInterceptor","_installSyntheticActiveStateHandler","_ajaxSetup","_installExtensions","_load","_loadSessions","session","resolvedPromise","device","app","browser","browserVersion","nvl","checkBrowserCompatibility","isSupportedBrowser","each","$entryPoint","$box","appendDiv","newOptions","valueCopy","load","find","on","remove","version","data","prepareDOM","document","installGlobalMouseDownInterceptor","installSyntheticActiveStateHandler","onerror","windowErrorHandler","create","ajaxDefaults","_ajaxDefaults","ajaxSetup","beforeSend","_beforeAjaxCall","request","setRequestHeader","correlationId","i","elem","portletPartId","promise","_loadSession","locale","_loadLocale","_createSession","desktop","_createDesktop","root","render","_renderDesktop","layoutValidator","validate","focusManager","validateFocus","ready","ensureUniqueId","parent","getNavigatorLocale","handle","errorInfo","$error","text","message","event","source","one","off","removeListener","when"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n\nimport {codes, Device, EventSupport, fonts, locales, logging, numbers, ObjectFactory, objects, polyfills, scout, Session, texts, webstorage} from './index';\nimport $ from 'jquery';\n\nlet instance = null;\nlet listeners = [];\n\nexport default class App {\n\n  static addListener(type, func) {\n    var listener = {\n      type: type,\n      func: func\n    };\n    if (instance) {\n      instance.events.addListener(listener);\n    } else {\n      listeners.push(listener);\n    }\n    return listener;\n  }\n\n  static get() {\n    return instance;\n  }\n\n  constructor() {\n    this.events = this._createEventSupport();\n    this.initialized = false;\n    this.sessions = [];\n\n    // register the listeners which were added to scout before the app is created\n    listeners.forEach(function(listener) {\n      this.addListener(listener);\n    }, this);\n    listeners = [];\n\n    instance = this;\n    this.errorHandler = this._createErrorHandler();\n  }\n\n  /**\n   * Main initialization function.<p>\n   *\n   * Calls this._prepare, this._bootstrap and this._init.<p>\n   * At the initial phase the essential objects are initialized, those which are required for the next phases like logging and the object factory.<br>\n   * During the bootstrap phase additional scripts may get loaded required for a successful session startup.<br>\n   * The actual initialization does not get started before these bootstrap scripts are loaded.\n   *\n   * @param [options]\n   * @param [options.bootstrap.textsUrl] URL pointing to a json resource containing texts that will be available through texts.js\n   * @param [options.bootstrap.localesUrl] URL pointing to a json resource containing locale information processed by locales.js\n   * @param [options.bootstrap.codesUrl] URL pointing to a json resources containing codes that will be available through codes.js\n   */\n  init(options) {\n    options = options || {};\n    return this._prepare(options)\n      .then(this._bootstrap.bind(this, options.bootstrap))\n      .then(this._init.bind(this, options))\n      .then(this._initDone.bind(this, options))\n      .catch(this._fail.bind(this, options));\n  }\n\n  /**\n   * Initializes the logging framework, polyfills and the object factory.\n   * This happens at the prepare phase because all these things should be available from the beginning.\n   */\n  _prepare(options) {\n    return this._prepareLogging(options)\n      .done(function() {\n        this._prepareEssentials(options);\n        this._prepareDone(options);\n      }.bind(this));\n  }\n\n  _prepareEssentials(options) {\n    polyfills.install(window);\n    ObjectFactory.get().init();\n  }\n\n  _prepareDone(options) {\n    this.trigger('prepare', {\n      options: options\n    });\n    $.log.isDebugEnabled() && $.log.debug('App prepared');\n  }\n\n  _prepareLogging(options) {\n    return logging.bootstrap();\n  }\n\n  /**\n   * Executes the default bootstrap functions and returns an array of promises.<p>\n   * The actual session startup begins only when every of these promises are completed.\n   * This gives the possibility to dynamically load additional scripts or files which are mandatory for a successful session startup.\n   * The individual bootstrap functions may return null or undefined, a single promise or multiple promises as an array.\n   */\n  _bootstrap(options) {\n    options = options || {};\n\n    var promises = [];\n    this._doBootstrap(options).forEach(function(value) {\n      if (Array.isArray(value)) {\n        promises.concat(value);\n      } else if (value) {\n        promises.push(value);\n      }\n    });\n\n    return $.promiseAll(promises)\n      .done(this._bootstrapDone.bind(this, options))\n      .catch(this._bootstrapFail.bind(this, options));\n  }\n\n  _doBootstrap(options) {\n    return [\n      Device.get().bootstrap(),\n      fonts.bootstrap(options.fonts),\n      locales.bootstrap(options.localesUrl),\n      texts.bootstrap(options.textsUrl),\n      codes.bootstrap(options.codesUrl)\n    ];\n  }\n\n  _bootstrapDone(options) {\n    webstorage.removeItem(sessionStorage, 'scout:timeoutPageReload');\n    this.trigger('bootstrap', {\n      options: options\n    });\n    $.log.isDebugEnabled() && $.log.debug('App bootstrapped');\n  }\n\n  _bootstrapFail(options, vararg, textStatus, errorThrown, requestOptions) {\n    $.log.isInfoEnabled() && $.log.info('App bootstrap failed');\n\n    // If one of the bootstrap ajax call fails due to a session timeout, the index.html is probably loaded from cache without asking the server for its validity.\n    // Normally, loading the index.html should already return a session timeout, but if it is loaded from the (back button) cache, no request will be done and therefore no timeout can be returned.\n    // The browser is allowed to display a page when navigating back without issuing a request even though cache-headers are set to must-revalidate.\n    // The only way to prevent it would be the no-store header but then pressing back would always reload the page and not only on a session timeout.\n    // Sometimes the JavaScript and therefore the ajax calls won't be executed in case the page is loaded from that cache, but sometimes they will nevertheless (we don't know the reasons).\n    // So, if it that happens, the server will return a session timeout and the best thing we can do is to reload the page hoping a request for the index.html will be done which eventually will be forwarded to the login page.\n    if ($.isJqXHR(vararg)) {\n      // Ajax error\n      // If a resource returns 401 (unauthorized) it is likely a session timeout.\n      // This may happen if no Scout backend is used or a reverse proxy returned the response, otherwise status 200 with an error object would be returned, see below\n      if (this._isSessionTimeoutStatus(vararg.status)) {\n        var url = requestOptions ? requestOptions.url : '';\n        this._handleBootstrapTimeoutError(vararg, url);\n        return;\n      }\n    } else if (objects.isPlainObject(vararg) && vararg.error) {\n      // Json based error\n      // Json errors (normally processed by Session.js) are returned with http status 200\n      if (vararg.error.code === Session.JsonResponseError.SESSION_TIMEOUT) {\n        this._handleBootstrapTimeoutError(vararg.error, vararg.url);\n        return;\n      }\n    }\n\n    // Make sure promise will be rejected with all original arguments so that it can be eventually handled by this._fail\n    var args = objects.argumentsToArray(arguments).slice(1);\n    return $.rejectedPromise.apply($, args);\n  }\n\n  _isSessionTimeoutStatus(httpStatus) {\n    return httpStatus === 401;\n  }\n\n  _handleBootstrapTimeoutError(error, url) {\n    $.log.isInfoEnabled() && $.log.info('Timeout error for resource ' + url + '. Reloading page...');\n    if (webstorage.getItem(sessionStorage, 'scout:timeoutPageReload')) {\n      // Prevent loop in case a reload did not solve the problem\n      $.log.isWarnEnabled() && $.log.warn('Prevented automatic reload, startup will likely fail', error, url);\n      webstorage.removeItem(sessionStorage, 'scout:timeoutPageReload');\n      throw new Error('Resource ' + url + ' could not be loaded due to a session timeout, even after a page reload');\n    }\n    webstorage.setItem(sessionStorage, 'scout:timeoutPageReload', true);\n\n    // See comment in _bootstrapFail for the reasons why to reload here\n    scout.reloadPage();\n  }\n\n  /**\n   * Initializes a session for each html element with class '.scout' and stores them in scout.sessions.\n   */\n  _init(options) {\n    options = options || {};\n    if (!this._checkBrowserCompability(options)) {\n      return;\n    }\n\n    this._initVersion(options);\n    this._prepareDOM();\n    this._installErrorHandler();\n    this._installGlobalMouseDownInterceptor();\n    this._installSyntheticActiveStateHandler();\n    this._ajaxSetup();\n    this._installExtensions();\n    return this._load(options)\n      .then(this._loadSessions.bind(this, options.session));\n  }\n\n  /**\n   * Maybe implemented to load data from a server before the desktop is created.\n   * @returns {Promise} promise which is resolved after the loading is complete\n   */\n  _load(options) {\n    return $.resolvedPromise();\n  }\n\n  _checkBrowserCompability(options) {\n    var device = Device.get();\n    var app = this;\n    $.log.isInfoEnabled() && $.log.info('Detected browser ' + device.browser + ' version ' + device.browserVersion);\n    if (!scout.nvl(options.checkBrowserCompatibility, true) || device.isSupportedBrowser()) {\n      // No check requested or browser is supported\n      return true;\n    }\n\n    $('.scout').each(function() {\n      var $entryPoint = $(this),\n        $box = $entryPoint.appendDiv(),\n        newOptions = objects.valueCopy(options);\n\n      newOptions.checkBrowserCompatibility = false;\n      $box.load('unsupported-browser.html', function() {\n        $box.find('button').on('click', function() {\n          $box.remove();\n          app._init(newOptions);\n        });\n      });\n    });\n    return false;\n  }\n\n  _initVersion(options) {\n    this.version = scout.nvl(\n      this.version,\n      options.version,\n      $('scout-version').data('value'));\n  }\n\n  _prepareDOM() {\n    scout.prepareDOM(document);\n  }\n\n  _installGlobalMouseDownInterceptor() {\n    scout.installGlobalMouseDownInterceptor(document);\n  }\n\n  _installSyntheticActiveStateHandler() {\n    scout.installSyntheticActiveStateHandler(document);\n  }\n\n  /**\n   * Installs a global error handler.\n   * <p>\n   * Note: we do not install an error handler on popup-windows because everything is controlled by the main-window\n   * so exceptions will also occur in that window. This also means, the fatal message-box will be displayed in the\n   * main-window, even when a popup-window is opened and active.\n   * <p>\n   * Caution: The error.stack doesn't look the same in different browsers. Chrome for instance puts the error message\n   * on the first line of the stack. Firefox does only contain the stack lines, without the message, but in return\n   * the stack trace is much longer :)\n   */\n  _installErrorHandler() {\n    window.onerror = this.errorHandler.windowErrorHandler;\n    // FIXME bsh, cgu: use ErrorHandler to handle unhandled promise rejections. Just replacing jQuery.Deferred.exceptionHook(error, stack) does not work\n    // because it is called on every exception and not only on unhandled.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/unhandledrejection_event would be exactly what we need, but jQuery does not support it.\n    // Bluebird has a polyfill -> can it be ported to jQuery?\n  }\n\n  _createErrorHandler() {\n    return scout.create('ErrorHandler');\n  }\n\n  /**\n   * Uses the object returned by {@link #_ajaxDefaults} to setup ajax. The values in that object are used as default values for every ajax call.\n   */\n  _ajaxSetup() {\n    var ajaxDefaults = this._ajaxDefaults();\n    if (ajaxDefaults) {\n      $.ajaxSetup(ajaxDefaults);\n    }\n  }\n\n  /**\n   * Returns the defaults for every ajax call. You may override it to set custom defaults.\n   * By default _beforeAjaxCall is assigned to the beforeSend method.\n   * <p>\n   * Note: This will affect every ajax call, so use it with care! See also the advice on https://api.jquery.com/jquery.ajaxsetup/.\n   */\n  _ajaxDefaults() {\n    return {\n      beforeSend: this._beforeAjaxCall.bind(this)\n    };\n  }\n\n  /**\n   * Called before every ajax call. Sets the header X-Scout-Correlation-Id.\n   * <p>\n   * Maybe overridden to set custom headers or to execute other code which should run before an ajax call.\n   */\n  _beforeAjaxCall(request) {\n    request.setRequestHeader('X-Scout-Correlation-Id', numbers.correlationId());\n    request.setRequestHeader('X-Requested-With', 'XMLHttpRequest'); // explicitly add here because jQuery only adds it automatically if it is no crossDomain request\n  }\n\n  _loadSessions(options) {\n    options = options || {};\n    var promises = [];\n    $('.scout').each(function(i, elem) {\n      var $entryPoint = $(elem);\n      options.portletPartId = options.portletPartId || $entryPoint.data('partid') || '0';\n      var promise = this._loadSession($entryPoint, options);\n      promises.push(promise);\n    }.bind(this));\n    return $.promiseAll(promises);\n  }\n\n  /**\n   * @returns {Promise} promise which is resolved when the session is ready\n   */\n  _loadSession($entryPoint, options) {\n    options.locale = options.locale || this._loadLocale();\n    options.$entryPoint = $entryPoint;\n    var session = this._createSession(options);\n    this.sessions.push(session);\n\n    // TODO [7.0] cgu improve this, start must not be executed because it currently does a server request\n    var desktop = this._createDesktop(session.root);\n    this.trigger('desktopReady', {\n      desktop: desktop\n    });\n    session.render(function() {\n      session._renderDesktop();\n\n      // Ensure layout is valid (explicitly layout immediately and don't wait for setTimeout to run to make layouting invisible to the user)\n      session.layoutValidator.validate();\n      session.focusManager.validateFocus();\n\n      session.ready = true;\n      this.trigger('sessionReady', {\n        session: session\n      });\n      $.log.isInfoEnabled() && $.log.info('Session initialized. Detected ' + Device.get());\n    }.bind(this));\n    return $.resolvedPromise();\n  }\n\n  _createSession(options) {\n    return scout.create('Session', options, {\n      ensureUniqueId: false\n    });\n  }\n\n  _createDesktop(parent) {\n    return scout.create('Desktop', {\n      parent: parent\n    });\n  }\n\n  /**\n   * @returns {Locale} the locale to be used when no locale is provided as app option. By default the navigators locale is used.\n   */\n  _loadLocale() {\n    return locales.getNavigatorLocale();\n  }\n\n  _initDone(options) {\n    this.initialized = true;\n    this.trigger('init', {\n      options: options\n    });\n    $.log.isInfoEnabled() && $.log.info('App initialized');\n  }\n\n  _fail(options, error) {\n    $.log.error('App initialization failed.');\n\n    var args = objects.argumentsToArray(arguments).slice(1);\n    return this.errorHandler.handle(args)\n      .then(function(errorInfo) {\n        var $error = $('body').appendDiv('startup-error');\n        $error.appendDiv('startup-error-title').text('The application could not be started');\n        if (errorInfo.message) {\n          $error.appendDiv('startup-error-message').text(errorInfo.message);\n        }\n        // Reject with original rejection arguments\n        return $.rejectedPromise.apply($, args);\n      });\n  }\n\n  /**\n   * Override this method to install extensions to Scout objects. Since the extension feature replaces functions\n   * on the prototype of the Scout objects you must apply 'function patches' to Scout framework or other code before\n   * the extensions are installed.\n   *\n   * The default implementation does nothing.\n   */\n  _installExtensions() {\n    // NOP\n  }\n\n  // --- Event handling methods ---\n  _createEventSupport() {\n    return new EventSupport();\n  }\n\n  trigger(type, event) {\n    event = event || {};\n    event.source = this;\n    this.events.trigger(type, event);\n  }\n\n  one(type, func) {\n    this.events.one(type, func);\n  }\n\n  on(type, func) {\n    return this.events.on(type, func);\n  }\n\n  off(type, func) {\n    this.events.off(type, func);\n  }\n\n  addListener(listener) {\n    this.events.addListener(listener);\n  }\n\n  removeListener(listener) {\n    this.events.removeListener(listener);\n  }\n\n  when(type) {\n    return this.events.when(type);\n  }\n}\n/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\n"]},"metadata":{},"sourceType":"module"}