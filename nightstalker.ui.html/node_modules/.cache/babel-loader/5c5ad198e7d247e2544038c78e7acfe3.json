{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, HtmlComponent, InputFieldKeyStrokeContext, fields, keys, LookupCall, scout, strings, TagFieldCancelKeyStroke, TagFieldContainerLayout, TagFieldDeleteKeyStroke, TagFieldEnterKeyStroke, TagFieldLayout, TagFieldNavigationKeyStroke, TagFieldOpenPopupKeyStroke, ValueField } from '../../../index';\n\nvar TagField = /*#__PURE__*/function (_ValueField) {\n  _inherits(TagField, _ValueField);\n\n  var _super = _createSuper(TagField);\n\n  function TagField() {\n    var _this;\n\n    _classCallCheck(this, TagField);\n\n    _this = _super.call(this);\n    _this.$field = null;\n    _this.fieldHtmlComp = null;\n    _this.popup = null;\n    _this.lookupCall = null;\n    _this._currentLookupCall = null;\n    _this.tagBar = null;\n    return _this;\n  }\n\n  _createClass(TagField, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(TagField.prototype), \"_init\", this).call(this, model);\n\n      this.tagBar = scout.create('TagBar', {\n        parent: this,\n        tags: this.value\n      });\n      this.tagBar.on('tagRemove', this._onTagRemove.bind(this));\n      this.on('propertyChange', this._onValueChange.bind(this));\n\n      this._setLookupCall(this.lookupCall);\n    }\n  }, {\n    key: \"_onTagRemove\",\n    value: function _onTagRemove(event) {\n      this.removeTag(event.tag);\n    }\n  }, {\n    key: \"_initKeyStrokeContext\",\n    value: function _initKeyStrokeContext() {\n      _get(_getPrototypeOf(TagField.prototype), \"_initKeyStrokeContext\", this).call(this);\n\n      this.keyStrokeContext.registerKeyStroke([new TagFieldCancelKeyStroke(this), new TagFieldEnterKeyStroke(this), new TagFieldNavigationKeyStroke(this._createFieldAdapter()), new TagFieldDeleteKeyStroke(this._createFieldAdapter()), new TagFieldOpenPopupKeyStroke(this)]);\n    }\n  }, {\n    key: \"_createKeyStrokeContext\",\n    value: function _createKeyStrokeContext() {\n      return new InputFieldKeyStrokeContext();\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.addContainer(this.$parent, 'tag-field', new TagFieldLayout(this));\n      this.addLabel();\n      this.addMandatoryIndicator();\n      var $fieldContainer = this.$container.appendDiv();\n      this.fieldHtmlComp = HtmlComponent.install($fieldContainer, this.session);\n      this.fieldHtmlComp.setLayout(new TagFieldContainerLayout(this));\n      this.tagBar.render($fieldContainer);\n      var $field = $fieldContainer.appendElement('<input>', 'field').on('keydown', this._onInputKeydown.bind(this)).on('keyup', this._onInputKeyup.bind(this)).on('input', this._onFieldInput.bind(this));\n      this.addFieldContainer($fieldContainer);\n      this.addField($field);\n      this.addStatus();\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(TagField.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderValue();\n    }\n  }, {\n    key: \"_renderValue\",\n    value: function _renderValue() {\n      this.tagBar.updateTags();\n    }\n  }, {\n    key: \"_setValue\",\n    value: function _setValue(value) {\n      _get(_getPrototypeOf(TagField.prototype), \"_setValue\", this).call(this, value);\n\n      if (this.tagBar) {\n        // required for _init case\n        this.tagBar.setTags(this.value\n        /* do not use the function parameter here. instead use the member variable because the value might have changed in a validator. */\n        );\n      }\n    }\n  }, {\n    key: \"_setLookupCall\",\n    value: function _setLookupCall(lookupCall) {\n      this._setProperty('lookupCall', LookupCall.ensure(lookupCall, this.session));\n    }\n  }, {\n    key: \"formatValue\",\n    value: function formatValue(value) {\n      // Info: value and displayText are not related in the TagField\n      return '';\n    }\n    /**\n     * @override ValueField.js\n     */\n\n  }, {\n    key: \"_validateValue\",\n    value: function _validateValue(value) {\n      var tags = arrays.ensure(value);\n      var result = [];\n      tags.forEach(function (tag) {\n        if (!strings.empty(tag)) {\n          tag = tag.toLowerCase();\n\n          if (result.indexOf(tag) < 0) {\n            result.push(tag);\n          }\n        }\n      });\n      return result;\n    }\n  }, {\n    key: \"_parseValue\",\n    value: function _parseValue(displayText) {\n      var tags = arrays.ensure(this.value);\n      tags = tags.slice();\n      tags.push(displayText);\n      return tags;\n    }\n  }, {\n    key: \"_renderDisplayText\",\n    value: function _renderDisplayText() {\n      this.$field.val(this.displayText); // needs to be before super call (otherwise updateHasText fails)\n\n      _get(_getPrototypeOf(TagField.prototype), \"_renderDisplayText\", this).call(this);\n\n      this._updateInputVisible();\n    }\n  }, {\n    key: \"_renderEnabled\",\n    value: function _renderEnabled() {\n      _get(_getPrototypeOf(TagField.prototype), \"_renderEnabled\", this).call(this);\n\n      this._updateInputVisible();\n    }\n  }, {\n    key: \"_renderFieldStyle\",\n    value: function _renderFieldStyle() {\n      _get(_getPrototypeOf(TagField.prototype), \"_renderFieldStyle\", this).call(this);\n\n      if (this.rendered) {\n        this.fieldHtmlComp.invalidateLayoutTree();\n      }\n    }\n  }, {\n    key: \"_updateInputVisible\",\n    value: function _updateInputVisible() {\n      var visible,\n          oldVisible = !this.$field.isVisible();\n\n      if (this.enabledComputed) {\n        visible = true;\n      } else {\n        visible = strings.hasText(this.displayText);\n      }\n\n      this.$field.setVisible(visible); // update tag-elements (must remove X when disabled)\n\n      if (visible !== oldVisible) {\n        this._renderValue();\n      }\n    }\n  }, {\n    key: \"_readDisplayText\",\n    value: function _readDisplayText() {\n      return this.$field.val();\n    }\n  }, {\n    key: \"_clear\",\n    value: function _clear() {\n      this.$field.val('');\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"acceptInput\",\n    value: function acceptInput(whileTyping) {\n      if (this.popup) {\n        if (this.popup.selectedRow()) {\n          this.popup.triggerLookupRowSelected();\n        } else {\n          this.closePopup();\n        }\n\n        return;\n      }\n\n      _get(_getPrototypeOf(TagField.prototype), \"acceptInput\", this).call(this, false);\n    }\n  }, {\n    key: \"_triggerAcceptInput\",\n    value: function _triggerAcceptInput() {\n      this.trigger('acceptInput', {\n        displayText: this.displayText,\n        value: this.value\n      });\n    }\n  }, {\n    key: \"aboutToBlurByMouseDown\",\n    value: function aboutToBlurByMouseDown(target) {\n      if (fields.eventOutsideProposalField(this, target)) {\n        this.acceptInput(true);\n      }\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_onFieldBlur\",\n    value: function _onFieldBlur(event) {\n      // We cannot call super until chooser popup has been closed (see #acceptInput)\n      this.closePopup();\n\n      _get(_getPrototypeOf(TagField.prototype), \"_onFieldBlur\", this).call(this, event);\n\n      if (this.rendered && !this.removing) {\n        this.tagBar.blur();\n      }\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_onFieldFocus\",\n    value: function _onFieldFocus(event) {\n      _get(_getPrototypeOf(TagField.prototype), \"_onFieldFocus\", this).call(this, event);\n\n      if (this.rendered && !this.removing) {\n        this.tagBar.focus();\n      }\n    }\n  }, {\n    key: \"_onFieldInput\",\n    value: function _onFieldInput() {\n      this._updateHasText();\n    }\n  }, {\n    key: \"addTag\",\n    value: function addTag(text) {\n      var value = this._parseValue(text);\n\n      this.setValue(value);\n\n      this._triggerAcceptInput();\n    }\n  }, {\n    key: \"removeTag\",\n    value: function removeTag(tag) {\n      if (strings.empty(tag)) {\n        return;\n      }\n\n      tag = tag.toLowerCase();\n      var tags = arrays.ensure(this.value);\n\n      if (tags.indexOf(tag) === -1) {\n        return;\n      }\n\n      tags = tags.slice();\n      arrays.remove(tags, tag);\n      this.setValue(tags);\n\n      this._triggerAcceptInput(); // focus was previously on the removed tag, restore focus on the field.\n\n\n      this.focus();\n    }\n  }, {\n    key: \"_onInputKeydown\",\n    value: function _onInputKeydown(event) {\n      if (this._isNavigationKey(event) && this.popup) {\n        this.popup.delegateKeyEvent(event);\n      } else if (event.which === keys.ESC) {\n        this.closePopup();\n      }\n    }\n  }, {\n    key: \"_isNavigationKey\",\n    value: function _isNavigationKey(event) {\n      return scout.isOneOf(event.which, [keys.PAGE_UP, keys.PAGE_DOWN, keys.UP, keys.DOWN]);\n    }\n  }, {\n    key: \"_onInputKeyup\",\n    value: function _onInputKeyup(event) {\n      // Prevent chooser popup from being opened again, after it has been closed by pressing ESC\n      if (event.which === keys.ESC) {\n        return;\n      }\n\n      if (!this._isNavigationKey(event)) {\n        this._lookupByText(this.$field.val());\n      }\n    }\n  }, {\n    key: \"_lookupByText\",\n    value: function _lookupByText(text) {\n      if (!this.lookupCall) {\n        return null;\n      }\n\n      if (strings.empty(text) || text.length < 2) {\n        this.closePopup();\n        return;\n      }\n\n      this._currentLookupCall = this.lookupCall.cloneForText(text);\n      this.trigger('prepareLookupCall', {\n        lookupCall: this._currentLookupCall\n      });\n      return this._currentLookupCall.execute().always(function () {\n        this._currentLookupCall = null;\n      }.bind(this)).done(this._onLookupDone.bind(this));\n    }\n  }, {\n    key: \"_onLookupDone\",\n    value: function _onLookupDone(result) {\n      try {\n        if (!this.rendered || !this.isFocused() || result.lookupRows.length === 0) {\n          this.closePopup();\n          return;\n        }\n\n        this.openPopup();\n        this.popup.setLookupResult(result);\n      } finally {\n        this.trigger('lookupCallDone', {\n          result: result\n        });\n      }\n    }\n  }, {\n    key: \"openPopup\",\n    value: function openPopup() {\n      if (this.popup) {\n        return;\n      }\n\n      this.popup = scout.create('TagChooserPopup', {\n        parent: this,\n        $anchor: this.$field,\n        boundToAnchor: true,\n        closeOnAnchorMouseDown: false,\n        field: this\n      });\n      this.popup.on('lookupRowSelected', this._onLookupRowSelected.bind(this));\n      this.popup.one('close', this._onPopupClose.bind(this));\n      this.popup.open();\n    }\n  }, {\n    key: \"closePopup\",\n    value: function closePopup() {\n      if (this.popup && !this.popup.destroying) {\n        this.popup.close();\n      }\n    }\n  }, {\n    key: \"_onLookupRowSelected\",\n    value: function _onLookupRowSelected(event) {\n      this._clear();\n\n      this._updateHasText();\n\n      this.addTag(event.lookupRow.key);\n      this.closePopup();\n    }\n  }, {\n    key: \"_onPopupClose\",\n    value: function _onPopupClose(event) {\n      this.popup = null;\n    }\n  }, {\n    key: \"isInputFocused\",\n    value: function isInputFocused() {\n      var ae = this.$fieldContainer.activeElement();\n      return this.$field.is(ae);\n    }\n  }, {\n    key: \"_onValueChange\",\n    value: function _onValueChange(event) {\n      if ('value' === event.propertyName) {\n        this._renderLabel();\n      }\n    }\n  }, {\n    key: \"_renderPlaceholder\",\n    value: function _renderPlaceholder($field) {\n      // only render placeholder when tag field is empty (has no tags)\n      var hasTags = !!arrays.ensure(this.value).length;\n      $field = scout.nvl($field, this.$field);\n\n      if ($field) {\n        $field.placeholder(hasTags ? '' : this.label);\n      }\n    }\n  }, {\n    key: \"_createFieldAdapter\",\n    value: function _createFieldAdapter() {\n      return TagField.createFieldAdapter(this);\n    }\n  }], [{\n    key: \"createFieldAdapter\",\n    value: function createFieldAdapter(field) {\n      return {\n        $container: function $container() {\n          return field.$fieldContainer;\n        },\n        enabled: function enabled() {\n          return strings.empty(field._readDisplayText());\n        },\n        focus: function focus() {\n          field.$field.focus();\n        },\n        one: function one(p1, p2) {\n          field.one(p1, p2);\n        },\n        off: function off(p1, p2) {\n          field.off(p1, p2);\n        },\n        removeTag: function removeTag(tag) {\n          field.removeTag(tag);\n        }\n      };\n    }\n  }]);\n\n  return TagField;\n}(ValueField);\n\nexport { TagField as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/form/fields/tagfield/TagField.js"],"names":["arrays","HtmlComponent","InputFieldKeyStrokeContext","fields","keys","LookupCall","scout","strings","TagFieldCancelKeyStroke","TagFieldContainerLayout","TagFieldDeleteKeyStroke","TagFieldEnterKeyStroke","TagFieldLayout","TagFieldNavigationKeyStroke","TagFieldOpenPopupKeyStroke","ValueField","TagField","$field","fieldHtmlComp","popup","lookupCall","_currentLookupCall","tagBar","model","create","parent","tags","value","on","_onTagRemove","bind","_onValueChange","_setLookupCall","event","removeTag","tag","keyStrokeContext","registerKeyStroke","_createFieldAdapter","addContainer","$parent","addLabel","addMandatoryIndicator","$fieldContainer","$container","appendDiv","install","session","setLayout","render","appendElement","_onInputKeydown","_onInputKeyup","_onFieldInput","addFieldContainer","addField","addStatus","_renderValue","updateTags","setTags","_setProperty","ensure","result","forEach","empty","toLowerCase","indexOf","push","displayText","slice","val","_updateInputVisible","rendered","invalidateLayoutTree","visible","oldVisible","isVisible","enabledComputed","hasText","setVisible","whileTyping","selectedRow","triggerLookupRowSelected","closePopup","trigger","target","eventOutsideProposalField","acceptInput","removing","blur","focus","_updateHasText","text","_parseValue","setValue","_triggerAcceptInput","remove","_isNavigationKey","delegateKeyEvent","which","ESC","isOneOf","PAGE_UP","PAGE_DOWN","UP","DOWN","_lookupByText","length","cloneForText","execute","always","done","_onLookupDone","isFocused","lookupRows","openPopup","setLookupResult","$anchor","boundToAnchor","closeOnAnchorMouseDown","field","_onLookupRowSelected","one","_onPopupClose","open","destroying","close","_clear","addTag","lookupRow","key","ae","activeElement","is","propertyName","_renderLabel","hasTags","nvl","placeholder","label","createFieldAdapter","enabled","_readDisplayText","p1","p2","off"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {\n  arrays,\n  HtmlComponent,\n  InputFieldKeyStrokeContext,\n  fields,\n  keys,\n  LookupCall,\n  scout,\n  strings,\n  TagFieldCancelKeyStroke,\n  TagFieldContainerLayout,\n  TagFieldDeleteKeyStroke,\n  TagFieldEnterKeyStroke,\n  TagFieldLayout,\n  TagFieldNavigationKeyStroke,\n  TagFieldOpenPopupKeyStroke,\n  ValueField\n} from '../../../index';\n\nexport default class TagField extends ValueField {\n\n  constructor() {\n    super();\n\n    this.$field = null;\n    this.fieldHtmlComp = null;\n    this.popup = null;\n    this.lookupCall = null;\n    this._currentLookupCall = null;\n    this.tagBar = null;\n  }\n\n  _init(model) {\n    super._init(model);\n\n    this.tagBar = scout.create('TagBar', {\n      parent: this,\n      tags: this.value\n    });\n    this.tagBar.on('tagRemove', this._onTagRemove.bind(this));\n    this.on('propertyChange', this._onValueChange.bind(this));\n    this._setLookupCall(this.lookupCall);\n  }\n\n  _onTagRemove(event) {\n    this.removeTag(event.tag);\n  }\n\n  _initKeyStrokeContext() {\n    super._initKeyStrokeContext();\n    this.keyStrokeContext.registerKeyStroke([\n      new TagFieldCancelKeyStroke(this),\n      new TagFieldEnterKeyStroke(this),\n      new TagFieldNavigationKeyStroke(this._createFieldAdapter()),\n      new TagFieldDeleteKeyStroke(this._createFieldAdapter()),\n      new TagFieldOpenPopupKeyStroke(this)\n    ]);\n  }\n\n  _createKeyStrokeContext() {\n    return new InputFieldKeyStrokeContext();\n  }\n\n  _render() {\n    this.addContainer(this.$parent, 'tag-field', new TagFieldLayout(this));\n    this.addLabel();\n    this.addMandatoryIndicator();\n    var $fieldContainer = this.$container.appendDiv();\n    this.fieldHtmlComp = HtmlComponent.install($fieldContainer, this.session);\n    this.fieldHtmlComp.setLayout(new TagFieldContainerLayout(this));\n    this.tagBar.render($fieldContainer);\n    var $field = $fieldContainer.appendElement('<input>', 'field')\n      .on('keydown', this._onInputKeydown.bind(this))\n      .on('keyup', this._onInputKeyup.bind(this))\n      .on('input', this._onFieldInput.bind(this));\n    this.addFieldContainer($fieldContainer);\n    this.addField($field);\n    this.addStatus();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderValue();\n  }\n\n  _renderValue() {\n    this.tagBar.updateTags();\n  }\n\n  _setValue(value) {\n    super._setValue(value);\n    if (this.tagBar) { // required for _init case\n      this.tagBar.setTags(this.value /* do not use the function parameter here. instead use the member variable because the value might have changed in a validator. */);\n    }\n  }\n\n  _setLookupCall(lookupCall) {\n    this._setProperty('lookupCall', LookupCall.ensure(lookupCall, this.session));\n  }\n\n  formatValue(value) {\n    // Info: value and displayText are not related in the TagField\n    return '';\n  }\n\n  /**\n   * @override ValueField.js\n   */\n  _validateValue(value) {\n    var tags = arrays.ensure(value);\n    var result = [];\n    tags.forEach(function(tag) {\n      if (!strings.empty(tag)) {\n        tag = tag.toLowerCase();\n        if (result.indexOf(tag) < 0) {\n          result.push(tag);\n        }\n      }\n    });\n    return result;\n  }\n\n  _parseValue(displayText) {\n    var tags = arrays.ensure(this.value);\n    tags = tags.slice();\n    tags.push(displayText);\n    return tags;\n  }\n\n  _renderDisplayText() {\n    this.$field.val(this.displayText); // needs to be before super call (otherwise updateHasText fails)\n    super._renderDisplayText();\n    this._updateInputVisible();\n  }\n\n  _renderEnabled() {\n    super._renderEnabled();\n    this._updateInputVisible();\n  }\n\n  _renderFieldStyle() {\n    super._renderFieldStyle();\n    if (this.rendered) {\n      this.fieldHtmlComp.invalidateLayoutTree();\n    }\n  }\n\n  _updateInputVisible() {\n    var visible, oldVisible = !this.$field.isVisible();\n    if (this.enabledComputed) {\n      visible = true;\n    } else {\n      visible = strings.hasText(this.displayText);\n    }\n    this.$field.setVisible(visible);\n    // update tag-elements (must remove X when disabled)\n    if (visible !== oldVisible) {\n      this._renderValue();\n    }\n  }\n\n  _readDisplayText() {\n    return this.$field.val();\n  }\n\n  _clear() {\n    this.$field.val('');\n  }\n\n  /**\n   * @override\n   */\n  acceptInput(whileTyping) {\n    if (this.popup) {\n      if (this.popup.selectedRow()) {\n        this.popup.triggerLookupRowSelected();\n      } else {\n        this.closePopup();\n      }\n      return;\n    }\n    super.acceptInput(false);\n  }\n\n  _triggerAcceptInput() {\n    this.trigger('acceptInput', {\n      displayText: this.displayText,\n      value: this.value\n    });\n  }\n\n  aboutToBlurByMouseDown(target) {\n    if (fields.eventOutsideProposalField(this, target)) {\n      this.acceptInput(true);\n    }\n  }\n\n  /**\n   * @override\n   */\n  _onFieldBlur(event) {\n    // We cannot call super until chooser popup has been closed (see #acceptInput)\n    this.closePopup();\n    super._onFieldBlur(event);\n    if (this.rendered && !this.removing) {\n      this.tagBar.blur();\n    }\n  }\n\n  /**\n   * @override\n   */\n  _onFieldFocus(event) {\n    super._onFieldFocus(event);\n    if (this.rendered && !this.removing) {\n      this.tagBar.focus();\n    }\n  }\n\n  _onFieldInput() {\n    this._updateHasText();\n  }\n\n  addTag(text) {\n    var value = this._parseValue(text);\n    this.setValue(value);\n    this._triggerAcceptInput();\n  }\n\n  removeTag(tag) {\n    if (strings.empty(tag)) {\n      return;\n    }\n    tag = tag.toLowerCase();\n    var tags = arrays.ensure(this.value);\n    if (tags.indexOf(tag) === -1) {\n      return;\n    }\n    tags = tags.slice();\n    arrays.remove(tags, tag);\n    this.setValue(tags);\n    this._triggerAcceptInput();\n    // focus was previously on the removed tag, restore focus on the field.\n    this.focus();\n  }\n\n  _onInputKeydown(event) {\n    if (this._isNavigationKey(event) && this.popup) {\n      this.popup.delegateKeyEvent(event);\n    } else if (event.which === keys.ESC) {\n      this.closePopup();\n    }\n  }\n\n  _isNavigationKey(event) {\n    return scout.isOneOf(event.which, [\n      keys.PAGE_UP,\n      keys.PAGE_DOWN,\n      keys.UP,\n      keys.DOWN\n    ]);\n  }\n\n  _onInputKeyup(event) {\n    // Prevent chooser popup from being opened again, after it has been closed by pressing ESC\n    if (event.which === keys.ESC) {\n      return;\n    }\n    if (!this._isNavigationKey(event)) {\n      this._lookupByText(this.$field.val());\n    }\n  }\n\n  _lookupByText(text) {\n    if (!this.lookupCall) {\n      return null;\n    }\n    if (strings.empty(text) || text.length < 2) {\n      this.closePopup();\n      return;\n    }\n\n    this._currentLookupCall = this.lookupCall.cloneForText(text);\n    this.trigger('prepareLookupCall', {\n      lookupCall: this._currentLookupCall\n    });\n    return this._currentLookupCall\n      .execute()\n      .always(function() {\n        this._currentLookupCall = null;\n      }.bind(this))\n      .done(this._onLookupDone.bind(this));\n  }\n\n  _onLookupDone(result) {\n    try {\n      if (!this.rendered || !this.isFocused() || result.lookupRows.length === 0) {\n        this.closePopup();\n        return;\n      }\n\n      this.openPopup();\n      this.popup.setLookupResult(result);\n    } finally {\n      this.trigger('lookupCallDone', {\n        result: result\n      });\n    }\n  }\n\n  openPopup() {\n    if (this.popup) {\n      return;\n    }\n    this.popup = scout.create('TagChooserPopup', {\n      parent: this,\n      $anchor: this.$field,\n      boundToAnchor: true,\n      closeOnAnchorMouseDown: false,\n      field: this\n    });\n    this.popup.on('lookupRowSelected', this._onLookupRowSelected.bind(this));\n    this.popup.one('close', this._onPopupClose.bind(this));\n    this.popup.open();\n  }\n\n  closePopup() {\n    if (this.popup && !this.popup.destroying) {\n      this.popup.close();\n    }\n  }\n\n  _onLookupRowSelected(event) {\n    this._clear();\n    this._updateHasText();\n    this.addTag(event.lookupRow.key);\n    this.closePopup();\n  }\n\n  _onPopupClose(event) {\n    this.popup = null;\n  }\n\n  isInputFocused() {\n    var ae = this.$fieldContainer.activeElement();\n    return this.$field.is(ae);\n  }\n\n  _onValueChange(event) {\n    if ('value' === event.propertyName) {\n      this._renderLabel();\n    }\n  }\n\n  _renderPlaceholder($field) {\n    // only render placeholder when tag field is empty (has no tags)\n    var hasTags = !!arrays.ensure(this.value).length;\n    $field = scout.nvl($field, this.$field);\n    if ($field) {\n      $field.placeholder(hasTags ? '' : this.label);\n    }\n  }\n\n  _createFieldAdapter() {\n    return TagField.createFieldAdapter(this);\n  }\n\n  static createFieldAdapter(field) {\n    return {\n      $container: function() {\n        return field.$fieldContainer;\n      },\n\n      enabled: function() {\n        return strings.empty(field._readDisplayText());\n      },\n\n      focus: function() {\n        field.$field.focus();\n      },\n\n      one: function(p1, p2) {\n        field.one(p1, p2);\n      },\n\n      off: function(p1, p2) {\n        field.off(p1, p2);\n      },\n\n      removeTag: function(tag) {\n        field.removeTag(tag);\n      }\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}