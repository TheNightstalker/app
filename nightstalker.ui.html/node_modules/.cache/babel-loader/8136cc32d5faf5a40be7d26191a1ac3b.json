{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { Column } from '../../index';\n\nvar IconColumn = /*#__PURE__*/function (_Column) {\n  _inherits(IconColumn, _Column);\n\n  var _super = _createSuper(IconColumn);\n\n  function IconColumn() {\n    var _this;\n\n    _classCallCheck(this, IconColumn);\n\n    _this = _super.call(this);\n    _this.minWidth = Column.NARROW_MIN_WIDTH;\n    _this.filterType = 'ColumnUserFilter';\n    _this.textBased = false;\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  _createClass(IconColumn, [{\n    key: \"_initCell\",\n    value: function _initCell(cell) {\n      _get(_getPrototypeOf(IconColumn.prototype), \"_initCell\", this).call(this, cell); // only display icon, no text\n\n\n      cell.text = null;\n      cell.iconId = cell.value || cell.iconId;\n      return cell;\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_formatValue\",\n    value: function _formatValue(value) {\n      // only display icon, no text\n      return null;\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_cellCssClass\",\n    value: function _cellCssClass(cell, tableNode) {\n      var cssClass = _get(_getPrototypeOf(IconColumn.prototype), \"_cellCssClass\", this).call(this, cell, tableNode);\n\n      cssClass += ' table-icon-cell';\n      return cssClass;\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"cellTextForGrouping\",\n    value: function cellTextForGrouping(row) {\n      var cell = this.table.cell(this, row);\n      return cell.value;\n    }\n  }, {\n    key: \"createAggrGroupCell\",\n    value: function createAggrGroupCell(row) {\n      var cell = _get(_getPrototypeOf(IconColumn.prototype), \"createAggrGroupCell\", this).call(this, row); // Make sure only icon and no text is displayed\n\n\n      cell.text = null;\n      return cell;\n    }\n  }]);\n\n  return IconColumn;\n}(Column);\n\nexport { IconColumn as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/table/columns/IconColumn.js"],"names":["Column","IconColumn","minWidth","NARROW_MIN_WIDTH","filterType","textBased","cell","text","iconId","value","tableNode","cssClass","row","table"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,MAAR,QAAqB,aAArB;;IAEqBC,U;;;;;AAEnB,wBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,QAAL,GAAgBF,MAAM,CAACG,gBAAvB;AACA,UAAKC,UAAL,GAAkB,kBAAlB;AACA,UAAKC,SAAL,GAAiB,KAAjB;AAJY;AAKb;AAED;AACF;AACA;;;;;8BACYC,I,EAAM;AACd,gFAAgBA,IAAhB,EADc,CAEd;;;AACAA,MAAAA,IAAI,CAACC,IAAL,GAAY,IAAZ;AACAD,MAAAA,IAAI,CAACE,MAAL,GAAcF,IAAI,CAACG,KAAL,IAAcH,IAAI,CAACE,MAAjC;AACA,aAAOF,IAAP;AACD;AAED;AACF;AACA;;;;iCACeG,K,EAAO;AAClB;AACA,aAAO,IAAP;AACD;AAED;AACF;AACA;;;;kCACgBH,I,EAAMI,S,EAAW;AAC7B,UAAIC,QAAQ,iFAAuBL,IAAvB,EAA6BI,SAA7B,CAAZ;;AACAC,MAAAA,QAAQ,IAAI,kBAAZ;AACA,aAAOA,QAAP;AACD;AAED;AACF;AACA;;;;wCACsBC,G,EAAK;AACvB,UAAIN,IAAI,GAAG,KAAKO,KAAL,CAAWP,IAAX,CAAgB,IAAhB,EAAsBM,GAAtB,CAAX;AACA,aAAON,IAAI,CAACG,KAAZ;AACD;;;wCAEmBG,G,EAAK;AACvB,UAAIN,IAAI,uFAA6BM,GAA7B,CAAR,CADuB,CAEvB;;;AACAN,MAAAA,IAAI,CAACC,IAAL,GAAY,IAAZ;AACA,aAAOD,IAAP;AACD;;;;EAlDqCN,M;;SAAnBC,U","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {Column} from '../../index';\n\nexport default class IconColumn extends Column {\n\n  constructor() {\n    super();\n    this.minWidth = Column.NARROW_MIN_WIDTH;\n    this.filterType = 'ColumnUserFilter';\n    this.textBased = false;\n  }\n\n  /**\n   * @override\n   */\n  _initCell(cell) {\n    super._initCell(cell);\n    // only display icon, no text\n    cell.text = null;\n    cell.iconId = cell.value || cell.iconId;\n    return cell;\n  }\n\n  /**\n   * @override\n   */\n  _formatValue(value) {\n    // only display icon, no text\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  _cellCssClass(cell, tableNode) {\n    var cssClass = super._cellCssClass(cell, tableNode);\n    cssClass += ' table-icon-cell';\n    return cssClass;\n  }\n\n  /**\n   * @override\n   */\n  cellTextForGrouping(row) {\n    var cell = this.table.cell(this, row);\n    return cell.value;\n  }\n\n  createAggrGroupCell(row) {\n    var cell = super.createAggrGroupCell(row);\n    // Make sure only icon and no text is displayed\n    cell.text = null;\n    return cell;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}