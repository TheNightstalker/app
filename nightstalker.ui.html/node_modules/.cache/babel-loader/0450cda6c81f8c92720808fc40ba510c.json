{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Device, FormField, HtmlComponent, scout, TagBarLayout, tooltips, Widget } from '../index';\nimport $ from 'jquery';\n\nvar TagBar = /*#__PURE__*/function (_Widget) {\n  _inherits(TagBar, _Widget);\n\n  var _super = _createSuper(TagBar);\n\n  function TagBar() {\n    var _this;\n\n    _classCallCheck(this, TagBar);\n\n    _this = _super.call(this);\n    _this.overflowEnabled = true;\n    _this.$overflowIcon = null;\n    _this.overflowVisible = false;\n    _this.overflow = null;\n    _this.tags = [];\n    /**\n     * Whether or not the tag elements are clickable (even when TagBar is disabled).\n     * When the tag elements are clickable a click handler is registered and\n     * a pointer cursor appears when hovering over the element.\n     */\n\n    _this.clickable = false;\n    return _this;\n  }\n\n  _createClass(TagBar, [{\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent.appendDiv('tag-bar');\n      this.htmlComp = HtmlComponent.install(this.$container, this.session);\n      this.htmlComp.setLayout(new TagBarLayout(this));\n\n      this._installTooltipSupport();\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(TagBar.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderTags();\n\n      this._renderOverflowVisible();\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.$overflowIcon = null;\n      this.overflowVisible = false;\n      this.closeOverflowPopup();\n\n      this._uninstallTooltipSupport();\n\n      _get(_getPrototypeOf(TagBar.prototype), \"_remove\", this).call(this);\n    }\n  }, {\n    key: \"setTags\",\n    value: function setTags(tags) {\n      this.setProperty('tags', tags);\n    }\n  }, {\n    key: \"updateTags\",\n    value: function updateTags() {\n      if (this.rendered) {\n        this._renderTags();\n      }\n    }\n    /**\n     * This function is also used by sub- and friend-classes like the TagOverflowPopup.\n     */\n\n  }, {\n    key: \"_renderTags\",\n    value: function _renderTags() {\n      var tags = arrays.ensure(this.tags);\n      var clickHandler = this.clickable ? this._onTagClick.bind(this) : null;\n\n      var removeHandler = this._onTagRemoveClick.bind(this);\n\n      TagBar.renderTags(this.$container, tags, this.enabledComputed, clickHandler, removeHandler);\n      this.invalidateLayoutTree();\n    }\n  }, {\n    key: \"_onTagClick\",\n    value: function _onTagClick(event) {\n      var tag = TagBar.getTagData($(event.currentTarget));\n\n      this._triggerTagClick(tag);\n\n      return false;\n    }\n  }, {\n    key: \"_triggerTagClick\",\n    value: function _triggerTagClick(tag) {\n      this.trigger('tagClick', {\n        tag: tag\n      });\n    }\n  }, {\n    key: \"_onTagRemoveClick\",\n    value: function _onTagRemoveClick(event) {\n      if (this.enabledComputed) {\n        this.removeTagByElement($(event.currentTarget));\n      }\n\n      return false;\n    }\n  }, {\n    key: \"removeTagByElement\",\n    value: function removeTagByElement($tag) {\n      var tag = TagBar.getTagData($tag);\n\n      if (tag) {\n        this._triggerTagRemove(tag, $tag);\n      }\n    }\n  }, {\n    key: \"_triggerTagRemove\",\n    value: function _triggerTagRemove(tag, $tag) {\n      this.trigger('tagRemove', {\n        tag: tag,\n        $tag: $tag\n      });\n    }\n  }, {\n    key: \"_onOverflowIconMousedown\",\n    value: function _onOverflowIconMousedown(event) {\n      this.openOverflowPopup();\n      return false;\n    }\n  }, {\n    key: \"isOverflowIconFocused\",\n    value: function isOverflowIconFocused() {\n      if (!this.$overflowIcon) {\n        return false;\n      }\n\n      var ae = this.$container.activeElement();\n      return this.$overflowIcon.is(ae);\n    }\n  }, {\n    key: \"openOverflowPopup\",\n    value: function openOverflowPopup() {\n      if (this.overflow) {\n        return;\n      }\n\n      this.overflow = this._createOverflowPopup();\n      this.overflow.on('close', this._onOverflowPopupClose.bind(this));\n      this.overflow.open();\n    }\n  }, {\n    key: \"_createOverflowPopup\",\n    value: function _createOverflowPopup() {\n      return scout.create('TagBarOverflowPopup', {\n        parent: this,\n        closeOnAnchorMouseDown: false,\n        focusableContainer: true,\n        $anchor: this.$container,\n        $headBlueprint: this.$overflowIcon,\n        cssClass: this.cssClass\n      });\n    }\n  }, {\n    key: \"closeOverflowPopup\",\n    value: function closeOverflowPopup() {\n      if (this.overflow && !this.overflow.destroying) {\n        this.overflow.close();\n      }\n    }\n  }, {\n    key: \"_onOverflowPopupClose\",\n    value: function _onOverflowPopupClose() {\n      this.overflow = null;\n    }\n  }, {\n    key: \"_installTooltipSupport\",\n    value: function _installTooltipSupport() {\n      tooltips.install(this.$container, {\n        parent: this,\n        selector: '.tag-text',\n        text: this._tagTooltipText.bind(this),\n        arrowPosition: 50,\n        arrowPositionUnit: '%',\n        nativeTooltip: !Device.get().isCustomEllipsisTooltipPossible()\n      });\n    }\n  }, {\n    key: \"_uninstallTooltipSupport\",\n    value: function _uninstallTooltipSupport() {\n      tooltips.uninstall(this.$container);\n    }\n  }, {\n    key: \"_tagTooltipText\",\n    value: function _tagTooltipText($tag) {\n      return $tag.isContentTruncated() ? $tag.text() : null;\n    }\n  }, {\n    key: \"_removeFocusFromTagElements\",\n    value: function _removeFocusFromTagElements() {\n      TagBar.findFocusableTagElements(this.$container).removeClass('focused').setTabbable(false);\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.$container.addClass('focused');\n\n      this._removeFocusFromTagElements();\n\n      this.closeOverflowPopup();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.$container.removeClass('focused'); // when overflow popup opens it sets focus to the first tag element, this means:\n      // the input field loses focus. In that case we must prevent that the overflow popup is closed.\n\n      var popupRequestsFocus = this.overflow && this.overflow.$container.has(event.relatedTarget);\n\n      if (popupRequestsFocus) {\n        return;\n      }\n\n      this.closeOverflowPopup();\n    }\n  }, {\n    key: \"setOverflowVisible\",\n    value: function setOverflowVisible(overflowVisible) {\n      this.setProperty('overflowVisible', overflowVisible);\n    }\n  }, {\n    key: \"_renderOverflowVisible\",\n    value: function _renderOverflowVisible() {\n      if (this.overflowVisible) {\n        if (!this.$overflowIcon) {\n          this.$overflowIcon = this.$container.prependDiv('overflow-icon').on('mousedown', this._onOverflowIconMousedown.bind(this));\n        }\n      } else {\n        if (this.$overflowIcon) {\n          this.$overflowIcon.remove();\n          this.$overflowIcon = null;\n        }\n      }\n    }\n  }, {\n    key: \"_updateErrorStatusClasses\",\n    value: function _updateErrorStatusClasses(statusClass, hasStatus) {\n      _get(_getPrototypeOf(TagBar.prototype), \"_updateErrorStatusClasses\", this).call(this, statusClass, hasStatus);\n\n      this.$container.removeClass(FormField.SEVERITY_CSS_CLASSES);\n      this.$container.addClass(statusClass, hasStatus);\n    }\n    /**\n     * Returns the tag-texts of the tag-elements currently visible in the UI (=not hidden).\n     */\n\n  }, {\n    key: \"visibleTags\",\n    value: function visibleTags() {\n      if (!this.rendered) {\n        return [];\n      }\n\n      var tags = [];\n      this.$container.find('.tag-element:not(.hidden)').each(function () {\n        tags.push(TagBar.getTagData($(this)));\n      });\n      return tags;\n    } // --- static helpers ---\n\n  }], [{\n    key: \"findFocusedTagElement\",\n    value: function findFocusedTagElement($container) {\n      return $container.find('.tag-element.focused');\n    }\n  }, {\n    key: \"findFocusableTagElements\",\n    value: function findFocusableTagElements($container) {\n      return $container.find('.tag-element:not(.hidden),.overflow-icon');\n    }\n  }, {\n    key: \"focusFirstTagElement\",\n    value: function focusFirstTagElement($container) {\n      this.focusTagElement(this.firstTagElement($container));\n    }\n  }, {\n    key: \"firstTagElement\",\n    value: function firstTagElement($container) {\n      return $container.find('.tag-element').first();\n    }\n  }, {\n    key: \"focusTagElement\",\n    value: function focusTagElement($tagElement) {\n      $tagElement.setTabbable(true).addClass('focused').focus();\n    }\n  }, {\n    key: \"unfocusTagElement\",\n    value: function unfocusTagElement($tagElement) {\n      $tagElement.setTabbable(false).removeClass('focused');\n    }\n  }, {\n    key: \"getTagData\",\n    value: function getTagData($tag) {\n      var tagData = $tag.data('tag');\n\n      if (tagData) {\n        return tagData;\n      }\n\n      return $tag.parent().data('tag');\n    }\n  }, {\n    key: \"renderTags\",\n    value: function renderTags($parent, tags, enabled, clickHandler, removeHandler) {\n      $parent.find('.tag-element').remove();\n      tags.forEach(function (tagText) {\n        TagBar.renderTag($parent, tagText, enabled, clickHandler, removeHandler);\n      }, this);\n    }\n  }, {\n    key: \"renderTag\",\n    value: function renderTag($parent, tagText, enabled, clickHandler, removeHandler) {\n      var $element = $parent.appendDiv('tag-element').data('tag', tagText);\n      var $tagText = $element.appendSpan('tag-text', tagText);\n\n      if (clickHandler) {\n        $tagText.addClass('clickable').on('mousedown', clickHandler);\n      }\n\n      if (enabled) {\n        $element.appendSpan('tag-remove-icon').on('click', removeHandler);\n      } else {\n        $element.addClass('disabled');\n      }\n\n      return $element;\n    }\n  }]);\n\n  return TagBar;\n}(Widget);\n\nexport { TagBar as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/tagbar/TagBar.js"],"names":["arrays","Device","FormField","HtmlComponent","scout","TagBarLayout","tooltips","Widget","$","TagBar","overflowEnabled","$overflowIcon","overflowVisible","overflow","tags","clickable","$container","$parent","appendDiv","htmlComp","install","session","setLayout","_installTooltipSupport","_renderTags","_renderOverflowVisible","closeOverflowPopup","_uninstallTooltipSupport","setProperty","rendered","ensure","clickHandler","_onTagClick","bind","removeHandler","_onTagRemoveClick","renderTags","enabledComputed","invalidateLayoutTree","event","tag","getTagData","currentTarget","_triggerTagClick","trigger","removeTagByElement","$tag","_triggerTagRemove","openOverflowPopup","ae","activeElement","is","_createOverflowPopup","on","_onOverflowPopupClose","open","create","parent","closeOnAnchorMouseDown","focusableContainer","$anchor","$headBlueprint","cssClass","destroying","close","selector","text","_tagTooltipText","arrowPosition","arrowPositionUnit","nativeTooltip","get","isCustomEllipsisTooltipPossible","uninstall","isContentTruncated","findFocusableTagElements","removeClass","setTabbable","addClass","_removeFocusFromTagElements","popupRequestsFocus","has","relatedTarget","prependDiv","_onOverflowIconMousedown","remove","statusClass","hasStatus","SEVERITY_CSS_CLASSES","find","each","push","focusTagElement","firstTagElement","first","$tagElement","focus","tagData","data","enabled","forEach","tagText","renderTag","$element","$tagText","appendSpan"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Device, FormField, HtmlComponent, scout, TagBarLayout, tooltips, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class TagBar extends Widget {\n\n  constructor() {\n    super();\n\n    this.overflowEnabled = true;\n    this.$overflowIcon = null;\n    this.overflowVisible = false;\n    this.overflow = null;\n    this.tags = [];\n    /**\n     * Whether or not the tag elements are clickable (even when TagBar is disabled).\n     * When the tag elements are clickable a click handler is registered and\n     * a pointer cursor appears when hovering over the element.\n     */\n    this.clickable = false;\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('tag-bar');\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(new TagBarLayout(this));\n    this._installTooltipSupport();\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderTags();\n    this._renderOverflowVisible();\n  }\n\n  _remove() {\n    this.$overflowIcon = null;\n    this.overflowVisible = false;\n    this.closeOverflowPopup();\n    this._uninstallTooltipSupport();\n    super._remove();\n  }\n\n  setTags(tags) {\n    this.setProperty('tags', tags);\n  }\n\n  updateTags() {\n    if (this.rendered) {\n      this._renderTags();\n    }\n  }\n\n  /**\n   * This function is also used by sub- and friend-classes like the TagOverflowPopup.\n   */\n  _renderTags() {\n    var tags = arrays.ensure(this.tags);\n    var clickHandler = this.clickable ? this._onTagClick.bind(this) : null;\n    var removeHandler = this._onTagRemoveClick.bind(this);\n    TagBar.renderTags(this.$container, tags, this.enabledComputed, clickHandler, removeHandler);\n    this.invalidateLayoutTree();\n  }\n\n  _onTagClick(event) {\n    var tag = TagBar.getTagData($(event.currentTarget));\n    this._triggerTagClick(tag);\n    return false;\n  }\n\n  _triggerTagClick(tag) {\n    this.trigger('tagClick', {\n      tag: tag\n    });\n  }\n\n  _onTagRemoveClick(event) {\n    if (this.enabledComputed) {\n      this.removeTagByElement($(event.currentTarget));\n    }\n    return false;\n  }\n\n  removeTagByElement($tag) {\n    var tag = TagBar.getTagData($tag);\n    if (tag) {\n      this._triggerTagRemove(tag, $tag);\n    }\n  }\n\n  _triggerTagRemove(tag, $tag) {\n    this.trigger('tagRemove', {\n      tag: tag,\n      $tag: $tag\n    });\n  }\n\n  _onOverflowIconMousedown(event) {\n    this.openOverflowPopup();\n    return false;\n  }\n\n  isOverflowIconFocused() {\n    if (!this.$overflowIcon) {\n      return false;\n    }\n    var ae = this.$container.activeElement();\n    return this.$overflowIcon.is(ae);\n  }\n\n  openOverflowPopup() {\n    if (this.overflow) {\n      return;\n    }\n    this.overflow = this._createOverflowPopup();\n    this.overflow.on('close', this._onOverflowPopupClose.bind(this));\n    this.overflow.open();\n  }\n\n  _createOverflowPopup() {\n    return scout.create('TagBarOverflowPopup', {\n      parent: this,\n      closeOnAnchorMouseDown: false,\n      focusableContainer: true,\n      $anchor: this.$container,\n      $headBlueprint: this.$overflowIcon,\n      cssClass: this.cssClass\n    });\n  }\n\n  closeOverflowPopup() {\n    if (this.overflow && !this.overflow.destroying) {\n      this.overflow.close();\n    }\n  }\n\n  _onOverflowPopupClose() {\n    this.overflow = null;\n  }\n\n  _installTooltipSupport() {\n    tooltips.install(this.$container, {\n      parent: this,\n      selector: '.tag-text',\n      text: this._tagTooltipText.bind(this),\n      arrowPosition: 50,\n      arrowPositionUnit: '%',\n      nativeTooltip: !Device.get().isCustomEllipsisTooltipPossible()\n    });\n  }\n\n  _uninstallTooltipSupport() {\n    tooltips.uninstall(this.$container);\n  }\n\n  _tagTooltipText($tag) {\n    return $tag.isContentTruncated() ? $tag.text() : null;\n  }\n\n  _removeFocusFromTagElements() {\n    TagBar.findFocusableTagElements(this.$container)\n      .removeClass('focused')\n      .setTabbable(false);\n  }\n\n  focus() {\n    this.$container.addClass('focused');\n    this._removeFocusFromTagElements();\n    this.closeOverflowPopup();\n  }\n\n  blur() {\n    this.$container.removeClass('focused');\n\n    // when overflow popup opens it sets focus to the first tag element, this means:\n    // the input field loses focus. In that case we must prevent that the overflow popup is closed.\n    var popupRequestsFocus = this.overflow && this.overflow.$container.has(event.relatedTarget);\n    if (popupRequestsFocus) {\n      return;\n    }\n    this.closeOverflowPopup();\n  }\n\n  setOverflowVisible(overflowVisible) {\n    this.setProperty('overflowVisible', overflowVisible);\n  }\n\n  _renderOverflowVisible() {\n    if (this.overflowVisible) {\n      if (!this.$overflowIcon) {\n        this.$overflowIcon = this.$container\n          .prependDiv('overflow-icon')\n          .on('mousedown', this._onOverflowIconMousedown.bind(this));\n      }\n    } else {\n      if (this.$overflowIcon) {\n        this.$overflowIcon.remove();\n        this.$overflowIcon = null;\n      }\n    }\n  }\n\n  _updateErrorStatusClasses(statusClass, hasStatus) {\n    super._updateErrorStatusClasses(statusClass, hasStatus);\n    this.$container.removeClass(FormField.SEVERITY_CSS_CLASSES);\n    this.$container.addClass(statusClass, hasStatus);\n  }\n\n  /**\n   * Returns the tag-texts of the tag-elements currently visible in the UI (=not hidden).\n   */\n  visibleTags() {\n    if (!this.rendered) {\n      return [];\n    }\n    var tags = [];\n    this.$container\n      .find('.tag-element:not(.hidden)')\n      .each(function() {\n        tags.push(TagBar.getTagData($(this)));\n      });\n    return tags;\n  }\n\n  // --- static helpers ---\n\n  static findFocusedTagElement($container) {\n    return $container.find('.tag-element.focused');\n  }\n\n  static findFocusableTagElements($container) {\n    return $container.find('.tag-element:not(.hidden),.overflow-icon');\n  }\n\n  static focusFirstTagElement($container) {\n    this.focusTagElement(this.firstTagElement($container));\n  }\n\n  static firstTagElement($container) {\n    return $container.find('.tag-element').first();\n  }\n\n  static focusTagElement($tagElement) {\n    $tagElement\n      .setTabbable(true)\n      .addClass('focused')\n      .focus();\n  }\n\n  static unfocusTagElement($tagElement) {\n    $tagElement\n      .setTabbable(false)\n      .removeClass('focused');\n  }\n\n  static getTagData($tag) {\n    var tagData = $tag.data('tag');\n    if (tagData) {\n      return tagData;\n    }\n    return $tag.parent().data('tag');\n  }\n\n  static renderTags($parent, tags, enabled, clickHandler, removeHandler) {\n    $parent.find('.tag-element').remove();\n    tags.forEach(function(tagText) {\n      TagBar.renderTag($parent, tagText, enabled, clickHandler, removeHandler);\n    }, this);\n  }\n\n  static renderTag($parent, tagText, enabled, clickHandler, removeHandler) {\n    var $element = $parent\n      .appendDiv('tag-element')\n      .data('tag', tagText);\n    var $tagText = $element.appendSpan('tag-text', tagText);\n    if (clickHandler) {\n      $tagText\n        .addClass('clickable')\n        .on('mousedown', clickHandler);\n    }\n    if (enabled) {\n      $element\n        .appendSpan('tag-remove-icon')\n        .on('click', removeHandler);\n    } else {\n      $element.addClass('disabled');\n    }\n    return $element;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}