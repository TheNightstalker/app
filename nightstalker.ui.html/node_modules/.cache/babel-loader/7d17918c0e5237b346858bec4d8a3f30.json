{"ast":null,"code":"/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { NullLogger, scout, URL } from '../index';\nimport $ from 'jquery';\nimport strings from '../util/strings';\n/* global log4javascript */\n\nvar DEFAULT_LEVEL = 'trace';\nvar initialized = false;\nvar _appendersToAdd = [];\nvar showStackTraces = true;\n/***\n * Loads log4javascript.min.js if logging is enabled.\n * @param [options] options\n * @param {boolean} options.enabled\n * @param {boolean} options.showPopup\n * @param options.resourceUrl\n * @returns {Promise}\n */\n\nexport function bootstrap(options) {\n  var location = new URL(),\n      logging = location.getParameter('logging'),\n      logLevel = location.getParameter('logLevel');\n  options = scout.nvl(options, {});\n  var enabled = !!(options.enabled || logging),\n      showPopup = !!(options.showPopup || logging),\n      resourceUrl = strings.nvl(options.resourceUrl);\n  $.log = new NullLogger();\n\n  if (!enabled) {\n    return $.resolvedPromise();\n  }\n\n  if (window.log4javascript) {\n    initLog4Javascript(logLevel, showPopup);\n    return $.resolvedPromise();\n  } // If log4javascript is not yet installed, dynamically load the library\n\n\n  return $.injectScript(resourceUrl + 'log4javascript-1.4.9/log4javascript.js').done(initLog4Javascript.bind(this, logLevel, showPopup));\n}\nexport function initLog4Javascript(logLevel, showPopup) {\n  logLevel = scout.nvl(logLevel, DEFAULT_LEVEL);\n  log4javascript.setShowStackTraces(showStackTraces);\n  var defaultLogger = log4javascript.getDefaultLogger();\n  defaultLogger.setLevel(parseLevel(logLevel));\n  $.log = defaultLogger;\n  initialized = true;\n\n  if (showPopup) {\n    // To avoid problems with our CSP rule which prohibits inline scripts we set the useDocumentWrite\n    // flag to false, so the console[_uncompressed].html/js is loaded instead.\n    defaultLogger.getEffectiveAppenders().forEach(function (appender) {\n      appender.setUseDocumentWrite(false);\n    });\n  } else {\n    // Remove default PopUpAppender (which is the only appender at this point)\n    defaultLogger.removeAllAppenders();\n  } // Add appenders later\n\n\n  _appendersToAdd.forEach(function (obj) {\n    addAppender(obj.factoryName, obj.options);\n  }, this);\n\n  _appendersToAdd = [];\n}\nexport function parseLevel(level) {\n  if (!level) {\n    return;\n  }\n\n  level = level.toLowerCase();\n\n  switch (level) {\n    case 'trace':\n      return log4javascript.Level.TRACE;\n\n    case 'debug':\n      return log4javascript.Level.DEBUG;\n\n    case 'info':\n      return log4javascript.Level.INFO;\n\n    case 'warn':\n      return log4javascript.Level.WARN;\n\n    case 'error':\n      return log4javascript.Level.ERROR;\n\n    case 'fatal':\n      return log4javascript.Level.FATAL;\n  }\n}\nexport function addAppender(factoryName, options) {\n  if (!initialized) {\n    _appendersToAdd.push({\n      factoryName: factoryName,\n      options: options\n    });\n\n    return;\n  }\n\n  var factory = scout.create(factoryName, options);\n  $.log.addAppender(factory.create());\n}\nexport default {\n  DEFAULT_LEVEL: DEFAULT_LEVEL,\n  addAppender: addAppender,\n  bootstrap: bootstrap,\n  initLog4Javascript: initLog4Javascript,\n  initialized: initialized,\n  parseLevel: parseLevel,\n  showStackTraces: showStackTraces\n};","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/logging/logging.js"],"names":["NullLogger","scout","URL","$","strings","DEFAULT_LEVEL","initialized","_appendersToAdd","showStackTraces","bootstrap","options","location","logging","getParameter","logLevel","nvl","enabled","showPopup","resourceUrl","log","resolvedPromise","window","log4javascript","initLog4Javascript","injectScript","done","bind","setShowStackTraces","defaultLogger","getDefaultLogger","setLevel","parseLevel","getEffectiveAppenders","forEach","appender","setUseDocumentWrite","removeAllAppenders","obj","addAppender","factoryName","level","toLowerCase","Level","TRACE","DEBUG","INFO","WARN","ERROR","FATAL","push","factory","create"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {NullLogger, scout, URL} from '../index';\nimport $ from 'jquery';\nimport strings from '../util/strings';\n\n/* global log4javascript */\n\nconst DEFAULT_LEVEL = 'trace';\nlet initialized = false;\nlet _appendersToAdd = [];\nlet showStackTraces = true;\n\n/***\n * Loads log4javascript.min.js if logging is enabled.\n * @param [options] options\n * @param {boolean} options.enabled\n * @param {boolean} options.showPopup\n * @param options.resourceUrl\n * @returns {Promise}\n */\nexport function bootstrap(options) {\n  var location = new URL(),\n    logging = location.getParameter('logging'),\n    logLevel = location.getParameter('logLevel');\n\n  options = scout.nvl(options, {});\n\n  var enabled = !!(options.enabled || logging),\n    showPopup = !!(options.showPopup || logging),\n    resourceUrl = strings.nvl(options.resourceUrl);\n\n  $.log = new NullLogger();\n  if (!enabled) {\n    return $.resolvedPromise();\n  }\n  if (window.log4javascript) {\n    initLog4Javascript(logLevel, showPopup);\n    return $.resolvedPromise();\n  }\n\n  // If log4javascript is not yet installed, dynamically load the library\n  return $.injectScript(resourceUrl + 'log4javascript-1.4.9/log4javascript.js')\n    .done(initLog4Javascript.bind(this, logLevel, showPopup));\n}\n\nexport function initLog4Javascript(logLevel, showPopup) {\n  logLevel = scout.nvl(logLevel, DEFAULT_LEVEL);\n  log4javascript.setShowStackTraces(showStackTraces);\n  var defaultLogger = log4javascript.getDefaultLogger();\n  defaultLogger.setLevel(parseLevel(logLevel));\n  $.log = defaultLogger;\n\n  initialized = true;\n\n  if (showPopup) {\n    // To avoid problems with our CSP rule which prohibits inline scripts we set the useDocumentWrite\n    // flag to false, so the console[_uncompressed].html/js is loaded instead.\n    defaultLogger.getEffectiveAppenders().forEach(function(appender) {\n      appender.setUseDocumentWrite(false);\n    });\n  } else {\n    // Remove default PopUpAppender (which is the only appender at this point)\n    defaultLogger.removeAllAppenders();\n  }\n\n  // Add appenders later\n  _appendersToAdd.forEach(function(obj) {\n    addAppender(obj.factoryName, obj.options);\n  }, this);\n  _appendersToAdd = [];\n}\n\nexport function parseLevel(level) {\n  if (!level) {\n    return;\n  }\n  level = level.toLowerCase();\n  switch (level) {\n    case 'trace':\n      return log4javascript.Level.TRACE;\n    case 'debug':\n      return log4javascript.Level.DEBUG;\n    case 'info':\n      return log4javascript.Level.INFO;\n    case 'warn':\n      return log4javascript.Level.WARN;\n    case 'error':\n      return log4javascript.Level.ERROR;\n    case 'fatal':\n      return log4javascript.Level.FATAL;\n  }\n}\n\nexport function addAppender(factoryName, options) {\n  if (!initialized) {\n    _appendersToAdd.push({\n      factoryName: factoryName,\n      options: options\n    });\n    return;\n  }\n\n  var factory = scout.create(factoryName, options);\n  $.log.addAppender(factory.create());\n}\n\nexport default {\n  DEFAULT_LEVEL,\n  addAppender,\n  bootstrap,\n  initLog4Javascript,\n  initialized,\n  parseLevel,\n  showStackTraces\n};\n"]},"metadata":{},"sourceType":"module"}