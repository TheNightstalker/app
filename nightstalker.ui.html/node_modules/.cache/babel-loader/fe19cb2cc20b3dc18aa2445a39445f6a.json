{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { graphics, Insets, Rectangle, scout } from '../index';\nimport $ from 'jquery';\nimport arrays from '../util/arrays';\n/**\n * Resizable makes a DOM element resizable by adding resize handlers to all edges of the given model.$container. This is primarily used for (modal) dialogs.\n */\n\nvar Resizable = /*#__PURE__*/function () {\n  function Resizable(model) {\n    _classCallCheck(this, Resizable);\n\n    scout.assertParameter('model', model);\n    scout.assertParameter('$container', model.$container);\n    this.$container = model.$container;\n    this.$window = model.$container.window();\n    this.setModes(model.modes);\n    this.setBoundaries(model.boundaries);\n    this.$resizableS = null;\n    this.$resizableE = null;\n    this.$resizableSE = null;\n    this.$resizableW = null;\n    this.$resizableSW = null;\n    this.$resizableN = null;\n    this.$resizableNW = null;\n    this.$resizableNE = null;\n    this._context = null;\n    this._mouseDownHandler = this._onMouseDown.bind(this);\n    this._mouseUpHandler = this._onMouseUp.bind(this);\n    this._mousemoveHandler = this._onMousemove.bind(this);\n    this._resizeHandler = this._resize.bind(this);\n  }\n\n  _createClass(Resizable, [{\n    key: \"setModes\",\n    value: function setModes(modes) {\n      var ensuredModes = modes || [Resizable.MODES.SOUTH, Resizable.MODES.EAST, Resizable.MODES.WEST, Resizable.MODES.NORTH];\n\n      if (arrays.equals(ensuredModes, this.modes)) {\n        return;\n      }\n\n      this.modes = ensuredModes;\n\n      this._calculateResizeHandlersVisibility();\n    }\n  }, {\n    key: \"setBoundaries\",\n    value: function setBoundaries(boundaries) {\n      this.boundaries = $.extend(new Insets(), boundaries);\n\n      if (this._boundaryValueSet(this.boundaries.left)) {\n        this.boundaries.left -= this.$container.cssMarginLeft();\n      }\n\n      if (this._boundaryValueSet(this.boundaries.right)) {\n        this.boundaries.right -= this.$container.cssMarginRight();\n      }\n\n      if (this._boundaryValueSet(this.boundaries.top)) {\n        this.boundaries.top -= this.$container.cssMarginTop();\n      }\n\n      if (this._boundaryValueSet(this.boundaries.bottom)) {\n        this.boundaries.bottom -= this.$container.cssMarginBottom();\n      }\n    }\n  }, {\n    key: \"_appendResizeHandles\",\n    value: function _appendResizeHandles() {\n      this.$resizableS = this.$container.appendDiv('resizable-handle resizable-s').data('edge', 's').on('mousedown.resizable', this._mouseDownHandler);\n      this.$resizableE = this.$container.appendDiv('resizable-handle resizable-e').data('edge', 'e').on('mousedown.resizable', this._mouseDownHandler);\n      this.$resizableSE = this.$container.appendDiv('resizable-handle resizable-se').data('edge', 'se').on('mousedown.resizable', this._mouseDownHandler);\n      this.$resizableW = this.$container.appendDiv('resizable-handle resizable-w').data('edge', 'w').on('mousedown.resizable', this._mouseDownHandler);\n      this.$resizableSW = this.$container.appendDiv('resizable-handle resizable-sw').data('edge', 'sw').on('mousedown.resizable', this._mouseDownHandler);\n      this.$resizableN = this.$container.appendDiv('resizable-handle resizable-n').data('edge', 'n').on('mousedown.resizable', this._mouseDownHandler);\n      this.$resizableNW = this.$container.appendDiv('resizable-handle resizable-nw').data('edge', 'nw').on('mousedown.resizable', this._mouseDownHandler);\n      this.$resizableNE = this.$container.appendDiv('resizable-handle resizable-ne').data('edge', 'ne').on('mousedown.resizable', this._mouseDownHandler);\n\n      this._calculateResizeHandlersVisibility();\n    }\n  }, {\n    key: \"_calculateResizeHandlersVisibility\",\n    value: function _calculateResizeHandlersVisibility() {\n      if (this.$resizableS) {\n        this.$resizableS.setVisible(this._hasMode(Resizable.MODES.SOUTH));\n      }\n\n      if (this.$resizableE) {\n        this.$resizableE.setVisible(this._hasMode(Resizable.MODES.EAST));\n      }\n\n      if (this.$resizableSE) {\n        this.$resizableSE.setVisible(this._hasMode(Resizable.MODES.SOUTH) && this._hasMode(Resizable.MODES.EAST));\n      }\n\n      if (this.$resizableW) {\n        this.$resizableW.setVisible(this._hasMode(Resizable.MODES.WEST));\n      }\n\n      if (this.$resizableSW) {\n        this.$resizableSW.setVisible(this._hasMode(Resizable.MODES.SOUTH) && this._hasMode(Resizable.MODES.WEST));\n      }\n\n      if (this.$resizableN) {\n        this.$resizableN.setVisible(this._hasMode(Resizable.MODES.NORTH));\n      }\n\n      if (this.$resizableNW) {\n        this.$resizableNW.setVisible(this._hasMode(Resizable.MODES.NORTH) && this._hasMode(Resizable.MODES.WEST));\n      }\n\n      if (this.$resizableNE) {\n        this.$resizableNE.setVisible(this._hasMode(Resizable.MODES.NORTH) && this._hasMode(Resizable.MODES.EAST));\n      }\n    }\n  }, {\n    key: \"_hasMode\",\n    value: function _hasMode(mode) {\n      return this.modes.some(function (m) {\n        return m === mode;\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.$container.addClass('resizable');\n\n      this._appendResizeHandles();\n\n      this._installRemoveHandler();\n    }\n  }, {\n    key: \"_installRemoveHandler\",\n    value: function _installRemoveHandler() {\n      this.$container.on('remove', this.destroy.bind(this));\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.$resizableS) {\n        this.$resizableS.remove();\n        this.$resizableS = null;\n      }\n\n      if (this.$resizableE) {\n        this.$resizableE.remove();\n        this.$resizableE = null;\n      }\n\n      if (this.$resizableSE) {\n        this.$resizableSE.remove();\n        this.$resizableSE = null;\n      }\n\n      if (this.$resizableW) {\n        this.$resizableW.remove();\n        this.$resizableW = null;\n      }\n\n      if (this.$resizableSW) {\n        this.$resizableSW.remove();\n        this.$resizableSW = null;\n      }\n\n      if (this.$resizableN) {\n        this.$resizableN.remove();\n        this.$resizableN = null;\n      }\n\n      if (this.$resizableNW) {\n        this.$resizableNW.remove();\n        this.$resizableNW = null;\n      }\n\n      if (this.$resizableNE) {\n        this.$resizableNE.remove();\n        this.$resizableNE = null;\n      }\n\n      if (this.$container) {\n        this.$container.removeClass('resizable');\n      }\n\n      this.$window.off('mouseup.resizable', this._mouseUpHandler).off('mousemove.resizable', this._mousemoveHandler);\n    }\n  }, {\n    key: \"_onMouseDown\",\n    value: function _onMouseDown(event) {\n      var $resizable = this.$container,\n          $myWindow = $resizable.window(),\n          $handle = $(event.target),\n          minWidth = $resizable.cssMinWidth(),\n          minHeight = $resizable.cssMinHeight(),\n          maxWidth = $resizable.cssMaxWidth(),\n          maxHeight = $resizable.cssMaxHeight(),\n          initialBounds = graphics.bounds($resizable, {\n        exact: true\n      });\n      this._context = {\n        initialBounds: initialBounds,\n        minBounds: new Rectangle(initialBounds.right() - minWidth, initialBounds.bottom() - minHeight, minWidth, minHeight),\n        maxBounds: new Rectangle(Math.max(-$resizable.cssMarginLeft(), initialBounds.right() - maxWidth), Math.max(-$resizable.cssMarginTop(), initialBounds.bottom() - maxHeight), Math.min($myWindow.width() - $resizable[0].offsetLeft, maxWidth), Math.min($myWindow.height() - $resizable[0].offsetTop, maxHeight)),\n        distance: [0, 0],\n        edge: $handle.data('edge'),\n        mousedownEvent: event\n      };\n      $resizable.addClass('resizable-resizing');\n      this.$window.off('mouseup.resizable', this._mouseUpHandler).off('mousemove.resizable', this._mousemoveHandler).on('mouseup.resizable', this._mouseUpHandler).on('mousemove.resizable', this._mousemoveHandler);\n      $('iframe').addClass('dragging-in-progress');\n    }\n  }, {\n    key: \"_onMouseUp\",\n    value: function _onMouseUp(event) {\n      this.$container.removeClass('resizable-resizing');\n      this.$window.off('mouseup.resizable', this._mouseUpHandler).off('mousemove.resizable', this._mousemoveHandler);\n      $('iframe').removeClass('dragging-in-progress');\n      this._context = null;\n    }\n  }, {\n    key: \"_onMousemove\",\n    value: function _onMousemove(event) {\n      var ctx = this._context,\n          newBounds = ctx.initialBounds.clone(),\n          distance = this._calcDistance(ctx.mousedownEvent, event);\n\n      if (scout.isOneOf(ctx.edge, 'ne', 'e', 'se')) {\n        newBounds.width = Math.max(ctx.minBounds.width, Math.min(ctx.maxBounds.width, ctx.initialBounds.width + distance[0]));\n      } else if (scout.isOneOf(ctx.edge, 'nw', 'w', 'sw')) {\n        // Resize to the left\n        newBounds.x = Math.min(ctx.minBounds.x, Math.max(ctx.maxBounds.x, ctx.initialBounds.x + distance[0]));\n        newBounds.width += ctx.initialBounds.x - newBounds.x;\n      }\n\n      if (scout.isOneOf(ctx.edge, 'sw', 's', 'se')) {\n        newBounds.height = Math.max(ctx.minBounds.height, Math.min(ctx.maxBounds.height, ctx.initialBounds.height + distance[1]));\n      } else if (scout.isOneOf(ctx.edge, 'nw', 'n', 'ne')) {\n        // Resize to the bottom\n        newBounds.y = Math.min(ctx.minBounds.y, Math.max(ctx.maxBounds.y, ctx.initialBounds.y + distance[1]));\n        newBounds.height += ctx.initialBounds.y - newBounds.y;\n      }\n\n      $.throttle(this._resizeHandler, Resizable.FPS)(newBounds);\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(newBounds) {\n      this._cropToBoundaries(newBounds);\n\n      graphics.setBounds(this.$container, newBounds);\n      this.$container.trigger('resize', {\n        newBounds: newBounds,\n        initialBounds: this._context.initialBounds\n      });\n    }\n  }, {\n    key: \"_cropToBoundaries\",\n    value: function _cropToBoundaries(newBounds) {\n      if (this._boundaryValueSet(this.boundaries.left) && newBounds.x > this.boundaries.left) {\n        newBounds.width -= this.boundaries.left - newBounds.x;\n        newBounds.x = this.boundaries.left;\n      }\n\n      if (this._boundaryValueSet(this.boundaries.right) && newBounds.x + newBounds.width < this.boundaries.right) {\n        newBounds.width = this.boundaries.right - newBounds.x;\n      }\n\n      if (this._boundaryValueSet(this.boundaries.top) && newBounds.y > this.boundaries.top) {\n        newBounds.height -= this.boundaries.top - newBounds.y;\n        newBounds.y = this.boundaries.top;\n      }\n\n      if (this._boundaryValueSet(this.boundaries.bottom) && newBounds.y + newBounds.height < this.boundaries.bottom) {\n        newBounds.height = this.boundaries.bottom - newBounds.y;\n      }\n    }\n  }, {\n    key: \"_boundaryValueSet\",\n    value: function _boundaryValueSet(value) {\n      return value > 0;\n    }\n  }, {\n    key: \"_calcDistance\",\n    value: function _calcDistance(eventA, eventB) {\n      var distX = eventB.pageX - eventA.pageX,\n          distY = eventB.pageY - eventA.pageY;\n      return [distX, distY];\n    }\n  }]);\n\n  return Resizable;\n}();\n\n_defineProperty(Resizable, \"MODES\", {\n  SOUTH: 's',\n  EAST: 'e',\n  WEST: 'w',\n  NORTH: 'n'\n});\n\n_defineProperty(Resizable, \"FPS\", 1000 / 15);\n\nexport { Resizable as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/resizable/Resizable.js"],"names":["graphics","Insets","Rectangle","scout","$","arrays","Resizable","model","assertParameter","$container","$window","window","setModes","modes","setBoundaries","boundaries","$resizableS","$resizableE","$resizableSE","$resizableW","$resizableSW","$resizableN","$resizableNW","$resizableNE","_context","_mouseDownHandler","_onMouseDown","bind","_mouseUpHandler","_onMouseUp","_mousemoveHandler","_onMousemove","_resizeHandler","_resize","ensuredModes","MODES","SOUTH","EAST","WEST","NORTH","equals","_calculateResizeHandlersVisibility","extend","_boundaryValueSet","left","cssMarginLeft","right","cssMarginRight","top","cssMarginTop","bottom","cssMarginBottom","appendDiv","data","on","setVisible","_hasMode","mode","some","m","addClass","_appendResizeHandles","_installRemoveHandler","destroy","remove","removeClass","off","event","$resizable","$myWindow","$handle","target","minWidth","cssMinWidth","minHeight","cssMinHeight","maxWidth","cssMaxWidth","maxHeight","cssMaxHeight","initialBounds","bounds","exact","minBounds","maxBounds","Math","max","min","width","offsetLeft","height","offsetTop","distance","edge","mousedownEvent","ctx","newBounds","clone","_calcDistance","isOneOf","x","y","throttle","FPS","_cropToBoundaries","setBounds","trigger","value","eventA","eventB","distX","pageX","distY","pageY"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {graphics, Insets, Rectangle, scout} from '../index';\nimport $ from 'jquery';\nimport arrays from '../util/arrays';\n\n/**\n * Resizable makes a DOM element resizable by adding resize handlers to all edges of the given model.$container. This is primarily used for (modal) dialogs.\n */\nexport default class Resizable {\n\n  constructor(model) {\n    scout.assertParameter('model', model);\n    scout.assertParameter('$container', model.$container);\n    this.$container = model.$container;\n    this.$window = model.$container.window();\n    this.setModes(model.modes);\n    this.setBoundaries(model.boundaries);\n    this.$resizableS = null;\n    this.$resizableE = null;\n    this.$resizableSE = null;\n    this.$resizableW = null;\n    this.$resizableSW = null;\n    this.$resizableN = null;\n    this.$resizableNW = null;\n    this.$resizableNE = null;\n    this._context = null;\n\n    this._mouseDownHandler = this._onMouseDown.bind(this);\n    this._mouseUpHandler = this._onMouseUp.bind(this);\n    this._mousemoveHandler = this._onMousemove.bind(this);\n    this._resizeHandler = this._resize.bind(this);\n  }\n\n  static MODES = {\n    SOUTH: 's',\n    EAST: 'e',\n    WEST: 'w',\n    NORTH: 'n'\n  };\n\n  /**\n   * 15 fps seems to be a good value for slower browsers like firefox,\n   * where it takes longer to render.\n   */\n  static FPS = 1000 / 15;\n\n  setModes(modes) {\n    var ensuredModes = modes || [Resizable.MODES.SOUTH, Resizable.MODES.EAST, Resizable.MODES.WEST, Resizable.MODES.NORTH];\n    if (arrays.equals(ensuredModes, this.modes)) {\n      return;\n    }\n    this.modes = ensuredModes;\n    this._calculateResizeHandlersVisibility();\n  }\n\n  setBoundaries(boundaries) {\n    this.boundaries = $.extend(new Insets(), boundaries);\n    if (this._boundaryValueSet(this.boundaries.left)) {\n      this.boundaries.left -= this.$container.cssMarginLeft();\n    }\n    if (this._boundaryValueSet(this.boundaries.right)) {\n      this.boundaries.right -= this.$container.cssMarginRight();\n    }\n    if (this._boundaryValueSet(this.boundaries.top)) {\n      this.boundaries.top -= this.$container.cssMarginTop();\n    }\n    if (this._boundaryValueSet(this.boundaries.bottom)) {\n      this.boundaries.bottom -= this.$container.cssMarginBottom();\n    }\n  }\n\n  _appendResizeHandles() {\n    this.$resizableS = this.$container.appendDiv('resizable-handle resizable-s')\n      .data('edge', 's')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableE = this.$container.appendDiv('resizable-handle resizable-e')\n      .data('edge', 'e')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableSE = this.$container.appendDiv('resizable-handle resizable-se')\n      .data('edge', 'se')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableW = this.$container.appendDiv('resizable-handle resizable-w')\n      .data('edge', 'w')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableSW = this.$container.appendDiv('resizable-handle resizable-sw')\n      .data('edge', 'sw')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableN = this.$container.appendDiv('resizable-handle resizable-n')\n      .data('edge', 'n')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableNW = this.$container.appendDiv('resizable-handle resizable-nw')\n      .data('edge', 'nw')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this.$resizableNE = this.$container.appendDiv('resizable-handle resizable-ne')\n      .data('edge', 'ne')\n      .on('mousedown.resizable', this._mouseDownHandler);\n    this._calculateResizeHandlersVisibility();\n  }\n\n  _calculateResizeHandlersVisibility() {\n    if (this.$resizableS) {\n      this.$resizableS.setVisible(this._hasMode(Resizable.MODES.SOUTH));\n    }\n    if (this.$resizableE) {\n      this.$resizableE.setVisible(this._hasMode(Resizable.MODES.EAST));\n    }\n    if (this.$resizableSE) {\n      this.$resizableSE.setVisible(this._hasMode(Resizable.MODES.SOUTH) && this._hasMode(Resizable.MODES.EAST));\n    }\n    if (this.$resizableW) {\n      this.$resizableW.setVisible(this._hasMode(Resizable.MODES.WEST));\n    }\n    if (this.$resizableSW) {\n      this.$resizableSW.setVisible(this._hasMode(Resizable.MODES.SOUTH) && this._hasMode(Resizable.MODES.WEST));\n    }\n    if (this.$resizableN) {\n      this.$resizableN.setVisible(this._hasMode(Resizable.MODES.NORTH));\n    }\n    if (this.$resizableNW) {\n      this.$resizableNW.setVisible(this._hasMode(Resizable.MODES.NORTH) && this._hasMode(Resizable.MODES.WEST));\n    }\n    if (this.$resizableNE) {\n      this.$resizableNE.setVisible(this._hasMode(Resizable.MODES.NORTH) && this._hasMode(Resizable.MODES.EAST));\n    }\n  }\n\n  _hasMode(mode) {\n    return this.modes.some(m => m === mode);\n  }\n\n  init() {\n    this.$container.addClass('resizable');\n    this._appendResizeHandles();\n    this._installRemoveHandler();\n  }\n\n  _installRemoveHandler() {\n    this.$container.on('remove', this.destroy.bind(this));\n  }\n\n  destroy() {\n    if (this.$resizableS) {\n      this.$resizableS.remove();\n      this.$resizableS = null;\n    }\n    if (this.$resizableE) {\n      this.$resizableE.remove();\n      this.$resizableE = null;\n    }\n    if (this.$resizableSE) {\n      this.$resizableSE.remove();\n      this.$resizableSE = null;\n    }\n    if (this.$resizableW) {\n      this.$resizableW.remove();\n      this.$resizableW = null;\n    }\n    if (this.$resizableSW) {\n      this.$resizableSW.remove();\n      this.$resizableSW = null;\n    }\n    if (this.$resizableN) {\n      this.$resizableN.remove();\n      this.$resizableN = null;\n    }\n    if (this.$resizableNW) {\n      this.$resizableNW.remove();\n      this.$resizableNW = null;\n    }\n    if (this.$resizableNE) {\n      this.$resizableNE.remove();\n      this.$resizableNE = null;\n    }\n    if (this.$container) {\n      this.$container.removeClass('resizable');\n    }\n    this.$window\n      .off('mouseup.resizable', this._mouseUpHandler)\n      .off('mousemove.resizable', this._mousemoveHandler);\n  }\n\n  _onMouseDown(event) {\n    var $resizable = this.$container,\n      $myWindow = $resizable.window(),\n      $handle = $(event.target),\n      minWidth = $resizable.cssMinWidth(),\n      minHeight = $resizable.cssMinHeight(),\n      maxWidth = $resizable.cssMaxWidth(),\n      maxHeight = $resizable.cssMaxHeight(),\n      initialBounds = graphics.bounds($resizable, {exact: true});\n\n    this._context = {\n      initialBounds: initialBounds,\n      minBounds: new Rectangle(\n        initialBounds.right() - minWidth,\n        initialBounds.bottom() - minHeight,\n        minWidth,\n        minHeight\n      ),\n      maxBounds: new Rectangle(\n        Math.max(-$resizable.cssMarginLeft(), initialBounds.right() - maxWidth),\n        Math.max(-$resizable.cssMarginTop(), initialBounds.bottom() - maxHeight),\n        Math.min($myWindow.width() - $resizable[0].offsetLeft, maxWidth),\n        Math.min($myWindow.height() - $resizable[0].offsetTop, maxHeight)\n      ),\n      distance: [0, 0],\n      edge: $handle.data('edge'),\n      mousedownEvent: event\n    };\n\n    $resizable.addClass('resizable-resizing');\n    this.$window\n      .off('mouseup.resizable', this._mouseUpHandler)\n      .off('mousemove.resizable', this._mousemoveHandler)\n      .on('mouseup.resizable', this._mouseUpHandler)\n      .on('mousemove.resizable', this._mousemoveHandler);\n    $('iframe').addClass('dragging-in-progress');\n  }\n\n  _onMouseUp(event) {\n    this.$container.removeClass('resizable-resizing');\n    this.$window\n      .off('mouseup.resizable', this._mouseUpHandler)\n      .off('mousemove.resizable', this._mousemoveHandler);\n    $('iframe').removeClass('dragging-in-progress');\n    this._context = null;\n  }\n\n  _onMousemove(event) {\n    var ctx = this._context,\n      newBounds = ctx.initialBounds.clone(),\n      distance = this._calcDistance(ctx.mousedownEvent, event);\n\n    if (scout.isOneOf(ctx.edge, 'ne', 'e', 'se')) {\n      newBounds.width = Math.max(ctx.minBounds.width,\n        Math.min(ctx.maxBounds.width, ctx.initialBounds.width + distance[0]));\n    } else if (scout.isOneOf(ctx.edge, 'nw', 'w', 'sw')) {\n      // Resize to the left\n      newBounds.x = Math.min(ctx.minBounds.x,\n        Math.max(ctx.maxBounds.x, ctx.initialBounds.x + distance[0]));\n      newBounds.width += ctx.initialBounds.x - newBounds.x;\n    }\n    if (scout.isOneOf(ctx.edge, 'sw', 's', 'se')) {\n      newBounds.height = Math.max(ctx.minBounds.height,\n        Math.min(ctx.maxBounds.height, ctx.initialBounds.height + distance[1]));\n    } else if (scout.isOneOf(ctx.edge, 'nw', 'n', 'ne')) {\n      // Resize to the bottom\n      newBounds.y = Math.min(ctx.minBounds.y,\n        Math.max(ctx.maxBounds.y, ctx.initialBounds.y + distance[1]));\n      newBounds.height += ctx.initialBounds.y - newBounds.y;\n    }\n    $.throttle(this._resizeHandler, Resizable.FPS)(newBounds);\n  }\n\n  _resize(newBounds) {\n    this._cropToBoundaries(newBounds);\n    graphics.setBounds(this.$container, newBounds);\n    this.$container.trigger('resize', {\n      newBounds: newBounds,\n      initialBounds: this._context.initialBounds\n    });\n  }\n\n  _cropToBoundaries(newBounds) {\n    if (this._boundaryValueSet(this.boundaries.left) && newBounds.x > this.boundaries.left) {\n      newBounds.width -= (this.boundaries.left - newBounds.x);\n      newBounds.x = this.boundaries.left;\n    }\n    if (this._boundaryValueSet(this.boundaries.right) && (newBounds.x + newBounds.width) < this.boundaries.right) {\n      newBounds.width = this.boundaries.right - newBounds.x;\n    }\n    if (this._boundaryValueSet(this.boundaries.top) && newBounds.y > this.boundaries.top) {\n      newBounds.height -= (this.boundaries.top - newBounds.y);\n      newBounds.y = this.boundaries.top;\n    }\n    if (this._boundaryValueSet(this.boundaries.bottom) && (newBounds.y + newBounds.height) < this.boundaries.bottom) {\n      newBounds.height = this.boundaries.bottom - newBounds.y;\n    }\n  }\n\n  _boundaryValueSet(value) {\n    return value > 0;\n  }\n\n  _calcDistance(eventA, eventB) {\n    var\n      distX = eventB.pageX - eventA.pageX,\n      distY = eventB.pageY - eventA.pageY;\n    return [distX, distY];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}