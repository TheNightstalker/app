{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, Column, ColumnUserFilter, Device, graphics, GroupBoxMenuItemsOrder, inspector, MenuBar, MenuDestinations, scout, scrollbars, strings, styles, Table, tooltips, Widget } from '../index';\nimport $ from 'jquery';\n\nvar TableHeader = /*#__PURE__*/function (_Widget) {\n  _inherits(TableHeader, _Widget);\n\n  var _super = _createSuper(TableHeader);\n\n  function TableHeader() {\n    var _this;\n\n    _classCallCheck(this, TableHeader);\n\n    _this = _super.call(this);\n    _this.dragging = false;\n    _this.headerMenusEnabled = true;\n    _this.table = null;\n    _this._tableDataScrollHandler = _this._onTableDataScroll.bind(_assertThisInitialized(_this));\n    _this._tableAddFilterRemovedHandler = _this._onTableAddFilterRemoved.bind(_assertThisInitialized(_this));\n    _this._tableColumnResizedHandler = _this._onTableColumnResized.bind(_assertThisInitialized(_this));\n    _this._tableColumnMovedHandler = _this._onTableColumnMoved.bind(_assertThisInitialized(_this));\n    _this._renderedColumns = [];\n    return _this;\n  }\n\n  _createClass(TableHeader, [{\n    key: \"_init\",\n    value: function _init(options) {\n      _get(_getPrototypeOf(TableHeader.prototype), \"_init\", this).call(this, options);\n\n      this.menuBar = scout.create('MenuBar', {\n        parent: this,\n        tabbable: false,\n        position: MenuBar.Position.BOTTOM,\n        menuOrder: new GroupBoxMenuItemsOrder()\n      });\n      this.menuBar.on('propertyChange', this._onMenuBarPropertyChange.bind(this));\n      this.updateMenuBar();\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.table.$data.beforeDiv('table-header'); // Filler is necessary to make sure the header is always as large as the table data, otherwise horizontal scrolling does not work correctly\n\n      this.$filler = this.$container.appendDiv('table-header-item filler').css('visibility', 'hidden'); // Required to make \"height: 100%\" rule work. menuBarContainer and menuBar itself must have the same visibility.\n      // Otherwise they could cover the sorting/filter icons on the table-header of the column.\n\n      this.$menuBarContainer = this.$container.appendDiv('menubar-container').setVisible(this.menuBar.visible);\n      this.menuBar.render(this.$menuBarContainer);\n      this._$window = this.$container.window();\n      this._$body = this.$container.body();\n\n      this._renderColumns();\n\n      this.table.$data.on('scroll', this._tableDataScrollHandler);\n      this.table.on('filterAdded', this._tableAddFilterRemovedHandler);\n      this.table.on('filterRemoved', this._tableAddFilterRemovedHandler);\n      this.table.on('columnResized', this._tableColumnResizedHandler);\n      this.table.on('columnMoved', this._tableColumnMovedHandler);\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.table.$data.off('scroll', this._tableDataScrollHandler);\n      this.table.off('filterAdded', this._tableAddFilterRemovedHandler);\n      this.table.off('filterRemoved', this._tableAddFilterRemovedHandler);\n      this.table.off('columnResized', this._tableColumnResizedHandler);\n      this.table.off('columnMoved', this._tableColumnMovedHandler);\n\n      this._removeColumns();\n\n      _get(_getPrototypeOf(TableHeader.prototype), \"_remove\", this).call(this);\n    }\n  }, {\n    key: \"rerenderColumns\",\n    value: function rerenderColumns() {\n      this._removeColumns();\n\n      this._renderColumns();\n    }\n  }, {\n    key: \"_renderColumns\",\n    value: function _renderColumns() {\n      var visibleColumns = this._visibleColumns();\n\n      visibleColumns.forEach(this._renderColumn, this);\n\n      if (visibleColumns.length === 0) {\n        // If there are no columns, make the filler visible and make sure the header is as large as normally using nbsp\n        this.$filler.css('visibility', 'visible').html('&nbsp;').addClass('empty');\n      }\n\n      this._reconcileScrollPos();\n    }\n  }, {\n    key: \"_renderColumn\",\n    value: function _renderColumn(column, index) {\n      var columnWidth = column._realWidthIfAvailable(),\n          marginLeft = '',\n          marginRight = '',\n          visibleColumns = this._visibleColumns(),\n          isFirstColumn = index === 0,\n          isLastColumn = index === visibleColumns.length - 1;\n\n      if (isFirstColumn) {\n        marginLeft = this.table.rowBorderLeftWidth;\n      } else if (isLastColumn) {\n        marginRight = this.table.rowBorderRightWidth;\n      }\n\n      var $header = this.$filler.beforeDiv('table-header-item').setEnabled(this.enabled) // enabledComputed not used on purpose\n      .data('column', column).cssMinWidth(columnWidth).cssMaxWidth(columnWidth).cssMarginLeft(marginLeft).cssMarginRight(marginRight);\n      $header.appendSpan('table-header-item-text');\n\n      if (this.enabled) {\n        // enabledComputed not used on purpose\n        $header.on('click', this._onHeaderItemClick.bind(this)).on('mousedown', this._onHeaderItemMouseDown.bind(this));\n      }\n\n      if (this.session.inspector) {\n        inspector.applyInfo(column, $header);\n      }\n\n      if (isFirstColumn) {\n        $header.addClass('first');\n      } else if (isLastColumn) {\n        $header.addClass('last');\n      }\n\n      column.$header = $header;\n\n      this._installHeaderItemTooltip(column);\n\n      this._decorateHeader(column);\n\n      var showSeparator = column.showSeparator;\n\n      if (isLastColumn && !this.enabled) {\n        // enabledComputed not used on purpose\n        showSeparator = false;\n      }\n\n      if (showSeparator) {\n        var $separator = this.$filler.beforeDiv('table-header-resize');\n\n        if (column.fixedWidth || !this.enabled) {\n          // enabledComputed not used on purpose\n          $separator.setEnabled(false);\n        } else {\n          $separator.on('mousedown', '', this._onSeparatorMouseDown.bind(this)).on('dblclick', this._onSeparatorDblclick.bind(this));\n        }\n\n        column.$separator = $separator;\n      }\n\n      this._renderedColumns.push(column);\n    }\n  }, {\n    key: \"_removeColumns\",\n    value: function _removeColumns() {\n      this._renderedColumns.slice().forEach(this._removeColumn, this);\n    }\n  }, {\n    key: \"_removeColumn\",\n    value: function _removeColumn(column) {\n      if (column.$header) {\n        column.$header.remove();\n        column.$header = null;\n      }\n\n      if (column.$separator) {\n        column.$separator.remove();\n        column.$separator = null;\n      }\n\n      arrays.remove(this._renderedColumns, column);\n    }\n  }, {\n    key: \"resizeHeaderItem\",\n    value: function resizeHeaderItem(column) {\n      if (!column) {\n        // May be undefined if there are no columns\n        return;\n      }\n\n      if (!column.$header) {\n        // May be undefined if called when header item is not rendered yet (may caused by _adjustColumnMinWidth)\n        return;\n      }\n\n      var remainingHeaderSpace,\n          adjustment,\n          $header = column.$header,\n          columnWidth = column._realWidthIfAvailable(),\n          marginLeft = '',\n          marginRight = '',\n          menuBarWidth = this.menuBar.visible ? this.$menuBarContainer.outerWidth(true) : 0,\n          visibleColumns = this._visibleColumns(),\n          visibleColumnIndex = visibleColumns.indexOf(column),\n          isFirstColumn = visibleColumnIndex === 0,\n          isLastColumn = visibleColumnIndex === visibleColumns.length - 1;\n\n      if (isFirstColumn) {\n        marginLeft = this.table.rowBorderLeftWidth;\n      } else if (isLastColumn) {\n        marginRight = this.table.rowBorderRightWidth;\n        remainingHeaderSpace = this.$container.width() - this.table.rowWidth + graphics.insets(this.table.$data).right;\n\n        if (remainingHeaderSpace < menuBarWidth) {\n          adjustment = menuBarWidth;\n\n          if (column.$separator) {\n            adjustment += column.$separator.width();\n          }\n\n          if (remainingHeaderSpace > 0) {\n            adjustment -= remainingHeaderSpace;\n          }\n\n          var origColumnWidth = columnWidth;\n          columnWidth = Math.max(columnWidth - adjustment, column.minWidth);\n          this.$filler.cssWidth(origColumnWidth - columnWidth);\n        }\n      }\n\n      $header.css('min-width', columnWidth).css('max-width', columnWidth).css('margin-left', marginLeft).css('margin-right', marginRight);\n\n      if (this.tableHeaderMenu && this.tableHeaderMenu.rendered && this.tableHeaderMenu.column === column) {\n        this.tableHeaderMenu.onColumnResized();\n      }\n    }\n    /**\n     * Resizes all header items to theirs desired widths.\n     */\n\n  }, {\n    key: \"resizeHeaderItems\",\n    value: function resizeHeaderItems() {\n      this._visibleColumns().forEach(this.resizeHeaderItem.bind(this));\n    }\n  }, {\n    key: \"_reconcileScrollPos\",\n    value: function _reconcileScrollPos() {\n      // When scrolling horizontally scroll header as well\n      var scrollLeft = this.table.get$Scrollable().scrollLeft(),\n          lastColumn = this._lastVisibleColumn();\n\n      this.resizeHeaderItem(lastColumn);\n      this.$container.scrollLeft(scrollLeft);\n      this.$menuBarContainer.cssRight(-1 * scrollLeft);\n    }\n  }, {\n    key: \"_arrangeHeaderItems\",\n    value: function _arrangeHeaderItems($headers) {\n      var that = this;\n      $headers.each(function () {\n        // move to old position and then animate\n        $(this).css('left', $(this).data('old-pos') - $(this).offset().left).animate({\n          left: 0\n        }, {\n          progress: function progress(animation, _progress, remainingMs) {\n            var $headerItem = $(this);\n\n            if (!$headerItem.isSelected()) {\n              return;\n            } // make sure selected header item is visible\n\n\n            scrollbars.scrollHorizontalTo(that.table.$data, $headerItem); // move menu\n\n            if (that.tableHeaderMenu && that.tableHeaderMenu.rendered) {\n              that.tableHeaderMenu.position();\n            }\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_installHeaderItemTooltip\",\n    value: function _installHeaderItemTooltip(column) {\n      tooltips.install(column.$header, {\n        parent: this,\n        text: this._headerItemTooltipText.bind(this),\n        arrowPosition: 50,\n        arrowPositionUnit: '%',\n        nativeTooltip: !Device.get().isCustomEllipsisTooltipPossible(),\n        htmlEnabled: this._headerItemTooltipHtmlEnabled.bind(this)\n      });\n    }\n  }, {\n    key: \"_installHeaderItemTooltips\",\n    value: function _installHeaderItemTooltips() {\n      this._visibleColumns().forEach(this._installHeaderItemTooltip, this);\n    }\n  }, {\n    key: \"_uninstallHeaderItemTooltip\",\n    value: function _uninstallHeaderItemTooltip(column) {\n      tooltips.uninstall(column.$header);\n    }\n  }, {\n    key: \"_uninstallHeaderItemTooltips\",\n    value: function _uninstallHeaderItemTooltips() {\n      this._visibleColumns().forEach(this._uninstallHeaderItemTooltip, this);\n    }\n  }, {\n    key: \"_headerItemTooltipText\",\n    value: function _headerItemTooltipText($col) {\n      var column = $col.data('column');\n\n      if (column && strings.hasText(column.headerTooltipText)) {\n        return column.headerTooltipText;\n      } else if ($col.isContentTruncated() || $col.width() + $col.position().left > $col.parent().width()) {\n        $col = $col.clone();\n        $col.children('.table-header-item-state').remove();\n        var text = strings.plainText($col.html(), {\n          trim: true\n        });\n\n        if (strings.hasText(text)) {\n          return text;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_headerItemTooltipHtmlEnabled\",\n    value: function _headerItemTooltipHtmlEnabled($col) {\n      var column = $col.data('column');\n      return column.headerTooltipHtmlEnabled;\n    }\n  }, {\n    key: \"setHeaderMenusEnabled\",\n    value: function setHeaderMenusEnabled(headerMenusEnabled) {\n      this.setProperty('headerMenusEnabled', headerMenusEnabled);\n    }\n  }, {\n    key: \"_renderHeaderMenusEnabled\",\n    value: function _renderHeaderMenusEnabled() {\n      this._visibleColumns().forEach(function (column) {\n        this._decorateHeader(column);\n      }, this);\n    }\n  }, {\n    key: \"openHeaderMenu\",\n    value: function openHeaderMenu(column) {\n      if (this.tableHeaderMenu) {\n        // Make sure existing header menu is closed first\n        this.closeHeaderMenu();\n      }\n\n      this.tableHeaderMenu = column.createTableHeaderMenu(this);\n      this.tableHeaderMenu.open(); // Trigger events on column to make it possible to react to the opening of the menu\n\n      column.trigger('headerMenuOpen', {\n        menu: this.tableHeaderMenu\n      });\n      this.tableHeaderMenu.one('destroy', function () {\n        column.trigger('headerMenuClose', {\n          menu: this.tableHeaderMenu\n        });\n      }.bind(this));\n    }\n  }, {\n    key: \"closeHeaderMenu\",\n    value: function closeHeaderMenu() {\n      this.tableHeaderMenu.destroy();\n      this.tableHeaderMenu = null;\n    }\n  }, {\n    key: \"onColumnActionsChanged\",\n    value: function onColumnActionsChanged(event) {\n      if (this.tableHeaderMenu) {\n        this.tableHeaderMenu.onColumnActionsChanged(event);\n      }\n    }\n  }, {\n    key: \"findHeaderItems\",\n    value: function findHeaderItems() {\n      return this.$container.find('.table-header-item:not(.filler)');\n    }\n    /**\n     * Updates the column headers visualization of the text, sorting and styling state\n     * @param [oldColumnState] only necessary when the css class was updated\n     */\n\n  }, {\n    key: \"updateHeader\",\n    value: function updateHeader(column, oldColumnState) {\n      this._decorateHeader(column, oldColumnState);\n    }\n  }, {\n    key: \"_decorateHeader\",\n    value: function _decorateHeader(column, oldColumnState) {\n      this._renderColumnCssClass(column, oldColumnState);\n\n      this._renderColumnText(column);\n\n      this._renderColumnIconId(column);\n\n      this._renderColumnState(column);\n\n      this._renderColumnLegacyStyle(column);\n\n      this._renderColumnHeaderMenuEnabled(column);\n\n      this._renderColumnHorizontalAlignment(column);\n    }\n  }, {\n    key: \"_renderColumnCssClass\",\n    value: function _renderColumnCssClass(column, oldColumnState) {\n      var $header = column.$header;\n\n      if (oldColumnState) {\n        $header.removeClass(oldColumnState.headerCssClass);\n      }\n\n      $header.addClass(column.headerCssClass);\n    }\n  }, {\n    key: \"_renderColumnText\",\n    value: function _renderColumnText(column) {\n      var text = column.text,\n          $header = column.$header,\n          $headerText = $header.children('.table-header-item-text');\n\n      if (!column.headerHtmlEnabled) {\n        text = strings.nl2br(text);\n      } // Make sure empty header is as height as the others to make it properly clickable\n\n\n      $headerText.htmlOrNbsp(text, 'empty');\n\n      this._updateColumnIconAndTextStyle(column);\n    }\n  }, {\n    key: \"_renderColumnIconId\",\n    value: function _renderColumnIconId(column) {\n      column.$header.icon(column.headerIconId);\n\n      this._updateColumnIconAndTextStyle(column);\n    }\n  }, {\n    key: \"_renderColumnHorizontalAlignment\",\n    value: function _renderColumnHorizontalAlignment(column) {\n      column.$header.removeClass('halign-left halign-center halign-right');\n      column.$header.addClass('halign-' + Table.parseHorizontalAlignment(column.horizontalAlignment));\n    }\n  }, {\n    key: \"_updateColumnIconAndTextStyle\",\n    value: function _updateColumnIconAndTextStyle(column) {\n      var $icon = column.$header.data('$icon'),\n          $text = column.$header.children('.table-header-item-text');\n\n      if ($icon) {\n        $icon.toggleClass('with-text', !!column.text);\n      } // Make text invisible if there is an icon but no text\n\n\n      $text.setVisible(!($icon && $text.html() === '&nbsp;')); // Mark icon-only columns to prevent ellipsis (like IconColumn.js does for table cells)\n\n      column.$header.toggleClass('table-header-item-icon-only', !!(column.headerIconId && !column.text));\n    }\n  }, {\n    key: \"_renderColumnLegacyStyle\",\n    value: function _renderColumnLegacyStyle(column) {\n      styles.legacyStyle(column, column.$header, 'header');\n    }\n  }, {\n    key: \"_renderColumnHeaderMenuEnabled\",\n    value: function _renderColumnHeaderMenuEnabled(column) {\n      column.$header.toggleClass('disabled', !this._isHeaderMenuEnabled(column) || !this.enabled); // enabledComputed not used on purpose\n    }\n  }, {\n    key: \"_renderColumnState\",\n    value: function _renderColumnState(column) {\n      var sortDirection,\n          $state,\n          $header = column.$header,\n          filtered = this.table.getFilter(column.id);\n      $header.children('.table-header-item-state').remove();\n      $state = $header.appendSpan('table-header-item-state');\n      $state.empty();\n      $header.removeClass('sort-asc sort-desc sorted group-asc group-desc grouped filtered');\n      $state.removeClass('sort-asc sort-desc sorted group-asc group-desc grouped filtered');\n\n      if (column.sortActive) {\n        sortDirection = column.sortAscending ? 'asc' : 'desc';\n\n        if (column.grouped) {\n          $header.addClass('group-' + sortDirection);\n        }\n\n        $header.addClass('sorted sort-' + sortDirection);\n        $state.addClass('sorted sort-' + sortDirection);\n      }\n\n      if (column.grouped || filtered) {\n        // contains group and filter symbols\n        var $left = $state.appendDiv('left');\n\n        if (column.grouped) {\n          $header.addClass('grouped');\n          $state.addClass('grouped');\n          $left.appendDiv().text('G');\n        }\n\n        if (filtered) {\n          $header.addClass('filtered');\n          $state.addClass('filtered');\n          $left.appendDiv().text('F');\n        }\n      } // Contains sort arrow\n\n\n      $state.appendDiv('right');\n\n      this._adjustColumnMinWidth(column);\n    }\n    /**\n     * Makes sure state is fully visible by adjusting width (happens if column.minWidth is < DEFAULT_MIN_WIDTH)\n     */\n\n  }, {\n    key: \"_adjustColumnMinWidth\",\n    value: function _adjustColumnMinWidth(column) {\n      var filtered = this.table.getFilter(column.id);\n\n      if (column.sortActive || column.grouped || filtered) {\n        if (column.minWidth < Column.DEFAULT_MIN_WIDTH) {\n          column.prefMinWidth = column.minWidth;\n          column.minWidth = Column.DEFAULT_MIN_WIDTH;\n        }\n\n        if (column.width < column.minWidth) {\n          this.table.resizeColumn(column, column.minWidth);\n        }\n      } else {\n        // Reset to preferred min width if no state is visible\n        if (column.prefMinWidth !== null) {\n          column.minWidth = column.prefMinWidth;\n          column.prefMinWidth = null; // Resize to old min width, assuming user has not manually changed the size because column is still as width as default_min_width\n\n          if (column.width === Column.DEFAULT_MIN_WIDTH) {\n            this.table.resizeColumn(column, column.minWidth);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"updateMenuBar\",\n    value: function updateMenuBar() {\n      var menuItems = this.table._filterMenus(this.table.menus, MenuDestinations.HEADER);\n\n      this.menuBar.setHiddenByUi(!this.enabled); // enabledComputed not used on purpose\n\n      this.menuBar.setMenuItems(menuItems);\n    }\n  }, {\n    key: \"_onTableColumnResized\",\n    value: function _onTableColumnResized(event) {\n      var column = event.column,\n          lastColumn = this._lastVisibleColumn();\n\n      this.resizeHeaderItem(column);\n\n      if (lastColumn !== column) {\n        this.resizeHeaderItem(lastColumn);\n      }\n    }\n  }, {\n    key: \"onSortingChanged\",\n    value: function onSortingChanged() {\n      this._visibleColumns().forEach(this._renderColumnState, this);\n    }\n  }, {\n    key: \"_onTableColumnMoved\",\n    value: function _onTableColumnMoved(event) {\n      var column = event.column,\n          oldPos = event.oldPos,\n          newPos = event.newPos,\n          $header = column.$header,\n          $headers = this.findHeaderItems(),\n          $moveHeader = $headers.eq(oldPos),\n          $moveResize = $moveHeader.next(),\n          visibleColumns = this._visibleColumns(),\n          lastColumnPos = visibleColumns.length - 1; // store old position of header\n\n\n      $headers.each(function () {\n        $(this).data('old-pos', $(this).offset().left);\n      }); // change order in dom of header\n\n      if (newPos < oldPos) {\n        $headers.eq(newPos).before($moveHeader);\n        $headers.eq(newPos).before($moveResize);\n      } else {\n        $headers.eq(newPos).after($moveHeader);\n        $headers.eq(newPos).after($moveResize);\n      } // Update first/last markers\n\n\n      if ($headers.length > 0) {\n        $headers.eq(0).removeClass('first');\n        $headers.eq($headers.length - 1).removeClass('last');\n      }\n\n      if (visibleColumns.length > 0) {\n        visibleColumns[0].$header.addClass('first');\n        visibleColumns[lastColumnPos].$header.addClass('last');\n      } // Update header size due to header menu items if moved from or to last position\n\n\n      if (oldPos === lastColumnPos || newPos === lastColumnPos) {\n        visibleColumns.forEach(function (column) {\n          this.resizeHeaderItem(column);\n        }.bind(this));\n      } // move to old position and then animate\n\n\n      if (event.dragged) {\n        $header.css('left', parseInt($header.css('left'), 0) + $header.data('old-pos') - $header.offset().left).animateAVCSD('left', 0);\n      } else {\n        this._arrangeHeaderItems($headers);\n      }\n    }\n  }, {\n    key: \"_visibleColumns\",\n    value: function _visibleColumns() {\n      return this.table.visibleColumns();\n    }\n  }, {\n    key: \"_lastVisibleColumn\",\n    value: function _lastVisibleColumn() {\n      return arrays.last(this._visibleColumns());\n    }\n  }, {\n    key: \"onOrderChanged\",\n    value: function onOrderChanged(oldColumnOrder) {\n      var $header, $headerResize;\n      var $headers = this.findHeaderItems(); // store old position of headers\n\n      $headers.each(function () {\n        $(this).data('old-pos', $(this).offset().left);\n      }); // change order in dom of header\n\n      this._visibleColumns().forEach(function (column) {\n        $header = column.$header;\n        $headerResize = $header.next('.table-header-resize');\n        this.$container.append($header);\n        this.$container.append($headerResize);\n      }, this); // ensure filler is at the end\n\n\n      this.$container.append(this.$filler);\n\n      this._arrangeHeaderItems($headers);\n    }\n    /**\n     * Header menus are enabled when property is enabled on the header itself and on the column too.\n     */\n\n  }, {\n    key: \"_isHeaderMenuEnabled\",\n    value: function _isHeaderMenuEnabled(column) {\n      return !!(column.headerMenuEnabled && this.headerMenusEnabled);\n    }\n  }, {\n    key: \"_onHeaderItemClick\",\n    value: function _onHeaderItemClick(event) {\n      var $headerItem = $(event.currentTarget),\n          column = $headerItem.data('column');\n\n      if (this.dragging || this.columnMoved) {\n        this.dragging = false;\n        this.columnMoved = false;\n      } else if (this.table.sortEnabled && (event.shiftKey || event.ctrlKey || !this._isHeaderMenuEnabled(column))) {\n        this.table.removeColumnGrouping();\n        this.table.sort(column, $headerItem.hasClass('sort-asc') ? 'desc' : 'asc', event.shiftKey);\n      } else if (this.tableHeaderMenu && this.tableHeaderMenu.isOpenFor($headerItem)) {\n        this.closeHeaderMenu();\n      } else if (this._isHeaderMenuEnabled(column)) {\n        this.openHeaderMenu(column);\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_onHeaderItemMouseDown\",\n    value: function _onHeaderItemMouseDown(event) {\n      if (event.button > 0) {\n        return; // ignore buttons other than the main (left) mouse button\n      }\n\n      var diff = 0,\n          that = this,\n          startX = Math.floor(event.pageX),\n          $header = $(event.currentTarget),\n          column = $header.data('column'),\n          oldPos = this._visibleColumns().indexOf(column),\n          newPos = oldPos,\n          move = $header.outerWidth(),\n          $otherHeaders = $header.siblings('.table-header-item:not(.filler)');\n\n      if (column.fixedPosition) {\n        // Don't allow moving a column with fixed position\n        return;\n      }\n\n      this.dragging = false; // firefox fires a click action after a column has been droped at the new location, chrome doesn't -> we need a hint to avoid menu gets opened after drop\n\n      this.columnMoved = false; // start drag & drop events\n\n      this._$window.on('mousemove.tableheader', '', dragMove).one('mouseup', '', dragEnd);\n\n      function dragMove(event) {\n        diff = Math.floor(event.pageX) - startX;\n\n        if (-2 < diff && diff < 2) {\n          // Don't move if it was no movement or just a very small one\n          return;\n        }\n\n        that.dragging = true; // change css of dragged header\n\n        $header.addClass('moving');\n        that.$container && that.$container.addClass('moving'); // move dragged header\n\n        $header.css('left', diff); // find other affected headers\n\n        var middle = realMiddle($header);\n        $otherHeaders.each(function (i) {\n          var m = realMiddle($(this));\n\n          if (middle < m && i < oldPos) {\n            $(this).css('left', move);\n          } else if (middle > m && i >= oldPos) {\n            $(this).css('left', -move);\n          } else {\n            $(this).css('left', 0);\n          }\n        });\n\n        if (that.tableHeaderMenu) {\n          that.tableHeaderMenu.destroy();\n          that.tableHeaderMenu = null;\n        } // Don't show tooltips while dragging\n\n\n        that.rendered && that._uninstallHeaderItemTooltips();\n      }\n\n      function realWidth($div) {\n        var html = $div.html(),\n            width = $div.html('<span>' + html + '</span>').find('span:first').width();\n        $div.html(html);\n        return width;\n      }\n\n      function realMiddle($div) {\n        if ($div.hasClass('halign-right')) {\n          return $div.offset().left + $div.outerWidth() - realWidth($div) / 2;\n        }\n\n        return $div.offset().left + realWidth($div) / 2;\n      }\n\n      function dragEnd(event) {\n        that._$window && that._$window.off('mousemove.tableheader'); // in case of no movement: return\n\n        if (!that.dragging) {\n          return true;\n        } // find new position of dragged header\n\n\n        var h = diff < 0 ? $otherHeaders : $($otherHeaders.get().reverse());\n        h.each(function (i) {\n          if ($(this).css('left') !== '0px') {\n            newPos = that._visibleColumns().indexOf($(this).data('column'));\n            return false;\n          }\n        }); // move column\n\n        if (newPos > -1 && oldPos !== newPos) {\n          that.table.moveColumn($header.data('column'), oldPos, newPos, true);\n          that.dragging = false;\n          that.columnMoved = true;\n        } else {\n          $header.animateAVCSD('left', '', function () {\n            that.dragging = false;\n          });\n        } // reset css of dragged header\n\n\n        $otherHeaders.each(function () {\n          $(this).css('left', '');\n        });\n        $header.removeClass('moving');\n        that.$container && that.$container.removeClass('moving'); // Reinstall tooltips\n\n        that.rendered && that._installHeaderItemTooltips();\n      }\n    }\n  }, {\n    key: \"_onSeparatorDblclick\",\n    value: function _onSeparatorDblclick(event) {\n      if (event.button > 0) {\n        return; // ignore buttons other than the main (left) mouse button\n      }\n\n      if (event.shiftKey) {\n        // Optimize all columns\n        this._visibleColumns().forEach(function (column) {\n          this.table.resizeToFit(column);\n        }, this);\n      } else {\n        // Optimize the column left of the separator\n        var $header = $(event.target).prev(),\n            column = $header.data('column');\n        this.table.resizeToFit(column);\n      }\n    }\n  }, {\n    key: \"_onSeparatorMouseDown\",\n    value: function _onSeparatorMouseDown(event) {\n      if (event.button > 0) {\n        return; // ignore buttons other than the main (left) mouse button\n      }\n\n      var startX = Math.floor(event.pageX),\n          $header = $(event.target).prev(),\n          column = $header.data('column'),\n          that = this,\n          headerWidth = column.width; // Install resize helpers. Those helpers make sure the header and the data element keep their\n      // current width until the resizing has finished. Otherwise, make a column smaller while the\n      // table has been horizontally scrolled to the right would behave very strange.\n\n      var $headerColumnResizedHelper = this.$container.appendDiv('table-column-resize-helper').css('width', this.table.rowWidth + this.table.rowBorderWidth);\n      var $dataColumnResizedHelper = this.table.$data.appendDiv('table-column-resize-helper').css('width', this.table.rowWidth);\n\n      this._$window.on('mousemove.tableheader', resizeMove).one('mouseup', resizeEnd);\n\n      this._$body.addClass('col-resize'); // Prevent text selection in a form, don't stop propagation to allow others (e.g. cell editor) to react\n\n\n      event.preventDefault();\n\n      function resizeMove(event) {\n        var diff = Math.floor(event.pageX) - startX,\n            wHeader = headerWidth + diff;\n        wHeader = Math.max(wHeader, column.minWidth);\n\n        if (that.rendered && wHeader !== column.width) {\n          that.table.resizeColumn(column, wHeader);\n        }\n      }\n\n      function resizeEnd(event) {\n        // Remove resize helpers\n        $headerColumnResizedHelper.remove();\n        $dataColumnResizedHelper.remove();\n        that._$window && that._$window.off('mousemove.tableheader');\n        that._$body && that._$body.removeClass('col-resize');\n\n        if (that.table.rendered && column.width !== headerWidth) {\n          that.table.resizeColumn(column, column.width);\n        }\n      }\n    }\n  }, {\n    key: \"_onTableDataScroll\",\n    value: function _onTableDataScroll() {\n      scrollbars.fix(this.$menuBarContainer);\n\n      this._reconcileScrollPos();\n\n      this._fixTimeout = scrollbars.unfix(this.$menuBarContainer, this._fixTimeout);\n    }\n  }, {\n    key: \"_onMenuBarPropertyChange\",\n    value: function _onMenuBarPropertyChange(event) {\n      if (this.rendered && event.propertyName === 'visible') {\n        this.$menuBarContainer.setVisible(event.newValue);\n      }\n    }\n  }, {\n    key: \"_onTableAddFilterRemoved\",\n    value: function _onTableAddFilterRemoved(event) {\n      var column = event.filter.column; // Check for column.$header because column may have been removed in the mean time due to a structure changed event -> don't try to render state\n\n      if (event.filter.filterType === ColumnUserFilter.TYPE && column.$header) {\n        this._renderColumnState(column);\n      }\n    }\n  }]);\n\n  return TableHeader;\n}(Widget);\n\nexport { TableHeader as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/table/TableHeader.js"],"names":["arrays","Column","ColumnUserFilter","Device","graphics","GroupBoxMenuItemsOrder","inspector","MenuBar","MenuDestinations","scout","scrollbars","strings","styles","Table","tooltips","Widget","$","TableHeader","dragging","headerMenusEnabled","table","_tableDataScrollHandler","_onTableDataScroll","bind","_tableAddFilterRemovedHandler","_onTableAddFilterRemoved","_tableColumnResizedHandler","_onTableColumnResized","_tableColumnMovedHandler","_onTableColumnMoved","_renderedColumns","options","menuBar","create","parent","tabbable","position","Position","BOTTOM","menuOrder","on","_onMenuBarPropertyChange","updateMenuBar","$container","$data","beforeDiv","$filler","appendDiv","css","$menuBarContainer","setVisible","visible","render","_$window","window","_$body","body","_renderColumns","off","_removeColumns","visibleColumns","_visibleColumns","forEach","_renderColumn","length","html","addClass","_reconcileScrollPos","column","index","columnWidth","_realWidthIfAvailable","marginLeft","marginRight","isFirstColumn","isLastColumn","rowBorderLeftWidth","rowBorderRightWidth","$header","setEnabled","enabled","data","cssMinWidth","cssMaxWidth","cssMarginLeft","cssMarginRight","appendSpan","_onHeaderItemClick","_onHeaderItemMouseDown","session","applyInfo","_installHeaderItemTooltip","_decorateHeader","showSeparator","$separator","fixedWidth","_onSeparatorMouseDown","_onSeparatorDblclick","push","slice","_removeColumn","remove","remainingHeaderSpace","adjustment","menuBarWidth","outerWidth","visibleColumnIndex","indexOf","width","rowWidth","insets","right","origColumnWidth","Math","max","minWidth","cssWidth","tableHeaderMenu","rendered","onColumnResized","resizeHeaderItem","scrollLeft","get$Scrollable","lastColumn","_lastVisibleColumn","cssRight","$headers","that","each","offset","left","animate","progress","animation","remainingMs","$headerItem","isSelected","scrollHorizontalTo","install","text","_headerItemTooltipText","arrowPosition","arrowPositionUnit","nativeTooltip","get","isCustomEllipsisTooltipPossible","htmlEnabled","_headerItemTooltipHtmlEnabled","uninstall","_uninstallHeaderItemTooltip","$col","hasText","headerTooltipText","isContentTruncated","clone","children","plainText","trim","headerTooltipHtmlEnabled","setProperty","closeHeaderMenu","createTableHeaderMenu","open","trigger","menu","one","destroy","event","onColumnActionsChanged","find","oldColumnState","_renderColumnCssClass","_renderColumnText","_renderColumnIconId","_renderColumnState","_renderColumnLegacyStyle","_renderColumnHeaderMenuEnabled","_renderColumnHorizontalAlignment","removeClass","headerCssClass","$headerText","headerHtmlEnabled","nl2br","htmlOrNbsp","_updateColumnIconAndTextStyle","icon","headerIconId","parseHorizontalAlignment","horizontalAlignment","$icon","$text","toggleClass","legacyStyle","_isHeaderMenuEnabled","sortDirection","$state","filtered","getFilter","id","empty","sortActive","sortAscending","grouped","$left","_adjustColumnMinWidth","DEFAULT_MIN_WIDTH","prefMinWidth","resizeColumn","menuItems","_filterMenus","menus","HEADER","setHiddenByUi","setMenuItems","oldPos","newPos","findHeaderItems","$moveHeader","eq","$moveResize","next","lastColumnPos","before","after","dragged","parseInt","animateAVCSD","_arrangeHeaderItems","last","oldColumnOrder","$headerResize","append","headerMenuEnabled","currentTarget","columnMoved","sortEnabled","shiftKey","ctrlKey","removeColumnGrouping","sort","hasClass","isOpenFor","openHeaderMenu","button","diff","startX","floor","pageX","move","$otherHeaders","siblings","fixedPosition","dragMove","dragEnd","middle","realMiddle","i","m","_uninstallHeaderItemTooltips","realWidth","$div","h","reverse","moveColumn","_installHeaderItemTooltips","resizeToFit","target","prev","headerWidth","$headerColumnResizedHelper","rowBorderWidth","$dataColumnResizedHelper","resizeMove","resizeEnd","preventDefault","wHeader","fix","_fixTimeout","unfix","propertyName","newValue","filter","filterType","TYPE"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,MAAR,EAAgBC,MAAhB,EAAwBC,gBAAxB,EAA0CC,MAA1C,EAAkDC,QAAlD,EAA4DC,sBAA5D,EAAoFC,SAApF,EAA+FC,OAA/F,EAAwGC,gBAAxG,EAA0HC,KAA1H,EAAiIC,UAAjI,EAA6IC,OAA7I,EAAsJC,MAAtJ,EAA8JC,KAA9J,EAAqKC,QAArK,EAA+KC,MAA/K,QAA4L,UAA5L;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEqBC,W;;;;;AAEnB,yBAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,QAAL,GAAgB,KAAhB;AACA,UAAKC,kBAAL,GAA0B,IAA1B;AACA,UAAKC,KAAL,GAAa,IAAb;AACA,UAAKC,uBAAL,GAA+B,MAAKC,kBAAL,CAAwBC,IAAxB,+BAA/B;AACA,UAAKC,6BAAL,GAAqC,MAAKC,wBAAL,CAA8BF,IAA9B,+BAArC;AACA,UAAKG,0BAAL,GAAkC,MAAKC,qBAAL,CAA2BJ,IAA3B,+BAAlC;AACA,UAAKK,wBAAL,GAAgC,MAAKC,mBAAL,CAAyBN,IAAzB,+BAAhC;AACA,UAAKO,gBAAL,GAAwB,EAAxB;AAVY;AAWb;;;;0BAEKC,O,EAAS;AACb,6EAAYA,OAAZ;;AAEA,WAAKC,OAAL,GAAevB,KAAK,CAACwB,MAAN,CAAa,SAAb,EAAwB;AACrCC,QAAAA,MAAM,EAAE,IAD6B;AAErCC,QAAAA,QAAQ,EAAE,KAF2B;AAGrCC,QAAAA,QAAQ,EAAE7B,OAAO,CAAC8B,QAAR,CAAiBC,MAHU;AAIrCC,QAAAA,SAAS,EAAE,IAAIlC,sBAAJ;AAJ0B,OAAxB,CAAf;AAMA,WAAK2B,OAAL,CAAaQ,EAAb,CAAgB,gBAAhB,EAAkC,KAAKC,wBAAL,CAA8BlB,IAA9B,CAAmC,IAAnC,CAAlC;AACA,WAAKmB,aAAL;AACD;;;8BAES;AACR,WAAKC,UAAL,GAAkB,KAAKvB,KAAL,CAAWwB,KAAX,CAAiBC,SAAjB,CAA2B,cAA3B,CAAlB,CADQ,CAGR;;AACA,WAAKC,OAAL,GAAe,KAAKH,UAAL,CAAgBI,SAAhB,CAA0B,0BAA1B,EAAsDC,GAAtD,CAA0D,YAA1D,EAAwE,QAAxE,CAAf,CAJQ,CAMR;AACA;;AACA,WAAKC,iBAAL,GAAyB,KAAKN,UAAL,CACtBI,SADsB,CACZ,mBADY,EAEtBG,UAFsB,CAEX,KAAKlB,OAAL,CAAamB,OAFF,CAAzB;AAGA,WAAKnB,OAAL,CAAaoB,MAAb,CAAoB,KAAKH,iBAAzB;AACA,WAAKI,QAAL,GAAgB,KAAKV,UAAL,CAAgBW,MAAhB,EAAhB;AACA,WAAKC,MAAL,GAAc,KAAKZ,UAAL,CAAgBa,IAAhB,EAAd;;AAEA,WAAKC,cAAL;;AAEA,WAAKrC,KAAL,CAAWwB,KAAX,CAAiBJ,EAAjB,CAAoB,QAApB,EAA8B,KAAKnB,uBAAnC;AACA,WAAKD,KAAL,CAAWoB,EAAX,CAAc,aAAd,EAA6B,KAAKhB,6BAAlC;AACA,WAAKJ,KAAL,CAAWoB,EAAX,CAAc,eAAd,EAA+B,KAAKhB,6BAApC;AACA,WAAKJ,KAAL,CAAWoB,EAAX,CAAc,eAAd,EAA+B,KAAKd,0BAApC;AACA,WAAKN,KAAL,CAAWoB,EAAX,CAAc,aAAd,EAA6B,KAAKZ,wBAAlC;AACD;;;8BAES;AACR,WAAKR,KAAL,CAAWwB,KAAX,CAAiBc,GAAjB,CAAqB,QAArB,EAA+B,KAAKrC,uBAApC;AACA,WAAKD,KAAL,CAAWsC,GAAX,CAAe,aAAf,EAA8B,KAAKlC,6BAAnC;AACA,WAAKJ,KAAL,CAAWsC,GAAX,CAAe,eAAf,EAAgC,KAAKlC,6BAArC;AACA,WAAKJ,KAAL,CAAWsC,GAAX,CAAe,eAAf,EAAgC,KAAKhC,0BAArC;AACA,WAAKN,KAAL,CAAWsC,GAAX,CAAe,aAAf,EAA8B,KAAK9B,wBAAnC;;AAEA,WAAK+B,cAAL;;AAEA;AACD;;;sCAEiB;AAChB,WAAKA,cAAL;;AACA,WAAKF,cAAL;AACD;;;qCAEgB;AACf,UAAIG,cAAc,GAAG,KAAKC,eAAL,EAArB;;AACAD,MAAAA,cAAc,CAACE,OAAf,CAAuB,KAAKC,aAA5B,EAA2C,IAA3C;;AACA,UAAIH,cAAc,CAACI,MAAf,KAA0B,CAA9B,EAAiC;AAC/B;AACA,aAAKlB,OAAL,CAAaE,GAAb,CAAiB,YAAjB,EAA+B,SAA/B,EAA0CiB,IAA1C,CAA+C,QAA/C,EAAyDC,QAAzD,CAAkE,OAAlE;AACD;;AACD,WAAKC,mBAAL;AACD;;;kCAEaC,M,EAAQC,K,EAAO;AAC3B,UAAIC,WAAW,GAAGF,MAAM,CAACG,qBAAP,EAAlB;AAAA,UACEC,UAAU,GAAG,EADf;AAAA,UAEEC,WAAW,GAAG,EAFhB;AAAA,UAGEb,cAAc,GAAG,KAAKC,eAAL,EAHnB;AAAA,UAIEa,aAAa,GAAIL,KAAK,KAAK,CAJ7B;AAAA,UAKEM,YAAY,GAAIN,KAAK,KAAKT,cAAc,CAACI,MAAf,GAAwB,CALpD;;AAOA,UAAIU,aAAJ,EAAmB;AACjBF,QAAAA,UAAU,GAAG,KAAKpD,KAAL,CAAWwD,kBAAxB;AACD,OAFD,MAEO,IAAID,YAAJ,EAAkB;AACvBF,QAAAA,WAAW,GAAG,KAAKrD,KAAL,CAAWyD,mBAAzB;AACD;;AAED,UAAIC,OAAO,GAAG,KAAKhC,OAAL,CAAaD,SAAb,CAAuB,mBAAvB,EACXkC,UADW,CACA,KAAKC,OADL,EACc;AADd,OAEXC,IAFW,CAEN,QAFM,EAEIb,MAFJ,EAGXc,WAHW,CAGCZ,WAHD,EAIXa,WAJW,CAICb,WAJD,EAKXc,aALW,CAKGZ,UALH,EAMXa,cANW,CAMIZ,WANJ,CAAd;AAOAK,MAAAA,OAAO,CAACQ,UAAR,CAAmB,wBAAnB;;AACA,UAAI,KAAKN,OAAT,EAAkB;AAAE;AAClBF,QAAAA,OAAO,CACJtC,EADH,CACM,OADN,EACe,KAAK+C,kBAAL,CAAwBhE,IAAxB,CAA6B,IAA7B,CADf,EAEGiB,EAFH,CAEM,WAFN,EAEmB,KAAKgD,sBAAL,CAA4BjE,IAA5B,CAAiC,IAAjC,CAFnB;AAGD;;AAED,UAAI,KAAKkE,OAAL,CAAanF,SAAjB,EAA4B;AAC1BA,QAAAA,SAAS,CAACoF,SAAV,CAAoBtB,MAApB,EAA4BU,OAA5B;AACD;;AAED,UAAIJ,aAAJ,EAAmB;AACjBI,QAAAA,OAAO,CAACZ,QAAR,CAAiB,OAAjB;AACD,OAFD,MAEO,IAAIS,YAAJ,EAAkB;AACvBG,QAAAA,OAAO,CAACZ,QAAR,CAAiB,MAAjB;AACD;;AAEDE,MAAAA,MAAM,CAACU,OAAP,GAAiBA,OAAjB;;AAEA,WAAKa,yBAAL,CAA+BvB,MAA/B;;AACA,WAAKwB,eAAL,CAAqBxB,MAArB;;AAEA,UAAIyB,aAAa,GAAGzB,MAAM,CAACyB,aAA3B;;AACA,UAAIlB,YAAY,IAAI,CAAC,KAAKK,OAA1B,EAAmC;AAAE;AACnCa,QAAAA,aAAa,GAAG,KAAhB;AACD;;AACD,UAAIA,aAAJ,EAAmB;AACjB,YAAIC,UAAU,GAAG,KAAKhD,OAAL,CAAaD,SAAb,CAAuB,qBAAvB,CAAjB;;AACA,YAAIuB,MAAM,CAAC2B,UAAP,IAAqB,CAAC,KAAKf,OAA/B,EAAwC;AAAE;AACxCc,UAAAA,UAAU,CAACf,UAAX,CAAsB,KAAtB;AACD,SAFD,MAEO;AACLe,UAAAA,UAAU,CACPtD,EADH,CACM,WADN,EACmB,EADnB,EACuB,KAAKwD,qBAAL,CAA2BzE,IAA3B,CAAgC,IAAhC,CADvB,EAEGiB,EAFH,CAEM,UAFN,EAEkB,KAAKyD,oBAAL,CAA0B1E,IAA1B,CAA+B,IAA/B,CAFlB;AAGD;;AACD6C,QAAAA,MAAM,CAAC0B,UAAP,GAAoBA,UAApB;AACD;;AACD,WAAKhE,gBAAL,CAAsBoE,IAAtB,CAA2B9B,MAA3B;AACD;;;qCAEgB;AACf,WAAKtC,gBAAL,CAAsBqE,KAAtB,GAA8BrC,OAA9B,CAAsC,KAAKsC,aAA3C,EAA0D,IAA1D;AACD;;;kCAEahC,M,EAAQ;AACpB,UAAIA,MAAM,CAACU,OAAX,EAAoB;AAClBV,QAAAA,MAAM,CAACU,OAAP,CAAeuB,MAAf;AACAjC,QAAAA,MAAM,CAACU,OAAP,GAAiB,IAAjB;AACD;;AACD,UAAIV,MAAM,CAAC0B,UAAX,EAAuB;AACrB1B,QAAAA,MAAM,CAAC0B,UAAP,CAAkBO,MAAlB;AACAjC,QAAAA,MAAM,CAAC0B,UAAP,GAAoB,IAApB;AACD;;AACD9F,MAAAA,MAAM,CAACqG,MAAP,CAAc,KAAKvE,gBAAnB,EAAqCsC,MAArC;AACD;;;qCAEgBA,M,EAAQ;AACvB,UAAI,CAACA,MAAL,EAAa;AACX;AACA;AACD;;AACD,UAAI,CAACA,MAAM,CAACU,OAAZ,EAAqB;AACnB;AACA;AACD;;AAED,UAAIwB,oBAAJ;AAAA,UAA0BC,UAA1B;AAAA,UACEzB,OAAO,GAAGV,MAAM,CAACU,OADnB;AAAA,UAEER,WAAW,GAAGF,MAAM,CAACG,qBAAP,EAFhB;AAAA,UAGEC,UAAU,GAAG,EAHf;AAAA,UAIEC,WAAW,GAAG,EAJhB;AAAA,UAKE+B,YAAY,GAAI,KAAKxE,OAAL,CAAamB,OAAb,GAAuB,KAAKF,iBAAL,CAAuBwD,UAAvB,CAAkC,IAAlC,CAAvB,GAAiE,CALnF;AAAA,UAME7C,cAAc,GAAG,KAAKC,eAAL,EANnB;AAAA,UAOE6C,kBAAkB,GAAG9C,cAAc,CAAC+C,OAAf,CAAuBvC,MAAvB,CAPvB;AAAA,UAQEM,aAAa,GAAGgC,kBAAkB,KAAK,CARzC;AAAA,UASE/B,YAAY,GAAG+B,kBAAkB,KAAK9C,cAAc,CAACI,MAAf,GAAwB,CAThE;;AAWA,UAAIU,aAAJ,EAAmB;AACjBF,QAAAA,UAAU,GAAG,KAAKpD,KAAL,CAAWwD,kBAAxB;AACD,OAFD,MAEO,IAAID,YAAJ,EAAkB;AACvBF,QAAAA,WAAW,GAAG,KAAKrD,KAAL,CAAWyD,mBAAzB;AACAyB,QAAAA,oBAAoB,GAAG,KAAK3D,UAAL,CAAgBiE,KAAhB,KAA0B,KAAKxF,KAAL,CAAWyF,QAArC,GAAgDzG,QAAQ,CAAC0G,MAAT,CAAgB,KAAK1F,KAAL,CAAWwB,KAA3B,EAAkCmE,KAAzG;;AAEA,YAAIT,oBAAoB,GAAGE,YAA3B,EAAyC;AACvCD,UAAAA,UAAU,GAAGC,YAAb;;AACA,cAAIpC,MAAM,CAAC0B,UAAX,EAAuB;AACrBS,YAAAA,UAAU,IAAInC,MAAM,CAAC0B,UAAP,CAAkBc,KAAlB,EAAd;AACD;;AACD,cAAIN,oBAAoB,GAAG,CAA3B,EAA8B;AAC5BC,YAAAA,UAAU,IAAID,oBAAd;AACD;;AAED,cAAIU,eAAe,GAAG1C,WAAtB;AACAA,UAAAA,WAAW,GAAG2C,IAAI,CAACC,GAAL,CAAS5C,WAAW,GAAGiC,UAAvB,EAAmCnC,MAAM,CAAC+C,QAA1C,CAAd;AACA,eAAKrE,OAAL,CAAasE,QAAb,CAAsBJ,eAAe,GAAG1C,WAAxC;AACD;AACF;;AAEDQ,MAAAA,OAAO,CACJ9B,GADH,CACO,WADP,EACoBsB,WADpB,EAEGtB,GAFH,CAEO,WAFP,EAEoBsB,WAFpB,EAGGtB,GAHH,CAGO,aAHP,EAGsBwB,UAHtB,EAIGxB,GAJH,CAIO,cAJP,EAIuByB,WAJvB;;AAMA,UAAI,KAAK4C,eAAL,IAAwB,KAAKA,eAAL,CAAqBC,QAA7C,IAAyD,KAAKD,eAAL,CAAqBjD,MAArB,KAAgCA,MAA7F,EAAqG;AACnG,aAAKiD,eAAL,CAAqBE,eAArB;AACD;AACF;AAED;AACF;AACA;;;;wCACsB;AAClB,WAAK1D,eAAL,GAAuBC,OAAvB,CAA+B,KAAK0D,gBAAL,CAAsBjG,IAAtB,CAA2B,IAA3B,CAA/B;AACD;;;0CAEqB;AACpB;AACA,UACEkG,UAAU,GAAG,KAAKrG,KAAL,CAAWsG,cAAX,GAA4BD,UAA5B,EADf;AAAA,UAEEE,UAAU,GAAG,KAAKC,kBAAL,EAFf;;AAIA,WAAKJ,gBAAL,CAAsBG,UAAtB;AACA,WAAKhF,UAAL,CAAgB8E,UAAhB,CAA2BA,UAA3B;AACA,WAAKxE,iBAAL,CAAuB4E,QAAvB,CAAgC,CAAC,CAAD,GAAKJ,UAArC;AACD;;;wCAEmBK,Q,EAAU;AAC5B,UAAIC,IAAI,GAAG,IAAX;AACAD,MAAAA,QAAQ,CAACE,IAAT,CAAc,YAAW;AACvB;AACAhH,QAAAA,CAAC,CAAC,IAAD,CAAD,CAAQgC,GAAR,CAAY,MAAZ,EAAoBhC,CAAC,CAAC,IAAD,CAAD,CAAQiE,IAAR,CAAa,SAAb,IAA0BjE,CAAC,CAAC,IAAD,CAAD,CAAQiH,MAAR,GAAiBC,IAA/D,EACGC,OADH,CACW;AACPD,UAAAA,IAAI,EAAE;AADC,SADX,EAGK;AACDE,UAAAA,QAAQ,EAAE,kBAASC,SAAT,EAAoBD,SAApB,EAA8BE,WAA9B,EAA2C;AACnD,gBAAIC,WAAW,GAAGvH,CAAC,CAAC,IAAD,CAAnB;;AACA,gBAAI,CAACuH,WAAW,CAACC,UAAZ,EAAL,EAA+B;AAC7B;AACD,aAJkD,CAKnD;;;AACA9H,YAAAA,UAAU,CAAC+H,kBAAX,CAA8BV,IAAI,CAAC3G,KAAL,CAAWwB,KAAzC,EAAgD2F,WAAhD,EANmD,CAQnD;;AACA,gBAAIR,IAAI,CAACV,eAAL,IAAwBU,IAAI,CAACV,eAAL,CAAqBC,QAAjD,EAA2D;AACzDS,cAAAA,IAAI,CAACV,eAAL,CAAqBjF,QAArB;AACD;AACF;AAbA,SAHL;AAkBD,OApBD;AAqBD;;;8CAEyBgC,M,EAAQ;AAChCtD,MAAAA,QAAQ,CAAC4H,OAAT,CAAiBtE,MAAM,CAACU,OAAxB,EAAiC;AAC/B5C,QAAAA,MAAM,EAAE,IADuB;AAE/ByG,QAAAA,IAAI,EAAE,KAAKC,sBAAL,CAA4BrH,IAA5B,CAAiC,IAAjC,CAFyB;AAG/BsH,QAAAA,aAAa,EAAE,EAHgB;AAI/BC,QAAAA,iBAAiB,EAAE,GAJY;AAK/BC,QAAAA,aAAa,EAAE,CAAC5I,MAAM,CAAC6I,GAAP,GAAaC,+BAAb,EALe;AAM/BC,QAAAA,WAAW,EAAE,KAAKC,6BAAL,CAAmC5H,IAAnC,CAAwC,IAAxC;AANkB,OAAjC;AAQD;;;iDAE4B;AAC3B,WAAKsC,eAAL,GAAuBC,OAAvB,CAA+B,KAAK6B,yBAApC,EAA+D,IAA/D;AACD;;;gDAE2BvB,M,EAAQ;AAClCtD,MAAAA,QAAQ,CAACsI,SAAT,CAAmBhF,MAAM,CAACU,OAA1B;AACD;;;mDAE8B;AAC7B,WAAKjB,eAAL,GAAuBC,OAAvB,CAA+B,KAAKuF,2BAApC,EAAiE,IAAjE;AACD;;;2CAEsBC,I,EAAM;AAC3B,UAAIlF,MAAM,GAAGkF,IAAI,CAACrE,IAAL,CAAU,QAAV,CAAb;;AACA,UAAIb,MAAM,IAAIzD,OAAO,CAAC4I,OAAR,CAAgBnF,MAAM,CAACoF,iBAAvB,CAAd,EAAyD;AACvD,eAAOpF,MAAM,CAACoF,iBAAd;AACD,OAFD,MAEO,IAAIF,IAAI,CAACG,kBAAL,MAA8BH,IAAI,CAAC1C,KAAL,KAAe0C,IAAI,CAAClH,QAAL,GAAgB8F,IAAhC,GAAwCoB,IAAI,CAACpH,MAAL,GAAc0E,KAAd,EAAzE,EAAgG;AACrG0C,QAAAA,IAAI,GAAGA,IAAI,CAACI,KAAL,EAAP;AACAJ,QAAAA,IAAI,CAACK,QAAL,CAAc,0BAAd,EAA0CtD,MAA1C;AACA,YAAIsC,IAAI,GAAGhI,OAAO,CAACiJ,SAAR,CAAkBN,IAAI,CAACrF,IAAL,EAAlB,EAA+B;AACxC4F,UAAAA,IAAI,EAAE;AADkC,SAA/B,CAAX;;AAGA,YAAIlJ,OAAO,CAAC4I,OAAR,CAAgBZ,IAAhB,CAAJ,EAA2B;AACzB,iBAAOA,IAAP;AACD;AACF;;AACD,aAAO,IAAP;AACD;;;kDAE6BW,I,EAAM;AAClC,UAAIlF,MAAM,GAAGkF,IAAI,CAACrE,IAAL,CAAU,QAAV,CAAb;AACA,aAAOb,MAAM,CAAC0F,wBAAd;AACD;;;0CAEqB3I,kB,EAAoB;AACxC,WAAK4I,WAAL,CAAiB,oBAAjB,EAAuC5I,kBAAvC;AACD;;;gDAE2B;AAC1B,WAAK0C,eAAL,GAAuBC,OAAvB,CAA+B,UAASM,MAAT,EAAiB;AAC9C,aAAKwB,eAAL,CAAqBxB,MAArB;AACD,OAFD,EAEG,IAFH;AAGD;;;mCAEcA,M,EAAQ;AACrB,UAAI,KAAKiD,eAAT,EAA0B;AACxB;AACA,aAAK2C,eAAL;AACD;;AAED,WAAK3C,eAAL,GAAuBjD,MAAM,CAAC6F,qBAAP,CAA6B,IAA7B,CAAvB;AACA,WAAK5C,eAAL,CAAqB6C,IAArB,GAPqB,CASrB;;AACA9F,MAAAA,MAAM,CAAC+F,OAAP,CAAe,gBAAf,EAAiC;AAC/BC,QAAAA,IAAI,EAAE,KAAK/C;AADoB,OAAjC;AAGA,WAAKA,eAAL,CAAqBgD,GAArB,CAAyB,SAAzB,EAAoC,YAAW;AAC7CjG,QAAAA,MAAM,CAAC+F,OAAP,CAAe,iBAAf,EAAkC;AAChCC,UAAAA,IAAI,EAAE,KAAK/C;AADqB,SAAlC;AAGD,OAJmC,CAIlC9F,IAJkC,CAI7B,IAJ6B,CAApC;AAKD;;;sCAEiB;AAChB,WAAK8F,eAAL,CAAqBiD,OAArB;AACA,WAAKjD,eAAL,GAAuB,IAAvB;AACD;;;2CAEsBkD,K,EAAO;AAC5B,UAAI,KAAKlD,eAAT,EAA0B;AACxB,aAAKA,eAAL,CAAqBmD,sBAArB,CAA4CD,KAA5C;AACD;AACF;;;sCAEiB;AAChB,aAAO,KAAK5H,UAAL,CAAgB8H,IAAhB,CAAqB,iCAArB,CAAP;AACD;AAED;AACF;AACA;AACA;;;;iCACerG,M,EAAQsG,c,EAAgB;AACnC,WAAK9E,eAAL,CAAqBxB,MAArB,EAA6BsG,cAA7B;AACD;;;oCAEetG,M,EAAQsG,c,EAAgB;AACtC,WAAKC,qBAAL,CAA2BvG,MAA3B,EAAmCsG,cAAnC;;AACA,WAAKE,iBAAL,CAAuBxG,MAAvB;;AACA,WAAKyG,mBAAL,CAAyBzG,MAAzB;;AACA,WAAK0G,kBAAL,CAAwB1G,MAAxB;;AACA,WAAK2G,wBAAL,CAA8B3G,MAA9B;;AACA,WAAK4G,8BAAL,CAAoC5G,MAApC;;AACA,WAAK6G,gCAAL,CAAsC7G,MAAtC;AACD;;;0CAEqBA,M,EAAQsG,c,EAAgB;AAC5C,UAAI5F,OAAO,GAAGV,MAAM,CAACU,OAArB;;AACA,UAAI4F,cAAJ,EAAoB;AAClB5F,QAAAA,OAAO,CAACoG,WAAR,CAAoBR,cAAc,CAACS,cAAnC;AACD;;AACDrG,MAAAA,OAAO,CAACZ,QAAR,CAAiBE,MAAM,CAAC+G,cAAxB;AACD;;;sCAEiB/G,M,EAAQ;AACxB,UAAIuE,IAAI,GAAGvE,MAAM,CAACuE,IAAlB;AAAA,UACE7D,OAAO,GAAGV,MAAM,CAACU,OADnB;AAAA,UAEEsG,WAAW,GAAGtG,OAAO,CAAC6E,QAAR,CAAiB,yBAAjB,CAFhB;;AAIA,UAAI,CAACvF,MAAM,CAACiH,iBAAZ,EAA+B;AAC7B1C,QAAAA,IAAI,GAAGhI,OAAO,CAAC2K,KAAR,CAAc3C,IAAd,CAAP;AACD,OAPuB,CAQxB;;;AACAyC,MAAAA,WAAW,CAACG,UAAZ,CAAuB5C,IAAvB,EAA6B,OAA7B;;AACA,WAAK6C,6BAAL,CAAmCpH,MAAnC;AACD;;;wCAEmBA,M,EAAQ;AAC1BA,MAAAA,MAAM,CAACU,OAAP,CAAe2G,IAAf,CAAoBrH,MAAM,CAACsH,YAA3B;;AACA,WAAKF,6BAAL,CAAmCpH,MAAnC;AACD;;;qDAEgCA,M,EAAQ;AACvCA,MAAAA,MAAM,CAACU,OAAP,CAAeoG,WAAf,CAA2B,wCAA3B;AACA9G,MAAAA,MAAM,CAACU,OAAP,CAAeZ,QAAf,CAAwB,YAAYrD,KAAK,CAAC8K,wBAAN,CAA+BvH,MAAM,CAACwH,mBAAtC,CAApC;AACD;;;kDAE6BxH,M,EAAQ;AACpC,UAAIyH,KAAK,GAAGzH,MAAM,CAACU,OAAP,CAAeG,IAAf,CAAoB,OAApB,CAAZ;AAAA,UACE6G,KAAK,GAAG1H,MAAM,CAACU,OAAP,CAAe6E,QAAf,CAAwB,yBAAxB,CADV;;AAGA,UAAIkC,KAAJ,EAAW;AACTA,QAAAA,KAAK,CAACE,WAAN,CAAkB,WAAlB,EAA+B,CAAC,CAAC3H,MAAM,CAACuE,IAAxC;AACD,OANmC,CAOpC;;;AACAmD,MAAAA,KAAK,CAAC5I,UAAN,CAAiB,EAAE2I,KAAK,IAAIC,KAAK,CAAC7H,IAAN,OAAiB,QAA5B,CAAjB,EARoC,CASpC;;AACAG,MAAAA,MAAM,CAACU,OAAP,CAAeiH,WAAf,CAA2B,6BAA3B,EAA0D,CAAC,EAAE3H,MAAM,CAACsH,YAAP,IAAuB,CAACtH,MAAM,CAACuE,IAAjC,CAA3D;AACD;;;6CAEwBvE,M,EAAQ;AAC/BxD,MAAAA,MAAM,CAACoL,WAAP,CAAmB5H,MAAnB,EAA2BA,MAAM,CAACU,OAAlC,EAA2C,QAA3C;AACD;;;mDAE8BV,M,EAAQ;AACrCA,MAAAA,MAAM,CAACU,OAAP,CAAeiH,WAAf,CAA2B,UAA3B,EAAuC,CAAC,KAAKE,oBAAL,CAA0B7H,MAA1B,CAAD,IAAsC,CAAC,KAAKY,OAAnF,EADqC,CACwD;AAC9F;;;uCAEkBZ,M,EAAQ;AACzB,UAAI8H,aAAJ;AAAA,UAAmBC,MAAnB;AAAA,UACErH,OAAO,GAAGV,MAAM,CAACU,OADnB;AAAA,UAEEsH,QAAQ,GAAG,KAAKhL,KAAL,CAAWiL,SAAX,CAAqBjI,MAAM,CAACkI,EAA5B,CAFb;AAIAxH,MAAAA,OAAO,CAAC6E,QAAR,CAAiB,0BAAjB,EAA6CtD,MAA7C;AACA8F,MAAAA,MAAM,GAAGrH,OAAO,CAACQ,UAAR,CAAmB,yBAAnB,CAAT;AACA6G,MAAAA,MAAM,CAACI,KAAP;AACAzH,MAAAA,OAAO,CAACoG,WAAR,CAAoB,iEAApB;AACAiB,MAAAA,MAAM,CAACjB,WAAP,CAAmB,iEAAnB;;AAEA,UAAI9G,MAAM,CAACoI,UAAX,EAAuB;AACrBN,QAAAA,aAAa,GAAG9H,MAAM,CAACqI,aAAP,GAAuB,KAAvB,GAA+B,MAA/C;;AACA,YAAIrI,MAAM,CAACsI,OAAX,EAAoB;AAClB5H,UAAAA,OAAO,CAACZ,QAAR,CAAiB,WAAWgI,aAA5B;AACD;;AACDpH,QAAAA,OAAO,CAACZ,QAAR,CAAiB,iBAAiBgI,aAAlC;AACAC,QAAAA,MAAM,CAACjI,QAAP,CAAgB,iBAAiBgI,aAAjC;AACD;;AAED,UAAI9H,MAAM,CAACsI,OAAP,IAAkBN,QAAtB,EAAgC;AAC9B;AACA,YAAIO,KAAK,GAAGR,MAAM,CAACpJ,SAAP,CAAiB,MAAjB,CAAZ;;AACA,YAAIqB,MAAM,CAACsI,OAAX,EAAoB;AAClB5H,UAAAA,OAAO,CAACZ,QAAR,CAAiB,SAAjB;AACAiI,UAAAA,MAAM,CAACjI,QAAP,CAAgB,SAAhB;AACAyI,UAAAA,KAAK,CAAC5J,SAAN,GAAkB4F,IAAlB,CAAuB,GAAvB;AACD;;AACD,YAAIyD,QAAJ,EAAc;AACZtH,UAAAA,OAAO,CAACZ,QAAR,CAAiB,UAAjB;AACAiI,UAAAA,MAAM,CAACjI,QAAP,CAAgB,UAAhB;AACAyI,UAAAA,KAAK,CAAC5J,SAAN,GAAkB4F,IAAlB,CAAuB,GAAvB;AACD;AACF,OAjCwB,CAkCzB;;;AACAwD,MAAAA,MAAM,CAACpJ,SAAP,CAAiB,OAAjB;;AAEA,WAAK6J,qBAAL,CAA2BxI,MAA3B;AACD;AAED;AACF;AACA;;;;0CACwBA,M,EAAQ;AAC5B,UAAIgI,QAAQ,GAAG,KAAKhL,KAAL,CAAWiL,SAAX,CAAqBjI,MAAM,CAACkI,EAA5B,CAAf;;AACA,UAAIlI,MAAM,CAACoI,UAAP,IAAqBpI,MAAM,CAACsI,OAA5B,IAAuCN,QAA3C,EAAqD;AACnD,YAAIhI,MAAM,CAAC+C,QAAP,GAAkBlH,MAAM,CAAC4M,iBAA7B,EAAgD;AAC9CzI,UAAAA,MAAM,CAAC0I,YAAP,GAAsB1I,MAAM,CAAC+C,QAA7B;AACA/C,UAAAA,MAAM,CAAC+C,QAAP,GAAkBlH,MAAM,CAAC4M,iBAAzB;AACD;;AACD,YAAIzI,MAAM,CAACwC,KAAP,GAAexC,MAAM,CAAC+C,QAA1B,EAAoC;AAClC,eAAK/F,KAAL,CAAW2L,YAAX,CAAwB3I,MAAxB,EAAgCA,MAAM,CAAC+C,QAAvC;AACD;AACF,OARD,MAQO;AACL;AACA,YAAI/C,MAAM,CAAC0I,YAAP,KAAwB,IAA5B,EAAkC;AAChC1I,UAAAA,MAAM,CAAC+C,QAAP,GAAkB/C,MAAM,CAAC0I,YAAzB;AACA1I,UAAAA,MAAM,CAAC0I,YAAP,GAAsB,IAAtB,CAFgC,CAGhC;;AACA,cAAI1I,MAAM,CAACwC,KAAP,KAAiB3G,MAAM,CAAC4M,iBAA5B,EAA+C;AAC7C,iBAAKzL,KAAL,CAAW2L,YAAX,CAAwB3I,MAAxB,EAAgCA,MAAM,CAAC+C,QAAvC;AACD;AACF;AACF;AACF;;;oCAEe;AACd,UAAI6F,SAAS,GAAG,KAAK5L,KAAL,CAAW6L,YAAX,CAAwB,KAAK7L,KAAL,CAAW8L,KAAnC,EAA0C1M,gBAAgB,CAAC2M,MAA3D,CAAhB;;AACA,WAAKnL,OAAL,CAAaoL,aAAb,CAA2B,CAAC,KAAKpI,OAAjC,EAFc,CAE6B;;AAC3C,WAAKhD,OAAL,CAAaqL,YAAb,CAA0BL,SAA1B;AACD;;;0CAEqBzC,K,EAAO;AAC3B,UAAInG,MAAM,GAAGmG,KAAK,CAACnG,MAAnB;AAAA,UACEuD,UAAU,GAAG,KAAKC,kBAAL,EADf;;AAEA,WAAKJ,gBAAL,CAAsBpD,MAAtB;;AACA,UAAIuD,UAAU,KAAKvD,MAAnB,EAA2B;AACzB,aAAKoD,gBAAL,CAAsBG,UAAtB;AACD;AACF;;;uCAEkB;AACjB,WAAK9D,eAAL,GAAuBC,OAAvB,CAA+B,KAAKgH,kBAApC,EAAwD,IAAxD;AACD;;;wCAEmBP,K,EAAO;AACzB,UACEnG,MAAM,GAAGmG,KAAK,CAACnG,MADjB;AAAA,UAEEkJ,MAAM,GAAG/C,KAAK,CAAC+C,MAFjB;AAAA,UAGEC,MAAM,GAAGhD,KAAK,CAACgD,MAHjB;AAAA,UAIEzI,OAAO,GAAGV,MAAM,CAACU,OAJnB;AAAA,UAKEgD,QAAQ,GAAG,KAAK0F,eAAL,EALb;AAAA,UAMEC,WAAW,GAAG3F,QAAQ,CAAC4F,EAAT,CAAYJ,MAAZ,CANhB;AAAA,UAOEK,WAAW,GAAGF,WAAW,CAACG,IAAZ,EAPhB;AAAA,UAQEhK,cAAc,GAAG,KAAKC,eAAL,EARnB;AAAA,UASEgK,aAAa,GAAGjK,cAAc,CAACI,MAAf,GAAwB,CAT1C,CADyB,CAYzB;;;AACA8D,MAAAA,QAAQ,CAACE,IAAT,CAAc,YAAW;AACvBhH,QAAAA,CAAC,CAAC,IAAD,CAAD,CAAQiE,IAAR,CAAa,SAAb,EAAwBjE,CAAC,CAAC,IAAD,CAAD,CAAQiH,MAAR,GAAiBC,IAAzC;AACD,OAFD,EAbyB,CAiBzB;;AACA,UAAIqF,MAAM,GAAGD,MAAb,EAAqB;AACnBxF,QAAAA,QAAQ,CAAC4F,EAAT,CAAYH,MAAZ,EAAoBO,MAApB,CAA2BL,WAA3B;AACA3F,QAAAA,QAAQ,CAAC4F,EAAT,CAAYH,MAAZ,EAAoBO,MAApB,CAA2BH,WAA3B;AACD,OAHD,MAGO;AACL7F,QAAAA,QAAQ,CAAC4F,EAAT,CAAYH,MAAZ,EAAoBQ,KAApB,CAA0BN,WAA1B;AACA3F,QAAAA,QAAQ,CAAC4F,EAAT,CAAYH,MAAZ,EAAoBQ,KAApB,CAA0BJ,WAA1B;AACD,OAxBwB,CA0BzB;;;AACA,UAAI7F,QAAQ,CAAC9D,MAAT,GAAkB,CAAtB,EAAyB;AACvB8D,QAAAA,QAAQ,CAAC4F,EAAT,CAAY,CAAZ,EAAexC,WAAf,CAA2B,OAA3B;AACApD,QAAAA,QAAQ,CAAC4F,EAAT,CAAY5F,QAAQ,CAAC9D,MAAT,GAAkB,CAA9B,EAAiCkH,WAAjC,CAA6C,MAA7C;AACD;;AAED,UAAItH,cAAc,CAACI,MAAf,GAAwB,CAA5B,EAA+B;AAC7BJ,QAAAA,cAAc,CAAC,CAAD,CAAd,CAAkBkB,OAAlB,CAA0BZ,QAA1B,CAAmC,OAAnC;AACAN,QAAAA,cAAc,CAACiK,aAAD,CAAd,CAA8B/I,OAA9B,CAAsCZ,QAAtC,CAA+C,MAA/C;AACD,OAnCwB,CAqCzB;;;AACA,UAAIoJ,MAAM,KAAKO,aAAX,IAA4BN,MAAM,KAAKM,aAA3C,EAA0D;AACxDjK,QAAAA,cAAc,CAACE,OAAf,CAAuB,UAASM,MAAT,EAAiB;AACtC,eAAKoD,gBAAL,CAAsBpD,MAAtB;AACD,SAFsB,CAErB7C,IAFqB,CAEhB,IAFgB,CAAvB;AAGD,OA1CwB,CA4CzB;;;AACA,UAAIgJ,KAAK,CAACyD,OAAV,EAAmB;AACjBlJ,QAAAA,OAAO,CAAC9B,GAAR,CAAY,MAAZ,EAAoBiL,QAAQ,CAACnJ,OAAO,CAAC9B,GAAR,CAAY,MAAZ,CAAD,EAAsB,CAAtB,CAAR,GAAmC8B,OAAO,CAACG,IAAR,CAAa,SAAb,CAAnC,GAA6DH,OAAO,CAACmD,MAAR,GAAiBC,IAAlG,EACGgG,YADH,CACgB,MADhB,EACwB,CADxB;AAED,OAHD,MAGO;AACL,aAAKC,mBAAL,CAAyBrG,QAAzB;AACD;AACF;;;sCAEiB;AAChB,aAAO,KAAK1G,KAAL,CAAWwC,cAAX,EAAP;AACD;;;yCAEoB;AACnB,aAAO5D,MAAM,CAACoO,IAAP,CAAY,KAAKvK,eAAL,EAAZ,CAAP;AACD;;;mCAEcwK,c,EAAgB;AAC7B,UAAIvJ,OAAJ,EAAawJ,aAAb;AACA,UAAIxG,QAAQ,GAAG,KAAK0F,eAAL,EAAf,CAF6B,CAI7B;;AACA1F,MAAAA,QAAQ,CAACE,IAAT,CAAc,YAAW;AACvBhH,QAAAA,CAAC,CAAC,IAAD,CAAD,CAAQiE,IAAR,CAAa,SAAb,EAAwBjE,CAAC,CAAC,IAAD,CAAD,CAAQiH,MAAR,GAAiBC,IAAzC;AACD,OAFD,EAL6B,CAS7B;;AACA,WAAKrE,eAAL,GAAuBC,OAAvB,CAA+B,UAASM,MAAT,EAAiB;AAC9CU,QAAAA,OAAO,GAAGV,MAAM,CAACU,OAAjB;AACAwJ,QAAAA,aAAa,GAAGxJ,OAAO,CAAC8I,IAAR,CAAa,sBAAb,CAAhB;AAEA,aAAKjL,UAAL,CAAgB4L,MAAhB,CAAuBzJ,OAAvB;AACA,aAAKnC,UAAL,CAAgB4L,MAAhB,CAAuBD,aAAvB;AACD,OAND,EAMG,IANH,EAV6B,CAkB7B;;;AACA,WAAK3L,UAAL,CAAgB4L,MAAhB,CAAuB,KAAKzL,OAA5B;;AAEA,WAAKqL,mBAAL,CAAyBrG,QAAzB;AACD;AAED;AACF;AACA;;;;yCACuB1D,M,EAAQ;AAC3B,aAAO,CAAC,EAAEA,MAAM,CAACoK,iBAAP,IAA4B,KAAKrN,kBAAnC,CAAR;AACD;;;uCAEkBoJ,K,EAAO;AACxB,UAAIhC,WAAW,GAAGvH,CAAC,CAACuJ,KAAK,CAACkE,aAAP,CAAnB;AAAA,UACErK,MAAM,GAAGmE,WAAW,CAACtD,IAAZ,CAAiB,QAAjB,CADX;;AAGA,UAAI,KAAK/D,QAAL,IAAiB,KAAKwN,WAA1B,EAAuC;AACrC,aAAKxN,QAAL,GAAgB,KAAhB;AACA,aAAKwN,WAAL,GAAmB,KAAnB;AACD,OAHD,MAGO,IAAI,KAAKtN,KAAL,CAAWuN,WAAX,KAA2BpE,KAAK,CAACqE,QAAN,IAAkBrE,KAAK,CAACsE,OAAxB,IAAmC,CAAC,KAAK5C,oBAAL,CAA0B7H,MAA1B,CAA/D,CAAJ,EAAuG;AAC5G,aAAKhD,KAAL,CAAW0N,oBAAX;AACA,aAAK1N,KAAL,CAAW2N,IAAX,CAAgB3K,MAAhB,EAAwBmE,WAAW,CAACyG,QAAZ,CAAqB,UAArB,IAAmC,MAAnC,GAA4C,KAApE,EAA2EzE,KAAK,CAACqE,QAAjF;AACD,OAHM,MAGA,IAAI,KAAKvH,eAAL,IAAwB,KAAKA,eAAL,CAAqB4H,SAArB,CAA+B1G,WAA/B,CAA5B,EAAyE;AAC9E,aAAKyB,eAAL;AACD,OAFM,MAEA,IAAI,KAAKiC,oBAAL,CAA0B7H,MAA1B,CAAJ,EAAuC;AAC5C,aAAK8K,cAAL,CAAoB9K,MAApB;AACD;;AAED,aAAO,KAAP;AACD;;;2CAEsBmG,K,EAAO;AAC5B,UAAIA,KAAK,CAAC4E,MAAN,GAAe,CAAnB,EAAsB;AACpB,eADoB,CACZ;AACT;;AAED,UAAIC,IAAI,GAAG,CAAX;AAAA,UACErH,IAAI,GAAG,IADT;AAAA,UAEEsH,MAAM,GAAGpI,IAAI,CAACqI,KAAL,CAAW/E,KAAK,CAACgF,KAAjB,CAFX;AAAA,UAGEzK,OAAO,GAAG9D,CAAC,CAACuJ,KAAK,CAACkE,aAAP,CAHb;AAAA,UAIErK,MAAM,GAAGU,OAAO,CAACG,IAAR,CAAa,QAAb,CAJX;AAAA,UAKEqI,MAAM,GAAG,KAAKzJ,eAAL,GAAuB8C,OAAvB,CAA+BvC,MAA/B,CALX;AAAA,UAMEmJ,MAAM,GAAGD,MANX;AAAA,UAOEkC,IAAI,GAAG1K,OAAO,CAAC2B,UAAR,EAPT;AAAA,UAQEgJ,aAAa,GAAG3K,OAAO,CAAC4K,QAAR,CAAiB,iCAAjB,CARlB;;AAUA,UAAItL,MAAM,CAACuL,aAAX,EAA0B;AACxB;AACA;AACD;;AAED,WAAKzO,QAAL,GAAgB,KAAhB,CApB4B,CAqB5B;;AACA,WAAKwN,WAAL,GAAmB,KAAnB,CAtB4B,CAwB5B;;AACA,WAAKrL,QAAL,CACGb,EADH,CACM,uBADN,EAC+B,EAD/B,EACmCoN,QADnC,EAEGvF,GAFH,CAEO,SAFP,EAEkB,EAFlB,EAEsBwF,OAFtB;;AAIA,eAASD,QAAT,CAAkBrF,KAAlB,EAAyB;AACvB6E,QAAAA,IAAI,GAAGnI,IAAI,CAACqI,KAAL,CAAW/E,KAAK,CAACgF,KAAjB,IAA0BF,MAAjC;;AACA,YAAI,CAAC,CAAD,GAAKD,IAAL,IAAaA,IAAI,GAAG,CAAxB,EAA2B;AACzB;AACA;AACD;;AAEDrH,QAAAA,IAAI,CAAC7G,QAAL,GAAgB,IAAhB,CAPuB,CASvB;;AACA4D,QAAAA,OAAO,CAACZ,QAAR,CAAiB,QAAjB;AACA6D,QAAAA,IAAI,CAACpF,UAAL,IAAmBoF,IAAI,CAACpF,UAAL,CAAgBuB,QAAhB,CAAyB,QAAzB,CAAnB,CAXuB,CAavB;;AACAY,QAAAA,OAAO,CAAC9B,GAAR,CAAY,MAAZ,EAAoBoM,IAApB,EAduB,CAgBvB;;AACA,YAAIU,MAAM,GAAGC,UAAU,CAACjL,OAAD,CAAvB;AAEA2K,QAAAA,aAAa,CAACzH,IAAd,CAAmB,UAASgI,CAAT,EAAY;AAC7B,cAAIC,CAAC,GAAGF,UAAU,CAAC/O,CAAC,CAAC,IAAD,CAAF,CAAlB;;AAEA,cAAI8O,MAAM,GAAGG,CAAT,IAAcD,CAAC,GAAG1C,MAAtB,EAA8B;AAC5BtM,YAAAA,CAAC,CAAC,IAAD,CAAD,CAAQgC,GAAR,CAAY,MAAZ,EAAoBwM,IAApB;AACD,WAFD,MAEO,IAAIM,MAAM,GAAGG,CAAT,IAAcD,CAAC,IAAI1C,MAAvB,EAA+B;AACpCtM,YAAAA,CAAC,CAAC,IAAD,CAAD,CAAQgC,GAAR,CAAY,MAAZ,EAAoB,CAACwM,IAArB;AACD,WAFM,MAEA;AACLxO,YAAAA,CAAC,CAAC,IAAD,CAAD,CAAQgC,GAAR,CAAY,MAAZ,EAAoB,CAApB;AACD;AACF,SAVD;;AAYA,YAAI+E,IAAI,CAACV,eAAT,EAA0B;AACxBU,UAAAA,IAAI,CAACV,eAAL,CAAqBiD,OAArB;AACAvC,UAAAA,IAAI,CAACV,eAAL,GAAuB,IAAvB;AACD,SAlCsB,CAoCvB;;;AACAU,QAAAA,IAAI,CAACT,QAAL,IAAiBS,IAAI,CAACmI,4BAAL,EAAjB;AACD;;AAED,eAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,YAAInM,IAAI,GAAGmM,IAAI,CAACnM,IAAL,EAAX;AAAA,YACE2C,KAAK,GAAGwJ,IAAI,CAACnM,IAAL,CAAU,WAAWA,IAAX,GAAkB,SAA5B,EAAuCwG,IAAvC,CAA4C,YAA5C,EAA0D7D,KAA1D,EADV;AAGAwJ,QAAAA,IAAI,CAACnM,IAAL,CAAUA,IAAV;AACA,eAAO2C,KAAP;AACD;;AAED,eAASmJ,UAAT,CAAoBK,IAApB,EAA0B;AACxB,YAAIA,IAAI,CAACpB,QAAL,CAAc,cAAd,CAAJ,EAAmC;AACjC,iBAAOoB,IAAI,CAACnI,MAAL,GAAcC,IAAd,GAAqBkI,IAAI,CAAC3J,UAAL,EAArB,GAAyC0J,SAAS,CAACC,IAAD,CAAT,GAAkB,CAAlE;AACD;;AACD,eAAOA,IAAI,CAACnI,MAAL,GAAcC,IAAd,GAAqBiI,SAAS,CAACC,IAAD,CAAT,GAAkB,CAA9C;AACD;;AAED,eAASP,OAAT,CAAiBtF,KAAjB,EAAwB;AACtBxC,QAAAA,IAAI,CAAC1E,QAAL,IAAiB0E,IAAI,CAAC1E,QAAL,CAAcK,GAAd,CAAkB,uBAAlB,CAAjB,CADsB,CAGtB;;AACA,YAAI,CAACqE,IAAI,CAAC7G,QAAV,EAAoB;AAClB,iBAAO,IAAP;AACD,SANqB,CAQtB;;;AACA,YAAImP,CAAC,GAAIjB,IAAI,GAAG,CAAR,GAAaK,aAAb,GAA6BzO,CAAC,CAACyO,aAAa,CAACzG,GAAd,GAAoBsH,OAApB,EAAD,CAAtC;AACAD,QAAAA,CAAC,CAACrI,IAAF,CAAO,UAASgI,CAAT,EAAY;AACjB,cAAIhP,CAAC,CAAC,IAAD,CAAD,CAAQgC,GAAR,CAAY,MAAZ,MAAwB,KAA5B,EAAmC;AACjCuK,YAAAA,MAAM,GAAGxF,IAAI,CAAClE,eAAL,GAAuB8C,OAAvB,CAAgC3F,CAAC,CAAC,IAAD,CAAD,CAAQiE,IAAR,CAAa,QAAb,CAAhC,CAAT;AACA,mBAAO,KAAP;AACD;AACF,SALD,EAVsB,CAiBtB;;AACA,YAAIsI,MAAM,GAAG,CAAC,CAAV,IAAeD,MAAM,KAAKC,MAA9B,EAAsC;AACpCxF,UAAAA,IAAI,CAAC3G,KAAL,CAAWmP,UAAX,CAAsBzL,OAAO,CAACG,IAAR,CAAa,QAAb,CAAtB,EAA8CqI,MAA9C,EAAsDC,MAAtD,EAA8D,IAA9D;AACAxF,UAAAA,IAAI,CAAC7G,QAAL,GAAgB,KAAhB;AACA6G,UAAAA,IAAI,CAAC2G,WAAL,GAAmB,IAAnB;AACD,SAJD,MAIO;AACL5J,UAAAA,OAAO,CAACoJ,YAAR,CAAqB,MAArB,EAA6B,EAA7B,EAAiC,YAAW;AAC1CnG,YAAAA,IAAI,CAAC7G,QAAL,GAAgB,KAAhB;AACD,WAFD;AAGD,SA1BqB,CA4BtB;;;AACAuO,QAAAA,aAAa,CAACzH,IAAd,CAAmB,YAAW;AAC5BhH,UAAAA,CAAC,CAAC,IAAD,CAAD,CAAQgC,GAAR,CAAY,MAAZ,EAAoB,EAApB;AACD,SAFD;AAIA8B,QAAAA,OAAO,CAACoG,WAAR,CAAoB,QAApB;AACAnD,QAAAA,IAAI,CAACpF,UAAL,IAAmBoF,IAAI,CAACpF,UAAL,CAAgBuI,WAAhB,CAA4B,QAA5B,CAAnB,CAlCsB,CAoCtB;;AACAnD,QAAAA,IAAI,CAACT,QAAL,IAAiBS,IAAI,CAACyI,0BAAL,EAAjB;AACD;AACF;;;yCAEoBjG,K,EAAO;AAC1B,UAAIA,KAAK,CAAC4E,MAAN,GAAe,CAAnB,EAAsB;AACpB,eADoB,CACZ;AACT;;AAED,UAAI5E,KAAK,CAACqE,QAAV,EAAoB;AAClB;AACA,aAAK/K,eAAL,GAAuBC,OAAvB,CAA+B,UAASM,MAAT,EAAiB;AAC9C,eAAKhD,KAAL,CAAWqP,WAAX,CAAuBrM,MAAvB;AACD,SAFD,EAEG,IAFH;AAGD,OALD,MAKO;AACL;AACA,YAAIU,OAAO,GAAG9D,CAAC,CAACuJ,KAAK,CAACmG,MAAP,CAAD,CAAgBC,IAAhB,EAAd;AAAA,YACEvM,MAAM,GAAGU,OAAO,CAACG,IAAR,CAAa,QAAb,CADX;AAEA,aAAK7D,KAAL,CAAWqP,WAAX,CAAuBrM,MAAvB;AACD;AACF;;;0CAEqBmG,K,EAAO;AAC3B,UAAIA,KAAK,CAAC4E,MAAN,GAAe,CAAnB,EAAsB;AACpB,eADoB,CACZ;AACT;;AAED,UAAIE,MAAM,GAAGpI,IAAI,CAACqI,KAAL,CAAW/E,KAAK,CAACgF,KAAjB,CAAb;AAAA,UACEzK,OAAO,GAAG9D,CAAC,CAACuJ,KAAK,CAACmG,MAAP,CAAD,CAAgBC,IAAhB,EADZ;AAAA,UAEEvM,MAAM,GAAGU,OAAO,CAACG,IAAR,CAAa,QAAb,CAFX;AAAA,UAGE8C,IAAI,GAAG,IAHT;AAAA,UAIE6I,WAAW,GAAGxM,MAAM,CAACwC,KAJvB,CAL2B,CAW3B;AACA;AACA;;AACA,UAAIiK,0BAA0B,GAAG,KAAKlO,UAAL,CAC9BI,SAD8B,CACpB,4BADoB,EAE9BC,GAF8B,CAE1B,OAF0B,EAEjB,KAAK5B,KAAL,CAAWyF,QAAX,GAAsB,KAAKzF,KAAL,CAAW0P,cAFhB,CAAjC;AAGA,UAAIC,wBAAwB,GAAG,KAAK3P,KAAL,CAAWwB,KAAX,CAC5BG,SAD4B,CAClB,4BADkB,EAE5BC,GAF4B,CAExB,OAFwB,EAEf,KAAK5B,KAAL,CAAWyF,QAFI,CAA/B;;AAIA,WAAKxD,QAAL,CACGb,EADH,CACM,uBADN,EAC+BwO,UAD/B,EAEG3G,GAFH,CAEO,SAFP,EAEkB4G,SAFlB;;AAGA,WAAK1N,MAAL,CAAYW,QAAZ,CAAqB,YAArB,EAxB2B,CA0B3B;;;AACAqG,MAAAA,KAAK,CAAC2G,cAAN;;AAEA,eAASF,UAAT,CAAoBzG,KAApB,EAA2B;AACzB,YAAI6E,IAAI,GAAGnI,IAAI,CAACqI,KAAL,CAAW/E,KAAK,CAACgF,KAAjB,IAA0BF,MAArC;AAAA,YACE8B,OAAO,GAAGP,WAAW,GAAGxB,IAD1B;AAGA+B,QAAAA,OAAO,GAAGlK,IAAI,CAACC,GAAL,CAASiK,OAAT,EAAkB/M,MAAM,CAAC+C,QAAzB,CAAV;;AACA,YAAIY,IAAI,CAACT,QAAL,IAAiB6J,OAAO,KAAK/M,MAAM,CAACwC,KAAxC,EAA+C;AAC7CmB,UAAAA,IAAI,CAAC3G,KAAL,CAAW2L,YAAX,CAAwB3I,MAAxB,EAAgC+M,OAAhC;AACD;AACF;;AAED,eAASF,SAAT,CAAmB1G,KAAnB,EAA0B;AACxB;AACAsG,QAAAA,0BAA0B,CAACxK,MAA3B;AACA0K,QAAAA,wBAAwB,CAAC1K,MAAzB;AAEA0B,QAAAA,IAAI,CAAC1E,QAAL,IAAiB0E,IAAI,CAAC1E,QAAL,CAAcK,GAAd,CAAkB,uBAAlB,CAAjB;AACAqE,QAAAA,IAAI,CAACxE,MAAL,IAAewE,IAAI,CAACxE,MAAL,CAAY2H,WAAZ,CAAwB,YAAxB,CAAf;;AAEA,YAAInD,IAAI,CAAC3G,KAAL,CAAWkG,QAAX,IAAuBlD,MAAM,CAACwC,KAAP,KAAiBgK,WAA5C,EAAyD;AACvD7I,UAAAA,IAAI,CAAC3G,KAAL,CAAW2L,YAAX,CAAwB3I,MAAxB,EAAgCA,MAAM,CAACwC,KAAvC;AACD;AACF;AACF;;;yCAEoB;AACnBlG,MAAAA,UAAU,CAAC0Q,GAAX,CAAe,KAAKnO,iBAApB;;AACA,WAAKkB,mBAAL;;AACA,WAAKkN,WAAL,GAAmB3Q,UAAU,CAAC4Q,KAAX,CAAiB,KAAKrO,iBAAtB,EAAyC,KAAKoO,WAA9C,CAAnB;AACD;;;6CAEwB9G,K,EAAO;AAC9B,UAAI,KAAKjD,QAAL,IAAiBiD,KAAK,CAACgH,YAAN,KAAuB,SAA5C,EAAuD;AACrD,aAAKtO,iBAAL,CAAuBC,UAAvB,CAAkCqH,KAAK,CAACiH,QAAxC;AACD;AACF;;;6CAEwBjH,K,EAAO;AAC9B,UAAInG,MAAM,GAAGmG,KAAK,CAACkH,MAAN,CAAarN,MAA1B,CAD8B,CAE9B;;AACA,UAAImG,KAAK,CAACkH,MAAN,CAAaC,UAAb,KAA4BxR,gBAAgB,CAACyR,IAA7C,IAAqDvN,MAAM,CAACU,OAAhE,EAAyE;AACvE,aAAKgG,kBAAL,CAAwB1G,MAAxB;AACD;AACF;;;;EAtzBsCrD,M;;SAApBE,W","sourcesContent":["/*\n * Copyright (c) 2014-2018 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, Column, ColumnUserFilter, Device, graphics, GroupBoxMenuItemsOrder, inspector, MenuBar, MenuDestinations, scout, scrollbars, strings, styles, Table, tooltips, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class TableHeader extends Widget {\n\n  constructor() {\n    super();\n\n    this.dragging = false;\n    this.headerMenusEnabled = true;\n    this.table = null;\n    this._tableDataScrollHandler = this._onTableDataScroll.bind(this);\n    this._tableAddFilterRemovedHandler = this._onTableAddFilterRemoved.bind(this);\n    this._tableColumnResizedHandler = this._onTableColumnResized.bind(this);\n    this._tableColumnMovedHandler = this._onTableColumnMoved.bind(this);\n    this._renderedColumns = [];\n  }\n\n  _init(options) {\n    super._init(options);\n\n    this.menuBar = scout.create('MenuBar', {\n      parent: this,\n      tabbable: false,\n      position: MenuBar.Position.BOTTOM,\n      menuOrder: new GroupBoxMenuItemsOrder()\n    });\n    this.menuBar.on('propertyChange', this._onMenuBarPropertyChange.bind(this));\n    this.updateMenuBar();\n  }\n\n  _render() {\n    this.$container = this.table.$data.beforeDiv('table-header');\n\n    // Filler is necessary to make sure the header is always as large as the table data, otherwise horizontal scrolling does not work correctly\n    this.$filler = this.$container.appendDiv('table-header-item filler').css('visibility', 'hidden');\n\n    // Required to make \"height: 100%\" rule work. menuBarContainer and menuBar itself must have the same visibility.\n    // Otherwise they could cover the sorting/filter icons on the table-header of the column.\n    this.$menuBarContainer = this.$container\n      .appendDiv('menubar-container')\n      .setVisible(this.menuBar.visible);\n    this.menuBar.render(this.$menuBarContainer);\n    this._$window = this.$container.window();\n    this._$body = this.$container.body();\n\n    this._renderColumns();\n\n    this.table.$data.on('scroll', this._tableDataScrollHandler);\n    this.table.on('filterAdded', this._tableAddFilterRemovedHandler);\n    this.table.on('filterRemoved', this._tableAddFilterRemovedHandler);\n    this.table.on('columnResized', this._tableColumnResizedHandler);\n    this.table.on('columnMoved', this._tableColumnMovedHandler);\n  }\n\n  _remove() {\n    this.table.$data.off('scroll', this._tableDataScrollHandler);\n    this.table.off('filterAdded', this._tableAddFilterRemovedHandler);\n    this.table.off('filterRemoved', this._tableAddFilterRemovedHandler);\n    this.table.off('columnResized', this._tableColumnResizedHandler);\n    this.table.off('columnMoved', this._tableColumnMovedHandler);\n\n    this._removeColumns();\n\n    super._remove();\n  }\n\n  rerenderColumns() {\n    this._removeColumns();\n    this._renderColumns();\n  }\n\n  _renderColumns() {\n    var visibleColumns = this._visibleColumns();\n    visibleColumns.forEach(this._renderColumn, this);\n    if (visibleColumns.length === 0) {\n      // If there are no columns, make the filler visible and make sure the header is as large as normally using nbsp\n      this.$filler.css('visibility', 'visible').html('&nbsp;').addClass('empty');\n    }\n    this._reconcileScrollPos();\n  }\n\n  _renderColumn(column, index) {\n    var columnWidth = column._realWidthIfAvailable(),\n      marginLeft = '',\n      marginRight = '',\n      visibleColumns = this._visibleColumns(),\n      isFirstColumn = (index === 0),\n      isLastColumn = (index === visibleColumns.length - 1);\n\n    if (isFirstColumn) {\n      marginLeft = this.table.rowBorderLeftWidth;\n    } else if (isLastColumn) {\n      marginRight = this.table.rowBorderRightWidth;\n    }\n\n    var $header = this.$filler.beforeDiv('table-header-item')\n      .setEnabled(this.enabled) // enabledComputed not used on purpose\n      .data('column', column)\n      .cssMinWidth(columnWidth)\n      .cssMaxWidth(columnWidth)\n      .cssMarginLeft(marginLeft)\n      .cssMarginRight(marginRight);\n    $header.appendSpan('table-header-item-text');\n    if (this.enabled) { // enabledComputed not used on purpose\n      $header\n        .on('click', this._onHeaderItemClick.bind(this))\n        .on('mousedown', this._onHeaderItemMouseDown.bind(this));\n    }\n\n    if (this.session.inspector) {\n      inspector.applyInfo(column, $header);\n    }\n\n    if (isFirstColumn) {\n      $header.addClass('first');\n    } else if (isLastColumn) {\n      $header.addClass('last');\n    }\n\n    column.$header = $header;\n\n    this._installHeaderItemTooltip(column);\n    this._decorateHeader(column);\n\n    var showSeparator = column.showSeparator;\n    if (isLastColumn && !this.enabled) { // enabledComputed not used on purpose\n      showSeparator = false;\n    }\n    if (showSeparator) {\n      var $separator = this.$filler.beforeDiv('table-header-resize');\n      if (column.fixedWidth || !this.enabled) { // enabledComputed not used on purpose\n        $separator.setEnabled(false);\n      } else {\n        $separator\n          .on('mousedown', '', this._onSeparatorMouseDown.bind(this))\n          .on('dblclick', this._onSeparatorDblclick.bind(this));\n      }\n      column.$separator = $separator;\n    }\n    this._renderedColumns.push(column);\n  }\n\n  _removeColumns() {\n    this._renderedColumns.slice().forEach(this._removeColumn, this);\n  }\n\n  _removeColumn(column) {\n    if (column.$header) {\n      column.$header.remove();\n      column.$header = null;\n    }\n    if (column.$separator) {\n      column.$separator.remove();\n      column.$separator = null;\n    }\n    arrays.remove(this._renderedColumns, column);\n  }\n\n  resizeHeaderItem(column) {\n    if (!column) {\n      // May be undefined if there are no columns\n      return;\n    }\n    if (!column.$header) {\n      // May be undefined if called when header item is not rendered yet (may caused by _adjustColumnMinWidth)\n      return;\n    }\n\n    var remainingHeaderSpace, adjustment,\n      $header = column.$header,\n      columnWidth = column._realWidthIfAvailable(),\n      marginLeft = '',\n      marginRight = '',\n      menuBarWidth = (this.menuBar.visible ? this.$menuBarContainer.outerWidth(true) : 0),\n      visibleColumns = this._visibleColumns(),\n      visibleColumnIndex = visibleColumns.indexOf(column),\n      isFirstColumn = visibleColumnIndex === 0,\n      isLastColumn = visibleColumnIndex === visibleColumns.length - 1;\n\n    if (isFirstColumn) {\n      marginLeft = this.table.rowBorderLeftWidth;\n    } else if (isLastColumn) {\n      marginRight = this.table.rowBorderRightWidth;\n      remainingHeaderSpace = this.$container.width() - this.table.rowWidth + graphics.insets(this.table.$data).right;\n\n      if (remainingHeaderSpace < menuBarWidth) {\n        adjustment = menuBarWidth;\n        if (column.$separator) {\n          adjustment += column.$separator.width();\n        }\n        if (remainingHeaderSpace > 0) {\n          adjustment -= remainingHeaderSpace;\n        }\n\n        var origColumnWidth = columnWidth;\n        columnWidth = Math.max(columnWidth - adjustment, column.minWidth);\n        this.$filler.cssWidth(origColumnWidth - columnWidth);\n      }\n    }\n\n    $header\n      .css('min-width', columnWidth)\n      .css('max-width', columnWidth)\n      .css('margin-left', marginLeft)\n      .css('margin-right', marginRight);\n\n    if (this.tableHeaderMenu && this.tableHeaderMenu.rendered && this.tableHeaderMenu.column === column) {\n      this.tableHeaderMenu.onColumnResized();\n    }\n  }\n\n  /**\n   * Resizes all header items to theirs desired widths.\n   */\n  resizeHeaderItems() {\n    this._visibleColumns().forEach(this.resizeHeaderItem.bind(this));\n  }\n\n  _reconcileScrollPos() {\n    // When scrolling horizontally scroll header as well\n    var\n      scrollLeft = this.table.get$Scrollable().scrollLeft(),\n      lastColumn = this._lastVisibleColumn();\n\n    this.resizeHeaderItem(lastColumn);\n    this.$container.scrollLeft(scrollLeft);\n    this.$menuBarContainer.cssRight(-1 * scrollLeft);\n  }\n\n  _arrangeHeaderItems($headers) {\n    var that = this;\n    $headers.each(function() {\n      // move to old position and then animate\n      $(this).css('left', $(this).data('old-pos') - $(this).offset().left)\n        .animate({\n          left: 0\n        }, {\n          progress: function(animation, progress, remainingMs) {\n            var $headerItem = $(this);\n            if (!$headerItem.isSelected()) {\n              return;\n            }\n            // make sure selected header item is visible\n            scrollbars.scrollHorizontalTo(that.table.$data, $headerItem);\n\n            // move menu\n            if (that.tableHeaderMenu && that.tableHeaderMenu.rendered) {\n              that.tableHeaderMenu.position();\n            }\n          }\n        });\n    });\n  }\n\n  _installHeaderItemTooltip(column) {\n    tooltips.install(column.$header, {\n      parent: this,\n      text: this._headerItemTooltipText.bind(this),\n      arrowPosition: 50,\n      arrowPositionUnit: '%',\n      nativeTooltip: !Device.get().isCustomEllipsisTooltipPossible(),\n      htmlEnabled: this._headerItemTooltipHtmlEnabled.bind(this)\n    });\n  }\n\n  _installHeaderItemTooltips() {\n    this._visibleColumns().forEach(this._installHeaderItemTooltip, this);\n  }\n\n  _uninstallHeaderItemTooltip(column) {\n    tooltips.uninstall(column.$header);\n  }\n\n  _uninstallHeaderItemTooltips() {\n    this._visibleColumns().forEach(this._uninstallHeaderItemTooltip, this);\n  }\n\n  _headerItemTooltipText($col) {\n    var column = $col.data('column');\n    if (column && strings.hasText(column.headerTooltipText)) {\n      return column.headerTooltipText;\n    } else if ($col.isContentTruncated() || ($col.width() + $col.position().left) > $col.parent().width()) {\n      $col = $col.clone();\n      $col.children('.table-header-item-state').remove();\n      var text = strings.plainText($col.html(), {\n        trim: true\n      });\n      if (strings.hasText(text)) {\n        return text;\n      }\n    }\n    return null;\n  }\n\n  _headerItemTooltipHtmlEnabled($col) {\n    var column = $col.data('column');\n    return column.headerTooltipHtmlEnabled;\n  }\n\n  setHeaderMenusEnabled(headerMenusEnabled) {\n    this.setProperty('headerMenusEnabled', headerMenusEnabled);\n  }\n\n  _renderHeaderMenusEnabled() {\n    this._visibleColumns().forEach(function(column) {\n      this._decorateHeader(column);\n    }, this);\n  }\n\n  openHeaderMenu(column) {\n    if (this.tableHeaderMenu) {\n      // Make sure existing header menu is closed first\n      this.closeHeaderMenu();\n    }\n\n    this.tableHeaderMenu = column.createTableHeaderMenu(this);\n    this.tableHeaderMenu.open();\n\n    // Trigger events on column to make it possible to react to the opening of the menu\n    column.trigger('headerMenuOpen', {\n      menu: this.tableHeaderMenu\n    });\n    this.tableHeaderMenu.one('destroy', function() {\n      column.trigger('headerMenuClose', {\n        menu: this.tableHeaderMenu\n      });\n    }.bind(this));\n  }\n\n  closeHeaderMenu() {\n    this.tableHeaderMenu.destroy();\n    this.tableHeaderMenu = null;\n  }\n\n  onColumnActionsChanged(event) {\n    if (this.tableHeaderMenu) {\n      this.tableHeaderMenu.onColumnActionsChanged(event);\n    }\n  }\n\n  findHeaderItems() {\n    return this.$container.find('.table-header-item:not(.filler)');\n  }\n\n  /**\n   * Updates the column headers visualization of the text, sorting and styling state\n   * @param [oldColumnState] only necessary when the css class was updated\n   */\n  updateHeader(column, oldColumnState) {\n    this._decorateHeader(column, oldColumnState);\n  }\n\n  _decorateHeader(column, oldColumnState) {\n    this._renderColumnCssClass(column, oldColumnState);\n    this._renderColumnText(column);\n    this._renderColumnIconId(column);\n    this._renderColumnState(column);\n    this._renderColumnLegacyStyle(column);\n    this._renderColumnHeaderMenuEnabled(column);\n    this._renderColumnHorizontalAlignment(column);\n  }\n\n  _renderColumnCssClass(column, oldColumnState) {\n    var $header = column.$header;\n    if (oldColumnState) {\n      $header.removeClass(oldColumnState.headerCssClass);\n    }\n    $header.addClass(column.headerCssClass);\n  }\n\n  _renderColumnText(column) {\n    var text = column.text,\n      $header = column.$header,\n      $headerText = $header.children('.table-header-item-text');\n\n    if (!column.headerHtmlEnabled) {\n      text = strings.nl2br(text);\n    }\n    // Make sure empty header is as height as the others to make it properly clickable\n    $headerText.htmlOrNbsp(text, 'empty');\n    this._updateColumnIconAndTextStyle(column);\n  }\n\n  _renderColumnIconId(column) {\n    column.$header.icon(column.headerIconId);\n    this._updateColumnIconAndTextStyle(column);\n  }\n\n  _renderColumnHorizontalAlignment(column) {\n    column.$header.removeClass('halign-left halign-center halign-right');\n    column.$header.addClass('halign-' + Table.parseHorizontalAlignment(column.horizontalAlignment));\n  }\n\n  _updateColumnIconAndTextStyle(column) {\n    var $icon = column.$header.data('$icon'),\n      $text = column.$header.children('.table-header-item-text');\n\n    if ($icon) {\n      $icon.toggleClass('with-text', !!column.text);\n    }\n    // Make text invisible if there is an icon but no text\n    $text.setVisible(!($icon && $text.html() === '&nbsp;'));\n    // Mark icon-only columns to prevent ellipsis (like IconColumn.js does for table cells)\n    column.$header.toggleClass('table-header-item-icon-only', !!(column.headerIconId && !column.text));\n  }\n\n  _renderColumnLegacyStyle(column) {\n    styles.legacyStyle(column, column.$header, 'header');\n  }\n\n  _renderColumnHeaderMenuEnabled(column) {\n    column.$header.toggleClass('disabled', !this._isHeaderMenuEnabled(column) || !this.enabled); // enabledComputed not used on purpose\n  }\n\n  _renderColumnState(column) {\n    var sortDirection, $state,\n      $header = column.$header,\n      filtered = this.table.getFilter(column.id);\n\n    $header.children('.table-header-item-state').remove();\n    $state = $header.appendSpan('table-header-item-state');\n    $state.empty();\n    $header.removeClass('sort-asc sort-desc sorted group-asc group-desc grouped filtered');\n    $state.removeClass('sort-asc sort-desc sorted group-asc group-desc grouped filtered');\n\n    if (column.sortActive) {\n      sortDirection = column.sortAscending ? 'asc' : 'desc';\n      if (column.grouped) {\n        $header.addClass('group-' + sortDirection);\n      }\n      $header.addClass('sorted sort-' + sortDirection);\n      $state.addClass('sorted sort-' + sortDirection);\n    }\n\n    if (column.grouped || filtered) {\n      // contains group and filter symbols\n      var $left = $state.appendDiv('left');\n      if (column.grouped) {\n        $header.addClass('grouped');\n        $state.addClass('grouped');\n        $left.appendDiv().text('G');\n      }\n      if (filtered) {\n        $header.addClass('filtered');\n        $state.addClass('filtered');\n        $left.appendDiv().text('F');\n      }\n    }\n    // Contains sort arrow\n    $state.appendDiv('right');\n\n    this._adjustColumnMinWidth(column);\n  }\n\n  /**\n   * Makes sure state is fully visible by adjusting width (happens if column.minWidth is < DEFAULT_MIN_WIDTH)\n   */\n  _adjustColumnMinWidth(column) {\n    var filtered = this.table.getFilter(column.id);\n    if (column.sortActive || column.grouped || filtered) {\n      if (column.minWidth < Column.DEFAULT_MIN_WIDTH) {\n        column.prefMinWidth = column.minWidth;\n        column.minWidth = Column.DEFAULT_MIN_WIDTH;\n      }\n      if (column.width < column.minWidth) {\n        this.table.resizeColumn(column, column.minWidth);\n      }\n    } else {\n      // Reset to preferred min width if no state is visible\n      if (column.prefMinWidth !== null) {\n        column.minWidth = column.prefMinWidth;\n        column.prefMinWidth = null;\n        // Resize to old min width, assuming user has not manually changed the size because column is still as width as default_min_width\n        if (column.width === Column.DEFAULT_MIN_WIDTH) {\n          this.table.resizeColumn(column, column.minWidth);\n        }\n      }\n    }\n  }\n\n  updateMenuBar() {\n    var menuItems = this.table._filterMenus(this.table.menus, MenuDestinations.HEADER);\n    this.menuBar.setHiddenByUi(!this.enabled); // enabledComputed not used on purpose\n    this.menuBar.setMenuItems(menuItems);\n  }\n\n  _onTableColumnResized(event) {\n    var column = event.column,\n      lastColumn = this._lastVisibleColumn();\n    this.resizeHeaderItem(column);\n    if (lastColumn !== column) {\n      this.resizeHeaderItem(lastColumn);\n    }\n  }\n\n  onSortingChanged() {\n    this._visibleColumns().forEach(this._renderColumnState, this);\n  }\n\n  _onTableColumnMoved(event) {\n    var\n      column = event.column,\n      oldPos = event.oldPos,\n      newPos = event.newPos,\n      $header = column.$header,\n      $headers = this.findHeaderItems(),\n      $moveHeader = $headers.eq(oldPos),\n      $moveResize = $moveHeader.next(),\n      visibleColumns = this._visibleColumns(),\n      lastColumnPos = visibleColumns.length - 1;\n\n    // store old position of header\n    $headers.each(function() {\n      $(this).data('old-pos', $(this).offset().left);\n    });\n\n    // change order in dom of header\n    if (newPos < oldPos) {\n      $headers.eq(newPos).before($moveHeader);\n      $headers.eq(newPos).before($moveResize);\n    } else {\n      $headers.eq(newPos).after($moveHeader);\n      $headers.eq(newPos).after($moveResize);\n    }\n\n    // Update first/last markers\n    if ($headers.length > 0) {\n      $headers.eq(0).removeClass('first');\n      $headers.eq($headers.length - 1).removeClass('last');\n    }\n\n    if (visibleColumns.length > 0) {\n      visibleColumns[0].$header.addClass('first');\n      visibleColumns[lastColumnPos].$header.addClass('last');\n    }\n\n    // Update header size due to header menu items if moved from or to last position\n    if (oldPos === lastColumnPos || newPos === lastColumnPos) {\n      visibleColumns.forEach(function(column) {\n        this.resizeHeaderItem(column);\n      }.bind(this));\n    }\n\n    // move to old position and then animate\n    if (event.dragged) {\n      $header.css('left', parseInt($header.css('left'), 0) + $header.data('old-pos') - $header.offset().left)\n        .animateAVCSD('left', 0);\n    } else {\n      this._arrangeHeaderItems($headers);\n    }\n  }\n\n  _visibleColumns() {\n    return this.table.visibleColumns();\n  }\n\n  _lastVisibleColumn() {\n    return arrays.last(this._visibleColumns());\n  }\n\n  onOrderChanged(oldColumnOrder) {\n    var $header, $headerResize;\n    var $headers = this.findHeaderItems();\n\n    // store old position of headers\n    $headers.each(function() {\n      $(this).data('old-pos', $(this).offset().left);\n    });\n\n    // change order in dom of header\n    this._visibleColumns().forEach(function(column) {\n      $header = column.$header;\n      $headerResize = $header.next('.table-header-resize');\n\n      this.$container.append($header);\n      this.$container.append($headerResize);\n    }, this);\n\n    // ensure filler is at the end\n    this.$container.append(this.$filler);\n\n    this._arrangeHeaderItems($headers);\n  }\n\n  /**\n   * Header menus are enabled when property is enabled on the header itself and on the column too.\n   */\n  _isHeaderMenuEnabled(column) {\n    return !!(column.headerMenuEnabled && this.headerMenusEnabled);\n  }\n\n  _onHeaderItemClick(event) {\n    var $headerItem = $(event.currentTarget),\n      column = $headerItem.data('column');\n\n    if (this.dragging || this.columnMoved) {\n      this.dragging = false;\n      this.columnMoved = false;\n    } else if (this.table.sortEnabled && (event.shiftKey || event.ctrlKey || !this._isHeaderMenuEnabled(column))) {\n      this.table.removeColumnGrouping();\n      this.table.sort(column, $headerItem.hasClass('sort-asc') ? 'desc' : 'asc', event.shiftKey);\n    } else if (this.tableHeaderMenu && this.tableHeaderMenu.isOpenFor($headerItem)) {\n      this.closeHeaderMenu();\n    } else if (this._isHeaderMenuEnabled(column)) {\n      this.openHeaderMenu(column);\n    }\n\n    return false;\n  }\n\n  _onHeaderItemMouseDown(event) {\n    if (event.button > 0) {\n      return; // ignore buttons other than the main (left) mouse button\n    }\n\n    var diff = 0,\n      that = this,\n      startX = Math.floor(event.pageX),\n      $header = $(event.currentTarget),\n      column = $header.data('column'),\n      oldPos = this._visibleColumns().indexOf(column),\n      newPos = oldPos,\n      move = $header.outerWidth(),\n      $otherHeaders = $header.siblings('.table-header-item:not(.filler)');\n\n    if (column.fixedPosition) {\n      // Don't allow moving a column with fixed position\n      return;\n    }\n\n    this.dragging = false;\n    // firefox fires a click action after a column has been droped at the new location, chrome doesn't -> we need a hint to avoid menu gets opened after drop\n    this.columnMoved = false;\n\n    // start drag & drop events\n    this._$window\n      .on('mousemove.tableheader', '', dragMove)\n      .one('mouseup', '', dragEnd);\n\n    function dragMove(event) {\n      diff = Math.floor(event.pageX) - startX;\n      if (-2 < diff && diff < 2) {\n        // Don't move if it was no movement or just a very small one\n        return;\n      }\n\n      that.dragging = true;\n\n      // change css of dragged header\n      $header.addClass('moving');\n      that.$container && that.$container.addClass('moving');\n\n      // move dragged header\n      $header.css('left', diff);\n\n      // find other affected headers\n      var middle = realMiddle($header);\n\n      $otherHeaders.each(function(i) {\n        var m = realMiddle($(this));\n\n        if (middle < m && i < oldPos) {\n          $(this).css('left', move);\n        } else if (middle > m && i >= oldPos) {\n          $(this).css('left', -move);\n        } else {\n          $(this).css('left', 0);\n        }\n      });\n\n      if (that.tableHeaderMenu) {\n        that.tableHeaderMenu.destroy();\n        that.tableHeaderMenu = null;\n      }\n\n      // Don't show tooltips while dragging\n      that.rendered && that._uninstallHeaderItemTooltips();\n    }\n\n    function realWidth($div) {\n      var html = $div.html(),\n        width = $div.html('<span>' + html + '</span>').find('span:first').width();\n\n      $div.html(html);\n      return width;\n    }\n\n    function realMiddle($div) {\n      if ($div.hasClass('halign-right')) {\n        return $div.offset().left + $div.outerWidth() - realWidth($div) / 2;\n      }\n      return $div.offset().left + realWidth($div) / 2;\n    }\n\n    function dragEnd(event) {\n      that._$window && that._$window.off('mousemove.tableheader');\n\n      // in case of no movement: return\n      if (!that.dragging) {\n        return true;\n      }\n\n      // find new position of dragged header\n      var h = (diff < 0) ? $otherHeaders : $($otherHeaders.get().reverse());\n      h.each(function(i) {\n        if ($(this).css('left') !== '0px') {\n          newPos = that._visibleColumns().indexOf(($(this).data('column')));\n          return false;\n        }\n      });\n\n      // move column\n      if (newPos > -1 && oldPos !== newPos) {\n        that.table.moveColumn($header.data('column'), oldPos, newPos, true);\n        that.dragging = false;\n        that.columnMoved = true;\n      } else {\n        $header.animateAVCSD('left', '', function() {\n          that.dragging = false;\n        });\n      }\n\n      // reset css of dragged header\n      $otherHeaders.each(function() {\n        $(this).css('left', '');\n      });\n\n      $header.removeClass('moving');\n      that.$container && that.$container.removeClass('moving');\n\n      // Reinstall tooltips\n      that.rendered && that._installHeaderItemTooltips();\n    }\n  }\n\n  _onSeparatorDblclick(event) {\n    if (event.button > 0) {\n      return; // ignore buttons other than the main (left) mouse button\n    }\n\n    if (event.shiftKey) {\n      // Optimize all columns\n      this._visibleColumns().forEach(function(column) {\n        this.table.resizeToFit(column);\n      }, this);\n    } else {\n      // Optimize the column left of the separator\n      var $header = $(event.target).prev(),\n        column = $header.data('column');\n      this.table.resizeToFit(column);\n    }\n  }\n\n  _onSeparatorMouseDown(event) {\n    if (event.button > 0) {\n      return; // ignore buttons other than the main (left) mouse button\n    }\n\n    var startX = Math.floor(event.pageX),\n      $header = $(event.target).prev(),\n      column = $header.data('column'),\n      that = this,\n      headerWidth = column.width;\n\n    // Install resize helpers. Those helpers make sure the header and the data element keep their\n    // current width until the resizing has finished. Otherwise, make a column smaller while the\n    // table has been horizontally scrolled to the right would behave very strange.\n    var $headerColumnResizedHelper = this.$container\n      .appendDiv('table-column-resize-helper')\n      .css('width', this.table.rowWidth + this.table.rowBorderWidth);\n    var $dataColumnResizedHelper = this.table.$data\n      .appendDiv('table-column-resize-helper')\n      .css('width', this.table.rowWidth);\n\n    this._$window\n      .on('mousemove.tableheader', resizeMove)\n      .one('mouseup', resizeEnd);\n    this._$body.addClass('col-resize');\n\n    // Prevent text selection in a form, don't stop propagation to allow others (e.g. cell editor) to react\n    event.preventDefault();\n\n    function resizeMove(event) {\n      var diff = Math.floor(event.pageX) - startX,\n        wHeader = headerWidth + diff;\n\n      wHeader = Math.max(wHeader, column.minWidth);\n      if (that.rendered && wHeader !== column.width) {\n        that.table.resizeColumn(column, wHeader);\n      }\n    }\n\n    function resizeEnd(event) {\n      // Remove resize helpers\n      $headerColumnResizedHelper.remove();\n      $dataColumnResizedHelper.remove();\n\n      that._$window && that._$window.off('mousemove.tableheader');\n      that._$body && that._$body.removeClass('col-resize');\n\n      if (that.table.rendered && column.width !== headerWidth) {\n        that.table.resizeColumn(column, column.width);\n      }\n    }\n  }\n\n  _onTableDataScroll() {\n    scrollbars.fix(this.$menuBarContainer);\n    this._reconcileScrollPos();\n    this._fixTimeout = scrollbars.unfix(this.$menuBarContainer, this._fixTimeout);\n  }\n\n  _onMenuBarPropertyChange(event) {\n    if (this.rendered && event.propertyName === 'visible') {\n      this.$menuBarContainer.setVisible(event.newValue);\n    }\n  }\n\n  _onTableAddFilterRemoved(event) {\n    var column = event.filter.column;\n    // Check for column.$header because column may have been removed in the mean time due to a structure changed event -> don't try to render state\n    if (event.filter.filterType === ColumnUserFilter.TYPE && column.$header) {\n      this._renderColumnState(column);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}