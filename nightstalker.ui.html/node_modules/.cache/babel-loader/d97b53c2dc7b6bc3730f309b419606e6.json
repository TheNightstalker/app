{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { BenchRowLayoutData } from '../../../index';\nimport $ from 'jquery';\n\nvar BenchColumnLayoutData = /*#__PURE__*/function () {\n  function BenchColumnLayoutData(model) {\n    _classCallCheck(this, BenchColumnLayoutData);\n\n    // initial\n    this.columns = [null, null, null];\n    $.extend(this, model);\n\n    this._ensureColumns();\n  }\n\n  _createClass(BenchColumnLayoutData, [{\n    key: \"_ensureColumns\",\n    value: function _ensureColumns() {\n      this.columns = this.columns.map(function (col, i) {\n        return new BenchRowLayoutData(col).withOrder(i * 2);\n      });\n    }\n  }, {\n    key: \"getColumns\",\n    value: function getColumns() {\n      return this.columns;\n    }\n  }], [{\n    key: \"ensure\",\n    value: function ensure(layoutData) {\n      if (!layoutData) {\n        layoutData = new BenchColumnLayoutData();\n        return layoutData;\n      }\n\n      if (layoutData instanceof BenchColumnLayoutData) {\n        return layoutData;\n      }\n\n      return new BenchColumnLayoutData(layoutData);\n    }\n  }]);\n\n  return BenchColumnLayoutData;\n}();\n\nexport { BenchColumnLayoutData as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/desktop/bench/layout/BenchColumnLayoutData.js"],"names":["BenchRowLayoutData","$","BenchColumnLayoutData","model","columns","extend","_ensureColumns","map","col","i","withOrder","layoutData"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,kBAAR,QAAiC,gBAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEqBC,qB;AAEnB,iCAAYC,KAAZ,EAAmB;AAAA;;AACjB;AACA,SAAKC,OAAL,GAAe,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAf;AACAH,IAAAA,CAAC,CAACI,MAAF,CAAS,IAAT,EAAeF,KAAf;;AAEA,SAAKG,cAAL;AACD;;;;qCAEgB;AACf,WAAKF,OAAL,GAAe,KAAKA,OAAL,CAAaG,GAAb,CAAiB,UAASC,GAAT,EAAcC,CAAd,EAAiB;AAC/C,eAAO,IAAIT,kBAAJ,CAAuBQ,GAAvB,EAA4BE,SAA5B,CAAsCD,CAAC,GAAG,CAA1C,CAAP;AACD,OAFc,CAAf;AAGD;;;iCAEY;AACX,aAAO,KAAKL,OAAZ;AACD;;;2BAEaO,U,EAAY;AACxB,UAAI,CAACA,UAAL,EAAiB;AACfA,QAAAA,UAAU,GAAG,IAAIT,qBAAJ,EAAb;AACA,eAAOS,UAAP;AACD;;AACD,UAAIA,UAAU,YAAYT,qBAA1B,EAAiD;AAC/C,eAAOS,UAAP;AACD;;AACD,aAAO,IAAIT,qBAAJ,CAA0BS,UAA1B,CAAP;AACD;;;;;;SA7BkBT,qB","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {BenchRowLayoutData} from '../../../index';\nimport $ from 'jquery';\n\nexport default class BenchColumnLayoutData {\n\n  constructor(model) {\n    // initial\n    this.columns = [null, null, null];\n    $.extend(this, model);\n\n    this._ensureColumns();\n  }\n\n  _ensureColumns() {\n    this.columns = this.columns.map(function(col, i) {\n      return new BenchRowLayoutData(col).withOrder(i * 2);\n    });\n  }\n\n  getColumns() {\n    return this.columns;\n  }\n\n  static ensure(layoutData) {\n    if (!layoutData) {\n      layoutData = new BenchColumnLayoutData();\n      return layoutData;\n    }\n    if (layoutData instanceof BenchColumnLayoutData) {\n      return layoutData;\n    }\n    return new BenchColumnLayoutData(layoutData);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}