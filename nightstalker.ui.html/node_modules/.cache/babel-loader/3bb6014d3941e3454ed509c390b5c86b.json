{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { arrays, BooleanColumn, comparators, DateColumn, DateFormat, dates, IconColumn, NumberColumn, scout } from '../index';\n\nvar TableMatrix = /*#__PURE__*/function () {\n  function TableMatrix(table, session) {\n    _classCallCheck(this, TableMatrix);\n\n    this.session = session;\n    this.locale = session.locale;\n    this._allData = [];\n    this._allAxis = [];\n    this._rows = table.rows;\n    this._table = table;\n  }\n\n  _createClass(TableMatrix, [{\n    key: \"addData\",\n\n    /**\n     * add data axis\n     */\n    value: function addData(data, dataGroup) {\n      var dataAxis = [],\n          locale = this.locale; // collect all axis\n\n      this._allData.push(dataAxis); // copy column for later access\n\n\n      dataAxis.column = data; // data always is number\n\n      dataAxis.format = function (n) {\n        return locale.decimalFormat.format(n);\n      }; // count, sum, avg\n\n\n      if (dataGroup === TableMatrix.NumberGroup.COUNT) {\n        dataAxis.norm = function (f) {\n          return 1;\n        };\n\n        dataAxis.group = function (array) {\n          return array.length;\n        };\n      } else if (dataGroup === TableMatrix.NumberGroup.SUM) {\n        dataAxis.norm = function (f) {\n          if (isNaN(f) || f === null || f === '') {\n            return null;\n          }\n\n          return parseFloat(f);\n        };\n\n        dataAxis.group = function (array) {\n          return array.reduce(function (a, b) {\n            return a + b;\n          });\n        };\n      } else if (dataGroup === TableMatrix.NumberGroup.AVG) {\n        dataAxis.norm = function (f) {\n          if (isNaN(f) || f === null || f === '') {\n            return null;\n          }\n\n          return parseFloat(f);\n        };\n\n        dataAxis.group = function (array) {\n          var sum = array.reduce(function (a, b) {\n            return a + b;\n          }),\n              count = array.reduce(function (a, b) {\n            return b === null ? a : a + 1;\n          }, 0);\n\n          if (count === 0) {\n            return null;\n          }\n\n          return sum / count;\n        };\n      }\n\n      return dataAxis;\n    } // add x or y Axis\n\n  }, {\n    key: \"addAxis\",\n    value: function addAxis(axis, axisGroup) {\n      var keyAxis = [],\n          locale = this.locale,\n          session = this.session,\n          getText = this.session.text.bind(this.session),\n          emptyCell = getText('ui.EmptyCell'); // collect all axis\n\n      this._allAxis.push(keyAxis);\n\n      keyAxis.column = axis; // normalized string data\n\n      keyAxis.normTable = []; // add a key to the axis\n\n      keyAxis.add = function (k) {\n        if (keyAxis.indexOf(k) === -1) {\n          keyAxis.push(k);\n        }\n      }; // default functions\n\n\n      keyAxis.reorder = function () {\n        keyAxis.sort(function (a, b) {\n          // make sure -empty- is at the bottom\n          if (a === null) {\n            return 1;\n          }\n\n          if (b === null) {\n            return -1;\n          } // sort others\n\n\n          return a - b;\n        });\n      };\n\n      keyAxis.norm = function (f) {\n        if (f === null || f === '') {\n          return null;\n        }\n\n        var index = keyAxis.normTable.indexOf(f);\n\n        if (index === -1) {\n          return keyAxis.normTable.push(f) - 1;\n        }\n\n        return index;\n      };\n\n      keyAxis.format = function (n) {\n        if (n === null) {\n          return emptyCell;\n        }\n\n        return keyAxis.normTable[n];\n      }; // norm and format depends of datatype and group functionality\n\n\n      if (axis instanceof DateColumn) {\n        if (axisGroup === TableMatrix.DateGroup.NONE) {\n          keyAxis.norm = function (f) {\n            if (f === null || f === '') {\n              return null;\n            }\n\n            return f.getTime();\n          };\n\n          keyAxis.format = function (n) {\n            if (n === null) {\n              return null;\n            }\n\n            var format = axis.format;\n\n            if (format) {\n              format = DateFormat.ensure(locale, format);\n            } else {\n              format = locale.dateFormat;\n            }\n\n            return format.format(new Date(n));\n          };\n        } else if (axisGroup === TableMatrix.DateGroup.YEAR) {\n          keyAxis.norm = function (f) {\n            if (f === null || f === '') {\n              return null;\n            }\n\n            return f.getFullYear();\n          };\n\n          keyAxis.format = function (n) {\n            if (n === null) {\n              return emptyCell;\n            }\n\n            return String(n);\n          };\n        } else if (axisGroup === TableMatrix.DateGroup.MONTH) {\n          keyAxis.norm = function (f) {\n            if (f === null || f === '') {\n              return null;\n            }\n\n            return f.getMonth();\n          };\n\n          keyAxis.format = function (n) {\n            if (n === null) {\n              return emptyCell;\n            }\n\n            return locale.dateFormatSymbols.months[n];\n          };\n        } else if (axisGroup === TableMatrix.DateGroup.WEEKDAY) {\n          keyAxis.norm = function (f) {\n            if (f === null || f === '') {\n              return null;\n            }\n\n            return (f.getDay() + 7 - locale.dateFormatSymbols.firstDayOfWeek) % 7;\n          };\n\n          keyAxis.format = function (n) {\n            if (n === null) {\n              return emptyCell;\n            }\n\n            return locale.dateFormatSymbols.weekdaysOrdered[n];\n          };\n        } else if (axisGroup === TableMatrix.DateGroup.DATE) {\n          keyAxis.norm = function (f) {\n            if (f === null || f === '') {\n              return null;\n            }\n\n            return dates.trunc(f).getTime();\n          };\n\n          keyAxis.format = function (n) {\n            if (n === null) {\n              return emptyCell;\n            }\n\n            return dates.format(new Date(n), locale, locale.dateFormatPatternDefault);\n          };\n        }\n      } else if (axis instanceof NumberColumn) {\n        keyAxis.norm = function (f) {\n          if (isNaN(f) || f === null || f === '') {\n            return null;\n          }\n\n          return parseFloat(f);\n        };\n\n        keyAxis.format = function (n) {\n          if (isNaN(n) || n === null) {\n            return emptyCell;\n          }\n\n          return axis.decimalFormat.format(n);\n        };\n      } else if (axis instanceof BooleanColumn) {\n        keyAxis.norm = function (f) {\n          if (axis.triStateEnabled && f === null) {\n            return -1;\n          } else if (f === true) {\n            return 1;\n          }\n\n          return 0;\n        };\n\n        keyAxis.format = function (n) {\n          if (n === -1) {\n            return getText('ui.BooleanColumnGroupingMixed');\n          } else if (n === 0) {\n            return getText('ui.BooleanColumnGroupingFalse');\n          } else if (n === 1) {\n            return getText('ui.BooleanColumnGroupingTrue');\n          }\n        };\n      } else if (axis instanceof IconColumn) {\n        keyAxis.textIsIcon = true;\n      } else {\n        keyAxis.reorder = function () {\n          var comparator = comparators.TEXT;\n          comparator.install(session);\n          keyAxis.sort(function (a, b) {\n            // make sure -empty- is at the bottom\n            if (a === null) {\n              return 1;\n            }\n\n            if (b === null) {\n              return -1;\n            } // sort others\n\n\n            return comparator.compare(keyAxis.format(a), keyAxis.format(b));\n          });\n        };\n      }\n\n      return keyAxis;\n    }\n    /**\n     * @returns a cube containing the results\n     */\n\n  }, {\n    key: \"calculate\",\n    value: function calculate() {\n      var cube = {},\n          r,\n          v,\n          k,\n          data,\n          key,\n          normData,\n          normKey; // collect data from table\n\n      for (r = 0; r < this._rows.length; r++) {\n        var row = this._rows[r]; // collect keys of x, y axis from row\n\n        var keys = [];\n\n        for (k = 0; k < this._allAxis.length; k++) {\n          var column = this._allAxis[k].column;\n          key = column.cellValueOrTextForCalculation(row);\n          normKey = this._allAxis[k].norm(key);\n\n          if (normKey !== undefined) {\n            this._allAxis[k].add(normKey);\n\n            keys.push(normKey);\n          }\n        }\n\n        keys = JSON.stringify(keys); // collect values of data axis from row\n\n        var values = [];\n\n        for (v = 0; v < this._allData.length; v++) {\n          data = this._table.cellValue(this._allData[v].column, row);\n          normData = this._allData[v].norm(data);\n\n          if (normData !== undefined) {\n            values.push(normData);\n          }\n        } // build cube\n\n\n        if (cube[keys]) {\n          cube[keys].push(values);\n        } else {\n          cube[keys] = [values];\n        }\n      } // group values and find sum, min and max of data axis\n\n\n      for (v = 0; v < this._allData.length; v++) {\n        data = this._allData[v];\n        data.total = 0;\n        data.min = null;\n        data.max = null;\n\n        for (k in cube) {\n          if (cube.hasOwnProperty(k)) {\n            var allCell = cube[k],\n                subCell = [];\n\n            for (var i = 0; i < allCell.length; i++) {\n              subCell.push(allCell[i][v]);\n            }\n\n            var newValue = this._allData[v].group(subCell);\n\n            cube[k][v] = newValue;\n            data.total += newValue;\n\n            if (newValue === null) {\n              continue;\n            }\n\n            if (newValue < data.min || data.min === null) {\n              data.min = newValue;\n            }\n\n            if (newValue > data.max || data.min === null) {\n              data.max = newValue;\n            }\n          }\n        } // To calculate correct y axis scale data.max must not be 0. If data.max===0-> log(data.max)=-infinity\n\n\n        if (scout.nvl(data.max, 0) === 0) {\n          data.max = 0.1;\n        }\n\n        var f = Math.ceil(Math.log(data.max) / Math.LN10) - 1;\n        data.max = Math.ceil(data.max / Math.pow(10, f)) * Math.pow(10, f);\n        data.max = Math.ceil(data.max / 4) * 4;\n      } // find dimensions and sort for x, y axis\n\n\n      for (k = 0; k < this._allAxis.length; k++) {\n        key = this._allAxis[k];\n        key.min = arrays.min(key);\n        key.max = arrays.max(key); // null value should be handled as first value (in charts)\n\n        if (key.indexOf(null) !== -1) {\n          key.max = key.max + 1;\n        }\n\n        key.reorder();\n      } // access function used by chart\n\n\n      cube.getValue = function (keys) {\n        keys = JSON.stringify(keys);\n\n        if (cube.hasOwnProperty(keys)) {\n          return cube[keys];\n        }\n\n        return null;\n      };\n\n      return cube;\n    }\n  }, {\n    key: \"columnCount\",\n    value: function columnCount(filterNumberColumns) {\n      var c,\n          column,\n          r,\n          row,\n          cellValue,\n          columns = this.columns(filterNumberColumns),\n          colCount = [],\n          count = 0;\n\n      for (c = 0; c < columns.length; c++) {\n        column = columns[c];\n        colCount.push([column, []]);\n\n        for (r = 0; r < this._rows.length; r++) {\n          row = this._rows[r];\n          cellValue = column.cellValueOrTextForCalculation(row);\n\n          if (colCount[count][1].indexOf(cellValue) === -1) {\n            colCount[count][1].push(cellValue);\n          }\n        }\n\n        colCount[count][1] = colCount[count][1].length;\n        count++;\n      }\n\n      return colCount;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this._rows.length === 0 || this.columns().length === 0;\n    }\n    /**\n     * @returns valid columns for table-matrix (not instance of NumberColumn and not guiOnly)\n     * @param filterNumberColumns whether or not to filter NumberColumn, default is true\n     */\n\n  }, {\n    key: \"columns\",\n    value: function columns(filterNumberColumns) {\n      filterNumberColumns = scout.nvl(filterNumberColumns, true);\n      return this._table.visibleColumns().filter(function (column) {\n        if (column.guiOnly) {\n          return false;\n        }\n\n        if (filterNumberColumns && column instanceof NumberColumn) {\n          return false;\n        }\n\n        return true;\n      });\n    }\n    /**\n     * Table rows and columns are not always in a consistent state.\n     * @returns {boolean} true, if table is in a valid, consistent state\n     * */\n\n  }, {\n    key: \"isMatrixValid\",\n    value: function isMatrixValid() {\n      return this._table.rows.length === 0 || this.columns(false).length === this._table.rows[0].cells.length;\n    }\n  }]);\n\n  return TableMatrix;\n}();\n\n_defineProperty(TableMatrix, \"DateGroup\", {\n  NONE: 0,\n  YEAR: 256,\n  MONTH: 257,\n  WEEKDAY: 258,\n  DATE: 259\n});\n\n_defineProperty(TableMatrix, \"NumberGroup\", {\n  COUNT: -1,\n  SUM: 1,\n  AVG: 2\n});\n\nexport { TableMatrix as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/table/TableMatrix.js"],"names":["arrays","BooleanColumn","comparators","DateColumn","DateFormat","dates","IconColumn","NumberColumn","scout","TableMatrix","table","session","locale","_allData","_allAxis","_rows","rows","_table","data","dataGroup","dataAxis","push","column","format","n","decimalFormat","NumberGroup","COUNT","norm","f","group","array","length","SUM","isNaN","parseFloat","reduce","a","b","AVG","sum","count","axis","axisGroup","keyAxis","getText","text","bind","emptyCell","normTable","add","k","indexOf","reorder","sort","index","DateGroup","NONE","getTime","ensure","dateFormat","Date","YEAR","getFullYear","String","MONTH","getMonth","dateFormatSymbols","months","WEEKDAY","getDay","firstDayOfWeek","weekdaysOrdered","DATE","trunc","dateFormatPatternDefault","triStateEnabled","textIsIcon","comparator","TEXT","install","compare","cube","r","v","key","normData","normKey","row","keys","cellValueOrTextForCalculation","undefined","JSON","stringify","values","cellValue","total","min","max","hasOwnProperty","allCell","subCell","i","newValue","nvl","Math","ceil","log","LN10","pow","getValue","filterNumberColumns","c","columns","colCount","visibleColumns","filter","guiOnly","cells"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {arrays, BooleanColumn, comparators, DateColumn, DateFormat, dates, IconColumn, NumberColumn, scout} from '../index';\n\nexport default class TableMatrix {\n\n  constructor(table, session) {\n    this.session = session;\n    this.locale = session.locale;\n    this._allData = [];\n    this._allAxis = [];\n    this._rows = table.rows;\n    this._table = table;\n  }\n\n  static DateGroup = {\n    NONE: 0,\n    YEAR: 256,\n    MONTH: 257,\n    WEEKDAY: 258,\n    DATE: 259\n  };\n\n  static NumberGroup = {\n    COUNT: -1,\n    SUM: 1,\n    AVG: 2\n  };\n\n  /**\n   * add data axis\n   */\n  addData(data, dataGroup) {\n    var dataAxis = [],\n      locale = this.locale;\n\n    // collect all axis\n    this._allData.push(dataAxis);\n\n    // copy column for later access\n    dataAxis.column = data;\n\n    // data always is number\n    dataAxis.format = function(n) {\n      return locale.decimalFormat.format(n);\n    };\n\n    // count, sum, avg\n    if (dataGroup === TableMatrix.NumberGroup.COUNT) {\n      dataAxis.norm = function(f) {\n        return 1;\n      };\n      dataAxis.group = function(array) {\n        return array.length;\n      };\n    } else if (dataGroup === TableMatrix.NumberGroup.SUM) {\n      dataAxis.norm = function(f) {\n        if (isNaN(f) || f === null || f === '') {\n          return null;\n        }\n        return parseFloat(f);\n      };\n      dataAxis.group = function(array) {\n        return array.reduce(function(a, b) {\n          return a + b;\n        });\n      };\n    } else if (dataGroup === TableMatrix.NumberGroup.AVG) {\n      dataAxis.norm = function(f) {\n        if (isNaN(f) || f === null || f === '') {\n          return null;\n        }\n        return parseFloat(f);\n      };\n      dataAxis.group = function(array) {\n        var sum = array.reduce(function(a, b) {\n            return a + b;\n          }),\n          count = array.reduce(function(a, b) {\n            return (b === null ? a : a + 1);\n          }, 0);\n\n        if (count === 0) {\n          return null;\n        }\n        return sum / count;\n\n      };\n    }\n    return dataAxis;\n  }\n\n  // add x or y Axis\n  addAxis(axis, axisGroup) {\n    var keyAxis = [],\n      locale = this.locale,\n      session = this.session,\n      getText = this.session.text.bind(this.session),\n      emptyCell = getText('ui.EmptyCell');\n\n    // collect all axis\n    this._allAxis.push(keyAxis);\n    keyAxis.column = axis;\n\n    // normalized string data\n    keyAxis.normTable = [];\n\n    // add a key to the axis\n    keyAxis.add = function(k) {\n      if (keyAxis.indexOf(k) === -1) {\n        keyAxis.push(k);\n      }\n    };\n\n    // default functions\n    keyAxis.reorder = function() {\n      keyAxis.sort(function(a, b) {\n        // make sure -empty- is at the bottom\n        if (a === null) {\n          return 1;\n        }\n        if (b === null) {\n          return -1;\n        }\n        // sort others\n        return (a - b);\n      });\n    };\n    keyAxis.norm = function(f) {\n      if (f === null || f === '') {\n        return null;\n      }\n      var index = keyAxis.normTable.indexOf(f);\n      if (index === -1) {\n        return keyAxis.normTable.push(f) - 1;\n      }\n      return index;\n    };\n    keyAxis.format = function(n) {\n      if (n === null) {\n        return emptyCell;\n      }\n      return keyAxis.normTable[n];\n    };\n\n    // norm and format depends of datatype and group functionality\n    if (axis instanceof DateColumn) {\n      if (axisGroup === TableMatrix.DateGroup.NONE) {\n        keyAxis.norm = function(f) {\n          if (f === null || f === '') {\n            return null;\n          }\n          return f.getTime();\n\n        };\n        keyAxis.format = function(n) {\n          if (n === null) {\n            return null;\n          }\n          var format = axis.format;\n          if (format) {\n            format = DateFormat.ensure(locale, format);\n          } else {\n            format = locale.dateFormat;\n          }\n          return format.format(new Date(n));\n        };\n      } else if (axisGroup === TableMatrix.DateGroup.YEAR) {\n        keyAxis.norm = function(f) {\n          if (f === null || f === '') {\n            return null;\n          }\n          return f.getFullYear();\n\n        };\n        keyAxis.format = function(n) {\n          if (n === null) {\n            return emptyCell;\n          }\n          return String(n);\n\n        };\n      } else if (axisGroup === TableMatrix.DateGroup.MONTH) {\n        keyAxis.norm = function(f) {\n          if (f === null || f === '') {\n            return null;\n          }\n          return f.getMonth();\n\n        };\n        keyAxis.format = function(n) {\n          if (n === null) {\n            return emptyCell;\n          }\n          return locale.dateFormatSymbols.months[n];\n\n        };\n      } else if (axisGroup === TableMatrix.DateGroup.WEEKDAY) {\n        keyAxis.norm = function(f) {\n          if (f === null || f === '') {\n            return null;\n          }\n          return (f.getDay() + 7 - locale.dateFormatSymbols.firstDayOfWeek) % 7;\n        };\n        keyAxis.format = function(n) {\n          if (n === null) {\n            return emptyCell;\n          }\n          return locale.dateFormatSymbols.weekdaysOrdered[n];\n        };\n      } else if (axisGroup === TableMatrix.DateGroup.DATE) {\n        keyAxis.norm = function(f) {\n          if (f === null || f === '') {\n            return null;\n          }\n          return dates.trunc(f).getTime();\n        };\n        keyAxis.format = function(n) {\n          if (n === null) {\n            return emptyCell;\n          }\n          return dates.format(new Date(n), locale, locale.dateFormatPatternDefault);\n        };\n      }\n    } else if (axis instanceof NumberColumn) {\n      keyAxis.norm = function(f) {\n        if (isNaN(f) || f === null || f === '') {\n          return null;\n        }\n        return parseFloat(f);\n      };\n      keyAxis.format = function(n) {\n        if (isNaN(n) || n === null) {\n          return emptyCell;\n        }\n        return axis.decimalFormat.format(n);\n      };\n    } else if (axis instanceof BooleanColumn) {\n      keyAxis.norm = function(f) {\n        if (axis.triStateEnabled && f === null) {\n          return -1;\n        } else if (f === true) {\n          return 1;\n        }\n        return 0;\n      };\n      keyAxis.format = function(n) {\n        if (n === -1) {\n          return getText('ui.BooleanColumnGroupingMixed');\n        } else if (n === 0) {\n          return getText('ui.BooleanColumnGroupingFalse');\n        } else if (n === 1) {\n          return getText('ui.BooleanColumnGroupingTrue');\n        }\n      };\n    } else if (axis instanceof IconColumn) {\n      keyAxis.textIsIcon = true;\n    } else {\n      keyAxis.reorder = function() {\n        var comparator = comparators.TEXT;\n        comparator.install(session);\n\n        keyAxis.sort(function(a, b) {\n          // make sure -empty- is at the bottom\n          if (a === null) {\n            return 1;\n          }\n          if (b === null) {\n            return -1;\n          }\n          // sort others\n          return comparator.compare(keyAxis.format(a), keyAxis.format(b));\n        });\n      };\n    }\n    return keyAxis;\n  }\n\n  /**\n   * @returns a cube containing the results\n   */\n  calculate() {\n    var cube = {},\n      r, v, k, data, key, normData, normKey;\n\n    // collect data from table\n    for (r = 0; r < this._rows.length; r++) {\n      var row = this._rows[r];\n      // collect keys of x, y axis from row\n      var keys = [];\n      for (k = 0; k < this._allAxis.length; k++) {\n        var column = this._allAxis[k].column;\n        key = column.cellValueOrTextForCalculation(row);\n        normKey = this._allAxis[k].norm(key);\n\n        if (normKey !== undefined) {\n          this._allAxis[k].add(normKey);\n          keys.push(normKey);\n        }\n      }\n      keys = JSON.stringify(keys);\n\n      // collect values of data axis from row\n      var values = [];\n      for (v = 0; v < this._allData.length; v++) {\n        data = this._table.cellValue(this._allData[v].column, row);\n        normData = this._allData[v].norm(data);\n        if (normData !== undefined) {\n          values.push(normData);\n        }\n      }\n\n      // build cube\n      if (cube[keys]) {\n        cube[keys].push(values);\n      } else {\n        cube[keys] = [values];\n      }\n    }\n\n    // group values and find sum, min and max of data axis\n    for (v = 0; v < this._allData.length; v++) {\n      data = this._allData[v];\n\n      data.total = 0;\n      data.min = null;\n      data.max = null;\n\n      for (k in cube) {\n        if (cube.hasOwnProperty(k)) {\n          var allCell = cube[k],\n            subCell = [];\n\n          for (var i = 0; i < allCell.length; i++) {\n            subCell.push(allCell[i][v]);\n          }\n\n          var newValue = this._allData[v].group(subCell);\n          cube[k][v] = newValue;\n          data.total += newValue;\n\n          if (newValue === null) {\n            continue;\n          }\n\n          if (newValue < data.min || data.min === null) {\n            data.min = newValue;\n          }\n          if (newValue > data.max || data.min === null) {\n            data.max = newValue;\n          }\n        }\n      }\n\n      // To calculate correct y axis scale data.max must not be 0. If data.max===0-> log(data.max)=-infinity\n      if (scout.nvl(data.max, 0) === 0) {\n        data.max = 0.1;\n      }\n\n      var f = Math.ceil(Math.log(data.max) / Math.LN10) - 1;\n\n      data.max = Math.ceil(data.max / Math.pow(10, f)) * Math.pow(10, f);\n      data.max = Math.ceil(data.max / 4) * 4;\n    }\n\n    // find dimensions and sort for x, y axis\n    for (k = 0; k < this._allAxis.length; k++) {\n      key = this._allAxis[k];\n\n      key.min = arrays.min(key);\n      key.max = arrays.max(key);\n\n      // null value should be handled as first value (in charts)\n      if (key.indexOf(null) !== -1) {\n        key.max = key.max + 1;\n      }\n\n      key.reorder();\n    }\n\n    // access function used by chart\n    cube.getValue = function(keys) {\n      keys = JSON.stringify(keys);\n\n      if (cube.hasOwnProperty(keys)) {\n        return cube[keys];\n      }\n      return null;\n\n    };\n\n    return cube;\n  }\n\n  columnCount(filterNumberColumns) {\n    var c, column, r, row, cellValue,\n      columns = this.columns(filterNumberColumns),\n      colCount = [],\n      count = 0;\n\n    for (c = 0; c < columns.length; c++) {\n      column = columns[c];\n      colCount.push([column, []]);\n\n      for (r = 0; r < this._rows.length; r++) {\n        row = this._rows[r];\n        cellValue = column.cellValueOrTextForCalculation(row);\n        if (colCount[count][1].indexOf(cellValue) === -1) {\n          colCount[count][1].push(cellValue);\n        }\n      }\n\n      colCount[count][1] = colCount[count][1].length;\n      count++;\n    }\n    return colCount;\n  }\n\n  isEmpty() {\n    return this._rows.length === 0 || this.columns().length === 0;\n  }\n\n  /**\n   * @returns valid columns for table-matrix (not instance of NumberColumn and not guiOnly)\n   * @param filterNumberColumns whether or not to filter NumberColumn, default is true\n   */\n  columns(filterNumberColumns) {\n    filterNumberColumns = scout.nvl(filterNumberColumns, true);\n    return this._table.visibleColumns().filter(function(column) {\n      if (column.guiOnly) {\n        return false;\n      }\n      if (filterNumberColumns && column instanceof NumberColumn) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  /**\n   * Table rows and columns are not always in a consistent state.\n   * @returns {boolean} true, if table is in a valid, consistent state\n   * */\n  isMatrixValid() {\n    return this._table.rows.length === 0 || this.columns(false).length === this._table.rows[0].cells.length;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}