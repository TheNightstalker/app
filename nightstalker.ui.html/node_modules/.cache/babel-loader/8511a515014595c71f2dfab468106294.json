{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { CalendarComponent, CalendarLayout, CalendarListComponent, DateRange, dates, GroupBox, HtmlComponent, KeyStrokeContext, menus, objects, scout, scrollbars, strings, Widget } from '../index';\nimport $ from 'jquery';\n\nvar Calendar = /*#__PURE__*/function (_Widget) {\n  _inherits(Calendar, _Widget);\n\n  var _super = _createSuper(Calendar);\n\n  function Calendar() {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _super.call(this);\n    _this.monthViewNumberOfWeeks = 6;\n    _this.numberOfHourDivisions = _this.getConfiguredNumberOfHourDivisions();\n    _this.heightPerDivision = _this.getConfiguredHeightPerDivision();\n    _this.startHour = _this.getConfiguredStartHour();\n    _this.heightPerHour = _this.numberOfHourDivisions * _this.heightPerDivision;\n    _this.heightPerDay = 24 * _this.heightPerHour;\n    _this.spaceBeforeScrollTop = 15;\n    _this.workDayIndices = [1, 2, 3, 4, 5]; // Workdays: Mon-Fri (Week starts at Sun in JS)\n\n    _this.components = [];\n    _this.displayMode;\n    _this.displayCondensed = false;\n    _this.loadInProgress = false;\n    _this.selectedDate = null;\n    _this.showDisplayModeSelection = true;\n    _this.title = null;\n    _this.useOverflowCells = true;\n    _this.viewRange = null;\n    _this.calendarToggleListWidth = 270;\n    _this.calendarToggleYearWidth = 215; // main elements\n\n    _this.$container = null;\n    _this.$header = null;\n    _this.$range = null;\n    _this.$commands = null;\n    _this.$grids = null;\n    _this.$grid = null;\n    _this.$topGrid = null;\n    _this.$list = null;\n    _this.$progress = null; // additional modes; should be stored in model\n\n    _this._showYearPanel = false;\n    _this._showListPanel = false;\n    /**\n     * The narrow view range is different from the regular view range.\n     * It contains only dates that exactly match the requested dates,\n     * the regular view range contains also dates from the first and\n     * next month. The exact range is not sent to the server.\n     */\n\n    _this._exactRange = null;\n    /**\n     * When the list panel is shown, this list contains the scout.CalenderListComponent\n     * items visible on the list.\n     */\n\n    _this._listComponents = [];\n    _this.menuInjectionTarget = null;\n    _this._menuInjectionTargetMenusChangedHandler = null;\n\n    _this._addWidgetProperties(['components', 'menus', 'selectedComponent']);\n\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"init\",\n    value: function init(model, session, register) {\n      _get(_getPrototypeOf(Calendar.prototype), \"init\", this).call(this, model, session, register);\n    }\n    /**\n     * Enum providing display-modes for calender-like components like calendar and planner.\n     * @see ICalendarDisplayMode.java\n     */\n\n  }, {\n    key: \"getConfiguredNumberOfHourDivisions\",\n    value: function getConfiguredNumberOfHourDivisions() {\n      return 2;\n    }\n  }, {\n    key: \"getConfiguredHeightPerDivision\",\n    value: function getConfiguredHeightPerDivision() {\n      return 30;\n    }\n  }, {\n    key: \"getConfiguredStartHour\",\n    value: function getConfiguredStartHour() {\n      return 6;\n    }\n  }, {\n    key: \"_isDay\",\n    value: function _isDay() {\n      return this.displayMode === Calendar.DisplayMode.DAY;\n    }\n  }, {\n    key: \"_isWeek\",\n    value: function _isWeek() {\n      return this.displayMode === Calendar.DisplayMode.WEEK;\n    }\n  }, {\n    key: \"_isMonth\",\n    value: function _isMonth() {\n      return this.displayMode === Calendar.DisplayMode.MONTH;\n    }\n  }, {\n    key: \"_isWorkWeek\",\n    value: function _isWorkWeek() {\n      return this.displayMode === Calendar.DisplayMode.WORK_WEEK;\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"_createKeyStrokeContext\",\n    value: function _createKeyStrokeContext() {\n      return new KeyStrokeContext();\n    }\n  }, {\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(Calendar.prototype), \"_init\", this).call(this, model);\n\n      this._yearPanel = scout.create('YearPanel', {\n        parent: this\n      });\n\n      this._yearPanel.on('dateSelect', this._onYearPanelDateSelect.bind(this));\n\n      this.modesMenu = scout.create('CalendarModesMenu', {\n        parent: this,\n        visible: false,\n        displayMode: this.displayMode\n      });\n\n      this._setSelectedDate(model.selectedDate);\n\n      this._setDisplayMode(model.displayMode);\n\n      this._setMenuInjectionTarget(model.menuInjectionTarget);\n\n      this._exactRange = this._calcExactRange();\n\n      this._yearPanel.setViewRange(this._exactRange);\n\n      this.viewRange = this._calcViewRange();\n    }\n  }, {\n    key: \"setSelectedDate\",\n    value: function setSelectedDate(date) {\n      this.setProperty('selectedDate', date);\n    }\n  }, {\n    key: \"_setSelectedDate\",\n    value: function _setSelectedDate(date) {\n      date = dates.ensure(date);\n\n      this._setProperty('selectedDate', date);\n\n      this._yearPanel.selectDate(this.selectedDate);\n    }\n  }, {\n    key: \"setDisplayMode\",\n    value: function setDisplayMode(displayMode) {\n      if (objects.equals(this.displayMode, displayMode)) {\n        return;\n      }\n\n      var oldDisplayMode = this.displayMode;\n\n      this._setDisplayMode(displayMode);\n\n      if (this.rendered) {\n        this._renderDisplayMode(oldDisplayMode);\n      }\n    }\n  }, {\n    key: \"_setDisplayMode\",\n    value: function _setDisplayMode(displayMode) {\n      this._setProperty('displayMode', displayMode);\n\n      this._yearPanel.setDisplayMode(this.displayMode);\n\n      this.modesMenu.setDisplayMode(displayMode);\n\n      if (this._isWorkWeek()) {\n        // change date if selectedDate is on a weekend\n        var p = this._dateParts(this.selectedDate, true);\n\n        if (p.day > 4) {\n          this.setSelectedDate(new Date(p.year, p.month, p.date - p.day + 4));\n        }\n      }\n    }\n  }, {\n    key: \"_renderDisplayMode\",\n    value: function _renderDisplayMode(oldDisplayMode) {\n      if (this.rendering) {\n        // only do it on property changes\n        return;\n      }\n\n      this._updateModel(false, true); // only render if components have another layout\n\n\n      if (oldDisplayMode === Calendar.DisplayMode.MONTH || this.displayMode === Calendar.DisplayMode.MONTH) {\n        this._renderComponents();\n\n        this.needsScrollToStartHour = true;\n      }\n    }\n  }, {\n    key: \"_setViewRange\",\n    value: function _setViewRange(viewRange) {\n      viewRange = DateRange.ensure(viewRange);\n\n      this._setProperty('viewRange', viewRange);\n    }\n  }, {\n    key: \"_setMenus\",\n    value: function _setMenus(menus) {\n      if (this._checkMenuInjectionTarget(this.menuInjectionTarget)) {\n        var originalMenus = this._removeInjectedMenus(this.menuInjectionTarget, this.menus);\n\n        this.menuInjectionTarget.setMenus(menus.concat(originalMenus));\n      }\n\n      this._setProperty('menus', menus);\n    }\n  }, {\n    key: \"_setMenuInjectionTarget\",\n    value: function _setMenuInjectionTarget(menuInjectionTarget) {\n      if (objects.isString(menuInjectionTarget)) {\n        menuInjectionTarget = scout.widget(menuInjectionTarget);\n      } // Remove injected menus and installed listener from old injection target\n\n\n      if (this._checkMenuInjectionTarget(this.menuInjectionTarget)) {\n        menuInjectionTarget.off('propertyChange:menus', this._menuInjectionTargetMenusChangedHandler);\n\n        var originalMenus = this._removeInjectedMenus(this.menuInjectionTarget, this.menus);\n\n        this.menuInjectionTarget.setMenus(originalMenus);\n      }\n\n      if (this._checkMenuInjectionTarget(menuInjectionTarget)) {\n        menuInjectionTarget.setMenus(this.menus.concat(menuInjectionTarget.menus)); // Listen for menu changes on the injection target. Re inject menus into target if the menus have been altered.\n\n        this._menuInjectionTargetMenusChangedHandler = menuInjectionTarget.on('propertyChange:menus', function (evt) {\n          if (this.menuInjectionTarget.menus.some(function (element) {\n            return this.menus.includes(element);\n          }.bind(this))) {\n            // Menus have already been injected => Do nothing\n            return;\n          }\n\n          this.menuInjectionTarget.setMenus(this.menus.concat(this.menuInjectionTarget.menus));\n        }.bind(this));\n      }\n\n      this._setProperty('menuInjectionTarget', menuInjectionTarget);\n    }\n  }, {\n    key: \"_checkMenuInjectionTarget\",\n    value: function _checkMenuInjectionTarget(menuInjectionTarget) {\n      return menuInjectionTarget instanceof GroupBox;\n    }\n  }, {\n    key: \"_removeInjectedMenus\",\n    value: function _removeInjectedMenus(menuInjectionTarget, injectedMenus) {\n      return menuInjectionTarget.menus.filter(function (element) {\n        return !injectedMenus.includes(element);\n      });\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.$container = this.$parent.appendDiv('calendar');\n      var layout = new CalendarLayout(this);\n      this.htmlComp = HtmlComponent.install(this.$container, this.session);\n      this.htmlComp.setLayout(layout); // main elements\n\n      this.$header = this.$container.appendDiv('calendar-header');\n      this.$headerRow1 = this.$header.appendDiv('calendar-header-row first');\n      this.$headerRow2 = this.$header.appendDiv('calendar-header-row last');\n\n      this._yearPanel.render();\n\n      this.$grids = this.$container.appendDiv('calendar-grids');\n      this.$topGrid = this.$grids.appendDiv('calendar-top-grid');\n      this.$grid = this.$grids.appendDiv('calendar-grid');\n      this.$list = this.$container.appendDiv('calendar-list-container').appendDiv('calendar-list');\n      this.$listTitle = this.$list.appendDiv('calendar-list-title'); // header contains range, title and commands. On small screens title will be moved to headerRow2\n\n      this.$range = this.$headerRow1.appendDiv('calendar-range');\n      this.$range.appendDiv('calendar-previous').click(this._onPreviousClick.bind(this));\n      this.$range.appendDiv('calendar-today', this.session.text('ui.CalendarToday')).click(this._onTodayClick.bind(this));\n      this.$range.appendDiv('calendar-next').click(this._onNextClick.bind(this)); // title\n\n      this.$title = this.$headerRow1.appendDiv('calendar-title');\n      this.$select = this.$title.appendDiv('calendar-select');\n      this.$progress = this.$title.appendDiv('busyindicator-label'); // commands\n\n      this.$commands = this.$headerRow1.appendDiv('calendar-commands');\n      this.$commands.appendDiv('calendar-mode first', this.session.text('ui.CalendarDay')).attr('data-mode', Calendar.DisplayMode.DAY).click(this._onDisplayModeClick.bind(this));\n      this.$commands.appendDiv('calendar-mode', this.session.text('ui.CalendarWorkWeek')).attr('data-mode', Calendar.DisplayMode.WORK_WEEK).click(this._onDisplayModeClick.bind(this));\n      this.$commands.appendDiv('calendar-mode', this.session.text('ui.CalendarWeek')).attr('data-mode', Calendar.DisplayMode.WEEK).click(this._onDisplayModeClick.bind(this));\n      this.$commands.appendDiv('calendar-mode last', this.session.text('ui.CalendarMonth')).attr('data-mode', Calendar.DisplayMode.MONTH).click(this._onDisplayModeClick.bind(this));\n      this.modesMenu.render(this.$commands);\n      this.$commands.appendDiv('calendar-toggle-year').click(this._onYearClick.bind(this));\n      this.$commands.appendDiv('calendar-toggle-list').click(this._onListClick.bind(this)); // Append the top grid (day/week views)\n\n      var $weekHeader = this.$topGrid.appendDiv('calendar-week-header');\n      $weekHeader.appendDiv('calendar-week-name');\n\n      for (var dayTop = 0; dayTop < 7; dayTop++) {\n        $weekHeader.appendDiv('calendar-day-name').data('day', dayTop);\n      }\n\n      this.$topGrid.appendDiv('calendar-week-task').attr('data-axis-name', this.session.text('ui.CalendarDay'));\n      var $weekTopGridDays = this.$topGrid.appendDiv('calendar-week-allday-container');\n      $weekTopGridDays.appendDiv('calendar-week-name');\n\n      var dayContextMenuCallback = this._onDayContextMenu.bind(this);\n\n      for (var dayBottom = 0; dayBottom < 7; dayBottom++) {\n        $weekTopGridDays.appendDiv('calendar-day').addClass('calendar-scrollable-components').data('day', dayBottom).on('contextmenu', dayContextMenuCallback);\n      }\n\n      for (var w = 1; w < 7; w++) {\n        var $w = this.$grid.appendDiv('calendar-week');\n\n        for (var d = 0; d < 8; d++) {\n          var $d = $w.appendDiv();\n\n          if (w > 0 && d === 0) {\n            $d.addClass('calendar-week-name');\n          } else if (w > 0 && d > 0) {\n            $d.addClass('calendar-day').data('day', d).data('week', w).on('contextmenu', dayContextMenuCallback);\n          }\n        }\n      } // click event on all day and children elements\n\n\n      var mousedownCallbackWithTime = this._onDayMouseDown.bind(this, true);\n\n      this.$grid.find('.calendar-day').on('mousedown', mousedownCallbackWithTime);\n\n      var mousedownCallback = this._onDayMouseDown.bind(this, false);\n\n      this.$topGrid.find('.calendar-day').on('mousedown', mousedownCallback);\n\n      this._updateScreen(false, false);\n    }\n  }, {\n    key: \"_renderProperties\",\n    value: function _renderProperties() {\n      _get(_getPrototypeOf(Calendar.prototype), \"_renderProperties\", this).call(this);\n\n      this._renderComponents();\n\n      this._renderSelectedComponent();\n\n      this._renderLoadInProgress();\n\n      this._renderDisplayMode();\n    }\n  }, {\n    key: \"_renderComponents\",\n    value: function _renderComponents() {\n      this.components.sort(this._sortFromTo);\n      this.components.forEach(function (component) {\n        return component.remove();\n      });\n      this.components.forEach(function (component) {\n        return component.render();\n      });\n\n      this._arrangeComponents();\n\n      this._updateListPanel();\n    }\n  }, {\n    key: \"_renderSelectedComponent\",\n    value: function _renderSelectedComponent() {\n      if (this.selectedComponent) {\n        this.selectedComponent.setSelected(true);\n      }\n    }\n  }, {\n    key: \"_renderLoadInProgress\",\n    value: function _renderLoadInProgress() {\n      this.$progress.setVisible(this.loadInProgress);\n    }\n  }, {\n    key: \"updateScrollPosition\",\n    value: function updateScrollPosition(animate) {\n      if (!this.rendered) {\n        // Execute delayed because table may be not layouted yet\n        this.session.layoutValidator.schedulePostValidateFunction(this._updateScrollPosition.bind(this, true, animate));\n      } else {\n        this._updateScrollPosition(true, animate);\n      }\n    }\n  }, {\n    key: \"_updateScrollPosition\",\n    value: function _updateScrollPosition(scrollToInitialTime, animate) {\n      if (this._isMonth()) {\n        this._scrollToSelectedComponent(animate);\n      } else {\n        if (this.selectedComponent) {\n          if (this.selectedComponent.fullDay) {\n            this._scrollToSelectedComponent(animate); // scroll top-grid to selected component\n\n\n            if (scrollToInitialTime) {\n              this._scrollToInitialTime(animate); // scroll grid to initial time\n\n            }\n          } else {\n            var date = dates.parseJsonDate(this.selectedComponent.fromDate, this.selectedComponent);\n            var topPercent = this._dayPosition(date.getHours(), date.getMinutes()) / 100;\n            var topPos = this.heightPerDay * topPercent;\n            scrollbars.scrollTop(this.$grid, topPos - this.spaceBeforeScrollTop, {\n              animate: animate\n            });\n          }\n        } else if (scrollToInitialTime) {\n          this._scrollToInitialTime(animate);\n        }\n      }\n    }\n  }, {\n    key: \"_scrollToSelectedComponent\",\n    value: function _scrollToSelectedComponent(animate) {\n      if (this.selectedComponent && this.selectedComponent._$parts[0] && this.selectedComponent._$parts[0].parent() && this.selectedComponent._$parts[0].isVisible()) {\n        scrollbars.scrollTo(this.selectedComponent._$parts[0].parent(), this.selectedComponent._$parts[0], {\n          animate: animate\n        });\n      }\n    }\n  }, {\n    key: \"_scrollToInitialTime\",\n    value: function _scrollToInitialTime(animate) {\n      this.needsScrollToStartHour = false;\n\n      if (!this._isMonth()) {\n        if (this.selectedComponent && !this.selectedComponent.fullDay) {\n          var date = dates.parseJsonDate(this.selectedComponent.fromDate);\n          var topPercent = this._dayPosition(date.getHours(), date.getMinutes()) / 100;\n          var topPos = this.heightPerDay * topPercent;\n          scrollbars.scrollTop(this.$grid, topPos - this.spaceBeforeScrollTop, {\n            animate: animate\n          });\n        } else {\n          var scrollTargetTop = this.heightPerHour * this.startHour;\n          scrollbars.scrollTop(this.$grid, scrollTargetTop - this.spaceBeforeScrollTop, {\n            animate: animate\n          });\n        }\n      }\n    }\n    /* -- basics, events -------------------------------------------- */\n\n  }, {\n    key: \"_onPreviousClick\",\n    value: function _onPreviousClick(event) {\n      this._navigateDate(Calendar.Direction.BACKWARD);\n    }\n  }, {\n    key: \"_onNextClick\",\n    value: function _onNextClick(event) {\n      this._navigateDate(Calendar.Direction.FORWARD);\n    }\n  }, {\n    key: \"_dateParts\",\n    value: function _dateParts(date, modulo) {\n      var parts = {\n        year: date.getFullYear(),\n        month: date.getMonth(),\n        date: date.getDate(),\n        day: date.getDay()\n      };\n\n      if (modulo) {\n        parts.day = (date.getDay() + 6) % 7;\n      }\n\n      return parts;\n    }\n  }, {\n    key: \"_navigateDate\",\n    value: function _navigateDate(direction) {\n      this.selectedDate = this._calcSelectedDate(direction);\n\n      this._updateModel(true, false);\n    }\n  }, {\n    key: \"_calcSelectedDate\",\n    value: function _calcSelectedDate(direction) {\n      var p = this._dateParts(this.selectedDate),\n          dayOperand = direction,\n          weekOperand = direction * 7,\n          monthOperand = direction;\n\n      if (this._isDay()) {\n        return new Date(p.year, p.month, p.date + dayOperand);\n      } else if (this._isWeek() || this._isWorkWeek()) {\n        return new Date(p.year, p.month, p.date + weekOperand);\n      } else if (this._isMonth()) {\n        return dates.shift(this.selectedDate, 0, monthOperand, 0);\n      }\n    }\n  }, {\n    key: \"_updateModel\",\n    value: function _updateModel(updateTopGrid, animate) {\n      this._exactRange = this._calcExactRange();\n\n      this._yearPanel.setViewRange(this._exactRange);\n\n      this.viewRange = this._calcViewRange();\n      this.trigger('modelChange');\n\n      this._updateScreen(updateTopGrid, animate);\n    }\n    /**\n     * Calculates exact date range of displayed components based on selected-date.\n     */\n\n  }, {\n    key: \"_calcExactRange\",\n    value: function _calcExactRange() {\n      var from,\n          to,\n          p = this._dateParts(this.selectedDate, true);\n\n      if (this._isDay()) {\n        from = new Date(p.year, p.month, p.date);\n        to = new Date(p.year, p.month, p.date + 1);\n      } else if (this._isWeek()) {\n        from = new Date(p.year, p.month, p.date - p.day);\n        to = new Date(p.year, p.month, p.date - p.day + 6);\n      } else if (this._isMonth()) {\n        from = new Date(p.year, p.month, 1);\n        to = new Date(p.year, p.month + 1, 0);\n      } else if (this._isWorkWeek()) {\n        from = new Date(p.year, p.month, p.date - p.day);\n        to = new Date(p.year, p.month, p.date - p.day + 4);\n      } else {\n        throw new Error('invalid value for displayMode');\n      }\n\n      return new DateRange(from, to);\n    }\n    /**\n     * Calculates the view-range, which is what the user sees in the UI.\n     * The view-range is wider than the exact-range in the monthly mode,\n     * as it contains also dates from the previous and next month.\n     */\n\n  }, {\n    key: \"_calcViewRange\",\n    value: function _calcViewRange() {\n      var viewFrom = calcViewFromDate(this._exactRange.from),\n          viewTo = calcViewToDate(viewFrom);\n      return new DateRange(viewFrom, viewTo);\n\n      function calcViewFromDate(fromDate) {\n        var i,\n            tmpDate = new Date(fromDate.valueOf());\n\n        for (i = 0; i < 42; i++) {\n          tmpDate.setDate(tmpDate.getDate() - 1);\n\n          if (tmpDate.getDay() === 1 && tmpDate.getMonth() !== fromDate.getMonth()) {\n            return tmpDate;\n          }\n        }\n\n        throw new Error('failed to calc viewFrom date');\n      }\n\n      function calcViewToDate(fromDate) {\n        var i,\n            tmpDate = new Date(fromDate.valueOf());\n\n        for (i = 0; i < 42; i++) {\n          tmpDate.setDate(tmpDate.getDate() + 1);\n        }\n\n        return tmpDate;\n      }\n    }\n  }, {\n    key: \"_onTodayClick\",\n    value: function _onTodayClick(event) {\n      this.selectedDate = new Date();\n\n      this._updateModel(true, false);\n    }\n  }, {\n    key: \"_onDisplayModeClick\",\n    value: function _onDisplayModeClick(event) {\n      var displayMode = $(event.target).data('mode');\n      this.setDisplayMode(displayMode);\n    }\n  }, {\n    key: \"_onYearClick\",\n    value: function _onYearClick(event) {\n      this._showYearPanel = !this._showYearPanel;\n\n      this._updateScreen(true, true);\n    }\n  }, {\n    key: \"_onListClick\",\n    value: function _onListClick(event) {\n      this._showListPanel = !this._showListPanel;\n\n      this._updateScreen(false, true);\n    }\n  }, {\n    key: \"_onDayMouseDown\",\n    value: function _onDayMouseDown(withTime, event) {\n      var selectedDate = new Date($(event.delegateTarget).data('date'));\n\n      if (withTime && (this._isDay() || this._isWeek() || this._isWorkWeek())) {\n        var seconds = Math.floor(event.originalEvent.layerY / this.heightPerDivision) / this.numberOfHourDivisions * 60 * 60;\n\n        if (seconds < 60 * 60 * 24) {\n          selectedDate.setSeconds(seconds);\n        }\n      }\n\n      this._setSelection(selectedDate, null, false);\n    }\n    /**\n     * @param selectedDate\n     * @param selectedComponent may be null when a day is selected\n     */\n\n  }, {\n    key: \"_setSelection\",\n    value: function _setSelection(selectedDate, selectedComponent, updateScrollPosition) {\n      var changed = false; // selected date\n\n      if (dates.compareDays(this.selectedDate, selectedDate) !== 0) {\n        changed = true;\n        $('.calendar-day', this.$container).each(function (index, element) {\n          var $day = $(element),\n              date = $day.data('date');\n\n          if (!date || dates.compareDays(date, this.selectedDate) === 0) {\n            $day.select(false); // de-select old date\n          } else if (dates.compareDays(date, selectedDate) === 0) {\n            $day.select(true); // select new date\n          }\n        }.bind(this));\n        this.selectedDate = selectedDate;\n      } // selected component / part (may be null)\n\n\n      if (this.selectedComponent !== selectedComponent) {\n        changed = true;\n\n        if (this.selectedComponent) {\n          this.selectedComponent.setSelected(false);\n        }\n\n        if (selectedComponent) {\n          selectedComponent.setSelected(true);\n        }\n\n        this.selectedComponent = selectedComponent;\n      }\n\n      if (changed) {\n        this.trigger('selectionChange');\n\n        this._updateListPanel();\n\n        if (updateScrollPosition) {\n          this._updateScrollPosition(false, true);\n        }\n      }\n\n      if (this._showYearPanel) {\n        this._yearPanel.selectDate(this.selectedDate);\n      }\n    }\n    /* --  set display mode and range ------------------------------------- */\n\n  }, {\n    key: \"_updateScreen\",\n    value: function _updateScreen(updateTopGrid, animate) {\n      $.log.isInfoEnabled() && $.log.info('(Calendar#_updateScreen)'); // select mode\n\n      $('.calendar-mode', this.$commands).select(false);\n      $('[data-mode=\"' + this.displayMode + '\"]', this.$commands).select(true); // remove selected day\n\n      $('.selected', this.$grid).select(false); // layout grid\n\n      this.layoutLabel();\n      this.layoutSize(animate);\n      this.layoutAxis();\n\n      if (this._showYearPanel) {\n        this._yearPanel.selectDate(this.selectedDate);\n      }\n\n      this._updateListPanel();\n\n      this._updateScrollbars(this.$grid, animate);\n\n      if (updateTopGrid && !this._isMonth()) {\n        this._updateTopGrid();\n      }\n    }\n  }, {\n    key: \"layoutSize\",\n    value: function layoutSize(animate) {\n      // reset animation sizes\n      $('div', this.$container).removeData(['new-width', 'new-height']);\n\n      if (this._isMonth()) {\n        this.$topGrid.addClass('calendar-top-grid-short');\n        this.$grid.removeClass('calendar-grid-short');\n      } else {\n        this.$topGrid.removeClass('calendar-top-grid-short');\n        this.$grid.addClass('calendar-grid-short');\n      } // init vars (Selected: Day)\n\n\n      var $selected = $('.selected', this.$grid),\n          $topSelected = $('.selected', this.$topGrid),\n          containerW = this.$container.width(),\n          gridH = this.$grid.height(),\n          gridW = containerW - 20; // containerW - @root-group-box-padding-right\n      // show or hide year\n\n      $('.calendar-toggle-year', this.$commands).select(this._showYearPanel);\n\n      if (this._showYearPanel) {\n        this._yearPanel.$container.data('new-width', this.calendarToggleYearWidth);\n\n        gridW -= this.calendarToggleYearWidth;\n        containerW -= this.calendarToggleYearWidth;\n      } else {\n        this._yearPanel.$container.data('new-width', 0);\n      } // show or hide work list\n\n\n      $('.calendar-toggle-list', this.$commands).select(this._showListPanel);\n\n      if (this._showListPanel) {\n        this.$list.parent().data('new-width', this.calendarToggleListWidth);\n        gridW -= this.calendarToggleListWidth;\n        containerW -= this.calendarToggleListWidth;\n      } else {\n        this.$list.parent().data('new-width', 0);\n      } // basic grid width\n\n\n      this.$grids.data('new-width', containerW);\n      var $weeksToHide = $(); // Empty\n\n      var $allWeeks = $('.calendar-week', this.$grid); // layout week\n\n      if (this._isDay() || this._isWeek() || this._isWorkWeek()) {\n        $allWeeks.removeClass('calendar-week-noborder'); // Parent of selected (Day) is a week\n\n        var selectedWeek = $selected.parent();\n        $weeksToHide = $allWeeks.not(selectedWeek); // Hide all (other) weeks delayed, height will animate to zero\n\n        $weeksToHide.data('new-height', 0);\n        $weeksToHide.removeClass('invisible');\n        selectedWeek.data('new-height', this.heightPerDay);\n        selectedWeek.addClass('calendar-week-noborder');\n        selectedWeek.removeClass('hidden invisible'); // Current week must be shown\n\n        $('.calendar-day', selectedWeek).data('new-height', this.heightPerDay); // Hide the week-number in the lower grid\n\n        $('.calendar-week-name', this.$grid).addClass('invisible'); // Keep the reserved space\n\n        $('.calendar-week-allday-container', this.$topGrid).removeClass('hidden');\n        $('.calendar-week-task', this.$topGrid).removeClass('hidden');\n      } else {\n        // Month\n        var newHeightMonth = gridH / this.monthViewNumberOfWeeks;\n        $allWeeks.removeClass('calendar-week-noborder invisible hidden');\n        $allWeeks.eq(0).addClass('calendar-week-noborder');\n        $allWeeks.data('new-height', newHeightMonth);\n        $('.calendar-day', this.$grid).data('new-height', newHeightMonth);\n        var $allDays = $('.calendar-week-name', this.$grid);\n        $allDays.removeClass('hidden invisible');\n        $allDays.data('new-height', newHeightMonth);\n        $('.calendar-week-allday-container', this.$topGrid).addClass('hidden');\n        $('.calendar-week-task', this.$topGrid).addClass('hidden');\n      } // layout days\n\n\n      var contentW = gridW - 45; // gridW - @calendar-week-name-width\n\n      if (this._isDay()) {\n        $('.calendar-day-name, .calendar-day', this.$topGrid).data('new-width', 0);\n        $('.calendar-day', this.$grid).data('new-width', 0);\n        $('.calendar-day-name:nth-child(' + ($topSelected.index() + 1) + ')', this.$topGrid).data('new-width', contentW);\n        $('.calendar-day:nth-child(' + ($topSelected.index() + 1) + ')', this.$topGrid).data('new-width', contentW);\n        $('.calendar-day:nth-child(' + ($selected.index() + 1) + ')', this.$grid).data('new-width', contentW);\n      } else if (this._isWorkWeek()) {\n        this.$topGrid.find('.calendar-day-name').data('new-width', 0);\n        this.$grids.find('.calendar-day').data('new-width', 0);\n        var newWidthWorkWeek = Math.round(contentW / this.workDayIndices.length);\n        $('.calendar-day-name:nth-child(-n+6), ' + '.calendar-day:nth-child(-n+6)', this.$topGrid).data('new-width', newWidthWorkWeek);\n        $('.calendar-day:nth-child(-n+6)', this.$grid).data('new-width', newWidthWorkWeek);\n      } else if (this._isMonth() || this._isWeek()) {\n        var newWidthMonthOrWeek = Math.round(contentW / 7);\n        this.$grids.find('.calendar-day').data('new-width', newWidthMonthOrWeek);\n        this.$topGrid.find('.calendar-day-name').data('new-width', newWidthMonthOrWeek);\n      } // layout components\n\n\n      if (this._isMonth()) {\n        $('.component-month', this.$grid).each(function () {\n          var $comp = $(this),\n              $day = $comp.closest('.calendar-day');\n          $comp.toggleClass('compact', $day.data('new-width') < CalendarComponent.MONTH_COMPACT_THRESHOLD);\n        });\n      }\n\n      var afterLayoutCallback = this._afterLayout.bind(this); // animate old to new sizes\n\n\n      $('div', this.$container).each(function () {\n        var $e = $(this),\n            w = $e.data('new-width'),\n            h = $e.data('new-height');\n        $e.stop(false, true);\n\n        if (w !== undefined && w !== $e.outerWidth()) {\n          if (animate) {\n            $e.animateAVCSD('width', w, afterLayoutCallback.bind(this, $e, animate));\n          } else {\n            $e.css('width', w);\n            afterLayoutCallback($e, animate);\n          }\n        }\n\n        if (h !== undefined && h !== $e.outerHeight()) {\n          if (h > 0) {\n            $e.removeClass('hidden');\n          }\n\n          if (animate) {\n            $e.animateAVCSD('height', h, function () {\n              if (h === 0) {\n                $e.addClass('hidden');\n              }\n\n              afterLayoutCallback($e, animate);\n            });\n          } else {\n            $e.css('height', h);\n\n            if (h === 0) {\n              $e.addClass('hidden');\n            }\n\n            afterLayoutCallback($e, animate);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_afterLayout\",\n    value: function _afterLayout($parent, animate) {\n      this._updateScrollbars($parent, animate);\n\n      this._updateWeekdayNames();\n    }\n  }, {\n    key: \"_updateWeekdayNames\",\n    value: function _updateWeekdayNames() {\n      // set day-name (based on width of shown column)\n      var weekdayWidth = this.$topGrid.width(),\n          weekdays;\n\n      if (this._isDay()) {\n        weekdayWidth /= 1;\n      } else if (this._isWorkWeek()) {\n        weekdayWidth /= this.workDayIndices.length;\n      } else if (this._isWeek()) {\n        weekdayWidth /= 7;\n      } else if (this._isMonth()) {\n        weekdayWidth /= 7;\n      }\n\n      if (weekdayWidth > 90) {\n        weekdays = this.session.locale.dateFormat.symbols.weekdaysOrdered;\n      } else {\n        weekdays = this.session.locale.dateFormat.symbols.weekdaysShortOrdered;\n      }\n\n      $('.calendar-day-name', this.$topGrid).each(function (index) {\n        $(this).attr('data-day-name', weekdays[index]);\n      });\n    }\n  }, {\n    key: \"_updateScrollbars\",\n    value: function _updateScrollbars($parent, animate) {\n      var $scrollables = $('.calendar-scrollable-components', $parent);\n      $scrollables.each(function () {\n        var $scrollable = $(this);\n        scrollbars.update($scrollable, true);\n      });\n      this.updateScrollPosition(animate);\n    }\n  }, {\n    key: \"_updateTopGrid\",\n    value: function _updateTopGrid() {\n      $('.calendar-component', this.$topGrid).each(function (index, part) {\n        var component = $(part).data('component');\n\n        if (component) {\n          component.remove();\n        }\n      });\n      var allDayComponents = this.components.filter(function (component) {\n        return component.fullDay;\n      }); // first remove all components and add them from scratch\n\n      allDayComponents.forEach(function (component) {\n        return component.remove();\n      });\n      allDayComponents.forEach(function (component) {\n        return component.render();\n      });\n\n      this._updateScrollbars(this.$topGrid, false);\n    }\n  }, {\n    key: \"layoutYearPanel\",\n    value: function layoutYearPanel() {\n      if (this._showYearPanel) {\n        scrollbars.update(this._yearPanel.$yearList);\n\n        this._yearPanel._scrollYear();\n      }\n    }\n  }, {\n    key: \"layoutLabel\",\n    value: function layoutLabel() {\n      var text,\n          $dates,\n          $topGridDates,\n          exFrom = this._exactRange.from,\n          exTo = this._exactRange.to; // set range text\n\n      if (this._isDay()) {\n        text = this._format(exFrom, 'd. MMMM yyyy');\n      } else if (this._isWorkWeek() || this._isWeek()) {\n        var toText = this.session.text('ui.to');\n\n        if (exFrom.getMonth() === exTo.getMonth()) {\n          text = strings.join(' ', this._format(exFrom, 'd.'), toText, this._format(exTo, 'd. MMMM yyyy'));\n        } else if (exFrom.getFullYear() === exTo.getFullYear()) {\n          text = strings.join(' ', this._format(exFrom, 'd. MMMM'), toText, this._format(exTo, 'd. MMMM yyyy'));\n        } else {\n          text = strings.join(' ', this._format(exFrom, 'd. MMMM yyyy'), toText, this._format(exTo, 'd. MMMM yyyy'));\n        }\n      } else if (this._isMonth()) {\n        text = this._format(exFrom, 'MMMM yyyy');\n      }\n\n      this.$select.text(text); // prepare to set all day date and mark selected one\n\n      $dates = $('.calendar-day', this.$grid);\n\n      var w,\n          d,\n          cssClass,\n          currentMonth = this._exactRange.from.getMonth(),\n          date = new Date(this.viewRange.from.valueOf()); // Main grid: loop all days and set value and class\n\n\n      for (w = 0; w < this.monthViewNumberOfWeeks; w++) {\n        for (d = 0; d < 7; d++) {\n          cssClass = '';\n\n          if (this.workDayIndices.indexOf(date.getDay()) === -1) {\n            cssClass = date.getMonth() !== currentMonth ? ' weekend-out' : ' weekend';\n          } else {\n            cssClass = date.getMonth() !== currentMonth ? ' out' : '';\n          }\n\n          if (dates.isSameDay(date, new Date())) {\n            cssClass += ' now';\n          }\n\n          if (dates.isSameDay(date, this.selectedDate)) {\n            cssClass += ' selected';\n          }\n\n          if (!this._isMonth()) {\n            cssClass += ' calendar-no-label'; // If we're not in the month view, number is shown on top\n          } // adjust position for days between 10 and 19 (because \"1\" is narrower than \"0\" or \"2\")\n\n\n          if (date.getDate() > 9 && date.getDate() < 20) {\n            cssClass += ' center-nice';\n          }\n\n          text = this._format(date, 'dd');\n          $dates.eq(w * 7 + d).removeClass('weekend-out weekend out selected now calendar-no-label').addClass(cssClass).attr('data-day-name', text).data('date', new Date(date.valueOf()));\n          date.setDate(date.getDate() + 1);\n        }\n      } // Top grid: loop days of one calendar week and set value and class\n\n\n      if (!this._isMonth()) {\n        $topGridDates = $('.calendar-day', this.$topGrid); // From the view range, find the week we are in\n\n        var exactDate = new Date(this._exactRange.from.valueOf()); // Find first day of week.\n\n        date = dates.firstDayOfWeek(exactDate, 1);\n\n        for (d = 0; d < 7; d++) {\n          cssClass = '';\n\n          if (this.workDayIndices.indexOf(date.getDay()) === -1) {\n            cssClass = date.getMonth() !== currentMonth ? ' weekend-out' : ' weekend';\n          } else {\n            cssClass = date.getMonth() !== currentMonth ? ' out' : '';\n          }\n\n          if (dates.isSameDay(date, new Date())) {\n            cssClass += ' now';\n          }\n\n          if (dates.isSameDay(date, this.selectedDate)) {\n            cssClass += ' selected';\n          }\n\n          text = this._format(date, 'dd');\n          $topGridDates.eq(d).removeClass('weekend-out weekend out selected now').addClass(cssClass).attr('data-day-name', text).data('date', new Date(date.valueOf()));\n          date.setDate(date.getDate() + 1);\n        }\n      }\n    }\n  }, {\n    key: \"layoutAxis\",\n    value: function layoutAxis() {\n      var $e; // remove old axis\n\n      $('.calendar-week-axis, .calendar-week-task', this.$grid).remove(); // set weekname\n\n      var session = this.session;\n      $('.calendar-week-name', this.$container).each(function (index) {\n        if (index > 0) {\n          $e = $(this);\n          $e.text(session.text('ui.CW', dates.weekInYear($e.next().data('date'))));\n        }\n      }); // day schedule\n\n      if (!this._isMonth()) {\n        // Parent of selected day: Week\n        //    var $parent = $selected.parent();\n        var $parent = $('.calendar-week', this.$grid);\n\n        for (var h = 0; h < 24; h++) {\n          // Render lines for each hour\n          var paddedHour = ('00' + h).slice(-2);\n          var topPos = h * this.heightPerHour;\n          $parent.appendDiv('calendar-week-axis hour' + (h === 0 ? ' first' : '')).attr('data-axis-name', paddedHour + ':00').css('top', topPos + 'px');\n\n          for (var m = 1; m < this.numberOfHourDivisions; m++) {\n            // First one rendered above. Start at the next\n            topPos += this.heightPerDivision;\n            $parent.appendDiv('calendar-week-axis').attr('data-axis-name', '').css('top', topPos + 'px');\n          }\n        }\n      }\n    }\n    /* -- year events ---------------------------------------- */\n\n  }, {\n    key: \"_onYearPanelDateSelect\",\n    value: function _onYearPanelDateSelect(event) {\n      this.selectedDate = event.date;\n\n      this._updateModel(true, false);\n    }\n  }, {\n    key: \"_updateListPanel\",\n    value: function _updateListPanel() {\n      if (this._showListPanel) {\n        // remove old list-components\n        this._listComponents.forEach(function (listComponent) {\n          listComponent.remove();\n        });\n\n        this._listComponents = [];\n\n        this._renderListPanel();\n      }\n    }\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      var $days = $('.calendar-day', this.$grid); // Ensure that scrollbars are unregistered\n\n      for (var k = 0; k < $days.length; k++) {\n        var $day = $days.eq(k);\n        var $scrollableContainer = $day.children('.calendar-scrollable-components');\n\n        if ($scrollableContainer.length > 0) {\n          scrollbars.uninstall($scrollableContainer, this.session);\n          $scrollableContainer.remove();\n        }\n      }\n\n      _get(_getPrototypeOf(Calendar.prototype), \"_remove\", this).call(this);\n    }\n    /**\n     * Renders the panel on the left, showing all components of the selected date.\n     */\n\n  }, {\n    key: \"_renderListPanel\",\n    value: function _renderListPanel() {\n      var listComponent,\n          components = []; // set title\n\n      this.$listTitle.text(this._format(this.selectedDate, 'd. MMMM yyyy')); // find components to display on the list panel\n\n      this.components.forEach(function (component) {\n        if (belongsToSelectedDate.call(this, component)) {\n          components.push(component);\n        }\n      }.bind(this));\n\n      function belongsToSelectedDate(component) {\n        var selectedDate = dates.trunc(this.selectedDate);\n        return dates.compare(selectedDate, component.coveredDaysRange.from) >= 0 && dates.compare(selectedDate, component.coveredDaysRange.to) <= 0;\n      }\n\n      components.forEach(function (component) {\n        listComponent = new CalendarListComponent(this.selectedDate, component);\n        listComponent.render(this.$list);\n\n        this._listComponents.push(listComponent);\n      }.bind(this));\n    }\n    /* -- components, events-------------------------------------------- */\n\n  }, {\n    key: \"_selectedComponentChanged\",\n    value: function _selectedComponentChanged(component, partDay, updateScrollPosition) {\n      this._setSelection(partDay, component, updateScrollPosition);\n    }\n  }, {\n    key: \"_onDayContextMenu\",\n    value: function _onDayContextMenu(event) {\n      this._showContextMenu(event, 'Calendar.EmptySpace');\n    }\n  }, {\n    key: \"_showContextMenu\",\n    value: function _showContextMenu(event, allowedType) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      var func = function func(event, allowedType) {\n        if (!this.rendered || !this.attached) {\n          // check needed because function is called asynchronously\n          return;\n        }\n\n        var filteredMenus = menus.filter(this.menus, [allowedType], true),\n            $part = $(event.currentTarget);\n\n        if (filteredMenus.length === 0) {\n          return;\n        }\n\n        var popup = scout.create('ContextMenuPopup', {\n          parent: this,\n          menuItems: filteredMenus,\n          location: {\n            x: event.pageX,\n            y: event.pageY\n          },\n          $anchor: $part\n        });\n        popup.open();\n      }.bind(this);\n\n      this.session.onRequestsDone(func, event, allowedType);\n    }\n    /* -- components, arrangement------------------------------------ */\n\n  }, {\n    key: \"_arrangeComponents\",\n    value: function _arrangeComponents() {\n      var k, j, $day, $allChildren, $children, $scrollableContainer, dayComponents, day;\n      var $days = $('.calendar-day', this.$grid); // Main (Bottom) grid: Iterate over days\n\n      for (k = 0; k < $days.length; k++) {\n        $day = $days.eq(k);\n        $children = $day.children('.calendar-component:not(.component-task)');\n        $allChildren = $day.children('.calendar-component');\n        day = $day.data('date'); // Remove old element containers\n\n        $scrollableContainer = $day.children('.calendar-scrollable-components');\n\n        if ($scrollableContainer.length > 0) {\n          scrollbars.uninstall($scrollableContainer, this.session);\n          $scrollableContainer.remove();\n        }\n\n        if (this._isMonth() && $allChildren.length > 0) {\n          $scrollableContainer = $day.appendDiv('calendar-scrollable-components');\n\n          for (j = 0; j < $allChildren.length; j++) {\n            var $child = $allChildren.eq(j); // non-tasks (communications) are distributed manually\n            // within the parent container in all views except the monthly view.\n\n            if (!this._isMonth() && !$child.hasClass('component-task')) {\n              continue;\n            }\n\n            $scrollableContainer.append($child);\n          }\n\n          scrollbars.install($scrollableContainer, {\n            parent: this,\n            session: this.session,\n            axis: 'y'\n          });\n        }\n\n        if (this._isMonth() && $children.length > 2) {\n          $day.addClass('many-items');\n        } else if (!this._isMonth() && $children.length > 1) {\n          // logical placement\n          dayComponents = this._getComponents($children);\n\n          this._arrange(dayComponents, day); // screen placement\n\n\n          this._arrangeComponentSetPlacement($children, day);\n        }\n      }\n\n      if (this._isMonth()) {\n        this._uninstallScrollbars();\n\n        this.$grid.removeClass('calendar-scrollable-components');\n      } else {\n        this.$grid.addClass('calendar-scrollable-components'); // If we're in the non-month views, the time can scroll. Add scrollbars\n\n        this._installScrollbars({\n          parent: this,\n          session: this.session,\n          axis: 'y'\n        });\n\n        var $topDays = $('.calendar-scrollable-components', this.$topGrid);\n\n        for (k = 0; k < $topDays.length; k++) {\n          var $topDay = $topDays.eq(k);\n          scrollbars.install($topDay, {\n            parent: this,\n            session: this.session,\n            axis: 'y'\n          });\n        }\n      }\n    }\n  }, {\n    key: \"_getComponents\",\n    value: function _getComponents($children) {\n      var i, $child;\n      var components = [];\n\n      for (i = 0; i < $children.length; i++) {\n        $child = $children.eq(i);\n        components.push($child.data('component'));\n      }\n\n      return components;\n    }\n  }, {\n    key: \"_sort\",\n    value: function _sort(components) {\n      components.sort(this._sortFromTo);\n    }\n    /**\n     * Arrange components (stack width, stack index) per day\n     * */\n\n  }, {\n    key: \"_arrange\",\n    value: function _arrange(components, day) {\n      var i,\n          j,\n          c,\n          r,\n          k,\n          columns = []; // ordered by from, to\n\n      this._sort(components); // clear existing placement\n\n\n      for (i = 0; i < components.length; i++) {\n        c = components[i];\n\n        if (!c.stack) {\n          c.stack = {};\n        }\n\n        c.stack[day] = {};\n      }\n\n      for (i = 0; i < components.length; i++) {\n        c = components[i];\n        r = c.getPartDayPosition(day); // Range [from,to]\n        // reduce number of columns, if all components end before this one\n\n        if (columns.length > 0 && this._allEndBefore(columns, r.from, day)) {\n          columns = [];\n        } // replace an component that ends before and can be replaced\n\n\n        k = this._findReplacableColumn(columns, r.from, day); // insert\n\n        if (k >= 0) {\n          columns[k] = c;\n          c.stack[day].x = k;\n        } else {\n          columns.push(c);\n          c.stack[day].x = columns.length - 1;\n        } // update stackW\n\n\n        for (j = 0; j < columns.length; j++) {\n          columns[j].stack[day].w = columns.length;\n        }\n      }\n    }\n  }, {\n    key: \"_allEndBefore\",\n    value: function _allEndBefore(columns, pos, day) {\n      var i;\n\n      for (i = 0; i < columns.length; i++) {\n        if (!this._endsBefore(columns[i], pos, day)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_findReplacableColumn\",\n    value: function _findReplacableColumn(columns, pos, day) {\n      var j;\n\n      for (j = 0; j < columns.length; j++) {\n        if (this._endsBefore(columns[j], pos, day)) {\n          return j;\n        }\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"_endsBefore\",\n    value: function _endsBefore(component, pos, day) {\n      return component.getPartDayPosition(day).to <= pos;\n    }\n  }, {\n    key: \"_arrangeComponentSetPlacement\",\n    value: function _arrangeComponentSetPlacement($children, day) {\n      var i, $child, stack; // loop and place based on data\n\n      for (i = 0; i < $children.length; i++) {\n        $child = $children.eq(i);\n        stack = $child.data('component').stack[day]; // make last element smaller\n\n        $child.css('width', 100 / stack.w + '%').css('left', stack.x * 100 / stack.w + '%');\n      }\n    }\n  }, {\n    key: \"get$Scrollable\",\n    value: function get$Scrollable() {\n      return this.$grid;\n    }\n    /* -- helper ---------------------------------------------------- */\n\n  }, {\n    key: \"_dayPosition\",\n    value: function _dayPosition(hour, minutes) {\n      // Height position in percent of total calendar\n      var pos;\n\n      if (hour < 0) {\n        pos = 0; // All day event\n      } else {\n        pos = 100 / (24 * 60) * (hour * 60 + minutes);\n      }\n\n      return Math.round(pos * 100) / 100;\n    }\n  }, {\n    key: \"_hourToNumber\",\n    value: function _hourToNumber(hour) {\n      var splits = hour.split(':');\n      return parseFloat(splits[0]) + parseFloat(splits[1]) / 60;\n    }\n  }, {\n    key: \"_format\",\n    value: function _format(date, pattern) {\n      return dates.format(date, this.session.locale, pattern);\n    }\n  }, {\n    key: \"_sortFromTo\",\n    value: function _sortFromTo(c1, c2) {\n      var from1 = dates.parseJsonDate(c1.fromDate);\n      var from2 = dates.parseJsonDate(c2.fromDate);\n      var diffFrom = dates.compare(from1, from2);\n\n      if (diffFrom !== 0) {\n        return diffFrom;\n      }\n\n      var to1 = dates.parseJsonDate(c1.toDate);\n      var to2 = dates.parseJsonDate(c2.toDate);\n      var diffTo = dates.compare(to1, to2);\n\n      if (diffTo !== 0) {\n        return diffTo;\n      }\n\n      var s1 = c1.item && c1.item.subject ? c1.item.subject : '';\n      var s2 = c2.item && c2.item.subject ? c2.item.subject : '';\n      return s1.localeCompare(s2);\n    }\n  }]);\n\n  return Calendar;\n}(Widget);\n\n_defineProperty(Calendar, \"DisplayMode\", {\n  DAY: 1,\n  WEEK: 2,\n  MONTH: 3,\n  WORK_WEEK: 4\n});\n\n_defineProperty(Calendar, \"Direction\", {\n  BACKWARD: -1,\n  FORWARD: 1\n});\n\nexport { Calendar as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/calendar/Calendar.js"],"names":["CalendarComponent","CalendarLayout","CalendarListComponent","DateRange","dates","GroupBox","HtmlComponent","KeyStrokeContext","menus","objects","scout","scrollbars","strings","Widget","$","Calendar","monthViewNumberOfWeeks","numberOfHourDivisions","getConfiguredNumberOfHourDivisions","heightPerDivision","getConfiguredHeightPerDivision","startHour","getConfiguredStartHour","heightPerHour","heightPerDay","spaceBeforeScrollTop","workDayIndices","components","displayMode","displayCondensed","loadInProgress","selectedDate","showDisplayModeSelection","title","useOverflowCells","viewRange","calendarToggleListWidth","calendarToggleYearWidth","$container","$header","$range","$commands","$grids","$grid","$topGrid","$list","$progress","_showYearPanel","_showListPanel","_exactRange","_listComponents","menuInjectionTarget","_menuInjectionTargetMenusChangedHandler","_addWidgetProperties","model","session","register","DisplayMode","DAY","WEEK","MONTH","WORK_WEEK","_yearPanel","create","parent","on","_onYearPanelDateSelect","bind","modesMenu","visible","_setSelectedDate","_setDisplayMode","_setMenuInjectionTarget","_calcExactRange","setViewRange","_calcViewRange","date","setProperty","ensure","_setProperty","selectDate","equals","oldDisplayMode","rendered","_renderDisplayMode","setDisplayMode","_isWorkWeek","p","_dateParts","day","setSelectedDate","Date","year","month","rendering","_updateModel","_renderComponents","needsScrollToStartHour","_checkMenuInjectionTarget","originalMenus","_removeInjectedMenus","setMenus","concat","isString","widget","off","evt","some","element","includes","injectedMenus","filter","$parent","appendDiv","layout","htmlComp","install","setLayout","$headerRow1","$headerRow2","render","$listTitle","click","_onPreviousClick","text","_onTodayClick","_onNextClick","$title","$select","attr","_onDisplayModeClick","_onYearClick","_onListClick","$weekHeader","dayTop","data","$weekTopGridDays","dayContextMenuCallback","_onDayContextMenu","dayBottom","addClass","w","$w","d","$d","mousedownCallbackWithTime","_onDayMouseDown","find","mousedownCallback","_updateScreen","_renderSelectedComponent","_renderLoadInProgress","sort","_sortFromTo","forEach","component","remove","_arrangeComponents","_updateListPanel","selectedComponent","setSelected","setVisible","animate","layoutValidator","schedulePostValidateFunction","_updateScrollPosition","scrollToInitialTime","_isMonth","_scrollToSelectedComponent","fullDay","_scrollToInitialTime","parseJsonDate","fromDate","topPercent","_dayPosition","getHours","getMinutes","topPos","scrollTop","_$parts","isVisible","scrollTo","scrollTargetTop","event","_navigateDate","Direction","BACKWARD","FORWARD","modulo","parts","getFullYear","getMonth","getDate","getDay","direction","_calcSelectedDate","dayOperand","weekOperand","monthOperand","_isDay","_isWeek","shift","updateTopGrid","trigger","from","to","Error","viewFrom","calcViewFromDate","viewTo","calcViewToDate","i","tmpDate","valueOf","setDate","target","withTime","delegateTarget","seconds","Math","floor","originalEvent","layerY","setSeconds","_setSelection","updateScrollPosition","changed","compareDays","each","index","$day","select","log","isInfoEnabled","info","layoutLabel","layoutSize","layoutAxis","_updateScrollbars","_updateTopGrid","removeData","removeClass","$selected","$topSelected","containerW","width","gridH","height","gridW","$weeksToHide","$allWeeks","selectedWeek","not","newHeightMonth","eq","$allDays","contentW","newWidthWorkWeek","round","length","newWidthMonthOrWeek","$comp","closest","toggleClass","MONTH_COMPACT_THRESHOLD","afterLayoutCallback","_afterLayout","$e","h","stop","undefined","outerWidth","animateAVCSD","css","outerHeight","_updateWeekdayNames","weekdayWidth","weekdays","locale","dateFormat","symbols","weekdaysOrdered","weekdaysShortOrdered","$scrollables","$scrollable","update","part","allDayComponents","$yearList","_scrollYear","$dates","$topGridDates","exFrom","exTo","_format","toText","join","cssClass","currentMonth","indexOf","isSameDay","exactDate","firstDayOfWeek","weekInYear","next","paddedHour","slice","m","listComponent","_renderListPanel","$days","k","$scrollableContainer","children","uninstall","belongsToSelectedDate","call","push","trunc","compare","coveredDaysRange","partDay","_showContextMenu","allowedType","preventDefault","stopPropagation","func","attached","filteredMenus","$part","currentTarget","popup","menuItems","location","x","pageX","y","pageY","$anchor","open","onRequestsDone","j","$allChildren","$children","dayComponents","$child","hasClass","append","axis","_getComponents","_arrange","_arrangeComponentSetPlacement","_uninstallScrollbars","_installScrollbars","$topDays","$topDay","c","r","columns","_sort","stack","getPartDayPosition","_allEndBefore","_findReplacableColumn","pos","_endsBefore","hour","minutes","splits","split","parseFloat","pattern","format","c1","c2","from1","from2","diffFrom","to1","toDate","to2","diffTo","s1","item","subject","s2","localeCompare"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2010-2019 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {CalendarComponent, CalendarLayout, CalendarListComponent, DateRange, dates, GroupBox, HtmlComponent, KeyStrokeContext, menus, objects, scout, scrollbars, strings, Widget} from '../index';\nimport $ from 'jquery';\n\nexport default class Calendar extends Widget {\n\n  constructor() {\n    super();\n\n    this.monthViewNumberOfWeeks = 6;\n    this.numberOfHourDivisions = this.getConfiguredNumberOfHourDivisions();\n    this.heightPerDivision = this.getConfiguredHeightPerDivision();\n    this.startHour = this.getConfiguredStartHour();\n    this.heightPerHour = this.numberOfHourDivisions * this.heightPerDivision;\n    this.heightPerDay = 24 * this.heightPerHour;\n    this.spaceBeforeScrollTop = 15;\n    this.workDayIndices = [1, 2, 3, 4, 5]; // Workdays: Mon-Fri (Week starts at Sun in JS)\n    this.components = [];\n    this.displayMode;\n    this.displayCondensed = false;\n    this.loadInProgress = false;\n    this.selectedDate = null;\n    this.showDisplayModeSelection = true;\n    this.title = null;\n    this.useOverflowCells = true;\n    this.viewRange = null;\n    this.calendarToggleListWidth = 270;\n    this.calendarToggleYearWidth = 215;\n\n    // main elements\n    this.$container = null;\n    this.$header = null;\n    this.$range = null;\n    this.$commands = null;\n    this.$grids = null;\n    this.$grid = null;\n    this.$topGrid = null;\n    this.$list = null;\n    this.$progress = null;\n\n    // additional modes; should be stored in model\n    this._showYearPanel = false;\n    this._showListPanel = false;\n\n    /**\n     * The narrow view range is different from the regular view range.\n     * It contains only dates that exactly match the requested dates,\n     * the regular view range contains also dates from the first and\n     * next month. The exact range is not sent to the server.\n     */\n    this._exactRange = null;\n\n    /**\n     * When the list panel is shown, this list contains the scout.CalenderListComponent\n     * items visible on the list.\n     */\n    this._listComponents = [];\n    this.menuInjectionTarget = null;\n    this._menuInjectionTargetMenusChangedHandler = null;\n\n    this._addWidgetProperties(['components', 'menus', 'selectedComponent']);\n  }\n\n  init(model, session, register) {\n    super.init(model, session, register);\n  }\n\n  /**\n   * Enum providing display-modes for calender-like components like calendar and planner.\n   * @see ICalendarDisplayMode.java\n   */\n  static DisplayMode = {\n    DAY: 1,\n    WEEK: 2,\n    MONTH: 3,\n    WORK_WEEK: 4\n  };\n\n  /**\n   * Used as a multiplier in date calculations back- and forward (in time).\n   */\n  static Direction = {\n    BACKWARD: -1,\n    FORWARD: 1\n  };\n\n  getConfiguredNumberOfHourDivisions() {\n    return 2;\n  }\n\n  getConfiguredHeightPerDivision() {\n    return 30;\n  }\n\n  getConfiguredStartHour() {\n    return 6;\n  }\n\n  _isDay() {\n    return this.displayMode === Calendar.DisplayMode.DAY;\n  }\n\n  _isWeek() {\n    return this.displayMode === Calendar.DisplayMode.WEEK;\n  }\n\n  _isMonth() {\n    return this.displayMode === Calendar.DisplayMode.MONTH;\n  }\n\n  _isWorkWeek() {\n    return this.displayMode === Calendar.DisplayMode.WORK_WEEK;\n  }\n\n  /**\n   * @override\n   */\n  _createKeyStrokeContext() {\n    return new KeyStrokeContext();\n  }\n\n  _init(model) {\n    super._init(model);\n    this._yearPanel = scout.create('YearPanel', {\n      parent: this\n    });\n    this._yearPanel.on('dateSelect', this._onYearPanelDateSelect.bind(this));\n    this.modesMenu = scout.create('CalendarModesMenu', {\n      parent: this,\n      visible: false,\n      displayMode: this.displayMode\n    });\n    this._setSelectedDate(model.selectedDate);\n    this._setDisplayMode(model.displayMode);\n    this._setMenuInjectionTarget(model.menuInjectionTarget);\n    this._exactRange = this._calcExactRange();\n    this._yearPanel.setViewRange(this._exactRange);\n    this.viewRange = this._calcViewRange();\n  }\n\n  setSelectedDate(date) {\n    this.setProperty('selectedDate', date);\n  }\n\n  _setSelectedDate(date) {\n    date = dates.ensure(date);\n    this._setProperty('selectedDate', date);\n    this._yearPanel.selectDate(this.selectedDate);\n  }\n\n  setDisplayMode(displayMode) {\n    if (objects.equals(this.displayMode, displayMode)) {\n      return;\n    }\n    var oldDisplayMode = this.displayMode;\n    this._setDisplayMode(displayMode);\n    if (this.rendered) {\n      this._renderDisplayMode(oldDisplayMode);\n    }\n  }\n\n  _setDisplayMode(displayMode) {\n    this._setProperty('displayMode', displayMode);\n    this._yearPanel.setDisplayMode(this.displayMode);\n    this.modesMenu.setDisplayMode(displayMode);\n    if (this._isWorkWeek()) {\n      // change date if selectedDate is on a weekend\n      var p = this._dateParts(this.selectedDate, true);\n      if (p.day > 4) {\n        this.setSelectedDate(new Date(p.year, p.month, p.date - p.day + 4));\n      }\n    }\n  }\n\n  _renderDisplayMode(oldDisplayMode) {\n    if (this.rendering) {\n      // only do it on property changes\n      return;\n    }\n    this._updateModel(false, true);\n\n    // only render if components have another layout\n    if (oldDisplayMode === Calendar.DisplayMode.MONTH || this.displayMode === Calendar.DisplayMode.MONTH) {\n      this._renderComponents();\n      this.needsScrollToStartHour = true;\n    }\n  }\n\n  _setViewRange(viewRange) {\n    viewRange = DateRange.ensure(viewRange);\n    this._setProperty('viewRange', viewRange);\n  }\n\n  _setMenus(menus) {\n    if (this._checkMenuInjectionTarget(this.menuInjectionTarget)) {\n      var originalMenus = this._removeInjectedMenus(this.menuInjectionTarget, this.menus);\n      this.menuInjectionTarget.setMenus(menus.concat(originalMenus));\n    }\n    this._setProperty('menus', menus);\n  }\n\n  _setMenuInjectionTarget(menuInjectionTarget) {\n    if (objects.isString(menuInjectionTarget)) {\n      menuInjectionTarget = scout.widget(menuInjectionTarget);\n    }\n    // Remove injected menus and installed listener from old injection target\n    if (this._checkMenuInjectionTarget(this.menuInjectionTarget)) {\n      menuInjectionTarget.off('propertyChange:menus', this._menuInjectionTargetMenusChangedHandler);\n      var originalMenus = this._removeInjectedMenus(this.menuInjectionTarget, this.menus);\n      this.menuInjectionTarget.setMenus(originalMenus);\n    }\n    if (this._checkMenuInjectionTarget(menuInjectionTarget)) {\n      menuInjectionTarget.setMenus(this.menus.concat(menuInjectionTarget.menus));\n      // Listen for menu changes on the injection target. Re inject menus into target if the menus have been altered.\n      this._menuInjectionTargetMenusChangedHandler = menuInjectionTarget.on('propertyChange:menus',\n        function(evt) {\n          if (this.menuInjectionTarget.menus.some(function(element) {\n            return this.menus.includes(element);\n          }.bind(this))) {\n            // Menus have already been injected => Do nothing\n            return;\n          }\n          this.menuInjectionTarget.setMenus(this.menus.concat(this.menuInjectionTarget.menus));\n        }.bind(this)\n      );\n    }\n    this._setProperty('menuInjectionTarget', menuInjectionTarget);\n  }\n\n  _checkMenuInjectionTarget(menuInjectionTarget) {\n    return menuInjectionTarget instanceof GroupBox;\n  }\n\n  _removeInjectedMenus(menuInjectionTarget, injectedMenus) {\n    return menuInjectionTarget.menus.filter(function(element) {\n      return !injectedMenus.includes(element);\n    });\n  }\n\n  _render() {\n    this.$container = this.$parent.appendDiv('calendar');\n\n    var layout = new CalendarLayout(this);\n    this.htmlComp = HtmlComponent.install(this.$container, this.session);\n    this.htmlComp.setLayout(layout);\n\n    // main elements\n    this.$header = this.$container.appendDiv('calendar-header');\n    this.$headerRow1 = this.$header.appendDiv('calendar-header-row first');\n    this.$headerRow2 = this.$header.appendDiv('calendar-header-row last');\n    this._yearPanel.render();\n\n    this.$grids = this.$container.appendDiv('calendar-grids');\n    this.$topGrid = this.$grids.appendDiv('calendar-top-grid');\n    this.$grid = this.$grids.appendDiv('calendar-grid');\n\n    this.$list = this.$container.appendDiv('calendar-list-container').appendDiv('calendar-list');\n    this.$listTitle = this.$list.appendDiv('calendar-list-title');\n\n    // header contains range, title and commands. On small screens title will be moved to headerRow2\n    this.$range = this.$headerRow1.appendDiv('calendar-range');\n    this.$range.appendDiv('calendar-previous').click(this._onPreviousClick.bind(this));\n    this.$range.appendDiv('calendar-today', this.session.text('ui.CalendarToday')).click(this._onTodayClick.bind(this));\n    this.$range.appendDiv('calendar-next').click(this._onNextClick.bind(this));\n\n    // title\n    this.$title = this.$headerRow1.appendDiv('calendar-title');\n    this.$select = this.$title.appendDiv('calendar-select');\n    this.$progress = this.$title.appendDiv('busyindicator-label');\n\n    // commands\n    this.$commands = this.$headerRow1.appendDiv('calendar-commands');\n    this.$commands.appendDiv('calendar-mode first', this.session.text('ui.CalendarDay')).attr('data-mode', Calendar.DisplayMode.DAY).click(this._onDisplayModeClick.bind(this));\n    this.$commands.appendDiv('calendar-mode', this.session.text('ui.CalendarWorkWeek')).attr('data-mode', Calendar.DisplayMode.WORK_WEEK).click(this._onDisplayModeClick.bind(this));\n    this.$commands.appendDiv('calendar-mode', this.session.text('ui.CalendarWeek')).attr('data-mode', Calendar.DisplayMode.WEEK).click(this._onDisplayModeClick.bind(this));\n    this.$commands.appendDiv('calendar-mode last', this.session.text('ui.CalendarMonth')).attr('data-mode', Calendar.DisplayMode.MONTH).click(this._onDisplayModeClick.bind(this));\n    this.modesMenu.render(this.$commands);\n    this.$commands.appendDiv('calendar-toggle-year').click(this._onYearClick.bind(this));\n    this.$commands.appendDiv('calendar-toggle-list').click(this._onListClick.bind(this));\n\n    // Append the top grid (day/week views)\n    var $weekHeader = this.$topGrid.appendDiv('calendar-week-header');\n    $weekHeader.appendDiv('calendar-week-name');\n    for (var dayTop = 0; dayTop < 7; dayTop++) {\n      $weekHeader.appendDiv('calendar-day-name')\n        .data('day', dayTop);\n    }\n\n    this.$topGrid.appendDiv('calendar-week-task').attr('data-axis-name', this.session.text('ui.CalendarDay'));\n    var $weekTopGridDays = this.$topGrid.appendDiv('calendar-week-allday-container');\n    $weekTopGridDays.appendDiv('calendar-week-name');\n\n    var dayContextMenuCallback = this._onDayContextMenu.bind(this);\n    for (var dayBottom = 0; dayBottom < 7; dayBottom++) {\n      $weekTopGridDays.appendDiv('calendar-day')\n        .addClass('calendar-scrollable-components')\n        .data('day', dayBottom)\n        .on('contextmenu', dayContextMenuCallback);\n    }\n\n    for (var w = 1; w < 7; w++) {\n      var $w = this.$grid.appendDiv('calendar-week');\n      for (var d = 0; d < 8; d++) {\n        var $d = $w.appendDiv();\n        if (w > 0 && d === 0) {\n          $d.addClass('calendar-week-name');\n        } else if (w > 0 && d > 0) {\n          $d.addClass('calendar-day')\n            .data('day', d)\n            .data('week', w)\n            .on('contextmenu', dayContextMenuCallback);\n        }\n      }\n    }\n\n    // click event on all day and children elements\n    var mousedownCallbackWithTime = this._onDayMouseDown.bind(this, true);\n    this.$grid.find('.calendar-day').on('mousedown', mousedownCallbackWithTime);\n    var mousedownCallback = this._onDayMouseDown.bind(this, false);\n    this.$topGrid.find('.calendar-day').on('mousedown', mousedownCallback);\n\n    this._updateScreen(false, false);\n  }\n\n  _renderProperties() {\n    super._renderProperties();\n    this._renderComponents();\n    this._renderSelectedComponent();\n    this._renderLoadInProgress();\n    this._renderDisplayMode();\n  }\n\n  _renderComponents() {\n    this.components.sort(this._sortFromTo);\n    this.components.forEach(component => component.remove());\n    this.components.forEach(component => component.render());\n    this._arrangeComponents();\n    this._updateListPanel();\n  }\n\n  _renderSelectedComponent() {\n    if (this.selectedComponent) {\n      this.selectedComponent.setSelected(true);\n    }\n  }\n\n  _renderLoadInProgress() {\n    this.$progress.setVisible(this.loadInProgress);\n  }\n\n  updateScrollPosition(animate) {\n    if (!this.rendered) {\n      // Execute delayed because table may be not layouted yet\n      this.session.layoutValidator.schedulePostValidateFunction(this._updateScrollPosition.bind(this, true, animate));\n    } else {\n      this._updateScrollPosition(true, animate);\n    }\n  }\n\n  _updateScrollPosition(scrollToInitialTime, animate) {\n    if (this._isMonth()) {\n      this._scrollToSelectedComponent(animate);\n    } else {\n      if (this.selectedComponent) {\n        if (this.selectedComponent.fullDay) {\n          this._scrollToSelectedComponent(animate); // scroll top-grid to selected component\n          if (scrollToInitialTime) {\n            this._scrollToInitialTime(animate); // scroll grid to initial time\n          }\n        } else {\n          var date = dates.parseJsonDate(this.selectedComponent.fromDate, this.selectedComponent);\n          var topPercent = this._dayPosition(date.getHours(), date.getMinutes()) / 100;\n          var topPos = this.heightPerDay * topPercent;\n          scrollbars.scrollTop(this.$grid, topPos - this.spaceBeforeScrollTop, {\n            animate: animate\n          });\n        }\n      } else if (scrollToInitialTime) {\n        this._scrollToInitialTime(animate);\n      }\n    }\n  }\n\n  _scrollToSelectedComponent(animate) {\n    if (this.selectedComponent && this.selectedComponent._$parts[0] && this.selectedComponent._$parts[0].parent() && this.selectedComponent._$parts[0].isVisible()) {\n      scrollbars.scrollTo(this.selectedComponent._$parts[0].parent(), this.selectedComponent._$parts[0], {\n        animate: animate\n      });\n    }\n  }\n\n  _scrollToInitialTime(animate) {\n    this.needsScrollToStartHour = false;\n    if (!this._isMonth()) {\n      if (this.selectedComponent && !this.selectedComponent.fullDay) {\n        var date = dates.parseJsonDate(this.selectedComponent.fromDate);\n        var topPercent = this._dayPosition(date.getHours(), date.getMinutes()) / 100;\n        var topPos = this.heightPerDay * topPercent;\n        scrollbars.scrollTop(this.$grid, topPos - this.spaceBeforeScrollTop, {\n          animate: animate\n        });\n      } else {\n        var scrollTargetTop = this.heightPerHour * this.startHour;\n        scrollbars.scrollTop(this.$grid, scrollTargetTop - this.spaceBeforeScrollTop, {\n          animate: animate\n        });\n      }\n    }\n  }\n\n  /* -- basics, events -------------------------------------------- */\n\n  _onPreviousClick(event) {\n    this._navigateDate(Calendar.Direction.BACKWARD);\n  }\n\n  _onNextClick(event) {\n    this._navigateDate(Calendar.Direction.FORWARD);\n  }\n\n  _dateParts(date, modulo) {\n    var parts = {\n      year: date.getFullYear(),\n      month: date.getMonth(),\n      date: date.getDate(),\n      day: date.getDay()\n    };\n    if (modulo) {\n      parts.day = (date.getDay() + 6) % 7;\n    }\n    return parts;\n  }\n\n  _navigateDate(direction) {\n    this.selectedDate = this._calcSelectedDate(direction);\n    this._updateModel(true, false);\n  }\n\n  _calcSelectedDate(direction) {\n    var p = this._dateParts(this.selectedDate),\n      dayOperand = direction,\n      weekOperand = direction * 7,\n      monthOperand = direction;\n\n    if (this._isDay()) {\n      return new Date(p.year, p.month, p.date + dayOperand);\n    } else if (this._isWeek() || this._isWorkWeek()) {\n      return new Date(p.year, p.month, p.date + weekOperand);\n    } else if (this._isMonth()) {\n      return dates.shift(this.selectedDate, 0, monthOperand, 0);\n    }\n  }\n\n  _updateModel(updateTopGrid, animate) {\n    this._exactRange = this._calcExactRange();\n    this._yearPanel.setViewRange(this._exactRange);\n    this.viewRange = this._calcViewRange();\n    this.trigger('modelChange');\n    this._updateScreen(updateTopGrid, animate);\n  }\n\n  /**\n   * Calculates exact date range of displayed components based on selected-date.\n   */\n  _calcExactRange() {\n    var from, to,\n      p = this._dateParts(this.selectedDate, true);\n\n    if (this._isDay()) {\n      from = new Date(p.year, p.month, p.date);\n      to = new Date(p.year, p.month, p.date + 1);\n    } else if (this._isWeek()) {\n      from = new Date(p.year, p.month, p.date - p.day);\n      to = new Date(p.year, p.month, p.date - p.day + 6);\n    } else if (this._isMonth()) {\n      from = new Date(p.year, p.month, 1);\n      to = new Date(p.year, p.month + 1, 0);\n    } else if (this._isWorkWeek()) {\n      from = new Date(p.year, p.month, p.date - p.day);\n      to = new Date(p.year, p.month, p.date - p.day + 4);\n    } else {\n      throw new Error('invalid value for displayMode');\n    }\n\n    return new DateRange(from, to);\n  }\n\n  /**\n   * Calculates the view-range, which is what the user sees in the UI.\n   * The view-range is wider than the exact-range in the monthly mode,\n   * as it contains also dates from the previous and next month.\n   */\n  _calcViewRange() {\n    var viewFrom = calcViewFromDate(this._exactRange.from),\n      viewTo = calcViewToDate(viewFrom);\n    return new DateRange(viewFrom, viewTo);\n\n    function calcViewFromDate(fromDate) {\n      var i, tmpDate = new Date(fromDate.valueOf());\n      for (i = 0; i < 42; i++) {\n        tmpDate.setDate(tmpDate.getDate() - 1);\n        if ((tmpDate.getDay() === 1) && tmpDate.getMonth() !== fromDate.getMonth()) {\n          return tmpDate;\n        }\n      }\n      throw new Error('failed to calc viewFrom date');\n    }\n\n    function calcViewToDate(fromDate) {\n      var i, tmpDate = new Date(fromDate.valueOf());\n      for (i = 0; i < 42; i++) {\n        tmpDate.setDate(tmpDate.getDate() + 1);\n      }\n      return tmpDate;\n    }\n  }\n\n  _onTodayClick(event) {\n    this.selectedDate = new Date();\n    this._updateModel(true, false);\n  }\n\n  _onDisplayModeClick(event) {\n    var displayMode = $(event.target).data('mode');\n    this.setDisplayMode(displayMode);\n  }\n\n  _onYearClick(event) {\n    this._showYearPanel = !this._showYearPanel;\n    this._updateScreen(true, true);\n  }\n\n  _onListClick(event) {\n    this._showListPanel = !this._showListPanel;\n    this._updateScreen(false, true);\n  }\n\n  _onDayMouseDown(withTime, event) {\n    var selectedDate = new Date($(event.delegateTarget).data('date'));\n    if (withTime && (this._isDay() || this._isWeek() || this._isWorkWeek())) {\n      var seconds = Math.floor(event.originalEvent.layerY / this.heightPerDivision) / this.numberOfHourDivisions * 60 * 60;\n      if (seconds < 60 * 60 * 24) {\n        selectedDate.setSeconds(seconds);\n      }\n    }\n    this._setSelection(selectedDate, null, false);\n  }\n\n  /**\n   * @param selectedDate\n   * @param selectedComponent may be null when a day is selected\n   */\n  _setSelection(selectedDate, selectedComponent, updateScrollPosition) {\n    var changed = false;\n\n    // selected date\n    if (dates.compareDays(this.selectedDate, selectedDate) !== 0) {\n      changed = true;\n      $('.calendar-day', this.$container).each(function(index, element) {\n        var $day = $(element),\n          date = $day.data('date');\n        if (!date || dates.compareDays(date, this.selectedDate) === 0) {\n          $day.select(false); // de-select old date\n        } else if (dates.compareDays(date, selectedDate) === 0) {\n          $day.select(true); // select new date\n        }\n      }.bind(this));\n      this.selectedDate = selectedDate;\n    }\n\n    // selected component / part (may be null)\n    if (this.selectedComponent !== selectedComponent) {\n      changed = true;\n      if (this.selectedComponent) {\n        this.selectedComponent.setSelected(false);\n      }\n      if (selectedComponent) {\n        selectedComponent.setSelected(true);\n      }\n      this.selectedComponent = selectedComponent;\n    }\n\n    if (changed) {\n      this.trigger('selectionChange');\n      this._updateListPanel();\n      if (updateScrollPosition) {\n        this._updateScrollPosition(false, true);\n      }\n    }\n\n    if (this._showYearPanel) {\n      this._yearPanel.selectDate(this.selectedDate);\n    }\n  }\n\n  /* --  set display mode and range ------------------------------------- */\n\n  _updateScreen(updateTopGrid, animate) {\n    $.log.isInfoEnabled() && $.log.info('(Calendar#_updateScreen)');\n\n    // select mode\n    $('.calendar-mode', this.$commands).select(false);\n    $('[data-mode=\"' + this.displayMode + '\"]', this.$commands).select(true);\n\n    // remove selected day\n    $('.selected', this.$grid).select(false);\n\n    // layout grid\n    this.layoutLabel();\n    this.layoutSize(animate);\n    this.layoutAxis();\n\n    if (this._showYearPanel) {\n      this._yearPanel.selectDate(this.selectedDate);\n    }\n\n    this._updateListPanel();\n    this._updateScrollbars(this.$grid, animate);\n    if (updateTopGrid && !this._isMonth()) {\n      this._updateTopGrid();\n    }\n  }\n\n  layoutSize(animate) {\n    // reset animation sizes\n    $('div', this.$container).removeData(['new-width', 'new-height']);\n\n    if (this._isMonth()) {\n      this.$topGrid.addClass('calendar-top-grid-short');\n      this.$grid.removeClass('calendar-grid-short');\n    } else {\n      this.$topGrid.removeClass('calendar-top-grid-short');\n      this.$grid.addClass('calendar-grid-short');\n    }\n\n    // init vars (Selected: Day)\n    var $selected = $('.selected', this.$grid),\n      $topSelected = $('.selected', this.$topGrid),\n      containerW = this.$container.width(),\n      gridH = this.$grid.height(),\n      gridW = containerW - 20; // containerW - @root-group-box-padding-right\n\n    // show or hide year\n    $('.calendar-toggle-year', this.$commands).select(this._showYearPanel);\n    if (this._showYearPanel) {\n      this._yearPanel.$container.data('new-width', this.calendarToggleYearWidth);\n      gridW -= this.calendarToggleYearWidth;\n      containerW -= this.calendarToggleYearWidth;\n    } else {\n      this._yearPanel.$container.data('new-width', 0);\n    }\n\n    // show or hide work list\n    $('.calendar-toggle-list', this.$commands).select(this._showListPanel);\n    if (this._showListPanel) {\n      this.$list.parent().data('new-width', this.calendarToggleListWidth);\n      gridW -= this.calendarToggleListWidth;\n      containerW -= this.calendarToggleListWidth;\n    } else {\n      this.$list.parent().data('new-width', 0);\n    }\n\n    // basic grid width\n    this.$grids.data('new-width', containerW);\n\n    var $weeksToHide = $(); // Empty\n    var $allWeeks = $('.calendar-week', this.$grid);\n    // layout week\n\n    if (this._isDay() || this._isWeek() || this._isWorkWeek()) {\n      $allWeeks.removeClass('calendar-week-noborder');\n      // Parent of selected (Day) is a week\n      var selectedWeek = $selected.parent();\n      $weeksToHide = $allWeeks.not(selectedWeek); // Hide all (other) weeks delayed, height will animate to zero\n      $weeksToHide.data('new-height', 0);\n      $weeksToHide.removeClass('invisible');\n      selectedWeek.data('new-height', this.heightPerDay);\n      selectedWeek.addClass('calendar-week-noborder');\n      selectedWeek.removeClass('hidden invisible'); // Current week must be shown\n      $('.calendar-day', selectedWeek).data('new-height', this.heightPerDay);\n      // Hide the week-number in the lower grid\n      $('.calendar-week-name', this.$grid).addClass('invisible'); // Keep the reserved space\n      $('.calendar-week-allday-container', this.$topGrid).removeClass('hidden');\n      $('.calendar-week-task', this.$topGrid).removeClass('hidden');\n    } else {\n      // Month\n      var newHeightMonth = gridH / this.monthViewNumberOfWeeks;\n      $allWeeks.removeClass('calendar-week-noborder invisible hidden');\n      $allWeeks.eq(0).addClass('calendar-week-noborder');\n      $allWeeks.data('new-height', newHeightMonth);\n      $('.calendar-day', this.$grid).data('new-height', newHeightMonth);\n      var $allDays = $('.calendar-week-name', this.$grid);\n      $allDays.removeClass('hidden invisible');\n      $allDays.data('new-height', newHeightMonth);\n      $('.calendar-week-allday-container', this.$topGrid).addClass('hidden');\n      $('.calendar-week-task', this.$topGrid).addClass('hidden');\n    }\n\n    // layout days\n    var contentW = gridW - 45; // gridW - @calendar-week-name-width\n    if (this._isDay()) {\n      $('.calendar-day-name, .calendar-day', this.$topGrid).data('new-width', 0);\n      $('.calendar-day', this.$grid).data('new-width', 0);\n      $('.calendar-day-name:nth-child(' + ($topSelected.index() + 1) + ')', this.$topGrid)\n        .data('new-width', contentW);\n      $('.calendar-day:nth-child(' + ($topSelected.index() + 1) + ')', this.$topGrid).data('new-width', contentW);\n      $('.calendar-day:nth-child(' + ($selected.index() + 1) + ')', this.$grid).data('new-width', contentW);\n    } else if (this._isWorkWeek()) {\n      this.$topGrid.find('.calendar-day-name').data('new-width', 0);\n      this.$grids.find('.calendar-day').data('new-width', 0);\n      var newWidthWorkWeek = Math.round(contentW / this.workDayIndices.length);\n      $('.calendar-day-name:nth-child(-n+6), ' +\n        '.calendar-day:nth-child(-n+6)', this.$topGrid)\n        .data('new-width', newWidthWorkWeek);\n      $('.calendar-day:nth-child(-n+6)', this.$grid)\n        .data('new-width', newWidthWorkWeek);\n    } else if (this._isMonth() || this._isWeek()) {\n      var newWidthMonthOrWeek = Math.round(contentW / 7);\n      this.$grids.find('.calendar-day').data('new-width', newWidthMonthOrWeek);\n      this.$topGrid.find('.calendar-day-name').data('new-width', newWidthMonthOrWeek);\n    }\n\n    // layout components\n    if (this._isMonth()) {\n      $('.component-month', this.$grid).each(function() {\n        var $comp = $(this),\n          $day = $comp.closest('.calendar-day');\n        $comp.toggleClass('compact', $day.data('new-width') < CalendarComponent.MONTH_COMPACT_THRESHOLD);\n      });\n    }\n\n    var afterLayoutCallback = this._afterLayout.bind(this);\n\n    // animate old to new sizes\n    $('div', this.$container).each(function() {\n      var $e = $(this),\n        w = $e.data('new-width'),\n        h = $e.data('new-height');\n      $e.stop(false, true);\n\n      if (w !== undefined && w !== $e.outerWidth()) {\n        if (animate) {\n          $e.animateAVCSD('width', w, afterLayoutCallback.bind(this, $e, animate));\n        } else {\n          $e.css('width', w);\n          afterLayoutCallback($e, animate);\n        }\n      }\n      if (h !== undefined && h !== $e.outerHeight()) {\n        if (h > 0) {\n          $e.removeClass('hidden');\n        }\n        if (animate) {\n          $e.animateAVCSD('height', h, function() {\n            if (h === 0) {\n              $e.addClass('hidden');\n            }\n            afterLayoutCallback($e, animate);\n          });\n        } else {\n          $e.css('height', h);\n          if (h === 0) {\n            $e.addClass('hidden');\n          }\n          afterLayoutCallback($e, animate);\n        }\n      }\n    });\n  }\n\n  _afterLayout($parent, animate) {\n    this._updateScrollbars($parent, animate);\n    this._updateWeekdayNames();\n  }\n\n  _updateWeekdayNames() {\n    // set day-name (based on width of shown column)\n    var weekdayWidth = this.$topGrid.width(),\n      weekdays;\n\n    if (this._isDay()) {\n      weekdayWidth /= 1;\n    } else if (this._isWorkWeek()) {\n      weekdayWidth /= this.workDayIndices.length;\n    } else if (this._isWeek()) {\n      weekdayWidth /= 7;\n    } else if (this._isMonth()) {\n      weekdayWidth /= 7;\n    }\n\n    if (weekdayWidth > 90) {\n      weekdays = this.session.locale.dateFormat.symbols.weekdaysOrdered;\n    } else {\n      weekdays = this.session.locale.dateFormat.symbols.weekdaysShortOrdered;\n    }\n\n    $('.calendar-day-name', this.$topGrid).each(function(index) {\n      $(this).attr('data-day-name', weekdays[index]);\n    });\n  }\n\n  _updateScrollbars($parent, animate) {\n    var $scrollables = $('.calendar-scrollable-components', $parent);\n    $scrollables.each(function() {\n      var $scrollable = $(this);\n      scrollbars.update($scrollable, true);\n    });\n    this.updateScrollPosition(animate);\n  }\n\n  _updateTopGrid() {\n    $('.calendar-component', this.$topGrid).each((index, part) => {\n      let component = $(part).data('component');\n      if (component) {\n        component.remove();\n      }\n    });\n    var allDayComponents = this.components.filter(component => component.fullDay);\n    // first remove all components and add them from scratch\n    allDayComponents.forEach(component => component.remove());\n    allDayComponents.forEach(component => component.render());\n    this._updateScrollbars(this.$topGrid, false);\n  }\n\n  layoutYearPanel() {\n    if (this._showYearPanel) {\n      scrollbars.update(this._yearPanel.$yearList);\n      this._yearPanel._scrollYear();\n    }\n  }\n\n  layoutLabel() {\n    var text, $dates, $topGridDates,\n      exFrom = this._exactRange.from,\n      exTo = this._exactRange.to;\n\n    // set range text\n    if (this._isDay()) {\n      text = this._format(exFrom, 'd. MMMM yyyy');\n    } else if (this._isWorkWeek() || this._isWeek()) {\n      var toText = this.session.text('ui.to');\n      if (exFrom.getMonth() === exTo.getMonth()) {\n        text = strings.join(' ', this._format(exFrom, 'd.'), toText, this._format(exTo, 'd. MMMM yyyy'));\n      } else if (exFrom.getFullYear() === exTo.getFullYear()) {\n        text = strings.join(' ', this._format(exFrom, 'd. MMMM'), toText, this._format(exTo, 'd. MMMM yyyy'));\n      } else {\n        text = strings.join(' ', this._format(exFrom, 'd. MMMM yyyy'), toText, this._format(exTo, 'd. MMMM yyyy'));\n      }\n\n    } else if (this._isMonth()) {\n      text = this._format(exFrom, 'MMMM yyyy');\n    }\n    this.$select.text(text);\n\n    // prepare to set all day date and mark selected one\n    $dates = $('.calendar-day', this.$grid);\n\n    var w, d, cssClass,\n      currentMonth = this._exactRange.from.getMonth(),\n      date = new Date(this.viewRange.from.valueOf());\n\n    // Main grid: loop all days and set value and class\n    for (w = 0; w < this.monthViewNumberOfWeeks; w++) {\n      for (d = 0; d < 7; d++) {\n        cssClass = '';\n        if (this.workDayIndices.indexOf(date.getDay()) === -1) {\n          cssClass = date.getMonth() !== currentMonth ? ' weekend-out' : ' weekend';\n        } else {\n          cssClass = date.getMonth() !== currentMonth ? ' out' : '';\n        }\n        if (dates.isSameDay(date, new Date())) {\n          cssClass += ' now';\n        }\n        if (dates.isSameDay(date, this.selectedDate)) {\n          cssClass += ' selected';\n        }\n        if (!this._isMonth()) {\n          cssClass += ' calendar-no-label'; // If we're not in the month view, number is shown on top\n        }\n\n        // adjust position for days between 10 and 19 (because \"1\" is narrower than \"0\" or \"2\")\n        if (date.getDate() > 9 && date.getDate() < 20) {\n          cssClass += ' center-nice';\n        }\n\n        text = this._format(date, 'dd');\n        $dates.eq(w * 7 + d)\n          .removeClass('weekend-out weekend out selected now calendar-no-label')\n          .addClass(cssClass)\n          .attr('data-day-name', text)\n          .data('date', new Date(date.valueOf()));\n        date.setDate(date.getDate() + 1);\n      }\n    }\n\n    // Top grid: loop days of one calendar week and set value and class\n    if (!this._isMonth()) {\n      $topGridDates = $('.calendar-day', this.$topGrid);\n      // From the view range, find the week we are in\n      var exactDate = new Date(this._exactRange.from.valueOf());\n\n      // Find first day of week.\n      date = dates.firstDayOfWeek(exactDate, 1);\n\n      for (d = 0; d < 7; d++) {\n        cssClass = '';\n        if (this.workDayIndices.indexOf(date.getDay()) === -1) {\n          cssClass = date.getMonth() !== currentMonth ? ' weekend-out' : ' weekend';\n        } else {\n          cssClass = date.getMonth() !== currentMonth ? ' out' : '';\n        }\n        if (dates.isSameDay(date, new Date())) {\n          cssClass += ' now';\n        }\n        if (dates.isSameDay(date, this.selectedDate)) {\n          cssClass += ' selected';\n        }\n\n        text = this._format(date, 'dd');\n        $topGridDates.eq(d)\n          .removeClass('weekend-out weekend out selected now')\n          .addClass(cssClass)\n          .attr('data-day-name', text)\n          .data('date', new Date(date.valueOf()));\n\n        date.setDate(date.getDate() + 1);\n      }\n    }\n\n  }\n\n  layoutAxis() {\n    var $e;\n\n    // remove old axis\n    $('.calendar-week-axis, .calendar-week-task', this.$grid).remove();\n\n    // set weekname\n    var session = this.session;\n\n    $('.calendar-week-name', this.$container).each(function(index) {\n      if (index > 0) {\n        $e = $(this);\n        $e.text(session.text('ui.CW', dates.weekInYear($e.next().data('date'))));\n      }\n    });\n\n    // day schedule\n    if (!this._isMonth()) {\n      // Parent of selected day: Week\n      //    var $parent = $selected.parent();\n      var $parent = $('.calendar-week', this.$grid);\n\n      for (var h = 0; h < 24; h++) { // Render lines for each hour\n        var paddedHour = ('00' + h).slice(-2);\n        var topPos = h * this.heightPerHour;\n        $parent.appendDiv('calendar-week-axis hour' + (h === 0 ? ' first' : '')).attr('data-axis-name', paddedHour + ':00').css('top', topPos + 'px');\n\n        for (var m = 1; m < this.numberOfHourDivisions; m++) { // First one rendered above. Start at the next\n          topPos += this.heightPerDivision;\n          $parent.appendDiv('calendar-week-axis').attr('data-axis-name', '').css('top', topPos + 'px');\n        }\n      }\n    }\n  }\n\n  /* -- year events ---------------------------------------- */\n\n  _onYearPanelDateSelect(event) {\n    this.selectedDate = event.date;\n    this._updateModel(true, false);\n  }\n\n  _updateListPanel() {\n    if (this._showListPanel) {\n\n      // remove old list-components\n      this._listComponents.forEach(function(listComponent) {\n        listComponent.remove();\n      });\n\n      this._listComponents = [];\n      this._renderListPanel();\n    }\n  }\n\n  _remove() {\n    var $days = $('.calendar-day', this.$grid);\n\n    // Ensure that scrollbars are unregistered\n    for (var k = 0; k < $days.length; k++) {\n      var $day = $days.eq(k);\n      var $scrollableContainer = $day.children('.calendar-scrollable-components');\n\n      if ($scrollableContainer.length > 0) {\n        scrollbars.uninstall($scrollableContainer, this.session);\n        $scrollableContainer.remove();\n      }\n    }\n\n    super._remove();\n  }\n\n  /**\n   * Renders the panel on the left, showing all components of the selected date.\n   */\n  _renderListPanel() {\n    var listComponent, components = [];\n\n    // set title\n    this.$listTitle.text(this._format(this.selectedDate, 'd. MMMM yyyy'));\n\n    // find components to display on the list panel\n    this.components.forEach(function(component) {\n      if (belongsToSelectedDate.call(this, component)) {\n        components.push(component);\n      }\n    }.bind(this));\n\n    function belongsToSelectedDate(component) {\n      var selectedDate = dates.trunc(this.selectedDate);\n      return dates.compare(selectedDate, component.coveredDaysRange.from) >= 0 &&\n        dates.compare(selectedDate, component.coveredDaysRange.to) <= 0;\n    }\n\n    components.forEach(function(component) {\n      listComponent = new CalendarListComponent(this.selectedDate, component);\n      listComponent.render(this.$list);\n      this._listComponents.push(listComponent);\n    }.bind(this));\n  }\n\n  /* -- components, events-------------------------------------------- */\n\n  _selectedComponentChanged(component, partDay, updateScrollPosition) {\n    this._setSelection(partDay, component, updateScrollPosition);\n  }\n\n  _onDayContextMenu(event) {\n    this._showContextMenu(event, 'Calendar.EmptySpace');\n  }\n\n  _showContextMenu(event, allowedType) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    var func = function func(event, allowedType) {\n      if (!this.rendered || !this.attached) { // check needed because function is called asynchronously\n        return;\n      }\n      var filteredMenus = menus.filter(this.menus, [allowedType], true),\n        $part = $(event.currentTarget);\n      if (filteredMenus.length === 0) {\n        return;\n      }\n      var popup = scout.create('ContextMenuPopup', {\n        parent: this,\n        menuItems: filteredMenus,\n        location: {\n          x: event.pageX,\n          y: event.pageY\n        },\n        $anchor: $part\n      });\n      popup.open();\n    }.bind(this);\n\n    this.session.onRequestsDone(func, event, allowedType);\n  }\n\n  /* -- components, arrangement------------------------------------ */\n\n  _arrangeComponents() {\n    var k, j, $day, $allChildren, $children, $scrollableContainer, dayComponents, day;\n\n    var $days = $('.calendar-day', this.$grid);\n    // Main (Bottom) grid: Iterate over days\n    for (k = 0; k < $days.length; k++) {\n      $day = $days.eq(k);\n      $children = $day.children('.calendar-component:not(.component-task)');\n      $allChildren = $day.children('.calendar-component');\n      day = $day.data('date');\n\n      // Remove old element containers\n      $scrollableContainer = $day.children('.calendar-scrollable-components');\n      if ($scrollableContainer.length > 0) {\n        scrollbars.uninstall($scrollableContainer, this.session);\n        $scrollableContainer.remove();\n      }\n\n      if (this._isMonth() && $allChildren.length > 0) {\n        $scrollableContainer = $day.appendDiv('calendar-scrollable-components');\n\n        for (j = 0; j < $allChildren.length; j++) {\n          var $child = $allChildren.eq(j);\n          // non-tasks (communications) are distributed manually\n          // within the parent container in all views except the monthly view.\n          if (!this._isMonth() && !$child.hasClass('component-task')) {\n            continue;\n          }\n          $scrollableContainer.append($child);\n        }\n\n        scrollbars.install($scrollableContainer, {\n          parent: this,\n          session: this.session,\n          axis: 'y'\n        });\n      }\n\n      if (this._isMonth() && $children.length > 2) {\n        $day.addClass('many-items');\n      } else if (!this._isMonth() && $children.length > 1) {\n        // logical placement\n        dayComponents = this._getComponents($children);\n        this._arrange(dayComponents, day);\n\n        // screen placement\n        this._arrangeComponentSetPlacement($children, day);\n      }\n    }\n\n    if (this._isMonth()) {\n      this._uninstallScrollbars();\n      this.$grid.removeClass('calendar-scrollable-components');\n    } else {\n      this.$grid.addClass('calendar-scrollable-components');\n      // If we're in the non-month views, the time can scroll. Add scrollbars\n      this._installScrollbars({\n        parent: this,\n        session: this.session,\n        axis: 'y'\n      });\n\n      var $topDays = $('.calendar-scrollable-components', this.$topGrid);\n      for (k = 0; k < $topDays.length; k++) {\n        var $topDay = $topDays.eq(k);\n        scrollbars.install($topDay, {\n          parent: this,\n          session: this.session,\n          axis: 'y'\n        });\n      }\n    }\n  }\n\n  _getComponents($children) {\n    var i, $child;\n    var components = [];\n    for (i = 0; i < $children.length; i++) {\n      $child = $children.eq(i);\n      components.push($child.data('component'));\n    }\n    return components;\n  }\n\n  _sort(components) {\n    components.sort(this._sortFromTo);\n  }\n\n  /**\n   * Arrange components (stack width, stack index) per day\n   * */\n  _arrange(components, day) {\n    var i, j, c, r, k,\n      columns = [];\n\n    // ordered by from, to\n    this._sort(components);\n\n    // clear existing placement\n    for (i = 0; i < components.length; i++) {\n      c = components[i];\n      if (!c.stack) {\n        c.stack = {};\n      }\n      c.stack[day] = {};\n    }\n\n    for (i = 0; i < components.length; i++) {\n      c = components[i];\n      r = c.getPartDayPosition(day); // Range [from,to]\n\n      // reduce number of columns, if all components end before this one\n      if (columns.length > 0 && this._allEndBefore(columns, r.from, day)) {\n        columns = [];\n      }\n\n      // replace an component that ends before and can be replaced\n      k = this._findReplacableColumn(columns, r.from, day);\n\n      // insert\n      if (k >= 0) {\n        columns[k] = c;\n        c.stack[day].x = k;\n      } else {\n        columns.push(c);\n        c.stack[day].x = columns.length - 1;\n      }\n\n      // update stackW\n      for (j = 0; j < columns.length; j++) {\n        columns[j].stack[day].w = columns.length;\n      }\n    }\n  }\n\n  _allEndBefore(columns, pos, day) {\n    var i;\n    for (i = 0; i < columns.length; i++) {\n      if (!this._endsBefore(columns[i], pos, day)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _findReplacableColumn(columns, pos, day) {\n    var j;\n    for (j = 0; j < columns.length; j++) {\n      if (this._endsBefore(columns[j], pos, day)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  _endsBefore(component, pos, day) {\n    return component.getPartDayPosition(day).to <= pos;\n  }\n\n  _arrangeComponentSetPlacement($children, day) {\n    var i, $child, stack;\n\n    // loop and place based on data\n    for (i = 0; i < $children.length; i++) {\n      $child = $children.eq(i);\n      stack = $child.data('component').stack[day];\n\n      // make last element smaller\n      $child\n        .css('width', 100 / stack.w + '%')\n        .css('left', stack.x * 100 / stack.w + '%');\n    }\n  }\n\n  get$Scrollable() {\n    return this.$grid;\n  }\n\n  /* -- helper ---------------------------------------------------- */\n\n  _dayPosition(hour, minutes) {\n    // Height position in percent of total calendar\n\n    var pos;\n    if (hour < 0) {\n      pos = 0; // All day event\n    } else {\n      pos = 100 / (24 * 60) * (hour * 60 + minutes);\n    }\n    return Math.round(pos * 100) / 100;\n  }\n\n  _hourToNumber(hour) {\n    var splits = hour.split(':');\n    return parseFloat(splits[0]) + parseFloat(splits[1]) / 60;\n  }\n\n  _format(date, pattern) {\n    return dates.format(date, this.session.locale, pattern);\n  }\n\n  _sortFromTo(c1, c2) {\n    var from1 = dates.parseJsonDate(c1.fromDate);\n    var from2 = dates.parseJsonDate(c2.fromDate);\n    var diffFrom = dates.compare(from1, from2);\n    if (diffFrom !== 0) {\n      return diffFrom;\n    }\n    var to1 = dates.parseJsonDate(c1.toDate);\n    var to2 = dates.parseJsonDate(c2.toDate);\n    var diffTo = dates.compare(to1, to2);\n    if (diffTo !== 0) {\n      return diffTo;\n    }\n    var s1 = c1.item && c1.item.subject ? c1.item.subject : '';\n    var s2 = c2.item && c2.item.subject ? c2.item.subject : '';\n    return s1.localeCompare(s2);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}