{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport { ColumnUserFilter, dates, TableMatrix } from '../../index';\nimport $ from 'jquery';\n\nvar DateColumnUserFilter = /*#__PURE__*/function (_ColumnUserFilter) {\n  _inherits(DateColumnUserFilter, _ColumnUserFilter);\n\n  var _super = _createSuper(DateColumnUserFilter);\n\n  function DateColumnUserFilter() {\n    var _this;\n\n    _classCallCheck(this, DateColumnUserFilter);\n\n    _this = _super.call(this);\n    _this.dateFrom;\n    _this.dateFromField;\n    _this.dateTo;\n    _this.dateToField;\n    _this.hasFilterFields = true;\n    return _this;\n  }\n  /**\n   * @override TableUserFilter.js\n   */\n\n\n  _createClass(DateColumnUserFilter, [{\n    key: \"_init\",\n    value: function _init(model) {\n      _get(_getPrototypeOf(DateColumnUserFilter.prototype), \"_init\", this).call(this, model);\n\n      this.dateFrom = dates.parseJsonDate(this.dateFrom);\n      this.dateTo = dates.parseJsonDate(this.dateTo);\n    }\n    /**\n     * @override ColumnUserFilter.js\n     */\n\n  }, {\n    key: \"axisGroup\",\n    value: function axisGroup() {\n      if (this.column.hasDate) {\n        // Default grouping for date columns is year\n        return TableMatrix.DateGroup.YEAR;\n      } // No grouping for time columns\n\n\n      return TableMatrix.DateGroup.NONE;\n    }\n    /**\n     * @override ColumnUserFilter.js\n     */\n\n  }, {\n    key: \"createFilterAddedEventData\",\n    value: function createFilterAddedEventData() {\n      var data = _get(_getPrototypeOf(DateColumnUserFilter.prototype), \"createFilterAddedEventData\", this).call(this);\n\n      data.dateFrom = dates.toJsonDate(this.dateFrom);\n      data.dateTo = dates.toJsonDate(this.dateTo);\n      return data;\n    }\n    /**\n     * @override ColumnUserFilter.js\n     */\n\n  }, {\n    key: \"fieldsFilterActive\",\n    value: function fieldsFilterActive() {\n      return this.dateFrom || this.dateTo;\n    }\n    /**\n     * @override ColumnUserFilter.js\n     */\n\n  }, {\n    key: \"acceptByFields\",\n    value: function acceptByFields(key, normKey, row) {\n      // if date is empty and dateFrom/dateTo is set, the row should never match\n      if (!key) {\n        return false;\n      }\n\n      var keyValue = key.valueOf(),\n          fromValue = this.dateFrom ? this.dateFrom.valueOf() : null,\n          // Shift the toValue to 1ms before midnight/next day. Thus any time of the selected day is accepted.\n      toValue = this.dateTo ? dates.shift(this.dateTo, 0, 0, 1).valueOf() - 1 : null;\n\n      if (fromValue && toValue) {\n        return keyValue >= fromValue && keyValue <= toValue;\n      } else if (fromValue) {\n        return keyValue >= fromValue;\n      } else if (toValue) {\n        return keyValue <= toValue;\n      } // acceptByFields is only called when filter fields are active\n\n\n      throw new Error('illegal state');\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"filterFieldsTitle\",\n    value: function filterFieldsTitle() {\n      return this.session.text('ui.DateRange');\n    }\n    /**\n     * @override\n     */\n\n  }, {\n    key: \"addFilterFields\",\n    value: function addFilterFields(groupBox) {\n      this.dateFromField = groupBox.addFilterField('DateField', 'ui.from');\n      this.dateFromField.setValue(this.dateFrom);\n      this.dateFromField.on('propertyChange', this._onPropertyChange.bind(this));\n      this.dateToField = groupBox.addFilterField('DateField', 'ui.to');\n      this.dateToField.setValue(this.dateTo);\n      this.dateToField.on('propertyChange', this._onPropertyChange.bind(this));\n    }\n  }, {\n    key: \"_onPropertyChange\",\n    value: function _onPropertyChange(event) {\n      if (event.propertyName !== 'value') {\n        return;\n      }\n\n      this.dateFrom = this.dateFromField.value;\n      this.dateTo = this.dateToField.value;\n      $.log.isDebugEnabled() && $.log.debug('(DateColumnUserFilter#_onAcceptInput) dateFrom=' + this.dateFrom + ' dateTo=' + this.dateTo);\n      this.triggerFilterFieldsChanged(event);\n    }\n  }, {\n    key: \"modifyFilterFields\",\n    value: function modifyFilterFields() {\n      this.dateFromField.$field.on('input', '', $.debounce(this._onInput.bind(this)));\n      this.dateToField.$field.on('input', '', $.debounce(this._onInput.bind(this)));\n    }\n  }, {\n    key: \"_onInput\",\n    value: function _onInput(event) {\n      if (!this.dateFromField.rendered) {\n        // popup has been closed in the mean time\n        return;\n      }\n\n      this.dateFrom = this.dateFromField.value;\n      this.dateTo = this.dateToField.value;\n      this.triggerFilterFieldsChanged(event);\n    }\n  }]);\n\n  return DateColumnUserFilter;\n}(ColumnUserFilter);\n\nexport { DateColumnUserFilter as default };","map":{"version":3,"sources":["C:/Tools/workspace/nightstalker/nightstalker.ui.html/node_modules/@eclipse-scout/core/src/table/userfilter/DateColumnUserFilter.js"],"names":["ColumnUserFilter","dates","TableMatrix","$","DateColumnUserFilter","dateFrom","dateFromField","dateTo","dateToField","hasFilterFields","model","parseJsonDate","column","hasDate","DateGroup","YEAR","NONE","data","toJsonDate","key","normKey","row","keyValue","valueOf","fromValue","toValue","shift","Error","session","text","groupBox","addFilterField","setValue","on","_onPropertyChange","bind","event","propertyName","value","log","isDebugEnabled","debug","triggerFilterFieldsChanged","$field","debounce","_onInput","rendered"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2014-2017 BSI Business Systems Integration AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *     BSI Business Systems Integration AG - initial API and implementation\n */\nimport {ColumnUserFilter, dates, TableMatrix} from '../../index';\nimport $ from 'jquery';\n\nexport default class DateColumnUserFilter extends ColumnUserFilter {\n\n  constructor() {\n    super();\n\n    this.dateFrom;\n    this.dateFromField;\n    this.dateTo;\n    this.dateToField;\n\n    this.hasFilterFields = true;\n  }\n\n  /**\n   * @override TableUserFilter.js\n   */\n  _init(model) {\n    super._init(model);\n    this.dateFrom = dates.parseJsonDate(this.dateFrom);\n    this.dateTo = dates.parseJsonDate(this.dateTo);\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  axisGroup() {\n    if (this.column.hasDate) {\n      // Default grouping for date columns is year\n      return TableMatrix.DateGroup.YEAR;\n    }\n    // No grouping for time columns\n    return TableMatrix.DateGroup.NONE;\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  createFilterAddedEventData() {\n    var data = super.createFilterAddedEventData();\n    data.dateFrom = dates.toJsonDate(this.dateFrom);\n    data.dateTo = dates.toJsonDate(this.dateTo);\n    return data;\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  fieldsFilterActive() {\n    return this.dateFrom || this.dateTo;\n  }\n\n  /**\n   * @override ColumnUserFilter.js\n   */\n  acceptByFields(key, normKey, row) {\n    // if date is empty and dateFrom/dateTo is set, the row should never match\n    if (!key) {\n      return false;\n    }\n\n    var\n      keyValue = key.valueOf(),\n      fromValue = this.dateFrom ? this.dateFrom.valueOf() : null,\n      // Shift the toValue to 1ms before midnight/next day. Thus any time of the selected day is accepted.\n      toValue = this.dateTo ? dates.shift(this.dateTo, 0, 0, 1).valueOf() - 1 : null;\n\n    if (fromValue && toValue) {\n      return keyValue >= fromValue && keyValue <= toValue;\n    } else if (fromValue) {\n      return keyValue >= fromValue;\n    } else if (toValue) {\n      return keyValue <= toValue;\n    }\n\n    // acceptByFields is only called when filter fields are active\n    throw new Error('illegal state');\n  }\n\n  /**\n   * @override\n   */\n  filterFieldsTitle() {\n    return this.session.text('ui.DateRange');\n  }\n\n  /**\n   * @override\n   */\n  addFilterFields(groupBox) {\n    this.dateFromField = groupBox.addFilterField('DateField', 'ui.from');\n    this.dateFromField.setValue(this.dateFrom);\n    this.dateFromField.on('propertyChange', this._onPropertyChange.bind(this));\n\n    this.dateToField = groupBox.addFilterField('DateField', 'ui.to');\n    this.dateToField.setValue(this.dateTo);\n    this.dateToField.on('propertyChange', this._onPropertyChange.bind(this));\n  }\n\n  _onPropertyChange(event) {\n    if (event.propertyName !== 'value') {\n      return;\n    }\n    this.dateFrom = this.dateFromField.value;\n    this.dateTo = this.dateToField.value;\n    $.log.isDebugEnabled() && $.log.debug('(DateColumnUserFilter#_onAcceptInput) dateFrom=' + this.dateFrom + ' dateTo=' + this.dateTo);\n    this.triggerFilterFieldsChanged(event);\n  }\n\n  modifyFilterFields() {\n    this.dateFromField.$field.on('input', '', $.debounce(this._onInput.bind(this)));\n    this.dateToField.$field.on('input', '', $.debounce(this._onInput.bind(this)));\n  }\n\n  _onInput(event) {\n    if (!this.dateFromField.rendered) {\n      // popup has been closed in the mean time\n      return;\n    }\n    this.dateFrom = this.dateFromField.value;\n    this.dateTo = this.dateToField.value;\n    this.triggerFilterFieldsChanged(event);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}